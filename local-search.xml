<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>VPS指南：【新版】解锁网易云灰色歌曲之服务器端搭建</title>
    <link href="/posts/82ea911d.html"/>
    <url>/posts/82ea911d.html</url>
    
    <content type="html"><![CDATA[<p>UnblockNeteaseMusic 是一款可以让网易云曲库里的灰色歌曲能够正常播放的神器。原作者不再更新，目前交由 Unblock Netease Music 维护小组进行更新维护。</p><span id="more"></span><img src="https://user-images.githubusercontent.com/26399680/47980314-0e3f1700-e102-11e8-8857-e3436ecc8beb.png" alt="logo" width="140" height="140" align="right"><h1 id="UnblockNeteaseMusic-介绍"><a href="#UnblockNeteaseMusic-介绍" class="headerlink" title="UnblockNeteaseMusic 介绍"></a>UnblockNeteaseMusic 介绍</h1><p>解锁网易云音乐客户端变灰歌曲，可听 VIP 歌曲。</p><p><a href="https://app.fossa.com/projects/git%2Bgithub.com%2FUnblockNeteaseMusic%2Fserver?ref=badge_shield" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2FUnblockNeteaseMusic%2Fserver.svg?type=shield" alt="FOSSA Status"></a></p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><blockquote><p>仓库地址：<a href="https://github.com/UnblockNeteaseMusic/server" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/UnblockNeteaseMusic/server</a></p></blockquote><ul><li>支援多个音源，替换变灰歌曲链接</li><li>为请求增加 <code>X-Real-IP</code> 参数解锁海外限制，支持指定网易云服务器 IP，支持设置上游 HTTP &#x2F; HTTPS 代理</li><li>完整的流量代理功能 (HTTP &#x2F; HTTPS)，可直接作为系统代理 (同时支持 PAC)</li></ul><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><p>本教程是基于 Ubuntu 22.04.2 LTS 的服务端搭建，其他 Linux 系统搭建方法类似。</p><p>其余使用方法可查询互联网其他博文。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li>一台 VPS</li><li>基础的 Linux 知识</li></ul><h2 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h2><p>Ubuntu 系统命令行输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -<br>sudo apt-get install -y nodejs<br></code></pre></td></tr></table></figure><p>Debian 系统命令行输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://deb.nodesource.com/setup_20.x | bash -<br>apt-get install -y nodejs<br></code></pre></td></tr></table></figure><p>其中 20 为版本。其他版本或其他系统请参考 <a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener external nofollow noreferrer">Node.js 官方文档</a> 和 <a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener external nofollow noreferrer">GitHub</a>。</p><p>Windows 或 MacOS 系统请参考 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener external nofollow noreferrer">Node.js 官方文档</a>。</p><p>使用 <code>node -v</code> 命令查看是否安装成功。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@ubuntu</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># node -v</span><br>v20.<span class="hljs-number">4.0</span><br></code></pre></td></tr></table></figure><p>有输出版本号则安装成功。</p><h2 id="安装-UnblockNeteaseMusic"><a href="#安装-UnblockNeteaseMusic" class="headerlink" title="安装 UnblockNeteaseMusic"></a>安装 UnblockNeteaseMusic</h2><p>git 安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/UnblockNeteaseMusic/server.git UnblockNeteaseMusic<br><span class="hljs-built_in">cd</span> UnblockNeteaseMusic <span class="hljs-comment">#进入项目根目录</span><br></code></pre></td></tr></table></figure><p><del>或者直接下载 <a href="https://github.com/UnblockNeteaseMusic/server/releases" target="_blank" rel="noopener external nofollow noreferrer">release</a></del></p><p>没有安装git的，使用下面命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># CentoS</span><br>yum install git<br><br><span class="hljs-comment"># debian or ubuntu</span><br>apt-get install git<br></code></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>有多种启动方式，可根据自己的需求选择。</p><h3 id="【可选】node-直接启动"><a href="#【可选】node-直接启动" class="headerlink" title="【可选】node 直接启动"></a>【可选】node 直接启动</h3><p>建议先 node 直接运行，检查是否有报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -s -e https://music.163.com<br></code></pre></td></tr></table></figure><p>其中 <code>-s</code> 是严格模式，<code>-e</code> 是 <code>--endpoint</code> 指定网易云服务器地址。</p><p>传递环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ENABLE_FLAC=<span class="hljs-literal">true</span> ENABLE_LOCAL_VIP=<span class="hljs-literal">true</span> BLOCK_ADS=<span class="hljs-literal">true</span> DISABLE_UPGRADE_CHECK=<span class="hljs-literal">true</span> node app.js -s -e https://music.163.com<br></code></pre></td></tr></table></figure><h3 id="【推荐】使用pm2启动项目"><a href="#【推荐】使用pm2启动项目" class="headerlink" title="【推荐】使用pm2启动项目"></a>【推荐】使用pm2启动项目</h3><p>用nodejs不能一直在后台运行，关闭窗口就会中断进程。<br>新建 <code>.env</code> 来传递环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">ENABLE_FLAC=<span class="hljs-literal">true</span><br>ENABLE_LOCAL_VIP=<span class="hljs-literal">true</span><br>BLOCK_ADS=<span class="hljs-literal">true</span><br>DISABLE_UPGRADE_CHECK=<span class="hljs-literal">true</span><br>SIGN_CERT=<span class="hljs-string">&quot;ca/ca.crt&quot;</span><br>SIGN_KEY=<span class="hljs-string">&quot;ca/ca.key&quot;</span><br></code></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 全局安装pm2</span><br>npm install -g pm2<br>pm2 start app.js --name=<span class="hljs-string">&quot;UnblockNeteaseMusic&quot;</span> --<span class="hljs-built_in">env</span> .<span class="hljs-built_in">env</span> -- -a 127.0.0.1 -s -e https://music.163.com<br>pm2 save<br>pm2 startup<br></code></pre></td></tr></table></figure><h2 id="证书配置"><a href="#证书配置" class="headerlink" title="证书配置"></a>证书配置</h2><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><p>配置HTTPS监听时，可以使用项目的证书，但这并不安全，建议使用自签名的CA证书，并且使用该CA证书为客户端证书签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ca &amp;&amp; <span class="hljs-built_in">cd</span> ca<br><span class="hljs-comment"># 生成CA私钥</span><br>openssl genrsa -out ca.key 2048<br><span class="hljs-comment"># 生成 CA 证书 (&quot;YOURNAME&quot; 处填上你自己的名字)</span><br>openssl req -x509 -new -nodes -key ca.key -sha256 -days 1825 -out ca.crt -subj <span class="hljs-string">&quot;/C=CN/CN=UnblockNeteaseMusic Root CA/O=YOURNAME&quot;</span><br></code></pre></td></tr></table></figure><p>因此需要添加两个环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> SIGN_CERT=<span class="hljs-string">&quot;ca/ca.crt&quot;</span><br><span class="hljs-built_in">export</span> SIGN_KEY=<span class="hljs-string">&quot;ca/ca.key&quot;</span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">SIGN_CERT=<span class="hljs-string">&quot;ca/ca.crt&quot;</span> SIGN_KEY=<span class="hljs-string">&quot;ca/ca.key&quot;</span> ENABLE_FLAC=<span class="hljs-literal">true</span> ENABLE_LOCAL_VIP=<span class="hljs-literal">true</span> BLOCK_ADS=<span class="hljs-literal">true</span> DISABLE_UPGRADE_CHECK=<span class="hljs-literal">true</span> node app.js -s -e https://music.163.com<br></code></pre></td></tr></table></figure><h3 id="信任证书"><a href="#信任证书" class="headerlink" title="信任证书"></a>信任证书</h3><p>将 <code>ca/ca.crt</code> 证书导入系统或浏览器的证书信任列表中。</p><blockquote><p>建议参考：<a href="https://github.com/UnblockNeteaseMusic/server/discussions/426" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/UnblockNeteaseMusic/server/discussions/426</a></p></blockquote><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>将 <code>ca/ca.crt</code> 证书下载下来，打开，点击安装证书，选择当前用户，选择将所有的证书都放入下列存储，点击浏览，选择受信任的根证书颁发机构，点击确定，完成安装。</p><h2 id="代理链"><a href="#代理链" class="headerlink" title="代理链"></a>代理链</h2><h3 id="xrayr"><a href="#xrayr" class="headerlink" title="xrayr"></a>xrayr</h3><p>新建 <code>route.json</code>:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;AsIs&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;domainMatcher&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hybrid&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;rules&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;netease&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;domain&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                <span class="hljs-string">&quot;music.163.com&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-string">&quot;music.126.net&quot;</span><br>            <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>新建 <code>custom_outbound.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;netease&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>                <span class="hljs-punctuation">&#123;</span><br>                    <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">8080</span><br>                <span class="hljs-punctuation">&#125;</span><br>            <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>修改 <code>config.yaml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">RouteConfigPath:</span> <span class="hljs-string">/etc/XrayR/route.json</span><br><span class="hljs-attr">OutboundConfigPath:</span> <span class="hljs-string">/etc/XrayR/custom_outbound.json</span><br></code></pre></td></tr></table></figure><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose down &amp;&amp; docker-compose up -d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>解锁网易云音乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hyper-V 或 Docker 占用端口导致 Jetbrain IDE 无法启动或 Clash 端口为 0</title>
    <link href="/posts/1326aa90.html"/>
    <url>/posts/1326aa90.html</url>
    
    <content type="html"><![CDATA[<p>其实本文应该是：</p><ul><li>IDEA Start Failed: Address already in use 的解决办法</li><li>Clash 端口为 0 的解决办法</li></ul><span id="more"></span><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>最近遇到了两次端口无法使用的问题，第一次是 Pycharm 无法启动。报错如下图，第二次是 Clash 无法使用默认端口 7890 从而变成端口 0 ，但实际上 0 并不是一个合法的端口，所以最终会导致代理无法使用。</p><p><img src="/posts/1326aa90/pycharm.png" alt="pycharm"></p><p>发现两个问题的根源都是同一个。就是 tcp 动态端口占用某个区间，而我们需要的端口比如 7890 刚好在这个区间范围内。</p><h2 id="问题排查"><a href="#问题排查" class="headerlink" title="问题排查"></a>问题排查</h2><p>先打开 <code>powershell</code> 或者 <code>cmd</code></p><p>查看端口占用：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">netstat <span class="hljs-literal">-ano</span><br></code></pre></td></tr></table></figure><p>查找某个端口是否被占用：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">netstat <span class="hljs-literal">-aon</span>|findstr <span class="hljs-string">&quot;8081&quot;</span><br></code></pre></td></tr></table></figure><p>发现我们需要的端口明明没被占用啊。</p><p>然后查看 Windows 操作系统中 TCP 协议的动态端口范围：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">netsh int ipv4 show dynamicport tcp<br></code></pre></td></tr></table></figure><p>使用命令查看被系统排除在可用范围外的端口：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">netsh interface ipv4 show excludedportrange protocol=tcp<br></code></pre></td></tr></table></figure><p><img src="https://siegelion-blog.oss-cn-beijing.aliyuncs.com/blog/image-20220131102147660.png" alt="port"></p><p>也就是说在第一条命令范围的端口且不在第二条命令的范围的端口，是不可以用的。</p><h1 id="Clash-问题解决"><a href="#Clash-问题解决" class="headerlink" title="Clash 问题解决"></a>Clash 问题解决</h1><p>有几种方法都可以解决</p><h2 id="修改软件的端口"><a href="#修改软件的端口" class="headerlink" title="修改软件的端口"></a>修改软件的端口</h2><p>山不动我动。既然 7890 被占用，那就换一个，比如说换成 7980</p><blockquote><p>解决方法参考：《<a href="https://siegelion.cn/2022/01/31/Clash%20For%20Windows%E4%BB%A3%E7%90%86%E7%AB%AF%E5%8F%A3%E4%B8%BA0%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener external nofollow noreferrer">Clash For Windows代理端口为0问题</a>》</p></blockquote><h2 id="修改-tcp-动态端口范围"><a href="#修改-tcp-动态端口范围" class="headerlink" title="修改 tcp 动态端口范围"></a>修改 tcp 动态端口范围</h2><p>看个人需求。你可以关掉，那就关。</p><p>先禁用 Hyper-V （需要重启）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">dism.exe <span class="hljs-regexp">/Online /</span>Disable-Feature:Microsoft-Hyper-V<br></code></pre></td></tr></table></figure><p>重启完成后，增加被排除端口范围，其中 7890 就是希望被添加的排除在范围内的端口：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh int ipv4 <span class="hljs-built_in">add</span> excludedportrange <span class="hljs-attribute">protocol</span>=tcp <span class="hljs-attribute">startport</span>=7890 <span class="hljs-attribute">numberofports</span>=1<br></code></pre></td></tr></table></figure><p>如果要保存的话，加上 <code>store=persistant</code></p><p>也就是：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh int ipv4 <span class="hljs-built_in">add</span> excludedportrange <span class="hljs-attribute">protocol</span>=tcp <span class="hljs-attribute">startport</span>=7890 <span class="hljs-attribute">numberofports</span>=1 <span class="hljs-attribute">store</span>=persistant<br></code></pre></td></tr></table></figure><p>重新启用 Hyper-V</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">dism.exe <span class="hljs-string">/Online</span> <span class="hljs-string">/Enable-Feature</span><span class="hljs-function">:Microsoft-Hyper-V</span> <span class="hljs-string">/All</span><br></code></pre></td></tr></table></figure><h1 id="Jetbrains-IDE-问题解决"><a href="#Jetbrains-IDE-问题解决" class="headerlink" title="Jetbrains IDE 问题解决"></a>Jetbrains IDE 问题解决</h1><p>其实我对于为什么会出问题还是有点迷思。</p><p>通过搜索我找到 JetBrains 论坛<a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360010020399-Pycharm-2020-3-Internal-Error-java-net-BindException-Address-already-in-use-bind-Windows-10" target="_blank" rel="noopener external nofollow noreferrer">相关帖子</a></p><p>其中有一段：</p><blockquote><p>To lock folders IDE is starting a server on localhost, it tries to bind on the first available port between 6942 and 6991</p></blockquote><p>就是说 IDE 启动的时候会在本地起一个 server，并且绑定 <strong>6942 到 6991</strong> 之间第一个可用的端口。但明明这个段的端口是被排除了的。</p><p>我又查看了 tcp 实际占用的端口，在 <code>Task Manager -&gt; Performance -&gt; Resource Monitor -&gt; TCP connections</code></p><p><img src="/posts/1326aa90/tcp.png" alt="tcp"></p><p>这个范围内确实没有使用端口。</p><blockquote><p>但很多人都反映卸载 docker 和 Hyper-V 就可以重新启动 IDE 了。所以很明显这俩还是罪魁祸首</p></blockquote><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>以管理员身份运行 powershell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">net stop winnat<br>net <span class="hljs-built_in">start</span> winnat<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>django 学习笔记</title>
    <link href="/posts/87db3555.html"/>
    <url>/posts/87db3555.html</url>
    
    <content type="html"><![CDATA[<p>Django 个人学习笔记</p><span id="more"></span><h1 id="Django-内建"><a href="#Django-内建" class="headerlink" title="Django 内建"></a>Django 内建</h1><h2 id="站点-site"><a href="#站点-site" class="headerlink" title="站点 site"></a>站点 site</h2><ul><li>在<code>INSTALLED_APPS</code>列表中添加<code>&#39;django.contrib.sites&#39;</code>应用程序。</li><li>在<code>MIDDLEWARE</code>列表中添加<code>&#39;django.contrib.sites.middleware.CurrentSiteMiddleware&#39;</code>中间件。</li><li>项目的settings.py文件中添加<code>SITE_NAME = &#39;My Site Name&#39;</code>和<code>SITE_ID = 1</code></li><li>打开Django管理后台，转到“Sites”（站点）部分，并确保站点名称已设置为您在代码中设置的名称。</li></ul><p>现在，您可以在代码中使用<code>Site.objects.get_current().name</code>来获取当前站点的名称，或在模板中使用<code>&#123;&#123; request.site.name &#125;&#125;</code>来获取当前站点的名称。</p><h2 id="Auth-视图"><a href="#Auth-视图" class="headerlink" title="Auth 视图"></a>Auth 视图</h2><p><code>django.contrib.auth</code> 自带</p><ul><li>登录 <code>LoginView</code>：模板 <code>&quot;registration/login.html&quot;</code></li><li>登出 <code>LogoutView</code>：</li><li>重置密码 <code>PasswordResetView</code>：</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Django</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpeedyPage VPS 全方位测评</title>
    <link href="/posts/a3057227.html"/>
    <url>/posts/a3057227.html</url>
    
    <content type="html"><![CDATA[<p>Speedypage 2 核 4GB 服务器脚本跑分解锁结果</p><span id="more"></span><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ul><li>建站高配机，一核顶人家两核。</li><li>提供 <code>/64 IPv6</code></li><li><strong>99.99%</strong> 的在线率支持<ul><li>根据他家 <a href="https://speedypage.com/how-to/kb/sla-guarantee/" target="_blank" rel="noopener external nofollow noreferrer">SLA</a> ，每宕机15分钟就赔偿月付的10%</li></ul></li><li>面板可<strong>每日备份</strong>系统（但只有1个备份位）</li><li>提供 <code>100 Gbit+</code> 的 <code>DDOS</code> 保护</li><li>新加坡，伦敦，美国阿什本可选，可随时发工单更换区域，且保留数据</li><li><code>2 GB</code> 以及 <code>2 GB</code> 以上提供 <code>Windows</code> 支持</li><li>提供 <code>Oracle Linux</code></li></ul><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><table><thead><tr><th align="center">配置</th><th align="center">参数</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">处理器</td><td align="center"><code>AMD® Ryzen 5950X 2 Cores</code></td><td align="center"><code>3400 MHz</code></td></tr><tr><td align="center">Geekbench 5 跑分</td><td align="center">单核 <code>1275</code></td><td align="center">多核 <code>2312</code></td></tr><tr><td align="center">内存</td><td align="center"><code>4 GB DDR4</code></td><td align="center"></td></tr><tr><td align="center">储存</td><td align="center"><code>NVME 60 GB</code></td><td align="center"></td></tr><tr><td align="center"><code>IP</code> 分配</td><td align="center"><code>1 IPv4 &amp; /64 IPv6</code></td><td align="center"></td></tr><tr><td align="center">网络</td><td align="center"><code>8 TB @ 1000 Mbps</code></td><td align="center">上下行对等</td></tr></tbody></table><h1 id="线路"><a href="#线路" class="headerlink" title="线路"></a>线路</h1><ul><li>电信绕美</li><li>联通绕日</li><li>移动直连</li></ul><h1 id="脚本测试结果"><a href="#脚本测试结果" class="headerlink" title="脚本测试结果"></a>脚本测试结果</h1><p>比较繁琐</p><h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><p>CPU 强，硬盘读写速度高，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-08-20                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">Nov</span> <span class="hljs-number">17</span> <span class="hljs-number">01</span><span class="hljs-string">:03:17</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">0</span> <span class="hljs-string">days,</span> <span class="hljs-number">0</span> <span class="hljs-string">hours,</span> <span class="hljs-number">6</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">AMD</span> <span class="hljs-string">Ryzen</span> <span class="hljs-number">9</span> <span class="hljs-string">5950X</span> <span class="hljs-number">16</span><span class="hljs-string">-Core</span> <span class="hljs-string">Processor</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">2</span> <span class="hljs-string">@</span> <span class="hljs-number">3393.626 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">3.8</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">0.0</span> <span class="hljs-string">KiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">58.1</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Ubuntu</span> <span class="hljs-number">22.04</span><span class="hljs-number">.1</span> <span class="hljs-string">LTS</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">5.15</span><span class="hljs-number">.0</span><span class="hljs-number">-52</span><span class="hljs-string">-generic</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span> <br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">234.66</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(58.6k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.47</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(38.6k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">235.28</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(58.8k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.48</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(38.8k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">469.94</span> <span class="hljs-string">MB/s</span> <span class="hljs-string">(117.4k)</span> <span class="hljs-string">|</span> <span class="hljs-number">4.95</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(77.4k)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span>                     <br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span> <br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">2.36</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(4.6k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.07</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.0k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">2.49</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(4.8k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.21</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.1k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">4.86</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(9.4k)</span> <span class="hljs-string">|</span> <span class="hljs-number">4.29</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(4.1k)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span>     <br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span>                <br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">637</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">529</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">547</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-string">busy</span>           <br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">611</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">579</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Uztelecom</span>       <span class="hljs-string">|</span> <span class="hljs-string">Tashkent,</span> <span class="hljs-string">UZ</span> <span class="hljs-string">(10G)</span>        <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-string">busy</span>           <br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">274</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">600</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Dallas,</span> <span class="hljs-string">TX,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>      <span class="hljs-string">|</span> <span class="hljs-number">332</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">678</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">383</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">577</span> <span class="hljs-string">Mbits/sec</span>  <br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv6):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span>     <br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span>                <br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">432</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">359</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">410</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">170</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">636</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">510</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Uztelecom</span>       <span class="hljs-string">|</span> <span class="hljs-string">Tashkent,</span> <span class="hljs-string">UZ</span> <span class="hljs-string">(10G)</span>        <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-string">busy</span>           <br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">469</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">470</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Dallas,</span> <span class="hljs-string">TX,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>      <span class="hljs-string">|</span> <span class="hljs-number">638</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">559</span> <span class="hljs-string">Mbits/sec</span>  <br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">641</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">608</span> <span class="hljs-string">Mbits/sec</span>  <br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span>                         <br>                <span class="hljs-string">|</span>                               <br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">1275</span>                          <br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">2312</span>                          <br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/18677163</span><br></code></pre></td></tr></table></figure><h2 id="流媒体解锁"><a href="#流媒体解锁" class="headerlink" title="流媒体解锁"></a>流媒体解锁</h2><p>新加坡解锁很全：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">ID)</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">ID</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Singapore</span> <br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Associated</span> <span class="hljs-string">with</span> [] <span class="hljs-string">in</span> [<span class="hljs-string">Singapore</span> ]<br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">SGD</span><br><span class="hljs-string">=======================================</span><br><br><br> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv6解锁情况</span> <br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">SpeedyPage</span> <span class="hljs-string">(2001:df7:1d80:*:*)</span> <br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">GB)</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">AU)</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-string">Unsupported</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">Failed</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-string">Failed</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Associated</span> <span class="hljs-string">with</span> [<span class="hljs-string">NUSANET</span>]<br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Failed</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br><span class="hljs-string">=======================================</span><br><br><span class="hljs-string">******************************************</span><br><br> <span class="hljs-attr">Tiktok Region:</span>         <span class="hljs-string">Failed</span><br><br><span class="hljs-string">******************************************</span><br></code></pre></td></tr></table></figure><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs log">正在测试,请稍等...<br>——————————————————————————————<br><br>目标:北京电信[219.141.136.12]   回程线路:电信163<br><br>目标:北京联通[202.106.50.1]     回程线路:联通169<br><br>目标:北京移动[221.179.155.161]  回程线路:移动CMI<br><br>目标:上海电信[202.96.209.133]   回程线路:电信163<br><br>目标:上海联通[210.22.97.1]      回程线路:联通169<br><br>目标:上海移动[211.136.112.200]  回程线路:移动CMI<br><br>目标:深圳电信[58.60.188.222]    回程线路:电信163<br><br>目标:深圳联通[210.21.196.6]     回程线路:联通169<br><br>目标:深圳移动[120.196.165.24]   回程线路:移动CMI<br><br><br>——————————————————————————————<br>本脚本测试结果为TCP回程路由,非ICMP回程路由 仅供参考,以最新IP段为准 谢谢<br></code></pre></td></tr></table></figure><h2 id="IP-质量"><a href="#IP-质量" class="headerlink" title="IP 质量"></a>IP 质量</h2><p>IP 质量不是特别好，欺诈分 <strong>70</strong> 。被识别代理了。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;fraud_score&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">70</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;country_code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ID&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;mobile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;proxy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;vpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tor&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;active_vpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;active_tor&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;recent_abuse&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;bot_status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="融合怪脚本测试结果"><a href="#融合怪脚本测试结果" class="headerlink" title="融合怪脚本测试结果"></a>融合怪脚本测试结果</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><code class="hljs log">--------------------- A Bench Script By spiritlhl ---------------------<br>                   测评频道: https://t.me/vps_reviews                    <br>版本：2022.11.08<br>更新日志：融合怪九代目(集合百家之长)(专为测评频道小鸡而生)<br>-----------------感谢teddysun和misakabench和yabs开源-------------------<br> CPU 型号          : AMD Ryzen 9 5950X 16-Core Processor<br> CPU 核心数        : 2<br> CPU 频率          : 3393.626 MHz<br> CPU 缓存          : 512 KB<br> 硬盘空间          : 58.1 GB (2.0 GB 已用)<br> 内存              : 3889 MB (319 MB 已用)<br> Swap              : 0 MB (0 MB 已用)<br> 系统在线时间      : 0 days, 1 hour 6 min<br> 负载              : 0.15, 0.17, 0.08<br> 系统              : Ubuntu 22.04.1 LTS<br> AES-NI指令集      : ✔ Enabled<br> VM-x/AMD-V支持    : ✔ Enabled<br> 架构              : x86_64 (64 Bit)<br> 内核              : 5.15.0-52-generic<br> TCP加速方式       : bbr<br> 虚拟化架构        : KVM<br> ASN组织           : AS142594 SpeedyPage Ltd<br> 位置              : Singapore / SG<br> 地区              : Singapore<br>-------------------CPU测试--感谢lemonbench开源------------------------<br> -&gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec)<br> 1 线程测试(1核)得分:           5231 Scores<br> 2 线程测试(多核)得分:          10292 Scores<br>-------------------内存测试--感谢lemonbench开源-----------------------<br> -&gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec)<br> 单线程读测试:          56238.72 MB/s<br> 单线程写测试:          34085.42 MB/s<br>----------------磁盘IO读写测试--感谢lemonbench开源--------------------<br> -&gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode)<br> 测试操作               写速度                                  读速度<br> 100MB-4K Block         78.5 MB/s (0.05 IOPS, 1.34s))           92.5 MB/s (22580 IOPS, 1.13s)<br> 1GB-1M Block           610 MB/s (581 IOPS, 1.72s)              5.0 GB/s (4762 IOPS, 0.21s)<br>-------------------磁盘IO读写测试--感谢yabs开源-----------------------<br>Block Size | 4k            (IOPS) | 64k           (IOPS)<br>  ------   | ---            ----  | ----           ---- <br>Read       | 363.67 MB/s  (90.9k) | 2.12 GB/s    (33.1k)<br>Write      | 364.63 MB/s  (91.1k) | 2.13 GB/s    (33.3k)<br>Total      | 728.30 MB/s (182.0k) | 4.25 GB/s    (66.5k)           |                      |                     <br>Block Size | 512k          (IOPS) | 1m            (IOPS)<br>  ------   | ---            ----  | ----           ---- <br>Read       | 2.06 GB/s     (4.0k) | 1.10 GB/s     (1.0k)<br>Write      | 2.17 GB/s     (4.2k) | 1.17 GB/s     (1.1k)<br>Total      | 4.24 GB/s     (8.2k) | 2.28 GB/s     (2.2k)<br>--------------------流媒体解锁--感谢sjlleo开源-------------------------<br>以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用<br>Youtube<br>[IPv4]<br>连接方式: Youtube Video Server<br>视频缓存节点地域: 新加坡 新加坡/樟宜  (SIN26S09)<br>Youtube识别地域: 印度尼西亚(ID)<br><br>[IPv6]<br>连接方式: Google Global CacheCDN (ISP Cooperation)<br>ISP运营商: NUSANET<br>视频缓存节点地域: 印度尼西亚 泗水(SUB2)<br>Youtube识别地域: 澳大利亚(AU)<br>Netflix<br>[IPv4]<br>您的出口IP完整解锁Netflix，支持非自制剧的观看<br>NF所识别的IP地域信息：新加坡<br>[IPv6]<br>您的出口IP完整解锁Netflix，支持非自制剧的观看<br>NF所识别的IP地域信息：新加坡<br>DisneyPlus<br>[IPv4]<br>当前IPv4出口解锁DisneyPlus<br>区域：新加坡区<br><br>[IPv6]<br>当前IPv6出口解锁DisneyPlus<br>区域：新加坡区<br>解锁Youtube，Netflix，DisneyPlus的地区以上面为准，下面这三测的不准<br>---------------流媒体解锁--感谢RegionRestrictionCheck开源-------------<br> 以下为IPV4网络测试<br>============[ Multination ]============<br> Dazn:                                  Unsupport<br> HotStar:                               Yes (Region: SG)<br> Disney+:                               No<br> Netflix:                               Yes (Region: SG)<br> YouTube Premium:                       Yes (Region: ID)<br> Amazon Prime Video:                    Yes (Region: SG)<br> TVBAnywhere+:                          Failed<br> iQyi Oversea Region:                   ID<br> Viu.com:                               Yes (Region: SG)<br> YouTube CDN:                           Singapore <br> Netflix Preferred CDN:                 Associated with [] in [Singapore ]<br> Steam Currency:ation:                  SGDSteam Currency:                      -&gt;<br>=======================================<br> 以下为IPV6网络测试<br>============[ Multination ]============<br> Dazn:                                  Failed (Network Connection)<br> HotStar:                               Yes (Region: SG)<br> Disney+:                               No<br> Netflix:                               Yes (Region: SG)<br> YouTube Premium:                       Yes (Region: AU)<br> Amazon Prime Video:                    Unsupported<br> TVBAnywhere+:                          Failed (Network Connection)<br> iQyi Oversea Region:                   Failed<br> Viu.com:                               Failed<br> YouTube CDN:                           Associated with [NUSANET]<br> Netflix Preferred CDN:                 Associated with [] in [Singapore ]<br> Steam Currency:ation:                  Failed (Network Connection)             -&gt;<br>=======================================<br>---------------TikTok解锁--感谢superbench的开源脚本----------------<br> TikTok               : Yes (Region: SG)<br>------------------欺诈分数以及IP质量检测--本频道原创-------------------<br>得分仅作参考，不代表100%准确<br>欺诈分数(越低越好)：45<br>匿名代理: No<br>Tor出口节点: No<br>服务器IP: Yes<br>公共代理: No<br>网络代理: No<br>搜索引擎机器人: No<br>IP类型： Data Center/Web Hosting/Transit<br>abuse得分： 0<br>Google搜索可行性：yes<br>------以下为IPV6检测------<br>欺诈分数(越低越好)：45<br>匿名代理: No<br>Tor出口节点: No<br>服务器IP: Yes<br>公共代理: No<br>网络代理: No<br>搜索引擎机器人: No<br>IP类型： Data Center/Web Hosting/Transit<br>abuse得分： 0<br>-----------------三网回程--感谢zhanghanyun/backtrace开源--------------<br>2022/11/17 02:33:45 正在测试三网回程路由...<br>2022/11/17 02:33:46 北京电信 219.141.136.12  电信163 [普通线路]<br>2022/11/17 02:33:46 北京联通 202.106.50.1    联通4837[普通线路]<br>2022/11/17 02:33:46 北京移动 221.179.155.161 移动CMI [普通线路]<br>2022/11/17 02:33:46 上海电信 202.96.209.133  电信163 [普通线路]<br>2022/11/17 02:33:46 上海联通 210.22.97.1     联通4837[普通线路]<br>2022/11/17 02:33:46 上海移动 211.136.112.200 移动CMI [普通线路]<br>2022/11/17 02:33:46 广州电信 58.60.188.222   电信163 [普通线路]<br>2022/11/17 02:33:46 广州联通 210.21.196.6    联通4837[普通线路]<br>2022/11/17 02:33:46 广州移动 120.196.165.24  移动CMI [普通线路]<br>------------------回程路由--感谢fscarmen开源及PR----------------------<br>以下测试的带宽类型可能有误，商宽可能被判断为家宽，仅作参考使用<br> IPv4 宽带类型:          ASN: PT Pedjoeang Digital Networks<br> IPv6 宽带类型:          ASN: SpeedyPage Ltd<br>依次测试电信，联通，移动经过的地区及线路，核心程序来由: ipip.net ，请知悉!<br>广州电信 58.60.188.222<br>0.54 ms  AS136557  新加坡, hostuniversal.com.au<br>1.18 ms  AS136557  新加坡, hostuniversal.com.au<br>1.43 ms  AS60068  欧洲地区, datacamp.co.uk<br>173.98 ms  AS174  美国, 加利福尼亚州, 洛杉矶, cogentco.com<br>177.62 ms  AS174  美国, 加利福尼亚州, 洛杉矶, cogentco.com<br>199.59 ms  AS174  美国, 加利福尼亚州, 圣何塞, cogentco.com<br>183.85 ms  AS174  美国, 加利福尼亚州, 圣何塞, cogentco.com<br>232.79 ms  AS4134  中国, 广东, 广州, chinatelecom.com.cn, 电信<br>230.00 ms  AS4134  中国, 广东, 广州, chinatelecom.com.cn, 电信<br>234.45 ms  AS4134  中国, 广东, 深圳, chinatelecom.com.cn, 电信<br>广州联通 210.21.196.6<br>0.40 ms  AS136557  新加坡, hostuniversal.com.au<br>1.22 ms  AS136557  新加坡, hostuniversal.com.au<br>1.26 ms  AS60068  欧洲地区, datacamp.co.uk<br>2.02 ms  AS2914  新加坡, ntt.com<br>71.05 ms  AS2914  日本, 东京都, 东京, ntt.com<br>75.84 ms  AS2914  日本, 东京都, 东京, ntt.com<br>146.38 ms  AS2914  日本, 东京都, 东京, ntt.com<br>130.67 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通<br>128.47 ms  AS17623  中国, 广东, 深圳, chinaunicom.com, 联通<br>138.12 ms  AS17623  中国, 广东, 深圳, chinaunicom.com, 联通<br>广州移动 120.196.165.2<br>0.60 ms  AS136557  新加坡, hostuniversal.com.au<br>1.17 ms  AS136557  新加坡, hostuniversal.com.au<br>1.17 ms  AS60068  欧洲地区, datacamp.co.uk<br>1.83 ms  AS2914  新加坡, ntt.com<br>37.03 ms  AS2914  中国, 香港, ntt.com<br>43.39 ms  AS2914  中国, 香港, ntt.com<br>39.91 ms  AS58453  中国, 香港, chinamobile.com, 移动<br>42.21 ms  AS58453  中国, 广东, 广州, chinamobile.com, 移动<br>40.44 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动<br>53.01 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动<br>42.22 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动<br>71.22 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动<br>53.26 ms  AS56040  中国, 广东, 广州, chinamobile.com, 移动<br>53.76 ms  AS56040  中国, 广东, 深圳, chinamobile.com, 移动<br>--------网络测速--由teddysun和superspeed开源及spiritlhls整理----------<br>测速点位置       上传速度        下载速度        延迟<br>speedtest        743.86 Mbps     683.22 Mbps     1.18 ms<br>洛杉矶  　　　   465.61Mbps      763.10Mbps      176.21ms<br>新加坡  　　　   829.04Mbps      831.38Mbps      2.15ms<br>日本东京　　�    707.03Mbps      693.29Mbps      80.01ms<br>中国香港　　�    822.40Mbps      868.92Mbps      38.45ms<br>电信上海　　�    FAILEDMbps      162.10Mbps      218.21ms<br>联通上海　　�    743.45Mbps      815.37Mbps      106.48ms<br>联通湖南长沙�    628.25Mbps      601.84Mbps      126.60ms<br>----------------------------------------------------------------------<br> 总共花费        : 6 分 34 秒<br> 时间          : Thu Nov 17 02:38:29 CST 2022<br>----------------------------------------------------------------------<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Bitwarden】自建密码管理服务</title>
    <link href="/posts/ecc76498.html"/>
    <url>/posts/ecc76498.html</url>
    
    <content type="html"><![CDATA[<p><code>Bitwarden</code> 是一款<strong>自由且开源</strong>的密码管理服务，用户可在加密的保管库中存储敏感信息（例如网站登入凭据）。Bitwarden平台提供有多种客户端应用程序，包括网页用户界面、桌面应用，浏览器扩展、移动应用以及命令行界面。 <code>Bitwarden</code> 提供云端托管服务，并支持自行部署解决方案。</p><p>本文将讲解如何自建你的 <code>Bitwarden</code> 服务器。</p><span id="more"></span><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ul><li><a href="https://bitwarden.com/" target="_blank" rel="noopener external nofollow noreferrer">Bitwarden 官网</a></li><li><a href="https://github.com/bitwarden" target="_blank" rel="noopener external nofollow noreferrer">项目代码地址</a></li><li><a href="https://bitwarden.com/help/install-on-premise-linux/" target="_blank" rel="noopener external nofollow noreferrer">官方自建教程</a></li></ul><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul><li>Linux 服务器，内存最低 <strong>2 GB</strong></li></ul><h2 id="系统最低要求"><a href="#系统最低要求" class="headerlink" title="系统最低要求"></a>系统最低要求</h2><div class="note note-primary">            <p>如果你达不到系统配置最低要求，建议转战 <a href="https://github.com/dani-garcia/vaultwarden" target="_blank" rel="noopener external nofollow noreferrer">vaultwarden</a>。</p><p>目前镜像暂不支持 <code>arm</code> 架构。</p>          </div><table><thead><tr><th></th><th>最低</th><th>推荐</th></tr></thead><tbody><tr><td>处理器</td><td>x64, 1.4GHz</td><td>x64, 2GHz dual core</td></tr><tr><td>内存</td><td><strong>2GB RAM</strong></td><td>4GB RAM</td></tr><tr><td>硬盘</td><td>12GB</td><td>25GB</td></tr><tr><td>Docker 版本</td><td>Engine 19+ and Compose 1.24+</td><td>Engine 19+ and Compose 1.24+</td></tr></tbody></table><h1 id="太长不看版"><a href="#太长不看版" class="headerlink" title="太长不看版"></a>太长不看版</h1><p>安装步骤的简要概括：</p><ol><li>配置域名，设置 <code>DNS</code> 解析，打开服务器 <code>80</code> 和 <code>443</code> 端口</li><li>安装 <code>Docker</code> 和 <code>Docker Compose</code></li><li>创建一个 Bitwarden 用户和目录来完成安装</li><li>从 <a href="https://bitwarden.com/host" target="_blank" rel="noopener external nofollow noreferrer">https://bitwarden.com/host</a> 检索安装 ID 和密钥以用于安装<blockquote><p>ID 和 密钥 是用来做什么的请参考 <a href="https://bitwarden.com/help/hosting-faqs/#general" target="_blank" rel="noopener external nofollow noreferrer">What are my installation id and installation key used for?</a></p></blockquote></li><li>安装 Bitwarden</li><li>编辑 .&#x2F;bwdata&#x2F;env&#x2F;global.override.env 中的设置来配置环境<div class="note note-success">            <p>至少需要配置 <code>globalSettings__mail__smtp...</code> 变量来设置电子邮件服务器，从而邀请和验证用户。（如果你不打算开放注册就无需配置）</p>          </div></li><li>启动实例</li><li>打开域名网站测试安装是否成功</li><li>部署后，建议定期备份并检查系统更新</li></ol><h1 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h1><p>默认情况下， <code>Bitwarden</code> 通过 <code>80</code> 和 <code>443</code> 来提供服务。请先在服务器防火墙放行这些端口。</p><p>如果需要提供网络服务的话，建议将域名解析到服务器。而不是用 <code>IP</code> 访问。</p><div class="note note-info">            <p>这部分非常基础。如果你还不会的话建议搜索学习下。</p>          </div><h1 id="安装-Docker-和-Docker-Compose"><a href="#安装-Docker-和-Docker-Compose" class="headerlink" title="安装 Docker 和 Docker Compose"></a>安装 Docker 和 Docker Compose</h1><p><code>Bitwarden</code> 官方提供了 <code>Docker</code> 镜像。</p><p>本站安装教程：<br><a href="https://pawswrite.xyz/posts/30011.html">Docker 和 Docker Compose 安装</a></p><p><code>Docker</code> 官方安装教程：</p><ul><li><a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener external nofollow noreferrer">Docker 安装</a></li><li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener external nofollow noreferrer">Docker Compose 安装</a></li></ul><h1 id="创建-Bitwarden-本地用户和目录"><a href="#创建-Bitwarden-本地用户和目录" class="headerlink" title="创建 Bitwarden 本地用户和目录"></a>创建 Bitwarden 本地用户和目录</h1><p>建议使用专用的 <code>bitwarden</code> 用户而不是 <code>root</code> 来配置 <code>Linux</code> 服务器，以便安装和运行 <code>Bitwarden</code>。 这样做会将 <code>Bitwarden</code> 实例与服务器上运行的其他应用程序隔离开来。</p><ol><li>创建新用户:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo adduser bitwarden<br></code></pre></td></tr></table></figure></li><li>为用户设置密码 (强密码):<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo passwd bitwarden<br></code></pre></td></tr></table></figure></li><li>创建 docker 组 (如果之前没创建过的话):<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo groupadd docker<br></code></pre></td></tr></table></figure></li><li>将 bitwarden 用户加入 docker 组:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -aG docker bitwarden<br></code></pre></td></tr></table></figure></li><li>创建 bitwarden 目录:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> /opt/bitwarden<br></code></pre></td></tr></table></figure></li><li>为 <code>/opt/bitwarden</code> 目录设置权限:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> -R 700 /opt/bitwarden<br></code></pre></td></tr></table></figure></li><li>设置 <code>/opt/bitwarden</code> 目录所有者:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chown</span> -R bitwarden:bitwarden /opt/bitwarden<br></code></pre></td></tr></table></figure></li></ol><p>上面是官方的配置，我一般不给这种用户设置密码且禁止登录，可用下面这条取代上面的步骤1和步骤2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建无密码不能登录的新用户</span><br>adduser --disabled-login bitwarden<br></code></pre></td></tr></table></figure><p>使用下面的命令查看是否有 docker 组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/group | grep docker<br></code></pre></td></tr></table></figure><p>使用下面命令查看是否成功将 bitwarden 加入 docker 组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">groups</span> bitwarden<br></code></pre></td></tr></table></figure><h1 id="官方脚本安装-Bitwarden"><a href="#官方脚本安装-Bitwarden" class="headerlink" title="官方脚本安装 Bitwarden"></a>官方脚本安装 Bitwarden</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>Bitwarden</code> 官方提供了脚本，用于在 <code>Linux</code> 和 <code>macOS</code> (<code>Bash</code>) 或 <code>Windows</code> (<code>PowerShell</code>) 上轻松安装。 完成以下步骤以使用 <code>shell</code> 脚本安装 <code>Bitwarden</code></p><blockquote><p>好处是小白也会用，坏处是脚本把反代也包揽了，需要你之前没有占用 80 或者 443 端口。如果你还想运行自己的反代服务，或者在服务器上运行其他网站，就不太方便。</p></blockquote><div class="note note-info">            <p>如果您已创建 <code>Bitwarden</code> 用户和目录，请以 <code>/opt/bitwarden</code> 目录中的 <code>bitwarden</code> 用户身份完成以下操作。</p>          </div><ol><li><p>切换用户和目录：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">su bitwarden &amp;&amp; <span class="hljs-built_in">cd</span> /opt/bitwarden<br></code></pre></td></tr></table></figure></li><li><p>下载安装脚本 (<code>bitwarden.sh</code>) 到服务器上:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -Lso bitwarden.sh https://go.btwrdn.co/bw-sh &amp;&amp; <span class="hljs-built_in">chmod</span> 700 bitwarden.sh<br></code></pre></td></tr></table></figure></li><li><p>运行脚本，<code>bitwarden.sh</code> 脚本同目录下，会创建一个 <code>./bwdata</code> 目录</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./bitwarden.sh install<br></code></pre></td></tr></table></figure></li><li><p>在命令行完成交互（输入 y 代表 是，n 代表 不）：</p><ul><li>输入你 <code>bitwarden</code> 实例的域名<br>比如说，<code>bitwarden.example.com</code></li><li>是否需要申请 <code>Let&#39;s Encrypt</code> 免费域名(y&#x2F;n)？</li><li>输入你的邮箱（用于 <code>Let&#39;s Encrypt</code> 发提醒邮件）<br>输入n的话，下面 <strong>Do you have a SSL certificate to use?</strong> 选择 y 可用自己的证书</li><li>输入你的安装 ID<ul><li>在这里申请：<a href="https://bitwarden.com/host/" target="_blank" rel="noopener external nofollow noreferrer">https://bitwarden.com/host/</a></li></ul></li><li>输入你的安装 key</li><li>你有可用的 SSL 证书吗(y&#x2F;n)？<ul><li>如果使用自己的证书，输入 y 然后把证书放到 <code>./bwdata/ssl/your.domain</code> 目录下。</li></ul></li><li>你想要创建一个自签名证书吗(y&#x2F;n)？<ul><li>输入 y 来使用自签名证书。浏览器并不会信任该证书。建议仅在测试的时候使用！</li><li>输入 n 你的实例不会使用 SSL 证书。需要自己前置处理 https，否则 <code>Bitwarden</code> 无法正常运行。</li></ul></li></ul></li></ol><h3 id="多服务器配置"><a href="#多服务器配置" class="headerlink" title="多服务器配置"></a>多服务器配置</h3><p>对于服务器上想运行其他网站&#x2F;服务的，建议按照我下面的处理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs bash">bitwarden@GreenCloud:/opt/bitwarden$ ./bitwarden.sh install<br> _     _ _                         _            <br>| |__ (_) |___      ____ _ _ __ __| | ___ _ __  <br>| <span class="hljs-string">&#x27;_ \| | __\ \ /\ / / _` | &#x27;</span>__/ _` |/ _ \ <span class="hljs-string">&#x27;_ \ </span><br><span class="hljs-string">| |_) | | |_ \ V  V / (_| | | | (_| |  __/ | | |</span><br><span class="hljs-string">|_.__/|_|\__| \_/\_/ \__,_|_|  \__,_|\___|_| |_|</span><br><span class="hljs-string"></span><br><span class="hljs-string">Open source password management solutions</span><br><span class="hljs-string">Copyright 2015-2022, 8bit Solutions LLC</span><br><span class="hljs-string">https://bitwarden.com, https://github.com/bitwarden</span><br><span class="hljs-string"></span><br><span class="hljs-string">===================================================</span><br><span class="hljs-string"></span><br><span class="hljs-string">bitwarden.sh version 2022.10.0</span><br><span class="hljs-string">Docker version 20.10.21, build baeda1f</span><br><span class="hljs-string">Docker Compose version v2.12.2</span><br><span class="hljs-string"></span><br><span class="hljs-string">(!) Enter the domain name for your Bitwarden instance (ex. bitwarden.example.com): 你的域名</span><br><span class="hljs-string"></span><br><span class="hljs-string">(!) Do you want to use Let&#x27;</span>s Encrypt to generate a free SSL certificate? (y/n): n<br><br>(!) Enter the database name <span class="hljs-keyword">for</span> your Bitwarden instance (ex. vault): bitvault<br><br>2022.10.0: Pulling from bitwarden/setup<br><br>(!) Enter your installation <span class="hljs-built_in">id</span> (get at https://bitwarden.com/host): 你拿到的 installation <span class="hljs-built_in">id</span><br><br>(!) Enter your installation key: 你拿到的 installation key<br><br>(!) Do you have a SSL certificate to use? (y/n): n<br><br>(!) Do you want to generate a self-signed SSL certificate? (y/n): n<br><br>Generating key <span class="hljs-keyword">for</span> IdentityServer.<br>Generating a RSA private key<br>.........................................................................................................................................................................................................................++++<br>............................................................................................................................................++++<br>writing new private key to <span class="hljs-string">&#x27;identity.key&#x27;</span><br>-----<br><br>!!!!!!!!!! WARNING !!!!!!!!!!<br>You are not using a SSL certificate. Bitwarden requires HTTPS to operate. <br>You must front your installation with a HTTPS proxy or the web vault (and <br>other Bitwarden apps) will not work properly.<br><br>Building nginx config.<br>Building docker environment files.<br>Building docker environment override files.<br>Building FIDO U2F app <span class="hljs-built_in">id</span>.<br>Building docker-compose.yml.<br><br>Installation complete<br><br>If you need to make additional configuration changes, you can modify<br>the settings <span class="hljs-keyword">in</span> `./bwdata/config.yml` and <span class="hljs-keyword">then</span> run:<br>`./bitwarden.sh rebuild` or `./bitwarden.sh update`<br><br>Next steps, run:<br>`./bitwarden.sh start`<br></code></pre></td></tr></table></figure><p>编辑 <code>docker-compose.yml</code> :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/bitwarden<br>sed -i <span class="hljs-string">&quot;s/80:8080/127.0.0.1:8080:8080/&quot;</span> bwdata/docker/docker-compose.yml<br>sed -i <span class="hljs-string">&quot;s/443:8443/127.0.0.1:8443:8443/&quot;</span> bwdata/docker/docker-compose.yml<br></code></pre></td></tr></table></figure><p>这里 <code>8080</code> 和 <code>8443</code> 就是你要用 nginx 反代的两个端口。</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./bitwarden.sh start<br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置环境需要对两个文件进行更改。一个环境变量文件和一个安装文件。</p><h3 id="环境变量（必须）"><a href="#环境变量（必须）" class="headerlink" title="环境变量（必须）"></a>环境变量（必须）</h3><p><code>Bitwarden</code> 的某些功能不是由 <code>bitwarden.sh</code> 脚本配置的。 通过编辑位于 <code>./bwdata/env/global.override.env</code> 的环境文件来配置这些设置。 至少，您应该替换以下值：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">...<br>globalSettings__mail__smtp__host=&lt;placeholder&gt;<br>globalSettings__mail__smtp__port=&lt;placeholder&gt;<br>globalSettings__mail__smtp__ssl=&lt;placeholder&gt;<br>globalSettings__mail__smtp__username=&lt;placeholder&gt;<br>globalSettings__mail__smtp__password=&lt;placeholder&gt;<br>...<br>adminSettings__admins=<br>...<br></code></pre></td></tr></table></figure><p>对于按照本文说的没有配置 SSL 证书的，需要把环境变量中的 <code>globalSettings__baseServiceUri__vault</code> 改为 <code>https</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/bitwarden<br>sed -i <span class="hljs-string">&quot;s/http:\/\//https:\/\//&quot;</span> bwdata/env/global.override.env<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">```<br>```bash<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">```<br>```bash<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">```<br>```bash<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">```<br><br>```bash<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>Bitwarden</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>Bitwarden</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 开启 warp team （ZeroTrust）代理</title>
    <link href="/posts/725256a7.html"/>
    <url>/posts/725256a7.html</url>
    
    <content type="html"><![CDATA[<p>Cloudflare的 <a href="https://1.1.1.1/" target="_blank" rel="noopener external nofollow noreferrer">warp</a> 可以代理你的出站流量，并提供了多种模式，包括代理模式和warp模式，其中代理模式可以在本地开启一个socks5代理端口。</p><span id="more"></span><h1 id="安装官方客户端"><a href="#安装官方客户端" class="headerlink" title="安装官方客户端"></a>安装官方客户端</h1><blockquote><p>目前Linux上有两种使用warp的方式，一种是官方客户端<code>warp-cli</code>，另一种是<a href="https://github.com/ViRb3/wgcf" target="_blank" rel="noopener external nofollow noreferrer">wgcf</a>非官方脚本。<code>wgcf</code>暂时还不支持 zero trust</p></blockquote><h2 id="【方法1】【推荐】一键脚本安装"><a href="#【方法1】【推荐】一键脚本安装" class="headerlink" title="【方法1】【推荐】一键脚本安装"></a>【方法1】【推荐】一键脚本安装</h2><p>使用以下命令一把梭后将自动安装 WARP 官方客户端并开启 SOCKS5 代理端口 (<code>127.0.0.1:40000</code>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 自动配置 WARP 官方客户端 SOCKS5 代理</span><br>bash &lt;(curl -fsSL git.io/warp.sh) s5<br></code></pre></td></tr></table></figure><h2 id="【方法2】手动安装"><a href="#【方法2】手动安装" class="headerlink" title="【方法2】手动安装"></a>【方法2】手动安装</h2><p><a href="https://blog.cloudflare.com/zh-cn/announcing-warp-for-linux-and-proxy-mode-zh-cn/" target="_blank" rel="noopener external nofollow noreferrer">官方文档</a></p><p>首先根据你的Linux系统发行版本配置repository，官方教程：<a href="https://pkg.cloudflareclient.com/install" target="_blank" rel="noopener external nofollow noreferrer">https://pkg.cloudflareclient.com/install</a></p><p>对于 Ubuntu amd64</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --<span class="hljs-built_in">yes</span> --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ <span class="hljs-subst">$(lsb_release -cs)</span> main&quot;</span> | sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/cloudflare-client.list<br>sudo apt update<br>sudo apt install cloudflare-warp<br></code></pre></td></tr></table></figure><h1 id="验证登录-Zero-Trust"><a href="#验证登录-Zero-Trust" class="headerlink" title="验证登录 Zero Trust"></a>验证登录 Zero Trust</h1><p>用你申请zero trust的时候使用的名字，替换下面的team名。</p><p>打开下面的网页：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://你的team名.cloudflareaccess.com/warp<br></code></pre></td></tr></table></figure><p>按照步骤验证登录。之后在最后一步，在浏览器点击F12，抓取JWT token </p><p>格式如下：<br><code>com.cloudflare.warp://你的team名.cloudflareaccess.com/auth?token=&lt;JWT token&gt;</code></p><p>抓取这一串URL。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">warp-cli teams-enroll-tokens <span class="hljs-string">&quot;&lt;抓取的URL&gt;&quot;</span><br></code></pre></td></tr></table></figure><p>出现 <code>Success</code> 即可。注意JWT的exp很短，要尽快抓，如果失败就刷新网页重新抓取。</p><h1 id="设置并连接"><a href="#设置并连接" class="headerlink" title="设置并连接"></a>设置并连接</h1><p>warp team无法自主切换模式。</p><p>如果不想失联，<strong>一定</strong>要在 <code>zero trust</code> 中设置为 <code>proxy</code> 模式。（或者<code>add-excluded-route</code>、<code>add-excluded-host</code>）</p><p>建议先用下面命令查看 <code>mode</code> ，确认是 <code>proxy</code> 而不带 <code>warp</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">warp-cli settings<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">warp-cli --accept-tos connect<br></code></pre></td></tr></table></figure><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>用 proxychains 来配置使用 socks5 代理上网，教程《<a href="https://pawswrite.xyz/posts/34687.html">Linux 配置 ProxyChains 上网</a>》</p><p>观察输出 <code>warp=</code> 后面的显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">proxychains curl https://www.cloudflare.com/cdn-cgi/trace/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>监控不同网站的流量：nginx 监控模块 module_vts 编译安装</title>
    <link href="/posts/ef56ef76.html"/>
    <url>/posts/ef56ef76.html</url>
    
    <content type="html"><![CDATA[<p>用 <code>Prometheus</code> 来监控Nginx的状态，所以看了一下有个module可以支持。项目地址在：<a href="https://github.com/vozlt/nginx-module-vts.git" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/vozlt/nginx-module-vts.git</a></p><span id="more"></span><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://zahui.fan/posts/c6a32841/" target="_blank" rel="noopener external nofollow noreferrer">Nginx使用module_vts模块来做监控</a></li></ul><h1 id="下载-nginx-源码和模块"><a href="#下载-nginx-源码和模块" class="headerlink" title="下载 nginx 源码和模块"></a>下载 nginx 源码和模块</h1><p>如果已经安装了，首先执行 <code>nginx -V</code> 查看编译参数，记录一下, 比如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">--prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt=<span class="hljs-string">&#x27;-g -O2 -ffile-prefix-map=/data/builder/debuild/nginx-1.22.1/debian/debuild-base/nginx-1.22.1=. -flto=auto -ffat-lto-objects -flto=auto -ffat-lto-objects -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC&#x27;</span> --with-ld-opt=<span class="hljs-string">&#x27;-Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -flto=auto -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie&#x27;</span><br></code></pre></td></tr></table></figure><div class="note note-primary">            <p>如果安装了nginx，这里需要Nginx源码包和当前安装的Nginx<strong>版本相同</strong>，关于安装最新版本Nignx请看：<a href="https://www.linuxcapable.com/how-to-install-upgrade-latest-nginx-mainline-stable-on-ubuntu-20-04/#gsc.tab=0" target="_blank" rel="noopener external nofollow noreferrer">How to Upgrade&#x2F;Install Nginx Stable&#x2F;Mainline on Ubuntu 20.04 LTS</a></p>          </div><p>nginx 源码<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener external nofollow noreferrer">下载地址</a>。目前最新的Stable版为1.22</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget http://nginx.org/download/nginx-1.22.1.tar.gz<br>tar -zxvf nginx-1.22.1.tar.gz<br>git <span class="hljs-built_in">clone</span> https://github.com/vozlt/nginx-module-vts.git<br><span class="hljs-built_in">cd</span> nginx-1.22.1<br></code></pre></td></tr></table></figure><h1 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h1><h2 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h2><p>开始编译，编译时增加一条参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">--add-module=../nginx-module-vts<br></code></pre></td></tr></table></figure><p>结合上面记录的编译参数，完整的编译参数是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt=<span class="hljs-string">&#x27;-g -O2 -ffile-prefix-map=/data/builder/debuild/nginx-1.22.1/debian/debuild-base/nginx-1.22.1=. -flto=auto -ffat-lto-objects -flto=auto -ffat-lto-objects -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC&#x27;</span> --with-ld-opt=<span class="hljs-string">&#x27;-Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -flto=auto -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie&#x27;</span> --add-module=../nginx-module-vts<br></code></pre></td></tr></table></figure><p>如果遇到问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure: error: the HTTP rewrite module requires the PCRE library.<br>You can either <span class="hljs-built_in">disable</span> the module by using --without-http_rewrite_module<br>option, or install the PCRE library into the system, or build the PCRE library<br>statically from the <span class="hljs-built_in">source</span> with nginx by using --with-pcre=&lt;path&gt; option.<br></code></pre></td></tr></table></figure><p>下载安装 libpcre 和 libpcre-dev 包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Ubuntu/Debian</span><br>sudo apt-get install libpcre3-dev<br><span class="hljs-comment"># RHEL / CentOS</span><br>sudo yum install pcre-devel<br></code></pre></td></tr></table></figure><p>如果遇到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure: error: SSL modules require the OpenSSL library.<br>You can either <span class="hljs-keyword">do</span> not <span class="hljs-built_in">enable</span> the modules, or install the OpenSSL library<br>into the system, or build the OpenSSL library statically from the <span class="hljs-built_in">source</span><br>with nginx by using --with-openssl=&lt;path&gt; option.<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Ubuntu/Debian</span><br>sudo apt-get install libssl-dev<br><span class="hljs-comment"># RHEL / CentOS</span><br>yum -y install openssl openssl-devel<br></code></pre></td></tr></table></figure><h3 id="可能的报错："><a href="#可能的报错：" class="headerlink" title="可能的报错："></a>可能的报错：</h3><p>如果报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">checking <span class="hljs-keyword">for</span> C compiler ... not found<br><br>./configure: error: C compiler cc is not found<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install gcc<br></code></pre></td></tr></table></figure><p>如果遇到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure: error: the HTTP gzip module requires the zlib library.<br>You can either <span class="hljs-built_in">disable</span> the module by using --without-http_gzip_module<br>option, or install the zlib library into the system, or build the zlib library<br>statically from the <span class="hljs-built_in">source</span> with nginx by using --with-zlib=&lt;path&gt; option.<br></code></pre></td></tr></table></figure><p>安装zlib</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Ubuntu/Debian</span><br>sudo apt-get install zlib1g-dev<br><span class="hljs-comment"># RHEL / CentOS</span><br>sudo yum install zlib-devel<br></code></pre></td></tr></table></figure><h3 id="正确输出"><a href="#正确输出" class="headerlink" title="正确输出"></a>正确输出</h3><p>直到出现类似下面的输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">Configuration summary<br>  + using threads<br>  + using system PCRE library<br>  + using system OpenSSL library<br>  + using system zlib library<br><br>  nginx path prefix: <span class="hljs-string">&quot;/etc/nginx&quot;</span><br>  nginx binary file: <span class="hljs-string">&quot;/usr/sbin/nginx&quot;</span><br>  nginx modules path: <span class="hljs-string">&quot;/usr/lib/nginx/modules&quot;</span><br>  nginx configuration prefix: <span class="hljs-string">&quot;/etc/nginx&quot;</span><br>  nginx configuration file: <span class="hljs-string">&quot;/etc/nginx/nginx.conf&quot;</span><br>  nginx pid file: <span class="hljs-string">&quot;/var/run/nginx.pid&quot;</span><br>  nginx error <span class="hljs-built_in">log</span> file: <span class="hljs-string">&quot;/var/log/nginx/error.log&quot;</span><br>  nginx http access <span class="hljs-built_in">log</span> file: <span class="hljs-string">&quot;/var/log/nginx/access.log&quot;</span><br>  nginx http client request body temporary files: <span class="hljs-string">&quot;/var/cache/nginx/client_temp&quot;</span><br>  nginx http proxy temporary files: <span class="hljs-string">&quot;/var/cache/nginx/proxy_temp&quot;</span><br>  nginx http fastcgi temporary files: <span class="hljs-string">&quot;/var/cache/nginx/fastcgi_temp&quot;</span><br>  nginx http uwsgi temporary files: <span class="hljs-string">&quot;/var/cache/nginx/uwsgi_temp&quot;</span><br>  nginx http scgi temporary files: <span class="hljs-string">&quot;/var/cache/nginx/scgi_temp&quot;</span><br></code></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make<br></code></pre></td></tr></table></figure><p>如果报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">-bash: make: <span class="hljs-built_in">command</span> not found<br></code></pre></td></tr></table></figure><p>对于 Ubuntu：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get update &amp;&amp; apt-get install -y make<br></code></pre></td></tr></table></figure><p>如果在 Debian 上安装make失败，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install -y build-essential<br></code></pre></td></tr></table></figure><h1 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h1><p>如果之前安装过 nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">which</span> nginx<br></code></pre></td></tr></table></figure><p>然后将编译好的二进制文件替换现有的nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> objs/nginx /usr/sbin/nginx<br></code></pre></td></tr></table></figure><div class="note note-primary">            <p>之前没安装过nginx的可以直接 <code>make &amp;&amp; make install</code></p>          </div><blockquote><p><code>nginx-module-vts</code> 模块从0.1.17+版本之后原生支持 prometheus 数据格式，可跳过 nginx-vts-exporter 的安装。</p></blockquote><h1 id="开启监控"><a href="#开启监控" class="headerlink" title="开启监控"></a>开启监控</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs conf"># 在 http 和 server 块中加入如下信息<br>http &#123;<br>    vhost_traffic_status_zone;<br>    ...<br>    server &#123;<br>        ...<br>        location /metrics &#123;<br>            vhost_traffic_status_display;<br>            vhost_traffic_status_display_format prometheus;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>比如，编辑conf文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/vhost_traffic_status_zone.conf<br></code></pre></td></tr></table></figure><p>添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs conf">vhost_traffic_status_zone;<br>vhost_traffic_status_filter_by_host on;<br>vhost_traffic_status_filter on;<br>vhost_traffic_status_filter_by_set_key $status $server_name;<br>server &#123;<br>    listen       80;<br>    server_name  localhost;<br>    location /status &#123;<br>            vhost_traffic_status_display;<br>            vhost_traffic_status_display_format html;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果你想用域名访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs conf">vhost_traffic_status_zone;<br>vhost_traffic_status_filter_by_host on;<br>vhost_traffic_status_filter on;<br>vhost_traffic_status_filter_by_set_key $status $server_name;<br>server &#123;<br>    listen 80;<br>    server_name www.pawswrite.xyz;<br>    return 301 https://$host$request_uri;<br>&#125;<br><br>server &#123;<br>    listen 443;<br>    server_name www.pawswrite.xyz;<br>    #allow 你的IP;<br>    #deny  all;<br>    location /status &#123;<br>            vhost_traffic_status_display;<br>            vhost_traffic_status_display_format html;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>监控接口为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">支持的输出格式有json html和 Prometheus<br><br>localhost/metrics<br>localhost/metrics/format/json<br>localhost/metrics/format/prometheus<br></code></pre></td></tr></table></figure><h1 id="acme申请证书"><a href="#acme申请证书" class="headerlink" title="acme申请证书"></a>acme申请证书</h1><p>安装 acme.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://get.acme.sh | sh -s email=你的邮箱<br></code></pre></td></tr></table></figure><p>申请证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">acme.sh --issue -d 你的域名 --nginx<br></code></pre></td></tr></table></figure><p>之后修改配置，修改下面几处：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs conf">listen 443 ssl;<br>server_name your.example.com;<br>ssl_certificate /root/.acme.sh/your.example.com/your.example.com.cer;<br>ssl_certificate_key /root/.acme.sh/your.example.com/your.example.com.key;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://get.acme.sh | sh -s email=my@pawswrite.xyz<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://get.acme.sh | sh -s email=my@pawswrite.xyz<br></code></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>添加在nginx.conf中的http段落下。</p><table><thead><tr><th>功能</th><th>配置</th></tr></thead><tbody><tr><td>开启基础监控</td><td><code>vhost_traffic_status_zone;</code></td></tr><tr><td>开启详细状态码统计</td><td><code>vhost_traffic_status_filter on;</code></td></tr><tr><td>开启详细状态码统计</td><td><code>vhost_traffic_status_filter_by_set_key $status $server_name;</code></td></tr><tr><td>开启URL统计</td><td><code>vhost_traffic_status_filter on;</code></td></tr><tr><td>开启URL统计</td><td><code>vhost_traffic_status_filter_by_set_key $uri uris::$server_name;</code></td></tr></tbody></table><p>打开vhost过滤，开启此功能，在Nginx配置有多个server_name的情况下，会根据不同的server_name进行流量的统计，否则默认会把流量全部计算到第一个server_name上。在不想统计流量的server区域禁用vhost_traffic_status，配置示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs conf">server &#123;<br>...<br>vhost_traffic_status off;<br>...<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 开启原版 bbr</title>
    <link href="/posts/cd7a4445.html"/>
    <url>/posts/cd7a4445.html</url>
    
    <content type="html"><![CDATA[<p>非脚本开启bbr</p><span id="more"></span><h1 id="开启bbr的效果"><a href="#开启bbr的效果" class="headerlink" title="开启bbr的效果"></a>开启bbr的效果</h1><p>给一个直观对比：<br><img src="/posts/cd7a4445/before.jpg" alt="before"></p><p><img src="/posts/cd7a4445/after.jpg" alt="after"></p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>使用 root 权限运行下面代码查看内核版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -r<br></code></pre></td></tr></table></figure><p>内核版本高于 4.9 就行。</p><p>开启BBR，生效更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf<br>sysctl -p<br></code></pre></td></tr></table></figure><p>执行下面命令，如果结果中带有bbr，则证明你的内核已开启bbr。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sysctl net.ipv4.tcp_available_congestion_control<br></code></pre></td></tr></table></figure><p>注：也可以执行下面命令，如果结果中有bbr，也可以证明你的内核已开启bbr。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsmod | grep bbr<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
      <category>自建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>垃圾水墨云（已跑路）测评</title>
    <link href="/posts/2a20baca.html"/>
    <url>/posts/2a20baca.html</url>
    
    <content type="html"><![CDATA[<p>某iplc测评，已经<strong>跑路</strong>。权当记录吧。</p><span id="more"></span><h1 id="Stair-Speed-测速结果"><a href="#Stair-Speed-测速结果" class="headerlink" title="Stair Speed 测速结果"></a>Stair Speed 测速结果</h1><p><img src="/posts/2a20baca/1.png" alt="测速结果"></p>]]></content>
    
    
    <categories>
      
      <category>VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【FireFox Send】自建文件加密分享传输网站</title>
    <link href="/posts/4ae3f173.html"/>
    <url>/posts/4ae3f173.html</url>
    
    <content type="html"><![CDATA[<p><code>Firefox Send</code> 服务于2019年3月上线，提供了<strong>安全、私密</strong>的文件托管和文件共享服务。无需注册。但因为这种安全特性，被黑客滥用传播黑客工具。2020 年 7 月，<code>Mozilla</code> 宣布暂时中止 <code>Firefox Send</code> 服务。虽然官方网站很可惜不能用了，但 <code>Firefox</code> 慷慨地开源了网站，我们可以自建来使用。</p><span id="more"></span><h1 id="文件分享服务"><a href="#文件分享服务" class="headerlink" title="文件分享服务"></a>文件分享服务</h1><p>可能大家听得比较多的是奶牛快传、<code>sendAnywhere</code> 这些。但其实文件分享服务还有很多，不过基本上我都没用过，所以只是分享一下：</p><ul><li><a href="https://transfer.sh/" target="_blank" rel="noopener external nofollow noreferrer">https://transfer.sh/</a></li><li><a href="https://uguu.se/" target="_blank" rel="noopener external nofollow noreferrer">https://uguu.se/</a> 单次上限100MB</li><li><a href="https://anonfiles.com/" target="_blank" rel="noopener external nofollow noreferrer">https://anonfiles.com/</a></li><li><a href="https://letsupload.co/" target="_blank" rel="noopener external nofollow noreferrer">https://letsupload.co/</a></li><li><a href="https://secufiles.com/" target="_blank" rel="noopener external nofollow noreferrer">https://secufiles.com/</a></li><li><a href="https://wetransfer.com/" target="_blank" rel="noopener external nofollow noreferrer">https://wetransfer.com/</a></li><li><a href="https://wormhole.app/" target="_blank" rel="noopener external nofollow noreferrer">https://wormhole.app/</a></li><li><a href="https://filedoge.com/" target="_blank" rel="noopener external nofollow noreferrer">https://filedoge.com/</a></li><li><a href="https://demo.jirafeau.net/" target="_blank" rel="noopener external nofollow noreferrer">https://demo.jirafeau.net/</a> 也能自建 <a href="https://gitlab.com/mojo42/Jirafeau" target="_blank" rel="noopener external nofollow noreferrer">https://gitlab.com/mojo42/Jirafeau</a></li><li><a href="https://plik.root.gg/" target="_blank" rel="noopener external nofollow noreferrer">https://plik.root.gg</a> 也能自建 <a href="https://github.com/root-gg/plik" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/root-gg/plik</a></li><li><a href="https://oshi.at/" target="_blank" rel="noopener external nofollow noreferrer">https://oshi.at/</a></li><li><a href="https://anonfiles.com/" target="_blank" rel="noopener external nofollow noreferrer">https://anonfiles.com/</a> <a href="https://filechan.org/" target="_blank" rel="noopener external nofollow noreferrer">https://filechan.org/</a></li><li><a href="https://ttm.sh/" target="_blank" rel="noopener external nofollow noreferrer">https://ttm.sh/</a></li><li><a href="https://send.internxt.com/" target="_blank" rel="noopener external nofollow noreferrer">https://send.internxt.com/</a></li><li><a href="https://bashupload.com/" target="_blank" rel="noopener external nofollow noreferrer">https://bashupload.com/</a> 有效期3天，只能下载一次</li><li><a href="https://airportal.cn/" target="_blank" rel="noopener external nofollow noreferrer">https://airportal.cn/</a></li><li><a href="https://musetransfer.com/" target="_blank" rel="noopener external nofollow noreferrer">https://musetransfer.com/</a></li><li><a href="https://snapdrop.net/" target="_blank" rel="noopener external nofollow noreferrer">https://snapdrop.net/</a> 无需APP，仅局域网</li><li><a href="https://termbin.com/" target="_blank" rel="noopener external nofollow noreferrer">https://termbin.com/</a></li><li><a href="https://temp.sh/" target="_blank" rel="noopener external nofollow noreferrer">https://temp.sh/</a></li></ul><p>其他可自建：</p><ul><li>阅后即焚 <a href="https://github.com/cupcakearmy/cryptgeon" target="_blank" rel="noopener external nofollow noreferrer">cryptgeon</a><ul><li>文件保存在内存中，无法持久保存</li></ul></li><li>临时文件分享系统 <a href="https://github.com/Newlode/jirafeau" target="_blank" rel="noopener external nofollow noreferrer">Jirafeau</a></li><li>go 写的轻量临时文件上传系统 <a href="https://github.com/root-gg/plik" target="_blank" rel="noopener external nofollow noreferrer">plik</a></li><li>http 服务器：<ul><li><a href="https://github.com/codeskyblue/gohttpserver" target="_blank" rel="noopener external nofollow noreferrer">gohttpserver</a></li><li><a href="https://github.com/svenstaro/miniserve" target="_blank" rel="noopener external nofollow noreferrer">miniserve</a></li></ul></li></ul><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><ul><li><strong>原版</strong>项目地址：<a href="https://github.com/mozilla/send" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/mozilla/send</a></li><li>民间<strong>维护版</strong>项目地址：<a href="https://github.com/timvisee/send" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/timvisee/send</a></li><li>实例列表（不保证没改过代码，不保证安全性）：<a href="https://github.com/timvisee/send-instances" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/timvisee/send-instances</a></li></ul><blockquote><p>下面会分别介绍<strong>原版</strong>和<strong>维护版</strong>的安装，建议用<strong>维护版</strong>，兼容 <a href="https://github.com/timvisee/ffsend" target="_blank" rel="noopener external nofollow noreferrer">ffsend</a> 。</p></blockquote><h1 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h1><ul><li>Node.js 12.x (原版)</li><li>Node.js 16.x (维护版)</li><li>Redis server (可选)</li><li>AWS S3 or compatible service (可选)</li><li>git</li></ul><p>本文教程假设</p><ul><li>你有一个服务器</li><li>你懂基本的 Linux 命令行操作</li></ul><p>本文基于 Ubuntu 20.04 系统，其他 Linux 系统类似，但不保证可行性。</p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update &amp;&amp; apt upgrade -y<br>apt install git nginx nodejs npm<br></code></pre></td></tr></table></figure><h1 id="安装-redis【可选】"><a href="#安装-redis【可选】" class="headerlink" title="安装 redis【可选】"></a>安装 redis【可选】</h1><h2 id="docker-compose-安装"><a href="#docker-compose-安装" class="headerlink" title="docker-compose 安装"></a>docker-compose 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt/redis &amp;&amp; <span class="hljs-built_in">cd</span> /opt/redis<br>vim /opt/redis/docker-compose.yml<br></code></pre></td></tr></table></figure><p>输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">version: <span class="hljs-string">&#x27;3&#x27;</span><br>services:<br>  cache:<br>    image: redis:6.2-alpine<br>    restart: always<br>    ports:<br>      - <span class="hljs-string">&#x27;127.0.0.1:6379:6379&#x27;</span><br>    <span class="hljs-built_in">command</span>: redis-server --save 20 1 --loglevel warning<br>    volumes:<br>      - ./data:/data<br></code></pre></td></tr></table></figure><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/redis &amp;&amp; docker-compose up -d<br></code></pre></td></tr></table></figure><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>注意，<strong>不能使用 root 用户</strong>来编译！所以我们需要新建用户并切换至新用户。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>原版</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /opt/send/ &amp;&amp; <span class="hljs-built_in">cd</span> /opt/send<br>git <span class="hljs-built_in">clone</span> https://github.com/tech-fever/send.git htdocs<br></code></pre></td></tr></table></figure><p><strong>维护版</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /opt/send/ &amp;&amp; <span class="hljs-built_in">cd</span> /opt/send<br>git <span class="hljs-built_in">clone</span> https://github.com/timvisee/send.git htdocs<br></code></pre></td></tr></table></figure><h2 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">adduser --disabled-login send<br><span class="hljs-built_in">chown</span> -R send:send /opt/send/htdocs<br></code></pre></td></tr></table></figure><h3 id="原版依赖问题【可跳过不看】"><a href="#原版依赖问题【可跳过不看】" class="headerlink" title="原版依赖问题【可跳过不看】"></a><strong>原版</strong>依赖问题【可跳过不看】</h3><p>由于<strong>原版</strong> <code>FireFox Send</code> 已经不再维护，它的依赖 <code>webcrypto-core</code> 是旧版本的。</p><blockquote><p>参考：(谈firefox-send安装与new Error(“Cannot find module ‘webcrypto-core’”);错误)[<a href="https://fudaoyuan.icu/2022/02/25/%E8%B0%88firefox-send%E5%AE%89%E8%A3%85%E4%B8%8Enew-errorcannot-find-module-webcrypto-core%E9%94%99%E8%AF%AF/]" target="_blank" rel="noopener external nofollow noreferrer">https://fudaoyuan.icu/2022/02/25/%E8%B0%88firefox-send%E5%AE%89%E8%A3%85%E4%B8%8Enew-errorcannot-find-module-webcrypto-core%E9%94%99%E8%AF%AF/]</a></p></blockquote><p>所以这个仓库是在原来代码上进行了修改，在 <code>package.json</code> 中增加一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;webcrypto-core&quot;</span>: <span class="hljs-string">&quot;github:mozilla-fxa/webcrypto-core&quot;</span><br></code></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><p>输入下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">su - send<br><span class="hljs-built_in">cd</span> /opt/send/htdocs<br><span class="hljs-comment"># 安装依赖</span><br>npm install<br><span class="hljs-comment"># 构建生产环境</span><br>npm run build<br></code></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><div class="note note-warning">            <p>根据官方文档，是使用 <code>su www-data -c</code> ，但会出现提示 <code>This account is currently not available.</code> 因为 <code>www-data</code> 是 <code>no-login</code> 的。所以换别的。</p>          </div><h3 id="维护版的运行"><a href="#维护版的运行" class="headerlink" title="维护版的运行"></a><strong>维护版</strong>的运行</h3><p><strong>维护版</strong>还需要额外添加环境变量，可选的变量有：</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>BASE_URL</code></td><td>The HTTPS URL where traffic will be served (e.g. <code>https://send.firefox.com</code>)</td></tr><tr><td><code>DETECT_BASE_URL</code></td><td>Autodetect the base URL using browser if <code>BASE_URL</code> is unset (defaults to <code>false</code>)</td></tr><tr><td><code>PORT</code></td><td>Port the server will listen on (defaults to <code>1443</code>)</td></tr><tr><td><code>NODE_ENV</code></td><td>Run in <code>development</code> mode (unsafe) or <code>production</code> mode (the default)</td></tr><tr><td><code>SEND_FOOTER_DMCA_URL</code></td><td>A URL to a contact page for DMCA requests (empty &#x2F; not shown by default)</td></tr><tr><td><code>SENTRY_CLIENT</code>, <code>SENTRY_DSN</code></td><td>Sentry Client ID and DNS for error tracking (optional, disabled by default)</td></tr></tbody></table><p><em>Note: more options can be found here: <a href="https://github.com/timvisee/send/blob/master/server/config.js" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/timvisee/send/blob/master/server/config.js</a></em></p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>MAX_FILE_SIZE</code></td><td>Maximum upload file size in bytes (defaults to <code>2147483648</code> aka 2GB)</td></tr><tr><td><code>MAX_FILES_PER_ARCHIVE</code></td><td>Maximum number of files per archive (defaults to <code>64</code>)</td></tr><tr><td><code>MAX_EXPIRE_SECONDS</code></td><td>Maximum upload expiry time in seconds (defaults to <code>604800</code> aka 7 days)</td></tr><tr><td><code>MAX_DOWNLOADS</code></td><td>Maximum number of downloads (defaults to <code>100</code>)</td></tr><tr><td><code>DOWNLOAD_COUNTS</code></td><td>Download limit options to show in UI dropdown, e.g. <code>10,1,2,5,10,15,25,50,100,1000</code></td></tr><tr><td><code>EXPIRE_TIMES_SECONDS</code></td><td>Expire time options to show in UI dropdown, e.g. <code>3600,86400,604800,2592000,31536000</code></td></tr><tr><td><code>DEFAULT_DOWNLOADS</code></td><td>Default download limit in UI (defaults to <code>1</code>)</td></tr><tr><td><code>DEFAULT_EXPIRE_SECONDS</code></td><td>Default expire time in UI (defaults to <code>86400</code>)</td></tr></tbody></table><p>新建 <code>.env</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">DETECT_BASE_URL=<span class="hljs-literal">true</span><br>REDIS_HOST=localhost<br></code></pre></td></tr></table></figure><blockquote><p>如果使用了 redis 就加入第二行，没有的话就删除</p></blockquote><p><strong>用 root 用户</strong>创建脚本，先退出回到root用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><p>再使用root用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/send<br>vim run.sh<br></code></pre></td></tr></table></figure><p>输入脚本内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">cd</span> /opt/send/htdocs &amp;&amp; <span class="hljs-built_in">export</span> $(xargs &lt; .<span class="hljs-built_in">env</span>) &amp;&amp; <span class="hljs-built_in">nohup</span> su send -c <span class="hljs-string">&quot;npm run prod&quot;</span> 2&gt;/dev/null &amp;<br></code></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x run.sh &amp;&amp; ./run.sh<br></code></pre></td></tr></table></figure><h3 id="原版的运行"><a href="#原版的运行" class="headerlink" title="原版的运行"></a><strong>原版</strong>的运行</h3><p>用 <code>nohup</code> 运行就行，运行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/send<br>vim run.sh<br></code></pre></td></tr></table></figure><p>输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">cd</span> /opt/send/htdocs &amp;&amp; <span class="hljs-built_in">nohup</span> su send -c <span class="hljs-string">&quot;npm run prod&quot;</span> 2&gt;/dev/null &amp;<br></code></pre></td></tr></table></figure><p>之后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x run.sh &amp;&amp; ./run.sh<br></code></pre></td></tr></table></figure><h1 id="Nginx-反代"><a href="#Nginx-反代" class="headerlink" title="Nginx 反代"></a>Nginx 反代</h1><p>记得修改 <code>send.example.com</code> 成你的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">send.example.com;</span><br><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$host$request_uri;</span><br>&#125;<br><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-comment"># Replace bark.app.dev with your real domain name.</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">send.example.com;</span><br><br>    <span class="hljs-string">ssl_certificate</span> <span class="hljs-string">/etc/letsencrypt/live/send.example.com/fullchain.pem;</span><br>    <span class="hljs-string">ssl_certificate_key</span> <span class="hljs-string">/etc/letsencrypt/live/send.example.com/privkey.pem;</span><br>    <span class="hljs-string">ssl_session_timeout</span> <span class="hljs-string">1d;</span><br>    <span class="hljs-string">ssl_session_cache</span> <span class="hljs-string">shared:MozSSL:10m;</span>  <span class="hljs-comment"># about 40000 sessions</span><br>    <span class="hljs-string">ssl_session_tickets</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># modern configuration</span><br>    <span class="hljs-string">ssl_protocols</span> <span class="hljs-string">TLSv1.3;</span><br>    <span class="hljs-string">ssl_prefer_server_ciphers</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># HSTS (ngx_http_headers_module is required) (63072000 seconds)</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Strict-Transport-Security</span> <span class="hljs-string">&quot;max-age=63072000&quot;</span> <span class="hljs-string">always;</span><br><br>    <span class="hljs-comment"># OCSP stapling</span><br>    <span class="hljs-string">ssl_stapling</span> <span class="hljs-string">on;</span><br>    <span class="hljs-string">ssl_stapling_verify</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-comment"># verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br>    <span class="hljs-comment"># ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><br>    <span class="hljs-comment"># replace with the IP address of your resolver</span><br>    <span class="hljs-comment">#resolver 127.0.0.1;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>        <span class="hljs-string">proxy_pass</span>       <span class="hljs-string">http://localhost:1443;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span>      <span class="hljs-string">$host;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Real-IP</span> <span class="hljs-string">$remote_addr;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-For</span> <span class="hljs-string">$proxy_add_x_forwarded_for;</span><br>        <span class="hljs-string">proxy_buffering</span> <span class="hljs-string">off;</span><br>        <span class="hljs-string">proxy_cache</span> <span class="hljs-string">off;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$scheme;</span><br>    &#125;<br>    <span class="hljs-string">location</span> <span class="hljs-string">/api/ws</span> &#123;<br>       <span class="hljs-string">proxy_redirect</span> <span class="hljs-string">off;</span><br>       <span class="hljs-string">proxy_pass</span> <span class="hljs-string">ws://localhost:1443;</span><br>       <span class="hljs-string">proxy_http_version</span> <span class="hljs-number">1.1</span><span class="hljs-string">;</span><br>       <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Upgrade</span> <span class="hljs-string">$http_upgrade;</span><br>       <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Connection</span> <span class="hljs-string">&quot;upgrade&quot;</span><span class="hljs-string">;</span><br>       <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span> <span class="hljs-string">$http_host;</span><br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>FireFox Send</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【seafile】配置全文搜索</title>
    <link href="/posts/bdb7672.html"/>
    <url>/posts/bdb7672.html</url>
    
    <content type="html"><![CDATA[<p><code>Seafile</code> 支持使用 <code>ElasticSearch</code> 服务实现全文搜索。</p><span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul><li>本文主要是基于本博客另一篇文章《<a href="https://pawswrite.xyz/posts/5921bbff.html">【seafile】服务器配合 Nginx 自建 seafile pro 网盘</a>》而写的教程</li><li>参考: <a href="https://cloud.seafile.com/published/seafile-manual-cn/deploy_pro/details_about_file_search.md" target="_blank" rel="noopener external nofollow noreferrer">全文搜索官方文档</a><h1 id="搜索选项"><a href="#搜索选项" class="headerlink" title="搜索选项"></a>搜索选项</h1>可以在 <code>seafevents.conf</code> 中设置 <code>[INDEX FILES]</code> 选项来控制文件搜索的行为。你需要重新启动 <code>seafile</code> 和 <code>seahub</code> 使它们生效。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /opt/seafile/data/seafile/conf/seafevents.conf<br></code></pre></td></tr></table></figure><p>如果是跟着本博客做的，对于 pro 版，选择已经默认开启了全文搜索，可以跳过这小节。</p><p>默认配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs conf">[INDEX FILES]<br>external_es_server = true<br>es_host = elasticsearch<br>es_port = 9200<br>enabled = true<br>interval = 10m<br><br>highlight = fvh<br><br>## If true, indexes the contents of office/pdf files while updating search index<br>## Note: If you change this option from &quot;false&quot; to &quot;true&quot;, then you need to clear the search index and update the index again. See the FAQ for details.<br>index_office_pdf = true<br></code></pre></td></tr></table></figure><p>对于非pro版，如果没有开启，可以先按照下面的配置来进行修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs conf">[INDEX FILES]<br>## must be &quot;true&quot; to enable search<br>enabled = true<br><br>## The interval the search index is updated. Can be s(seconds), m(minutes), h(hours), d(days)<br>interval=10m<br><br>## If true, indexes the contents of office/pdf files while updating search index<br>## Note: If you change this option from &quot;false&quot; to &quot;true&quot;, then you need to clear the search index and update the index again.<br>index_office_pdf=false<br></code></pre></td></tr></table></figure><h1 id="启用-Office-x2F-PDF-文件的全文搜索"><a href="#启用-Office-x2F-PDF-文件的全文搜索" class="headerlink" title="启用 Office&#x2F;PDF 文件的全文搜索"></a>启用 Office&#x2F;PDF 文件的全文搜索</h1><p><del>全文搜索默认情况下不启用以保存系统资源</del>，现在pro版是默认启用。如果要启用它，您需要按照以下说明进行操作。</p><p>首先，您必须在 <code>seafevents.conf</code> 中将 <code>index_office_pdf</code> 选项的值设置为 <code>true</code> 。</p><p>然后重新启动 <code>seafile</code> 服务，还需要删除现有的搜索索引并重建。</p><h2 id="运行命令"><a href="#运行命令" class="headerlink" title="运行命令"></a>运行命令</h2><h3 id="【重要】对于docker运行网盘的时候"><a href="#【重要】对于docker运行网盘的时候" class="headerlink" title="【重要】对于docker运行网盘的时候"></a>【重要】对于docker运行网盘的时候</h3><p>重新启动 <code>seafile</code> 服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it seafile /opt/seafile/seafile-server-latest/reset-admin.sh/seafile.sh restart<br></code></pre></td></tr></table></figure><p>删除现有的搜索索引并重建。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it seafile /opt/seafile/seafile-server-latest/pro/pro.py search --clear<br>docker <span class="hljs-built_in">exec</span> -it seafile /opt/seafile/seafile-server-latest/pro/pro.py search --update<br></code></pre></td></tr></table></figure><h3 id="对于非docker运行网盘"><a href="#对于非docker运行网盘" class="headerlink" title="对于非docker运行网盘"></a>对于非docker运行网盘</h3><p>重新启动 <code>seafile</code> 服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /data/haiwen/seafile-pro-server-1.7.0/<br>./seafile.sh restart<br></code></pre></td></tr></table></figure><p>删除现有的搜索索引并重建。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">./pro/pro.py search --clear<br>./pro/pro.py search --update<br></code></pre></td></tr></table></figure><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><ol><li><p>如果出现问题，请重建索引。</p></li><li><p>搜索关键字时，没有返回结果</p><blockquote><p>搜索索引默认每10分钟更新一次，所以在执行第一次搜索更新之前，无论你搜索什么都没有结果。</p></blockquote><p>为了能立即搜索：<br>确保您已经启动 Seafile Server<br>手动更新搜索索引</p></li><li><p>无法搜索加密文件<br>服务器无法对加密文件进行索引，因为它们被加密了。</p></li><li><p>增加用于搜索的Java进程堆大小<br>搜索功能基于Elasticsearch服务，这是一个Java进程。要增加Java堆内存大小，可以通过修改jvm配置文件来修改Elasticsearch使用的内存大小空间。例如，修改为2G内存空间。</p><p>非docker运行：修改seafile-server-latest&#x2F;pro&#x2F;elasticsearch&#x2F;config&#x2F;jvm.options文件的以下配置项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs conf">-Xms2g # 最小使用内存空间<br>-Xmx2g # 最大使用内存空间<br>### 建议将以上两个配置项的值设置为一样大小。<br></code></pre></td></tr></table></figure></li></ol><p>  docker-compose 运行：docker-compose.yml 文件中，<br>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">elasticsearch:</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">elasticsearch:7.16.2</span><br>  <span class="hljs-attr">container_name:</span> <span class="hljs-string">seafile-elasticsearch</span><br>  <span class="hljs-attr">environment:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">discovery.type=single-node</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">bootstrap.memory_lock=true</span><br>    <span class="hljs-comment"># 修改下面这行</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;ES_JAVA_OPTS=-Xms2g -Xmx2g&quot;</span><br></code></pre></td></tr></table></figure><br>  重启seafile服务使上述修改生效：<br>  非docker：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">./seafile.sh restart<br>./seahub.sh restart<br></code></pre></td></tr></table></figure><br>  docker：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it seafile /opt/seafile/seafile-server-latest/seafile.sh restart<br>docker <span class="hljs-built_in">exec</span> -it seafile /opt/seafile/seafile-server-latest/seahub.sh restart<br></code></pre></td></tr></table></figure></p>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>Seafile</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>Seafile</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【seafile】配合 OnlyOffice 实现文档在线编辑</title>
    <link href="/posts/d4c31257.html"/>
    <url>/posts/d4c31257.html</url>
    
    <content type="html"><![CDATA[<p>整合 OnlyOffice 就可以在线打开各种办公文档进行编辑。</p><span id="more"></span><p><img src="/posts/d4c31257/onlyoffice.png"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>首先 <code>Seafile pro</code> 版支持多种 Office 在线预览和编辑的方式。</p><table><thead><tr><th></th><th>预览</th><th>编辑</th><th>安装方式</th></tr></thead><tbody><tr><td>office-preview</td><td>✔️</td><td></td><td><strong>专业版</strong>7.1 ~ 8.0 版本自带，9.0 及以后版本对接镜像 office</td></tr><tr><td>Microsoft Office Online Server</td><td>✔️</td><td>✔️</td><td><a href="https://learn.microsoft.com/zh-cn/officeonlineserver/deploy-office-online-server?redirectedfrom=MSDN" title="点击跳转" target="_blank" rel="noopener external nofollow noreferrer">仅 Windows 服务器可部署</a></td></tr><tr><td>Collabora Online (LibreOffice Online)</td><td>✔️</td><td>✔️</td><td><a href="https://www.collaboraoffice.com/" title="点击跳转" target="_blank" rel="noopener external nofollow noreferrer">docker 部署</a>，<strong>必须启用 https</strong></td></tr><tr><td><a href="https://www.onlyoffice.com/" target="_blank" rel="noopener external nofollow noreferrer">OnlyOffice</a>【推荐】</td><td>✔️</td><td>✔️</td><td><a href="https://cloud.seafile.com/published/seafile-manual-cn/deploy/only_office.md" title="点击跳转" target="_blank" rel="noopener external nofollow noreferrer">docker部署</a></td></tr></tbody></table><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><ol><li><a href="https://manual.seafile.com/deploy/only_office/" target="_blank" rel="noopener external nofollow noreferrer">Seafile 整合 OnlyOffice 官方文档</a></li><li><a href="https://cloud.seafile.com/published/seafile-manual-cn/docker/pro-edition/%E7%94%A8Docker%E9%83%A8%E7%BD%B2Seafile.md" target="_blank" rel="noopener external nofollow noreferrer">用 Docker 部署 Seafile 专业版</a></li><li><a href="https://cloud.seafile.com/published/seafile-manual-cn/docker/pro-edition/%E7%94%A8Docker%E9%83%A8%E7%BD%B2OnlyOffice.md" target="_blank" rel="noopener external nofollow noreferrer">用 Docker 部署 OnlyOffice</a></li></ol><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>本文是基于本博客另一篇文章《<a href="https://pawswrite.xyz/posts/5921bbff.html">【seafile】服务器配合 Nginx 自建 seafile pro 网盘</a>》而写的教程</li><li>确保服务器已经安装 <code>Nginx certbot docker docker-compose</code> 并放开 <code>80 443</code> 端口</li></ul><h1 id="将-OnlyOffice-加入到"><a href="#将-OnlyOffice-加入到" class="headerlink" title="将 OnlyOffice 加入到"></a>将 OnlyOffice 加入到</h1><p>将以下内容添加到 <code>docker-compose.yml</code> 的 <code>services</code> 中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-string">...</span><br>  <span class="hljs-attr">oods:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">onlyoffice/documentserver:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">seafile-oods</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/seafile/oods/DocumentServer/logs:/var/log/onlyoffice</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/seafile/oods/DocumentServer/data:/var/www/onlyoffice/Data</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/seafile/oods/DocumentServer/lib:/var/lib/onlyoffice</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/seafile/oods/DocumentServer/local-production-linux.json:/etc/onlyoffice/documentserver/local-production-linux.json</span><br><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">seafile-net</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">JWT_ENABLED=true</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">JWT_SECRET=your-secret-string</span><br></code></pre></td></tr></table></figure><p>并且在 seafile 部分加入一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">seafile:<br>  image: docker.seadrive.org/seafileltd/seafile-pro-mc:latest<br>  container_name: seafile<br>  ports:<br>    - <span class="hljs-string">&quot;127.0.0.1:8000:80&quot;</span><br>          <span class="hljs-comment">#- &quot;127.0.0.1:8000:443&quot;  # If https is enabled, cancel the comment.</span><br>  volumes:<br>    - /opt/seafile/data:/shared   <span class="hljs-comment"># Requested, specifies the path to Seafile data persistent store.</span><br>  environment:<br>    ...<br>  depends_on:<br>    - db<br>    - memcached<br>    - elasticsearch<br>    <span class="hljs-comment"># ！加入下面这行！</span><br>    - oods<br>  networks:<br>    - seafile-net<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>记得把 <code>JWT_SECRET</code> 改成一堆乱码并记住</p>          </div><h1 id="初始化-OnlyOffice-配置文件"><a href="#初始化-OnlyOffice-配置文件" class="headerlink" title="初始化 OnlyOffice 配置文件"></a>初始化 OnlyOffice 配置文件</h1><p>设置OnlyOffice自动保存</p><p>执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt/seafile/oods/DocumentServer/<br>vim /opt/seafile/oods/DocumentServer/local-production-linux.json<br></code></pre></td></tr></table></figure><p>并为 local-production-linux.json 添加内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;CoAuthoring&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;autoAssembly&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;enable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;interval&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5m&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;FileConverter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;converter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;downloadAttemptMaxCount&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h1 id="将-OnlyOffice-加入到-nginx-conf-中"><a href="#将-OnlyOffice-加入到-nginx-conf-中" class="headerlink" title="将 OnlyOffice 加入到 nginx conf 中"></a>将 OnlyOffice 加入到 nginx conf 中</h1><p>修改容器的Nginx文件，而不是宿主机的文件！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /opt/seafile/data/nginx/conf/seafile.nginx.conf<br></code></pre></td></tr></table></figure><p><code>seafile.nginx.conf</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Required for only office document server</span><br><span class="hljs-string">map</span> <span class="hljs-string">$http_x_forwarded_proto</span> <span class="hljs-string">$the_scheme</span> &#123;<br>    <span class="hljs-string">default</span> <span class="hljs-string">$http_x_forwarded_proto;</span><br>    <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">$scheme;</span><br>&#125;<br><span class="hljs-string">map</span> <span class="hljs-string">$http_x_forwarded_host</span> <span class="hljs-string">$the_host</span> &#123;<br>    <span class="hljs-string">default</span> <span class="hljs-string">$http_x_forwarded_host;</span><br>    <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">$host;</span><br>&#125;<br><span class="hljs-string">map</span> <span class="hljs-string">$http_upgrade</span> <span class="hljs-string">$proxy_connection</span> &#123;<br>    <span class="hljs-string">default</span> <span class="hljs-string">upgrade;</span><br>    <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">close;</span><br>&#125;<br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">...</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/onlyofficeds/</span> &#123;<br>        <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://oods/;</span><br>        <span class="hljs-string">proxy_http_version</span> <span class="hljs-number">1.1</span><span class="hljs-string">;</span><br>        <span class="hljs-string">client_max_body_size</span> <span class="hljs-string">100M;</span><br>        <span class="hljs-string">proxy_read_timeout</span> <span class="hljs-string">3600s;</span><br>        <span class="hljs-string">proxy_connect_timeout</span> <span class="hljs-string">3600s;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Upgrade</span> <span class="hljs-string">$http_upgrade;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Connection</span> <span class="hljs-string">$proxy_connection;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Host</span> <span class="hljs-string">$the_host/onlyofficeds;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$the_scheme;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-For</span> <span class="hljs-string">$proxy_add_x_forwarded_for;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="修改-seahub-settings-py"><a href="#修改-seahub-settings-py" class="headerlink" title="修改 seahub_settings.py"></a>修改 seahub_settings.py</h1><p>seahub_settings.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /opt/seafile/data/seafile/conf/seahub_settings.py<br></code></pre></td></tr></table></figure><p>在最后面加入下面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs conf"># OnlyOffice<br>ENABLE_ONLYOFFICE = True<br>VERIFY_ONLYOFFICE_CERTIFICATE = True<br>ONLYOFFICE_APIJS_URL = &#x27;https://你的seafile域名/onlyofficeds/web-apps/apps/api/documents/api.js&#x27;<br>ONLYOFFICE_FILE_EXTENSION = (&#x27;doc&#x27;, &#x27;docx&#x27;, &#x27;ppt&#x27;, &#x27;pptx&#x27;, &#x27;xls&#x27;, &#x27;xlsx&#x27;, &#x27;odt&#x27;,<br>&#x27;fodt&#x27;, &#x27;odp&#x27;, &#x27;fodp&#x27;, &#x27;ods&#x27;, &#x27;fods&#x27;)<br>ONLYOFFICE_EDIT_FILE_EXTENSION = (&#x27;docx&#x27;, &#x27;pptx&#x27;, &#x27;xlsx&#x27;)<br>ONLYOFFICE_JWT_SECRET = &#x27;your-secret-string&#x27;<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>记得把 <code>JWT_SECRET</code> 改成之前的那堆乱码</p>          </div><h1 id="重启-Seafile-容器"><a href="#重启-Seafile-容器" class="headerlink" title="重启 Seafile 容器"></a>重启 Seafile 容器</h1><p>执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose down<br>docker-compose up -d<br></code></pre></td></tr></table></figure><p>等待几分钟让 OnlyOffice 容器完成初始化。然后便可以使用 OnlyOffice。</p>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>Seafile</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>Seafile</tag>
      
      <tag>OnlyOffice</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【seafile】服务器配合 Nginx 自建 seafile pro 网盘</title>
    <link href="/posts/5921bbff.html"/>
    <url>/posts/5921bbff.html</url>
    
    <content type="html"><![CDATA[<p>Seafile 是国产开源的一个自建网盘，作为网盘十分优越，客户端支持多平台，支持团队协作，可以在线编辑Office文件，最重要的是支持自行部署。</p><span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul><li>本文假设你有基础的使用 Linux 命令行的能力</li><li>本文需要配置在1c1g或更高的服务器，并假设你有root权限</li><li>本文在 Ubuntu 20.04 系统上进行</li></ul><h1 id="Seafile-简介"><a href="#Seafile-简介" class="headerlink" title="Seafile 简介"></a>Seafile 简介</h1><p><a href="https://www.seafile.com/" target="_blank" rel="noopener external nofollow noreferrer">Seafile</a> 是一个可自建的网盘。社区版开源免费，pro版闭源收费。最初自建网盘的时候考虑过 NextCloud Cloudreve 但最终还是选择了 Seafile。</p><p>本文跟官方 Docker 教程不同，官方教程是使用了 seafile 镜像内置的 Nginx 来处理 ssl，很方便，但占用了 443 端口，会导致这个服务器<strong>不方便部署别的服务</strong>。因此本文在官方教程基础上进行了修改。seafile 容器暴露 8000 端口，映射容器 80 端口，宿主机和容器间不加密通信，用宿主机的 Nginx 反代到 8000 端口并处理https</p><p><img src="/posts/5921bbff/seafile.png" alt="seafile"></p><h1 id="下载-pro-版"><a href="#下载-pro-版" class="headerlink" title="下载 pro 版"></a>下载 pro 版</h1><p>先浏览器打开<a href="https://www.seafile.com/en/download/" target="_blank" rel="noopener external nofollow noreferrer">英文版网站</a>，再去 <a href="https://customer.seafile.com/" target="_blank" rel="noopener external nofollow noreferrer">customer center</a> 注册账号并登录。</p><p>就可以<strong>免费</strong><a href="https://customer.seafile.com/downloads/" target="_blank" rel="noopener external nofollow noreferrer">下载pro版</a>。</p><p>官方教程：<a href="https://manual.seafile.com/deploy_pro/" target="_blank" rel="noopener external nofollow noreferrer">Deploy Seafile Pro Edition</a><br><del>但这个英文版教程没有中文全面，少了步骤</del>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull docker.seadrive.org/seafileltd/seafile-pro-mc:latest<br></code></pre></td></tr></table></figure><h1 id="启动-docker-compose"><a href="#启动-docker-compose" class="headerlink" title="启动 docker-compose"></a>启动 docker-compose</h1><p><code>docker</code> 和 <code>docker-compose</code> 的安装参见本博客另一篇文章：<a href="https://pawswrite.xyz/posts/30011.html">Docker 安装</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt/seafile &amp;&amp; /opt/seafile<br>vim docker-compose.yml<br></code></pre></td></tr></table></figure><p>输入：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;2.0&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">db:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mariadb:10.5</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">seafile-mysql</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_ROOT_PASSWORD=frae439DFREW32</span>  <span class="hljs-comment"># Requested, set the root&#x27;s password of MySQL service.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_LOG_CONSOLE=true</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/seafile/mysql/db:/var/lib/mysql</span>  <span class="hljs-comment"># Requested, specifies the path to MySQL data persistent store.</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">seafile-net</span><br><br>  <span class="hljs-attr">memcached:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">memcached:1.6</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">seafile-memcached</span><br>    <span class="hljs-attr">entrypoint:</span> <span class="hljs-string">memcached</span> <span class="hljs-string">-m</span> <span class="hljs-number">256</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">seafile-net</span><br><br>  <span class="hljs-attr">elasticsearch:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">elasticsearch:7.16.2</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">seafile-elasticsearch</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">discovery.type=single-node</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">bootstrap.memory_lock=true</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;ES_JAVA_OPTS=-Xms1g -Xmx1g&quot;</span><br>    <span class="hljs-attr">ulimits:</span><br>      <span class="hljs-attr">memlock:</span><br>        <span class="hljs-attr">soft:</span> <span class="hljs-number">-1</span><br>        <span class="hljs-attr">hard:</span> <span class="hljs-number">-1</span><br>    <span class="hljs-attr">mem_limit:</span> <span class="hljs-string">2g</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/seafile/elasticsearch/data:/usr/share/elasticsearch/data</span>  <span class="hljs-comment"># Requested, specifies the path to Elasticsearch data persistent store.</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">seafile-net</span><br>          <br>  <span class="hljs-attr">seafile:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">docker.seadrive.org/seafileltd/seafile-pro-mc:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">seafile</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;127.0.0.1:8000:80&quot;</span><br>      <span class="hljs-comment"># - &quot;127.0.0.1:4433:443&quot;  # If https is enabled, cancel the comment.</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/seafile/data:/shared</span>   <span class="hljs-comment"># Requested, specifies the path to Seafile data persistent store.</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">DB_HOST=db</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">DB_ROOT_PASSWD=frae439DFREW32</span>  <span class="hljs-comment"># Requested, the value should be root&#x27;s password of MySQL service.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">TIME_ZONE=Asia/Shanghai</span> <span class="hljs-comment"># Optional, default is UTC. Should be uncomment and set to your local time zone.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">SEAFILE_ADMIN_EMAIL=你的邮箱</span> <span class="hljs-comment"># Specifies Seafile admin user, default is &#x27;me@example.com&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">SEAFILE_ADMIN_PASSWORD=asecret</span>     <span class="hljs-comment"># Specifies Seafile admin password, default is &#x27;asecret&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">SEAFILE_SERVER_LETSENCRYPT=false</span>   <span class="hljs-comment"># Whether to use https or not</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">SEAFILE_SERVER_HOSTNAME=example.seafile.com</span> <span class="hljs-comment"># Specifies your host name if https is enabled</span><br>    <span class="hljs-attr">depends_on:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">db</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">memcached</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">elasticsearch</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">seafile-net</span><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">seafile-net:</span><br></code></pre></td></tr></table></figure><div class="note note-success">            <p>需要修改的几个地方。<br><code>MYSQL_ROOT_PASSWORD</code> 和 <code>DB_ROOT_PASSWD</code> 需要一样。<br><code>SEAFILE_ADMIN_EMAIL</code> 和 <code>SEAFILE_ADMIN_PASSWORD</code> 很重要。是你<strong>初始登录的账号密码</strong>。<br><code>SEAFILE_SERVER_HOSTNAME</code> 修改成你自己的。</p>          </div><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/seafile<br><span class="hljs-built_in">mkdir</span> -p elasticsearch/data/ &amp;&amp; <span class="hljs-built_in">chmod</span> 777 -R elasticsearch/data/ <span class="hljs-comment"># seafile版本9以上需要</span><br>docker-compose up -d<br></code></pre></td></tr></table></figure><h1 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h1><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update &amp;&amp; apt upgrade -y<br>sudo apt install nginx -y<br></code></pre></td></tr></table></figure><h2 id="安装-certbot"><a href="#安装-certbot" class="headerlink" title="安装 certbot"></a>安装 certbot</h2><p>对于 ubuntu 20.04 上 <code>certbot</code> 的安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update &amp;&amp; apt upgrade -y<br>sudo apt install certbot python3-certbot-nginx -y<br></code></pre></td></tr></table></figure><p>对于 ubuntu 22.04 上 <code>certbot</code> 的安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update &amp;&amp; apt upgrade -y<br>sudo snap install core; sudo snap refresh core<br>sudo apt remove certbot<br>sudo snap install --classic certbot<br>sudo <span class="hljs-built_in">ln</span> -s /snap/bin/certbot /usr/bin/certbot<br></code></pre></td></tr></table></figure><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><p>用 <code>certbot</code> 申请证书（<strong>首先保证你的80端口是开的</strong>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">certbot certonly --nginx -d 你的域名<br></code></pre></td></tr></table></figure><h2 id="配置-Nginx-1"><a href="#配置-Nginx-1" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h2><p>配置nginx文件（取决于你的 Nginx 版本，请自行搜索如何配置）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">example.com</span> <span class="hljs-string">default_server;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>        <span class="hljs-string">rewrite</span> <span class="hljs-string">^</span> <span class="hljs-string">https://$host$request_uri?</span> <span class="hljs-string">permanent;</span><br>    &#125;<br>&#125;<br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">443</span><span class="hljs-string">;</span><br>    <span class="hljs-string">ssl</span> <span class="hljs-string">on;</span><br>    <span class="hljs-string">ssl_certificate</span>      <span class="hljs-string">/etc/letsencrypt/live/example.com/fullchain.pem;</span><br>    <span class="hljs-string">ssl_certificate_key</span>  <span class="hljs-string">/etc/letsencrypt/live/example.com/privkey.pem;</span><br>    <span class="hljs-string">ssl_ciphers</span> <span class="hljs-string">ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;</span><br><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">example.com;</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Strict-Transport-Security</span> <span class="hljs-string">max-age=15768000;</span><br>    <span class="hljs-string">client_max_body_size</span> <span class="hljs-string">10m;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>        <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://127.0.0.1:8000/;</span><br>        <span class="hljs-string">proxy_read_timeout</span> <span class="hljs-string">310s;</span><br>        <span class="hljs-comment"># 重要</span><br>        <span class="hljs-string">proxy_redirect</span> <span class="hljs-string">http://</span> <span class="hljs-string">https://;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span> <span class="hljs-string">$host;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Forwarded</span> <span class="hljs-string">&quot;for=$remote_addr;proto=$scheme&quot;</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-For</span> <span class="hljs-string">$proxy_add_x_forwarded_for;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$scheme;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Real-IP</span> <span class="hljs-string">$remote_addr;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Connection</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_http_version</span> <span class="hljs-number">1.1</span><span class="hljs-string">;</span><br><br>        <span class="hljs-string">client_max_body_size</span> <span class="hljs-number">0</span><span class="hljs-string">;</span><br>        <span class="hljs-string">access_log</span>      <span class="hljs-string">/var/log/nginx/seafile.access.log;</span><br>        <span class="hljs-string">error_log</span>       <span class="hljs-string">/var/log/nginx/seafile.error.log;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>重启 Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl reload nginx<br>systemctl restart nginx<br></code></pre></td></tr></table></figure><h1 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h1><p>Seafile 的配置文件存放在 <code>shared/seafile/conf</code> 目录下，您可以根据<a href="https://manual.seafile.com/" target="_blank" rel="noopener external nofollow noreferrer">Seafile 手册</a>的指导来修改这些配置项。</p><p>一旦修改了配置文件，您需要重启服务以使其生效：</p><p>推荐这个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose restart<br></code></pre></td></tr></table></figure><h1 id="查找日志"><a href="#查找日志" class="headerlink" title="查找日志"></a>查找日志</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose logs -f<br></code></pre></td></tr></table></figure><p>Seafile 容器中 Seafile 服务本身的日志文件存放在 <code>/shared/logs/seafile</code> 目录下，或者您可以在宿主机上 Seafile 容器的卷目录中找到这些日志，例如：<code>/opt/seafile/data/logs/seafile</code></p><p>同样 Seafile 容器的系统日志存放在 <code>/shared/logs/var-log</code> 目录下，或者宿主机目录 <code>/opt/seafile/data/logs/var-log</code>。</p><h1 id="增加一个新的管理员"><a href="#增加一个新的管理员" class="headerlink" title="增加一个新的管理员"></a>增加一个新的管理员</h1><h2 id="【推荐】网站添加"><a href="#【推荐】网站添加" class="headerlink" title="【推荐】网站添加"></a>【推荐】网站添加</h2><p>登录网站，进入 <code>https://你的域名/sys/users/</code> ，添加用户，然后把用户设置成管理员。</p><h2 id="脚本添加"><a href="#脚本添加" class="headerlink" title="脚本添加"></a>脚本添加</h2><p>服务器运行脚本增加，确保各容器正常运行，然后执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it seafile /opt/seafile/seafile-server-latest/reset-admin.sh<br></code></pre></td></tr></table></figure><p>根据提示输入用户名和密码，您现在有了一个新的管理帐户。</p><h1 id="Web-文件断点续传"><a href="#Web-文件断点续传" class="headerlink" title="Web 文件断点续传"></a>Web 文件断点续传</h1><p>在Web界面上传大文件时，如果网络不可靠，则可能会中断上传。如果上传可以从上次停止的地方恢复，将会很方便。在 Seafile 专业版 4.4.0及更新版本中，支持断点续传功能。</p><p>断点续传的工作原理如下：</p><ol><li>用户在Web界面上传一个大文件，并且在上传过程中连接中断。</li><li>服务器将记住上传停止的位置。</li><li>当同一个文件被上传到相同资料库中的同一文件夹时，服务器会告诉浏览器从哪里开始上传。</li></ol><p>限制：</p><p>只支持重新上传；文件更新和文件夹上传无法断点续传。</p><p>只支持 Chrome, Firefox, IE 10+ 。</p><p>要启用断点续传功能，请添加如下配置到 seahub_settings.py 中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs conf">ENABLE_RESUMABLE_FILEUPLOAD = True<br></code></pre></td></tr></table></figure><p>在 Seafile 集群中，为了使此功能如期工作，必须执行以下两个特殊配置之一：</p><ol><li>seafile-server-latest&#x2F;seafile-data&#x2F;httptemp 目录应该通过NFS共享给所有前端 Seafile 服务器。</li><li>或者，将负载均衡器配置为始终将来自同一IP地址的请求发送到固定的后端服务器。</li></ol>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>Seafile</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>Seafile</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费的 Azure 数据库和 Web 应用搭建 Waline 评论系统</title>
    <link href="/posts/f1b701c3.html"/>
    <url>/posts/f1b701c3.html</url>
    
    <content type="html"><![CDATA[<p><a href="https://azure.microsoft.com/zh-cn/free/students/" target="_blank" rel="noopener external nofollow noreferrer">Azure 学生订阅</a> 和其他大部分订阅都提供了免费的 <code>MySQL</code> 数据库和 应用服务(10 个 Web、移动或 API 应用，提供 1 GB 存储空间)，刚好可以用来托管博客的评论系统 Waline。</p><span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul><li><a href="https://waline.js.org/" target="_blank" rel="noopener external nofollow noreferrer">关于 Waline</a></li><li><a href="https://hexo.com/" target="_blank" rel="noopener external nofollow noreferrer">关于 Hexo</a></li><li><a href="https://azure.microsoft.com/zh-cn/free/students/" target="_blank" rel="noopener external nofollow noreferrer">关于Azure学生订阅</a></li></ul><p>参考文章：</p><ol><li><a href="https://blog.amjac.cn/2021/09/deploy-waline-in-azure/" target="_blank" rel="noopener external nofollow noreferrer">【hexo博客】在Azure上搭建Waline评论服务</a></li></ol><h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><div class="note note-info">            <p>waline 支持 <code>MySQL</code> 和 <code>PostgreSQL</code> ，<code>Azure</code> 的学生订阅二者都支持。本文选择的是 <code>MySQL</code> 。</p>          </div><p>进入 <a href="https://portal.azure.com/#home" target="_blank" rel="noopener external nofollow noreferrer">Azure 首页</a> ，选择 <a href="https://portal.azure.com/#create/hub" target="_blank" rel="noopener external nofollow noreferrer">创建资源</a>。搜索 <code>Azure Database for MySQL</code> 或 【推荐】 <code>Azure Database for MySQL Flexible Server</code> 。</p><p>如果选择了 <code>Azure Database for MySQL</code> 记得在点击创建以后，再选择 <strong>灵活服务器</strong> </p><p><img src="/posts/f1b701c3/sql.png"><br><img src="/posts/f1b701c3/sql3.png"></p><p>或者直接选择 <code>Azure Database for MySQL Flexible Server</code> ：<br><img src="/posts/f1b701c3/sql2.png"></p><div class="note note-info">            <p>注意是 <code>Azure Database for MySQL</code> 而不是 <code>SQL Database</code> !<br>后者对学生订阅没有免费额度。</p>          </div><p>填写创建配置：<br><img src="/posts/f1b701c3/sql_create.png"></p><p>资源组和服务器名称可以随便写，MySQL版本有 8.0 和 5.7 两种，区域推荐填写 east asia，距离中国更近。</p><div class="note note-primary">            <p>计算 + 储存这里一定要选择 <strong>B1ms</strong> ，这样才是免费的。学生订阅有个 <code>B1s</code> 计算同样也免费，但它可以用于创建服务器，且配置低于 <code>B1ms</code> ，拿来创建数据库浪费了。</p>          </div><div class="note note-danger">            <p>下面的管理员用户名和密码，就是你访问SQL数据库的用户名密码，设置后<strong>一定要记住</strong>。</p>          </div><p>免费计划里，数据库最多有32 GB免费存储。需要的话可以点击 <strong>配置服务器</strong> ，然后拉满<br><img src="/posts/f1b701c3/sql_storage.png"></p><p>点击，<code>下一步：网络</code> ，为了能够让 <code>waline-server</code> 访问到数据库，在防火墙规则这里选择，<div>            <input type="checkbox" disabled checked="checked">允许从任何 Azure 内的任何 Azure 服务公开访问此服务器          </div></p><p><img src="https://blog.amjac.cn/2021/09/deploy-waline-in-azure/image-20210903141548743.png"></p><p><span class="label label-default">可选</span> 如果你需要从其他位置连接数据库，那么在下面填写相应的 IP 地址即可。</p><p>比如说一键添加你当前使用的 IP到白名单： **+ 添加当前客户端 IP 地址(xxx.xxx.xxx.xxx)**。</p><div class="note note-danger">            <p>添加 0.0.0.0 - 255.255.255.255 可以使得数据库直接对公网开放，但这是危险的操作。</p>          </div><p>最后看一下网页右边的估计成本，点击创建即可。过程大概需要5分钟左右。静待完成后，点击 <code>转到资源</code>。</p><h1 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h1><p>根据 <code>Waline</code> 官方文档，使用时请先导入 <a href="https://github.com/walinejs/waline/blob/main/assets/waline.sql" target="_blank" rel="noopener external nofollow noreferrer">waline.sql</a> 以完成表和表结构的创建。这里我们连接数据库后导入即可。</p><h2 id="创建数据库-1"><a href="#创建数据库-1" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>在数据库资源界面，按照下图操作即可（我用的英文，大家注意对应）<br><img src="/posts/f1b701c3/db_create.png"></p><h2 id="使用-Azure-Cloud-shell-连接数据库"><a href="#使用-Azure-Cloud-shell-连接数据库" class="headerlink" title="使用 Azure Cloud shell 连接数据库"></a>使用 Azure Cloud shell 连接数据库</h2><p>首先连接数据库。有很多连接方式，只要连接 IP 在白名单内即可。（白名单除了在创建的时候配置，还可以在 <code>网络</code> 这里进行配置）</p><p>这里推荐使用 Azure 自带的 <code>Azure Cloud shell</code> 来进行连接。</p><p>进入 <a href="https://portal.azure.com/#home" target="_blank" rel="noopener external nofollow noreferrer">Azure 首页</a> ，找到如下图标并点击。<br><img src="/posts/f1b701c3/AzureCloudshell.png"></p><p>页面下方会出现如下控制台，选择 <code>Bash</code> ，第一次使用需要选择订阅，并创建存储，之后等待创建完成：</p><p><img src="/posts/f1b701c3/AzureCloudshell2.png"><br><img src="/posts/f1b701c3/AzureCloudshell3.png"></p><h2 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h2><p>连接 + 初始化 数据库的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://raw.githubusercontent.com/walinejs/waline/main/assets/waline.sql<br>mysql -h 数据库名称.mysql.database.azure.com -u 管理员账户 -p waline&lt;waline.sql<br></code></pre></td></tr></table></figure><p>解释一下， <code>数据库名称.mysql.database.azure.com</code> 是数据库的 <code>hostname</code> ，管理员用户名是你设置的。 <code>waline</code> 是导入后的数据库库名，可以随便写，建议写 <code>waline</code></p><p>如果不清楚上面说的这些，就去 <code>所有资源 - 刚刚创建的数据库 - 连接</code> 这里查看。<br><img src="/posts/f1b701c3/sql4.png"></p><p>之后会出现类似下面的界面让你输入密码，注意你输入密码的时候，控制台是<strong>不显示密码</strong>的，直接键盘输入然后回车即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">azureusername [ ~ ]$ mysql -h waline.mysql.database.azure.com -u waline -p waline&lt;waline.sql <br>Enter password:<br></code></pre></td></tr></table></figure><p>【可选】删除 Azure Cloud shell 中的 waline.sql 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> waline.sql<br></code></pre></td></tr></table></figure><h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><p>注册好 Azure 账户后，在 <a href="https://portal.azure.com/#home" target="_blank" rel="noopener external nofollow noreferrer">Azure Portal</a> 中<a href="https://portal.azure.com/#create/hub" target="_blank" rel="noopener external nofollow noreferrer">创建一个 Web 应用</a>：<br><img src="/posts/f1b701c3/web.png"></p><p>Docker 这里，按下图配置：<br><img src="/posts/f1b701c3/docker.png"><br>1<a href="https://blog.amjac.cn/2021/09/deploy-waline-in-azure/image-20210902154929384.png" target="_blank" rel="noopener external nofollow noreferrer"></a></p><p>之后点击 <code>创建</code> 就好了。</p><h1 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h1><p>等 Web 应用创建完成，按照下面的步骤一个个填写下面表格里带 ✅ 的环境变量，全部填写完后记得点击<strong>保存</strong>。<br><img src="/posts/f1b701c3/env.png"></p><p>在项目中配置如下环境变量，其中有 ✅ 的是必须填写的。</p><table><thead><tr><th>环境变量名称</th><th>必填</th><th>填写的值</th><th>备注</th></tr></thead><tbody><tr><td><code>MYSQL_HOST</code></td><td>✅</td><td>上面说过的 hostname</td><td>MySQL 服务的地址</td></tr><tr><td><code>MYSQL_PORT</code></td><td></td><td><code>3306</code></td><td>MySQL 服务的端口</td></tr><tr><td><code>MYSQL_DB</code></td><td>✅</td><td><code>waline</code></td><td>MySQL 数据库库名</td></tr><tr><td><code>MYSQL_USER</code></td><td>✅</td><td>数据库的管理员用户名（waline）</td><td>MySQL 数据库的用户名</td></tr><tr><td><code>MYSQL_PASSWORD</code></td><td>✅</td><td>创建数据库的时候设定的</td><td>MySQL 数据库的密码</td></tr><tr><td><code>MYSQL_PREFIX</code></td><td></td><td><code>wl_</code></td><td>MySQL 数据表的表前缀</td></tr><tr><td><code>MYSQL_CHARSET</code></td><td></td><td><code>utf8mb4</code></td><td>MySQL 数据表的字符集</td></tr><tr><td><code>MYSQL_SSL</code></td><td>✅</td><td><code>true</code></td><td>是否使用 SSL MYSQL 连接数据库</td></tr></tbody></table><p>填写后效果如下<br><img src="https://blog.amjac.cn/2021/09/deploy-waline-in-azure/image-20210903142519857.png"></p><p>更多环境变量配置查看<a href="https://waline.js.org/reference/env.html" target="_blank" rel="noopener external nofollow noreferrer">官方文档</a></p><h1 id="博客端配置"><a href="#博客端配置" class="headerlink" title="博客端配置"></a>博客端配置</h1><p>Hexo 有几个主题已经直接嵌入了 waline 评论系统。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.jsdelivr.net/npm/@waline/client&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;waline&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-title class_">Waline</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#waline&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">serverURL</span>: <span class="hljs-string">&#x27;https://xxxxxxxxxxxxx&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">dark</span>: <span class="hljs-string">&#x27;body.dark&#x27;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">meta</span>: [<span class="hljs-string">&#x27;nick&#x27;</span>, <span class="hljs-string">&#x27;mail&#x27;</span>],</span><br><span class="language-javascript">    <span class="hljs-attr">requiredMeta</span>: [<span class="hljs-string">&#x27;nick&#x27;</span>],</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Waline</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Azure</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>绿云9999服务器测评</title>
    <link href="/posts/24829.html"/>
    <url>/posts/24829.html</url>
    
    <content type="html"><![CDATA[<p>绿云9999服务器脚本跑分解锁结果</p><span id="more"></span><p>benchmark 跑分结果</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">root<span class="hljs-meta">@GreenCloud:~#</span> curl -sL yabs.sh |<span class="hljs-string"> bash</span><br><span class="hljs-string"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-string">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-string">#                     v2022-08-20                    #</span><br><span class="hljs-string"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-string"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-string"></span><br><span class="hljs-string">Mon 10 Oct 2022 01:46:42 PM BST</span><br><span class="hljs-string"></span><br><span class="hljs-string">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Uptime     : 0 days, 0 hours, 41 minutes</span><br><span class="hljs-string">Processor  : Intel(R) Xeon(R) CPU E5-2698 v4 @ 2.20GHz</span><br><span class="hljs-string">CPU cores  : 9 @ 2199.986 MHz</span><br><span class="hljs-string">AES-NI     : ✔ Enabled</span><br><span class="hljs-string">VM-x/AMD-V : ✔ Enabled</span><br><span class="hljs-string">RAM        : 8.7 GiB</span><br><span class="hljs-string">Swap       : 1024.0 MiB</span><br><span class="hljs-string">Disk       : 96.5 GiB</span><br><span class="hljs-string">Distro     : Ubuntu 20.04 LTS</span><br><span class="hljs-string">Kernel     : 5.4.0-28-generic</span><br><span class="hljs-string"></span><br><span class="hljs-string">fio Disk Speed Tests (Mixed R/W 50/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block Size </span>|<span class="hljs-string"> 4k            (IOPS) </span>|<span class="hljs-string"> 64k           (IOPS)</span><br><span class="hljs-string">  ------   </span>|<span class="hljs-string"> ---            ----  </span>|<span class="hljs-string"> ----           ----</span><br><span class="hljs-string">Read       </span>|<span class="hljs-string"> 90.70 MB/s   (22.6k) </span>|<span class="hljs-string"> 1.25 GB/s    (19.6k)</span><br><span class="hljs-string">Write      </span>|<span class="hljs-string"> 90.94 MB/s   (22.7k) </span>|<span class="hljs-string"> 1.26 GB/s    (19.7k)</span><br><span class="hljs-string">Total      </span>|<span class="hljs-string"> 181.64 MB/s  (45.4k) </span>|<span class="hljs-string"> 2.51 GB/s    (39.3k)</span><br><span class="hljs-string">           </span>|<span class="hljs-string">                      </span>|<br>Block Size |<span class="hljs-string"> 512k          (IOPS) </span>|<span class="hljs-string"> 1m            (IOPS)</span><br><span class="hljs-string">  ------   </span>|<span class="hljs-string"> ---            ----  </span>|<span class="hljs-string"> ----           ----</span><br><span class="hljs-string">Read       </span>|<span class="hljs-string"> 1.94 GB/s     (3.8k) </span>|<span class="hljs-string"> 1.99 GB/s     (1.9k)</span><br><span class="hljs-string">Write      </span>|<span class="hljs-string"> 2.04 GB/s     (4.0k) </span>|<span class="hljs-string"> 2.13 GB/s     (2.0k)</span><br><span class="hljs-string">Total      </span>|<span class="hljs-string"> 3.99 GB/s     (7.8k) </span>|<span class="hljs-string"> 4.12 GB/s     (4.0k)</span><br><span class="hljs-string"></span><br><span class="hljs-string">iperf3 Network Speed Tests (IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider        </span>|<span class="hljs-string"> Location (Link)           </span>|<span class="hljs-string"> Send Speed      </span>|<span class="hljs-string"> Recv Speed</span><br><span class="hljs-string">                </span>|<span class="hljs-string">                           </span>|<span class="hljs-string">                 </span>|<br>Clouvider       |<span class="hljs-string"> London, UK (10G)          </span>|<span class="hljs-string"> 665 Mbits/sec   </span>|<span class="hljs-string"> 924 Mbits/sec</span><br><span class="hljs-string">Online.net      </span>|<span class="hljs-string"> Paris, FR (10G)           </span>|<span class="hljs-string"> 1.36 Gbits/sec  </span>|<span class="hljs-string"> 1.08 Gbits/sec</span><br><span class="hljs-string">Hybula          </span>|<span class="hljs-string"> The Netherlands (40G)     </span>|<span class="hljs-string"> 1.00 Gbits/sec  </span>|<span class="hljs-string"> 1.04 Gbits/sec</span><br><span class="hljs-string">Uztelecom       </span>|<span class="hljs-string"> Tashkent, UZ (10G)        </span>|<span class="hljs-string"> 1.08 Gbits/sec  </span>|<span class="hljs-string"> 874 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> NYC, NY, US (10G)         </span>|<span class="hljs-string"> 607 Mbits/sec   </span>|<span class="hljs-string"> 749 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> Dallas, TX, US (10G)      </span>|<span class="hljs-string"> 541 Mbits/sec   </span>|<span class="hljs-string"> 716 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> Los Angeles, CA, US (10G) </span>|<span class="hljs-string"> 694 Mbits/sec   </span>|<span class="hljs-string"> 734 Mbits/sec</span><br><span class="hljs-string"></span><br><span class="hljs-string">iperf3 Network Speed Tests (IPv6):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider        </span>|<span class="hljs-string"> Location (Link)           </span>|<span class="hljs-string"> Send Speed      </span>|<span class="hljs-string"> Recv Speed</span><br><span class="hljs-string">                </span>|<span class="hljs-string">                           </span>|<span class="hljs-string">                 </span>|<br>Clouvider       |<span class="hljs-string"> London, UK (10G)          </span>|<span class="hljs-string"> 929 Mbits/sec   </span>|<span class="hljs-string"> 1.06 Gbits/sec</span><br><span class="hljs-string">Online.net      </span>|<span class="hljs-string"> Paris, FR (10G)           </span>|<span class="hljs-string"> 741 Mbits/sec   </span>|<span class="hljs-string"> 699 Mbits/sec</span><br><span class="hljs-string">Hybula          </span>|<span class="hljs-string"> The Netherlands (40G)     </span>|<span class="hljs-string"> 673 Mbits/sec   </span>|<span class="hljs-string"> 683 Mbits/sec</span><br><span class="hljs-string">Uztelecom       </span>|<span class="hljs-string"> Tashkent, UZ (10G)        </span>|<span class="hljs-string"> 1.18 Gbits/sec  </span>|<span class="hljs-string"> 959 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> NYC, NY, US (10G)         </span>|<span class="hljs-string"> 705 Mbits/sec   </span>|<span class="hljs-string"> 783 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> Dallas, TX, US (10G)      </span>|<span class="hljs-string"> 694 Mbits/sec   </span>|<span class="hljs-string"> 856 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> Los Angeles, CA, US (10G) </span>|<span class="hljs-string"> 676 Mbits/sec   </span>|<span class="hljs-string"> 1.05 Gbits/sec</span><br><span class="hljs-string"></span><br><span class="hljs-string">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test            </span>|<span class="hljs-string"> Value</span><br><span class="hljs-string">                </span>|<br>Single Core     |<span class="hljs-string"> 695</span><br><span class="hljs-string">Multi Core      </span>|<span class="hljs-string"> 5607</span><br><span class="hljs-string">Full Test       </span>|<span class="hljs-string"> https://browser.geekbench.com/v5/cpu/17860694</span><br></code></pre></td></tr></table></figure><p>解锁结果：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">No</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">US</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Singapore</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Hong</span> <span class="hljs-string">Kong</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">SGD</span><br><span class="hljs-string">=======================================</span><br><br><br> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv6解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">Leaseweb</span> <span class="hljs-string">Asia</span> <span class="hljs-string">(2402:a7c0:8100:*:*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SG)</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">No</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-string">Unsupported</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">Failed</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-string">Failed</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Singapore</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Singapore</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">本次测试已结束，感谢使用此脚本</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给对象安排微信早安推送</title>
    <link href="/posts/21.html"/>
    <url>/posts/21.html</url>
    
    <content type="html"><![CDATA[<p>最近对象给我看了小红书上挺火的那个程序员做的早安公众号。试了下，碍于微信限制，只有服务号能发模板消息，如果用测试号，收到的消息很不显眼。本文实现了测试号和pushplus来发送早安推送。</p><span id="more"></span><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p>GitHub: <a class="btn" href="https://github.com/tech-fever/wechat_push"  title="点此打开项目" target="_blank">项目地址</a></p><p><a href="https://github.com/tech-fever/wechat_push" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/tech-fever/wechat_push</a></p><p>首先将项目下载到本地，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/tech-fever/wechat_push.git<br><span class="hljs-built_in">cd</span> wechat_push<br></code></pre></td></tr></table></figure><p>将 <code>config.json.example</code> 复制一份命名为 <code>config.json</code></p><p>如果你 测试号 和 pushplus 都需要，那就都填，如果有不需要的，就在 <code>config.json</code> 删除对应的部分。</p><h1 id="测试号-x2F-服务号"><a href="#测试号-x2F-服务号" class="headerlink" title="测试号&#x2F;服务号"></a>测试号&#x2F;服务号</h1><div class="note note-primary">            <p>个人公众号无法发送模板消息，只能48小时内回复，不能主动给用户发消息。服务号需要营业执照需要法人身份需要公章，还需要300块，所以直接放弃。</p>          </div><p>测试号获取：<a href="https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login" target="_blank" rel="noopener external nofollow noreferrer">https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login</a></p><p>先登录，找到app_id，app_secret，再添加模板，拿到模板id</p><a class="btn" href="https://raw.githubusercontent.com/tech-fever/wechat_push/main/template"  title="模板链接" target="_blank">点此打开模板</a><p>再让对象关注公众号，关注后在用户列表里获取对象微信号。</p><p>编辑 <code>config.json</code> 填入 <code>app_id app_secret template_id touser</code>。</p><h1 id="pushplus"><a href="#pushplus" class="headerlink" title="pushplus"></a>pushplus</h1><p>pushplus: <a class="btn" href="https://www.pushplus.plus/login.html"  title="pushplus" target="_blank">点此登录pushplus</a></p><p>登录后获取token，填入 <code>config.json</code> </p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>friends 下面支持添加多个收信息的朋友，<code>birthday</code> 和 <code>love_date</code> 可以留空，<code>to</code> 是pushplus好友token，可以留空， <code>touser</code> 是好友关注测试公众号后用户列表里的微信号，可以留空。</p><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>需要python3以上</p><p>Linux:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install python3<br></code></pre></td></tr></table></figure><p>Windows : <a class="btn" href="https://www.python.org/downloads/"  title="python3 官网" target="_blank">python3 下载</a></p><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 main.py<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>有趣的小项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机场推荐</title>
    <link href="/posts/33840.html"/>
    <url>/posts/33840.html</url>
    
    <content type="html"><![CDATA[<p>全年稳定高速解锁Netflix的机场很少，大部分都很贵。推荐一个我自用了挺久的高性价比机场。</p><p>注册GLaDOS(<a href="https://glados.rocks/register" target="_blank" rel="noopener external nofollow noreferrer">注册地址</a>), 并输入邀请码激活:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">SPV54-EMK9S-HUH77-QXWB0<br></code></pre></td></tr></table></figure><span id="more"></span><p class="note note-info">机场：简单理解就是全平台可用的梯子。</p><h1 id="测速结果"><a href="#测速结果" class="headerlink" title="测速结果"></a>测速结果</h1><p>Speedtest stair高峰期测速结果（多线程测速），我本地带宽在500Mbps：<br><img src="/posts/33840/speedtest-stair.png"></p><p>Youtube 高峰期（下午六点多）测速，能稳定在十万左右：<br><img src="/posts/33840/youtube.png"></p><h1 id="节点价格"><a href="#节点价格" class="headerlink" title="节点价格"></a>节点价格</h1><p>他家有三个套餐，写着限速但实际我使用并没发现限速。<br><img src="/posts/33840/price.png"></p><p>用 <code>PORTALGUN</code> 优惠码可以满100-20：<br><img src="/posts/33840/pricing.png"></p><p>用 <code>CYBERCAT</code> 优惠码可以<b><font color=red>满60减20</font></b></p><p>支持Paypal、Visa&#x2F;MasterCard信用卡和支付宝三种支付方式，其中Paypal和信用卡可以9折，7天内可退款（通过 PayPal 支付的需要支付每笔 5 美元手续费）。<br><img src="/posts/33840/payment.png"></p><p>也就是说200天套餐仅需 (119 - 20) * 0.9 &#x3D; 88 ，大概13一月。</p><p>但我说这个机场性价比极高的原因在于，他家可以<strong>无限签到</strong>，付费用户每次签到100%延长一天（免费用户好像不能无限延长）。</p><p>而签到呢，又是可以用脚本自动的。所以。。。一次付费，<del>理论上无限使用，只要机场不改变政策</del>。</p><p class="note note-light">自动签到脚本可留言获取</p><h1 id="注册流程"><a href="#注册流程" class="headerlink" title="注册流程"></a>注册流程</h1><ul><li>官网：<a href="https://glados.rocks/" target="_blank" rel="noopener external nofollow noreferrer">https://glados.rocks</a></li><li>注册：<a href="https://glados.rocks/register" target="_blank" rel="noopener external nofollow noreferrer">https://glados.rocks/register</a></li></ul><p>首先进入 <a href="https://glados.rocks/register" target="_blank" rel="noopener external nofollow noreferrer">GLaDOS 注册 </a>：<br><img src="/posts/33840/register.png"></p><p>输入自己的邮箱，点击send passcode to email，再进入邮箱查看收到的验证码，将验证码填入 Passcode 输入框。最后点击 <strong>Register</strong> 按钮：<br><img src="/posts/33840/CD-KEY.PNG"></p><p>在这里输入笔者的邀请码，点击Next，即可获得<strong>三天免费</strong>，</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">SPV54-EMK9S-HUH77-QXWB0<br></code></pre></td></tr></table></figure><p>之后就等待账号设置完成：<br><img src="/posts/33840/setup.png"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>机场不仅有工作日工作时间在线的客服，还有详尽的教程。照着使用就好啦。</p><h1 id="Netflix解锁"><a href="#Netflix解锁" class="headerlink" title="Netflix解锁"></a>Netflix解锁</h1><p>机场提供 Netflix 美国、台湾解锁节点，平均速度大于40MB&#x2F;s，看4k毫无压力。<br><img src="/posts/33840/netflix.png"></p>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>笔记：Django时区问题【非原创】</title>
    <link href="/posts/13647.html"/>
    <url>/posts/13647.html</url>
    
    <content type="html"><![CDATA[<p>Python的时区问题一直很烦，找到篇讲Django时区讲的很好的文章，存档一下。</p><p>《<a href="https://www.leavesongs.com/PYTHON/django-timezone-detail.html" target="_blank" rel="noopener external nofollow noreferrer">Django中与时区相关的安全问题</a>》</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Django</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【git实战入门】2. 小白的第一次提交</title>
    <link href="/posts/10342.html"/>
    <url>/posts/10342.html</url>
    
    <content type="html"><![CDATA[<p>上一篇教程已经将远程的repository clone到了本地并进行了配置，我们来进行第一次提交和修改。</p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要成功将修改提交到仓库，前提是要证明你对仓库有修改的权力，毕竟不是什么阿猫阿狗都能随便改的。</p><p>一般验证的方式有三种：<br>验证你是你（对你所有的仓库都可以进行修改）：</p><ul><li><a href="https://github.com/settings/tokens" target="_blank" rel="noopener external nofollow noreferrer">Personal access tokens</a></li><li><a href="https://github.com/settings/keys" target="_blank" rel="noopener external nofollow noreferrer">SSH keys</a></li><li>账号密码（已经弃用）</li></ul><p>验证你可以修改这个仓库（仅针对这一个仓库）</p><ul><li>Deploy keys</li></ul><p>本文先讲如何优雅地配置SSH keys</p><h1 id="通过SSH-keys连接到GitHub"><a href="#通过SSH-keys连接到GitHub" class="headerlink" title="通过SSH keys连接到GitHub"></a>通过SSH keys连接到GitHub</h1><p>官方文档：《<a href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh" target="_blank" rel="noopener external nofollow noreferrer">通过 SSH 连接到 GitHub</a>》</p><h2 id="检查SSH-keys"><a href="#检查SSH-keys" class="headerlink" title="检查SSH keys"></a>检查SSH keys</h2><p>打开终端或者 git bash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -al ~/.ssh<br></code></pre></td></tr></table></figure><p>检查有没有 id_dsa 和 id_dsa.pub 文件。免得之后将其覆盖。</p><p>如果有的话，你可以跳过下一步。</p><h2 id="生成密钥对"><a href="#生成密钥对" class="headerlink" title="生成密钥对"></a>生成密钥对</h2><p>打开终端输入以下命令（修改你的邮箱）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>会出现下面的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/c/Users/user/.ssh/id_rsa): 回车<br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): 回车<br></code></pre></td></tr></table></figure><p>这里你可以重新命名密钥名字，也可以用<code>id_rsa</code>默认的密钥名，所以直接回车两次就好。</p><p>然后如果输出下面内容，表示key创建成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Your identification has been saved <span class="hljs-keyword">in</span> /home/you/.ssh/id_rsa<br></code></pre></td></tr></table></figure><h2 id="添加ssh-agent"><a href="#添加ssh-agent" class="headerlink" title="添加ssh-agent"></a>添加ssh-agent</h2><p>Windows上，如果生成的是默认的id-rsa，那么无需执行此步。</p><p>首先我们要把密钥添加到后台的ssh-agent代理，让他帮我们在需要的时候完成授权任务，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(ssh-agent -s)</span>&quot;</span><br>ssh-add ~/.ssh/id_rsa<br></code></pre></td></tr></table></figure><h2 id="SSH公钥加入Github账号"><a href="#SSH公钥加入Github账号" class="headerlink" title="SSH公钥加入Github账号"></a>SSH公钥加入Github账号</h2><p>最后一步，我们需要把公钥信息加入到Github的SSH管理中，使用如入命令查看ssh公钥信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>复制公钥信息后，点此<a href="https://github.com/settings/ssh/new" target="_blank" rel="noopener external nofollow noreferrer">添加SSH密钥</a>：<br><img src="/posts/10342/pub-key.png"></p><p>粘贴公钥到此处即可。</p><p>随后测试下有没有授权成功，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>出现以下信息则算成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Hi 你的用户名! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure><h1 id="修改并提交"><a href="#修改并提交" class="headerlink" title="修改并提交"></a>修改并提交</h1><p>clone下来仓库，用 vscode 进行编辑 README 文件。</p><p>提交的方式太多了，VSCode可以就可以提交并push，GitHub Desktop也可以。但既然是教程，那还是先讲命令行方式。</p><div class="note note-info">            <p>vscode 有很多有意思的插件，比如说 Git Lens ，让你快速使用 git blame，也就是找到每一行代码最后编辑的人是谁。<br>GitHub desktop可以让你直观看到有哪些文件进行了修改，以前的commit记录，等等。</p>          </div><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><h3 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h3><p>所谓commit，就是我某个功能改完啦，暂时不需要改了。那么我先把这个修改提交到暂存区，也就是commit。</p><p>修改后，在项目目录下打开Git Bash，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -m [message]<br></code></pre></td></tr></table></figure><p>[message] 可以是一些备注信息。</p><p>那如果我改了三个文件，但只有两个想提交，第三个还妹改完咋整，可以提交暂存区的指定文件到仓库区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit [file1] [file2] ... -m [message]<br></code></pre></td></tr></table></figure><p>如果你没有设置 -m 选项，Git 会尝试为你打开一个编辑器以填写提交信息。 如果 Git 在你对它的配置中找不到相关信息，默认会打开 vim。屏幕会像这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Please enter the commit message for your changes. Lines starting</span><br><span class="hljs-comment"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span><br><span class="hljs-comment"># On branch master</span><br><span class="hljs-comment"># Changes to be committed:</span><br><span class="hljs-comment">#   (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># modified:   hello.php</span><br><span class="hljs-comment">#</span><br>~<br>~<br><span class="hljs-string">&quot;.git/COMMIT_EDITMSG&quot;</span> 9L, 257C<br></code></pre></td></tr></table></figure><p>这时就使用vim来编辑这里的提交信息就好了，先按i来编辑，编辑好后按esc，然后输入 :wq 按回车退出。</p><p>如果我的修改是新增文件，怎么办？需要先将文件加入git仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add 文件名<br></code></pre></td></tr></table></figure><p>你觉得 git add 提交缓存的流程太过繁琐，Git 也允许你用 -a 选项跳过这一步。命令格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -a<br></code></pre></td></tr></table></figure><p>比如说</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -am <span class="hljs-string">&#x27;小白的第一次提交，修改README文件&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><p>所谓push，就是把之前用commit保存下来的改变，推送到远程仓库。可以多次commit，然后一次push上去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push<br></code></pre></td></tr></table></figure><p>查看远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote --verbose<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>防止GitHub邮箱泄露</title>
    <link href="/posts/43272.html"/>
    <url>/posts/43272.html</url>
    
    <content type="html"><![CDATA[<p>公开仓库的git commit都是可以被查询到用户名和邮箱的，那要如何避免自己邮箱泄露。</p><span id="more"></span><p>当然，在我们进行提交的时候，我们完全可以用一个伪造的邮箱，但这样，当别人查看GitHub上的commit的时候，就不能方便地知道commit是我们提交的。这credit怎能给别人。</p><h1 id="配置匿名邮箱"><a href="#配置匿名邮箱" class="headerlink" title="配置匿名邮箱"></a>配置匿名邮箱</h1><p>首先进入<a href="https://github.com/settings/emails" target="_blank" rel="noopener external nofollow noreferrer">设置</a>，找到下面这项并勾选：</p><ul><li><input checked="" disabled="" type="checkbox"> Keep my email addresses private</li></ul><p>然后找到下面加粗的电子邮件地址，是一个七位数的 ID 号以及格式为 <code>ID+username@users.noreply.github.com</code> 格式的一串邮箱地址，这就是 GitHub 给你的匿名邮箱地址。</p><blockquote><p> 如果于 2017 年 7 月 18 日之前在 GitHub.com 上创建了帐户，则来自 GitHub 的 noreply 电子邮件地址是 <code>username@users.noreply.github.com</code></p></blockquote><p>根据<a href="https://docs.github.com/cn/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address" target="_blank" rel="noopener external nofollow noreferrer"> GitHub 官方文档</a></p><blockquote><p>如果想将个人电子邮件地址设为私密，则可以使用 GitHub 的 noreply 电子邮件地址作为提交电子邮件地址。 要将 noreply 电子邮件地址用于从命令行推送的提交，请在 Git 中设置提交电子邮件地址时使用该电子邮件地址。 要将 noreply 地址用于基于 Web 的 Git 操作，请在 GitHub 上设置提交电子邮件地址并选择“对我的电子邮件地址保密”。</p></blockquote><p>也就是说，在用命令行提交时，请使用下面命令来全局更改邮箱地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email <span class="hljs-string">&quot;ID+username@users.noreply.github.com&quot;</span><br></code></pre></td></tr></table></figure><p>确认一下是不是改成功了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email<br></code></pre></td></tr></table></figure><h1 id="查找过往有没有泄露过信息"><a href="#查找过往有没有泄露过信息" class="headerlink" title="查找过往有没有泄露过信息"></a>查找过往有没有泄露过信息</h1><p>查看一些过往公开信息：<br><code>https://api.github.com/users/用户名</code><br><code>https://api.github.com/users/用户名/events/public</code></p><p>使用Github提供的GraphQL来查询所有提交过的commits来查询用户邮箱：<br>参考：《<a href="https://juejin.cn/post/6951642072935825439" target="_blank" rel="noopener external nofollow noreferrer">怎么知道Github仓库所有者的联系方式</a>》</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【git实战入门】1. 本地配置git</title>
    <link href="/posts/5757.html"/>
    <url>/posts/5757.html</url>
    
    <content type="html"><![CDATA[<p>Git 是Linus用C语言写的分布式版本管理系统。本文简单讲了如何在windows上安装、配置git，从而进行第一次代码修改提交，并push到GitHub。</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Windows 10</li><li>GitHub 账号</li></ul><h1 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h1><h2 id="Linux上安装-Git"><a href="#Linux上安装-Git" class="headerlink" title="Linux上安装 Git"></a>Linux上安装 Git</h2><p>大部分比较新的Linux发行版本都可以用包管理器直接下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Ubuntu or Debian</span><br>sudo apt install git<br><span class="hljs-comment"># Red Hat or CentOS</span><br>sudo yum install git<br></code></pre></td></tr></table></figure><h2 id="Windows上安装Git"><a href="#Windows上安装Git" class="headerlink" title="Windows上安装Git"></a>Windows上安装Git</h2><p>点此👉<a href="https://git-scm.com/downloads" target="_blank" rel="noopener external nofollow noreferrer">Git官网下载</a></p><p>官网还可以下载 GitHub Desktop 这类挺好用的软件</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p><p>也可以在项目文件夹空白处点击右键，来快捷打开Git Bash<br><img src="/posts/5757/git-installed.png"></p><h1 id="GitHub-新建-repository"><a href="#GitHub-新建-repository" class="headerlink" title="GitHub 新建 repository"></a>GitHub 新建 repository</h1><p>登录 <a href="https://github.com/login" target="_blank" rel="noopener external nofollow noreferrer">GitHub</a>，输入账号密码，点此<a href="https://github.com/new" target="_blank" rel="noopener external nofollow noreferrer">新建repository</a>，需要输入下列信息：</p><ul><li>Repository name - 仓库名</li><li>Description     - 仓库简要描述（可选）</li><li>Public&#x2F;Private  - 公开或私有仓库</li><li>Add a README file - 是否要添加README文件</li></ul><p><img src="/posts/5757/new-repo.png"></p><p>因为是教程，建议大家选择Public，并勾选README</p><ul><li><input checked="" disabled="" type="checkbox"> Add a README file</li></ul><h2 id="更多（可以不看）"><a href="#更多（可以不看）" class="headerlink" title="更多（可以不看）"></a>更多（可以不看）</h2><h3 id="gitinore-文件"><a href="#gitinore-文件" class="headerlink" title=".gitinore 文件"></a>.gitinore 文件</h3><p>gitignore 就是 git ignore 的意思，当我们写代码的时候，有一些文件是你想添加进仓库，来进行版本管理的，但常常也有一些文件是<strong>没必要加入版本管理</strong>的，比如说，配置文件，比如说代码的编译文件，比如说运行python代码时生成的pyc文件，这些完全没必要加入仓库里。</p><p>.gitinore 就可以帮助我们，忽略这些文件，并且在我们使用命令 <code>git add .</code> （把当前文件夹下所有都加入git）的时候，自动忽略某些文件。</p><h3 id="License"><a href="#License" class="headerlink" title="License"></a>License</h3><p>开源证书，可以自己搜搜不同开源证书的区别和限制。</p><h1 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h1><p>对于公开仓库，可以直接方便：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/用户名/仓库名.git<br></code></pre></td></tr></table></figure><h1 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h1><p>最基础的配置是，告诉git你的名字和邮箱，这里对应的，你可以写入你GitHub的用户名和邮箱。</p><div class="note note-warning">            <p>如果你在公开的repository进行了任何提交，那么你对应设置的邮箱也将被公开。可以查看另一篇文章来使用 GitHub 匿名邮箱。</p>          </div><h2 id="设置用户名和电子邮件地址"><a href="#设置用户名和电子邮件地址" class="headerlink" title="设置用户名和电子邮件地址"></a>设置用户名和电子邮件地址</h2><h3 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h3><p>对于没有设置用户名和电子邮件地址的仓库，将会默认使用全局配置，所以如果是第一次配置，可以直接全局配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>如果仅需要对某个本地仓库的配置进行修改，那么就在该仓库目录下打开Git bash:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config user.email <span class="hljs-string">&quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>install chrome in windows server using powershell</title>
    <link href="/posts/64311.html"/>
    <url>/posts/64311.html</url>
    
    <content type="html"><![CDATA[<p>PowerShell 安装 chrome</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">$LocalTempDir = $env:TEMP; $ChromeInstaller = &quot;ChromeInstaller.exe&quot;; (new-object    System.<span class="hljs-built_in">Net</span>.WebClient).DownloadFile(&#x27;http://dl.google.com/chrome/install/<span class="hljs-number">375</span>.<span class="hljs-number">126</span>/chrome_installer.exe&#x27;, &quot;$LocalTempDir\$ChromeInstaller&quot;); &amp; &quot;$LocalTempDir\$ChromeInstaller&quot; /silent /install; $Process2Monitor =  &quot;ChromeInstaller&quot;; <span class="hljs-keyword">Do</span> &#123; $ProcessesFound = Get-Process | ?&#123;$Process2Monitor -contains $_.Name&#125; | Select-Object -ExpandProperty Name; <span class="hljs-keyword">If</span> ($ProcessesFound) &#123; &quot;Still running: $($ProcessesFound -join &#x27;, &#x27;)&quot; | Write-Host; <span class="hljs-built_in">Start</span>-Sleep -Seconds <span class="hljs-number">2</span> &#125; <span class="hljs-keyword">else</span> &#123; rm &quot;$LocalTempDir\$ChromeInstaller&quot; -ErrorAction SilentlyContinue -Verbose &#125; &#125; Until (!$ProcessesFound)<br></code></pre></td></tr></table></figure><p>PowerShell 安装 python3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmdlet">Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://community.chocolatey.org/install.ps1&#x27;))<br>choco install -y python3<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>nginx 反向代理 cloudflare 网站出现 502 报错</title>
    <link href="/posts/55676.html"/>
    <url>/posts/55676.html</url>
    
    <content type="html"><![CDATA[<p><strong>【非原创，学习笔记】</strong><br>反代一个网站，一直502</p><span id="more"></span><p>error_log 输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs log">SSL_do_handshake() failed (SSL: error:14094410:SSL routines:ssl3_read_bytes:sslv3 ale                                 rt handshake failure:SSL alert number 40) while SSL handshaking to upstream, <br></code></pre></td></tr></table></figure><p>解决办法：nginx反代时启动SNI以避免反代CF时出现问题。在反向代理块增加一行<code>proxy_ssl_server_name on;</code>即可解决问题。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx regex rules</title>
    <link href="/posts/6732.html"/>
    <url>/posts/6732.html</url>
    
    <content type="html"><![CDATA[<p>非原创，学习笔记。出处👉<a href="https://blog.csdn.net/weixin_44299027/article/details/107286956" target="_blank" rel="noopener external nofollow noreferrer">nginx location正则表达式写法</a></p><span id="more"></span><h1 id="常用规则"><a href="#常用规则" class="headerlink" title="常用规则"></a>常用规则</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">location</span>  <span class="hljs-string">=</span> <span class="hljs-string">/</span> &#123;<br>  <span class="hljs-comment"># 精确匹配 / ，主机名后面不能带任何字符串</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">A</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span>  <span class="hljs-string">/</span> &#123;<br>  <span class="hljs-comment"># 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求</span><br>  <span class="hljs-comment"># 但是正则和最长字符串会优先匹配</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">B</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">/documents/</span> &#123;<br>  <span class="hljs-comment"># 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索</span><br>  <span class="hljs-comment"># 只有后面的正则表达式没有匹配到时，这一条才会采用这一条</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">C</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">/documents/Abc</span> &#123;<br>  <span class="hljs-comment"># 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索</span><br>  <span class="hljs-comment"># 只有后面的正则表达式没有匹配到时，这一条才会采用这一条</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">CC</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">^~</span> <span class="hljs-string">/images/</span> &#123;<br>  <span class="hljs-comment"># 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">D</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">\.(gif|jpg|jpeg)$</span> &#123;<br>  <span class="hljs-comment"># 匹配所有以 gif,jpg或jpeg 结尾的请求</span><br>  <span class="hljs-comment"># 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">E</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">/images/</span> &#123;<br>  <span class="hljs-comment"># 字符匹配到 /images/，继续往下，会发现 ^~ 存在</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">F</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">/images/abc</span> &#123;<br>  <span class="hljs-comment"># 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在</span><br>  <span class="hljs-comment"># F与G的放置顺序是没有关系的</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">G</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">/images/abc/</span> &#123;<br>  <span class="hljs-comment"># 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用</span><br>    [ <span class="hljs-string">configuration</span> <span class="hljs-string">H</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">/js/.*/\.js</span><br></code></pre></td></tr></table></figure><ul><li>已&#x3D;开头表示精确匹配</li><li>如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。</li><li>^~ 开头表示uri以某个常规字符串开头，不是正则匹配</li><li>~ 开头表示区分大小写的正则匹配;</li><li>~* 开头表示不区分大小写的正则匹配</li><li>&#x2F; 通用匹配, 如果没有其它匹配,任何请求都会匹配到</li></ul><p>顺序和优先级：<br><code>( location = ) &gt; ( location 完整路径 ) &gt; ( location ^~ 路径 ) &gt; ( location ~,~* 正则顺序 ) &gt; ( location 部分起始路径 ) &gt; ( / ) </code></p><p>上面的匹配结果<br>按照上面的location写法，以下的匹配示例成立：</p><ul><li>&#x2F; -&gt; config A<br>精确完全匹配，即使&#x2F;index.html也匹配不了</li><li>&#x2F;downloads&#x2F;download.html -&gt; config B<br>匹配B以后，往下没有任何匹配，采用B</li><li>&#x2F;images&#x2F;1.gif -&gt; configuration D<br>匹配到F，往下匹配到D，停止往下</li><li>&#x2F;images&#x2F;abc&#x2F;def -&gt; config D<br>最长匹配到G，往下匹配D，停止往下<br>你可以看到 任何以&#x2F;images&#x2F;开头的都会匹配到D并停止，FG写在这里是没有任何意义的，H是永远轮不到的，这里只是为了说明匹配顺序</li><li>&#x2F;documents&#x2F;document.html -&gt; config C<br>匹配到C，往下没有任何匹配，采用C</li><li>&#x2F;documents&#x2F;1.jpg -&gt; configuration E<br>匹配到C，往下正则匹配到E</li><li>&#x2F;documents&#x2F;Abc.jpg -&gt; config CC<br>最长匹配到C，往下正则顺序匹配到CC，不会往下到E</li></ul><h1 id="实际使用建议"><a href="#实际使用建议" class="headerlink" title="实际使用建议"></a>实际使用建议</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">所以实际使用中，通常建议至少有三个匹配规则定义，如下：</span><br><span class="hljs-comment">#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，比如说官网。</span><br><span class="hljs-comment">#这里是直接转发给后端应用服务器了，也可以是一个静态首页</span><br><span class="hljs-comment"># 第一个必选规则</span><br><span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/</span> &#123;<br>    <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://localhost:8080/index</span><br>&#125;<br><span class="hljs-comment"># 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项</span><br><span class="hljs-comment"># 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用</span><br><span class="hljs-string">location</span> <span class="hljs-string">^~</span> <span class="hljs-string">/static/</span> &#123;<br>    <span class="hljs-string">root</span> <span class="hljs-string">/webroot/static/;</span><br>&#125;<br><span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">\.(gif|jpg|jpeg|png|css|js|ico)$</span> &#123;<br>    <span class="hljs-string">root</span> <span class="hljs-string">/webroot/res/;</span><br>&#125;<br><span class="hljs-comment">#第三个规则就是通用规则，用来转发动态请求到后端应用服务器</span><br><span class="hljs-comment">#非静态文件请求就默认是动态请求，自己根据实际把握</span><br><span class="hljs-comment">#毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了</span><br><span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>    <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://localhost:8080/</span><br></code></pre></td></tr></table></figure><h1 id="Flag标志位"><a href="#Flag标志位" class="headerlink" title="Flag标志位"></a>Flag标志位</h1><ul><li>last : 相当于Apache的[L]标记，表示完成rewrite</li><li>break : 停止执行当前虚拟主机的后续rewrite指令集</li><li>redirect : 返回302临时重定向，地址栏会显示跳转后的地址</li><li>permanent : 返回301永久重定向，地址栏会显示跳转后的地址</li></ul><p>因为301和302不能简单的只返回状态码，还必须有重定向的URL，这就是return指令无法返回301,302的原因了。这里 last 和 break 区别有点难以理解：</p><ol><li>last一般写在server和if中，而break一般使用在location中</li><li>last不终止重写后的url匹配，即新的url会再从server走一遍匹配流程，而break终止重写后的匹配</li><li>break和last都能组织继续执行后面的rewrite指令</li></ol><h1 id="If-判断指令"><a href="#If-判断指令" class="headerlink" title="If 判断指令"></a>If 判断指令</h1><p>语法为if(condition){…}，对给定的条件condition进行判断。如果为真，大括号内的rewrite指令将被执行，if条件(conditon)可以是如下任何内容：</p><ul><li>当表达式只是一个变量时，如果值为空或任何以0开头的字符串都会当做false</li><li>直接比较变量和内容时，使用&#x3D;或!&#x3D;</li><li><del>正则表达式匹配，</del>*不区分大小写的匹配，!~区分大小写的不匹配</li></ul><p>-f和!-f用来判断是否存在文件<br>-d和!-d用来判断是否存在目录<br>-e和!-e用来判断是否存在文件或目录<br>-x和!-x用来判断文件是否可执行</p><p>比如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">if</span> <span class="hljs-string">($http_user_agent</span> <span class="hljs-string">~</span> <span class="hljs-string">MSIE)</span> &#123;<br>    <span class="hljs-string">rewrite</span> <span class="hljs-string">^(.*)$</span> <span class="hljs-string">/msie/$1</span> <span class="hljs-string">break;</span><br>&#125; <span class="hljs-string">//如果UA包含&quot;MSIE&quot;，rewrite请求到/msid/目录下</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">($http_cookie</span> <span class="hljs-string">~*</span> <span class="hljs-string">&quot;id=([^;]+)(?:;|$)&quot;</span><span class="hljs-string">)</span> &#123;<br>    <span class="hljs-string">set</span> <span class="hljs-string">$id</span> <span class="hljs-string">$1;</span><br> &#125; <span class="hljs-string">//如果cookie匹配正则，设置变量$id等于正则引用部分</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">($request_method</span> <span class="hljs-string">=</span> <span class="hljs-string">POST)</span> &#123;<br>    <span class="hljs-string">return</span> <span class="hljs-number">405</span><span class="hljs-string">;</span><br>&#125; <span class="hljs-string">//如果提交方法为POST，则返回状态405（Method</span> <span class="hljs-string">not</span> <span class="hljs-string">allowed）。return不能返回301,302</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">($slow)</span> &#123;<br>    <span class="hljs-string">limit_rate</span> <span class="hljs-string">10k;</span><br>&#125; <span class="hljs-string">//限速，$slow可以通过</span> <span class="hljs-string">set</span> <span class="hljs-string">指令设置</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">(!-f</span> <span class="hljs-string">$request_filename)&#123;</span><br>    <span class="hljs-string">break;</span><br>    <span class="hljs-string">proxy_pass</span>  <span class="hljs-string">http://127.0.0.1;</span> <br><span class="hljs-string">&#125;</span> <span class="hljs-string">//如果请求的文件名不存在，则反向代理到localhost</span> <span class="hljs-string">。这里的break也是停止rewrite检查</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">($args</span> <span class="hljs-string">~</span> <span class="hljs-string">post=140)&#123;</span><br>    <span class="hljs-string">rewrite</span> <span class="hljs-string">^</span> <span class="hljs-string">http://example.com/</span> <span class="hljs-string">permanent;</span><br><span class="hljs-string">&#125;</span> <span class="hljs-string">//如果query</span> <span class="hljs-string">string中包含&quot;post=140&quot;，永久重定向到example.com</span><br> <br><span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">\.(gif|jpg|png|swf|flv)$</span> &#123;<br>    <span class="hljs-string">valid_referers</span> <span class="hljs-string">none</span> <span class="hljs-string">blocked</span> <span class="hljs-string">www.jefflei.com</span> <span class="hljs-string">www.leizhenfang.com;</span><br>    <span class="hljs-string">if</span> <span class="hljs-string">($invalid_referer)</span> &#123;<br>        <span class="hljs-string">return</span> <span class="hljs-number">404</span><span class="hljs-string">;</span><br>    &#125; <span class="hljs-string">//防盗链</span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h1><p>下面是可以用作if判断的全局变量</p><ul><li>$args ： #这个变量等于请求行中的参数，同$query_string</li><li>$content_length ： 请求头中的Content-length字段。</li><li>$content_type ： 请求头中的Content-Type字段。</li><li>$document_root ： 当前请求在root指令中指定的值。</li><li>$host ： 请求主机头字段，否则为服务器名称。</li><li>$http_user_agent ： 客户端agent信息</li><li>$http_cookie ： 客户端cookie信息</li><li>$limit_rate ： 这个变量可以限制连接速率。</li><li>$request_method ： 客户端请求的动作，通常为GET或POST。</li><li>$remote_addr ： 客户端的IP地址。</li><li>$remote_port ： 客户端的端口。</li><li>$remote_user ： 已经经过Auth Basic Module验证的用户名。</li><li>$request_filename ： 当前请求的文件路径，由root或alias指令与URI请求生成。</li><li>$scheme ： HTTP方法（如http，https）。</li><li>$server_protocol ： 请求使用的协议，通常是HTTP&#x2F;1.0或HTTP&#x2F;1.1。</li><li>$server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值。</li><li>$server_name ： 服务器名称。</li><li>$server_port ： 请求到达服务器的端口号。</li><li>$request_uri ： 包含请求参数的原始URI，不包含主机名，如：”&#x2F;foo&#x2F;bar.php?arg&#x3D;baz”。</li><li>$uri ： 不带请求参数的当前URI，$uri不包含主机名，如”&#x2F;foo&#x2F;bar.html”。</li><li>$document_uri ： 与$uri相同。</li></ul><h1 id="常用正则"><a href="#常用正则" class="headerlink" title="常用正则"></a>常用正则</h1><p>常用正则<br>. ： 匹配除换行符以外的任意字符<br>? ： 重复0次或1次</p><ul><li>： 重复1次或更多次</li></ul><ul><li>： 重复0次或更多次<br>\d ：匹配数字<br>^ ： 匹配字符串的开始<br>$ ： 匹配字符串的介绍<br>{n} ： 重复n次<br>{n,} ： 重复n次或更多次<br>[c] ： 匹配单个字符c<br>[a-z] ： 匹配a-z小写字母的任意一个</li></ul><p>小括号()之间匹配的内容，可以在后面通过$1来引用，$2表示的是前面第二个()里的内容。正则里面容易让人困惑的是\转义特殊字符。</p><h1 id="Rewrite规则"><a href="#Rewrite规则" class="headerlink" title="Rewrite规则"></a>Rewrite规则</h1><p>rewrite功能就是，使用nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url重写以及重定向。rewrite只能放在server{},location{},if{}中，并且只能对域名后边的除去传递的参数外的字符串起作用，例如 <a href="http://seanlook.com/a/we/index.php?id=1&amp;u=str" target="_blank" rel="noopener external nofollow noreferrer">http://seanlook.com/a/we/index.php?id=1&amp;u=str</a> 只对&#x2F;a&#x2F;we&#x2F;index.php重写。语法rewrite regex replacement [flag];</p><p>如果相对域名或参数字符串起作用，可以使用全局变量匹配，也可以使用proxy_pass反向代理。</p><p>表明看rewrite和location功能有点像，都能实现跳转，主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，可以proxy_pass到其他机器。很多情况下rewrite也会写在location里，它们的执行顺序是：</p><ol><li>执行server块的rewrite指令</li><li>执行location匹配</li><li>执行选定的location中的rewrite指令</li></ol><p>如果其中某步URI被重写，则重新循环执行1-3，直到找到真实存在的文件；循环超过10次，则返回500 Internal Server Error错误。</p><h1 id="Rewrite实例"><a href="#Rewrite实例" class="headerlink" title="Rewrite实例"></a>Rewrite实例</h1><p>以下先写两个例子，后续再补充</p><h2 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http</span> &#123;<br>    <span class="hljs-comment"># 定义image日志格式</span><br>    <span class="hljs-string">log_format</span> <span class="hljs-string">imagelog</span> <span class="hljs-string">&#x27;[$time_local] &#x27;</span> <span class="hljs-string">$image_file</span> <span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">$image_type</span> <span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">$body_bytes_sent</span> <span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">$status;</span><br>    <span class="hljs-comment"># 开启重写日志</span><br>    <span class="hljs-string">rewrite_log</span> <span class="hljs-string">on;</span><br> <br>    <span class="hljs-string">server</span> &#123;<br>        <span class="hljs-string">root</span> <span class="hljs-string">/home/www;</span><br> <br>        <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>                <span class="hljs-comment"># 重写规则信息</span><br>                <span class="hljs-string">error_log</span> <span class="hljs-string">logs/rewrite.log</span> <span class="hljs-string">notice;</span> <br>                <span class="hljs-comment"># 注意这里要用‘’单引号引起来，避免&#123;&#125;</span><br>                <span class="hljs-string">rewrite</span> <span class="hljs-string">&#x27;^/images/([a-z]&#123;2&#125;)/([a-z0-9]&#123;5&#125;)/(.*)\.(png|jpg|gif)$&#x27;</span> <span class="hljs-string">/data?file=$3.$4;</span><br>                <span class="hljs-comment"># 注意不能在上面这条规则后面加上“last”参数，否则下面的set指令不会执行</span><br>                <span class="hljs-string">set</span> <span class="hljs-string">$image_file</span> <span class="hljs-string">$3;</span><br>                <span class="hljs-string">set</span> <span class="hljs-string">$image_type</span> <span class="hljs-string">$4;</span><br>        &#125;<br> <br>        <span class="hljs-string">location</span> <span class="hljs-string">/data</span> &#123;<br>                <span class="hljs-comment"># 指定针对图片的日志格式，来分析图片类型和大小</span><br>                <span class="hljs-string">access_log</span> <span class="hljs-string">logs/images.log</span> <span class="hljs-string">mian;</span><br>                <span class="hljs-string">root</span> <span class="hljs-string">/data/images;</span><br>                <span class="hljs-comment"># 应用前面定义的变量。判断首先文件在不在，不在再判断目录在不在，如果还不在就跳转到最后一个url里</span><br>                <span class="hljs-string">try_files</span> <span class="hljs-string">/$arg_file</span> <span class="hljs-string">/image404.html;</span><br>        &#125;<br>        <span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/image404.html</span> &#123;<br>                <span class="hljs-comment"># 图片不存在返回特定的信息</span><br>                <span class="hljs-string">return</span> <span class="hljs-number">404</span> <span class="hljs-string">&quot;image not found\n&quot;</span><span class="hljs-string">;</span><br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>对形如&#x2F;images&#x2F;ef&#x2F;uh7b3&#x2F;test.png的请求，重写到&#x2F;data?file&#x3D;test.png，于是匹配到location &#x2F;data，先看&#x2F;data&#x2F;images&#x2F;test.png文件存不存在，如果存在则正常响应，如果不存在则重写tryfiles到新的image404 location，直接返回404状态码。</p><h2 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">rewrite</span> <span class="hljs-string">^/images/(.*)_(\d+)x(\d+)\.(png|jpg|gif)$</span> <span class="hljs-string">/resizer/$1.$4?width=$2&amp;height=$3?</span> <span class="hljs-string">last;</span><br></code></pre></td></tr></table></figure><p>对形如&#x2F;images&#x2F;bla_500x400.jpg的文件请求，重写到&#x2F;resizer&#x2F;bla.jpg?width&#x3D;500&amp;height&#x3D;400地址，并会继续尝试匹配location。</p><h1 id="项目实例"><a href="#项目实例" class="headerlink" title="项目实例"></a>项目实例</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <br><span class="hljs-comment">#user  nobody;</span><br><span class="hljs-string">worker_processes</span>  <span class="hljs-number">1</span><span class="hljs-string">;</span><br> <br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br> <br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br> <br> <br><span class="hljs-string">events</span> &#123;<br>    <span class="hljs-string">worker_connections</span>  <span class="hljs-number">1024</span><span class="hljs-string">;</span><br>&#125;<br> <br><span class="hljs-string">http</span> &#123;<br>    <span class="hljs-string">include</span>       <span class="hljs-string">mime.types;</span><br>    <span class="hljs-string">default_type</span>  <span class="hljs-string">application/octet-stream;</span><br> <br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br> <br>    <span class="hljs-string">sendfile</span>        <span class="hljs-string">on;</span><br>    <span class="hljs-comment">#tcp_nopush     on;</span><br> <br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    <span class="hljs-string">keepalive_timeout</span>  <span class="hljs-number">65</span><span class="hljs-string">;</span><br> <br>    <span class="hljs-comment">#gzip  on;</span><br> <br>    <span class="hljs-string">server</span> &#123;<br>        <span class="hljs-string">listen</span>       <span class="hljs-number">9000</span><span class="hljs-string">;</span><br>        <span class="hljs-string">server_name</span>  <span class="hljs-string">*.unisiot.com;</span><br> <br>        <span class="hljs-comment">#charset koi8-r;</span><br> <br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br><span class="hljs-string">ssi</span> <span class="hljs-string">on;</span><br><span class="hljs-string">ssi_silent_errors</span> <span class="hljs-string">on;</span><br><span class="hljs-string">ssi_types</span> <span class="hljs-string">text/shtml;</span><br><span class="hljs-string">expires</span> <span class="hljs-string">30d;</span><br><br><span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>   <br>   <span class="hljs-string">if</span> <span class="hljs-string">($host</span> <span class="hljs-string">~</span> <span class="hljs-string">(^\S*?(?=\.\S*)))</span>&#123;<br><span class="hljs-string">set</span> <span class="hljs-string">$dns</span> <span class="hljs-string">$1;</span><br>   &#125;<br>   <span class="hljs-string">alias</span> <span class="hljs-string">F:/upload_file_root/subsite/$dns;</span><br>   <span class="hljs-string">index</span> <span class="hljs-string">index.html;</span><br>   <br>   <span class="hljs-comment">#判断终端</span><br>    <span class="hljs-string">if</span> <span class="hljs-string">($http_user_agent</span> <span class="hljs-string">~*</span> <span class="hljs-string">&#x27;(Android|webOS|iPhone|iPod|BlackBerry|iPad)&#x27;</span><span class="hljs-string">)</span> &#123;<br>               <span class="hljs-string">set</span> <span class="hljs-string">$mobile_request</span> <span class="hljs-string">&#x27;1&#x27;</span><span class="hljs-string">;</span><br>               <span class="hljs-comment">#如果访问UA为移动终端类型则判断为mobile_request=1</span><br>            &#125;<br>            <span class="hljs-string">if</span> <span class="hljs-string">($http_cookie</span> <span class="hljs-string">~</span> <span class="hljs-string">&#x27;mobile_request=full&#x27;</span><span class="hljs-string">)</span> &#123;<br>               <span class="hljs-string">set</span> <span class="hljs-string">$mobile_request</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">;</span><br>            &#125;<br>            <span class="hljs-string">if</span> <span class="hljs-string">($mobile_request</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">)</span> &#123;<br>               <span class="hljs-comment">#proxy_pass http://139.196.188.213;</span><br>   <span class="hljs-comment">#判断mobile_request等于空则为PC终端</span><br>   <span class="hljs-string">root</span>   <span class="hljs-string">F:/upload_file_root/subsite/$dns/web;</span><br>            &#125;<br>        <br>            <span class="hljs-comment">#break; </span><br><br><span class="hljs-string">if</span> <span class="hljs-string">($uri</span> <span class="hljs-string">~*</span> <span class="hljs-string">&#x27;(lobby|bedroom|livingroom|lavatory|kitchen|videoroom)&#x27;</span><span class="hljs-string">)</span> &#123;<br><span class="hljs-string">root</span>   <span class="hljs-string">F:/upload_file_root/subsite/$dns;</span><br>&#125;<br>&#125;<br><br><span class="hljs-string">location</span> <span class="hljs-string">/commonHtml</span> &#123;<br>            <span class="hljs-string">alias</span>   <span class="hljs-string">F:/upload_file_root/common/;</span>     <br>        &#125; <br><br><span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">^/(BJUI|ckeditor4.8|common|images|js|nice-validator|www|static)/</span> &#123;<br>            <span class="hljs-string">root</span>   <span class="hljs-string">F:/upload_file_root/static;</span> <br>            <span class="hljs-string">autoindex</span> <span class="hljs-string">on;</span><br>            <span class="hljs-string">access_log</span>  <span class="hljs-string">off;</span><br>            <span class="hljs-string">expires</span>     <span class="hljs-string">30d;</span>          <br>        &#125;<br><br><span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">^/(upload)/</span> &#123;<br>            <span class="hljs-string">root</span>   <span class="hljs-string">F:/upload_file_root/;</span> <br>            <span class="hljs-string">autoindex</span> <span class="hljs-string">on;</span><br>            <span class="hljs-string">access_log</span>  <span class="hljs-string">off;</span><br>            <span class="hljs-string">expires</span>     <span class="hljs-string">30d;</span>          <br>        &#125;<br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-string">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  <span class="hljs-string">/50x.html;</span><br>        <span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/50x.html</span> &#123;<br>            <span class="hljs-string">root</span>   <span class="hljs-string">html;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>原文：<a href="https://blog.csdn.net/weixin_44299027/article/details/107286956" target="_blank" rel="noopener external nofollow noreferrer">【Nginx用法】nginx location正则表达式写法，详解Nginx location 匹配规则（很详细哦）</a></p><p>【参考资料】</p><p>1、nginx平台初探(100%)：<a href="http://tengine.taobao.org/book/chapter_02.html" target="_blank" rel="noopener external nofollow noreferrer">nginx平台初探(100%) — Nginx开发从入门到精通</a></p><p>2、Module ngx_http_rewrite_module：<a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener external nofollow noreferrer">Module ngx_http_rewrite_module</a></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>selenium 模拟点击hcaptcha和recaptcha验证码</title>
    <link href="/posts/13934.html"/>
    <url>/posts/13934.html</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.selenium.dev/" target="_blank" rel="noopener external nofollow noreferrer">selenium</a> 是一个调用浏览器进行自动化控制的包，支持Java Python CSharp Ruby JavaScript Kotlin。用它可以模拟点击、输入，进行人类的操作。本篇文章以python模拟点击验证码为例来说明selenium的使用。</p><blockquote><p>本文非原创，而是作者的学习笔记</p></blockquote><span id="more"></span><h1 id="hcaptcha"><a href="#hcaptcha" class="headerlink" title="hcaptcha"></a>hcaptcha</h1><p>HCaptcha 的 <a href="https://democaptcha.com/demo-form-eng/hcaptcha.html" target="_blank" rel="noopener external nofollow noreferrer">Demo 网站</a>如下，打开之后，我们可以看到如下的验证码入口页面：<br><a href="https://democaptcha.com/demo-form-eng/hcaptcha.html" target="_blank" rel="noopener external nofollow noreferrer">https://democaptcha.com/demo-form-eng/hcaptcha.html</a></p><p><img src="/posts/13934/hcaptcha_demo.png"></p><p>点击复选框时，验证码会先通过其风险分析引擎判断当前用户的风险，如果是低风险用户，便可以直接通过，反之，验证码会弹出对话框，让我们回答对话框中的问题。其实这个比 ReCaptcha 简单一些，它的验证码图片每次一定是 3x3 的，没有 4x4 的，而且点击一个图之后不会再出现一个新的小图让我们二次选择，所以其破解思路也相对简单一些。‘</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Python3WebSpider/HCaptchaResolver" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/Python3WebSpider/HCaptchaResolver</a> </p><h2 id="识别封装"><a href="#识别封装" class="headerlink" title="识别封装"></a>识别封装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.support.wait <span class="hljs-keyword">import</span> WebDriverWait<br><span class="hljs-keyword">from</span> selenium.webdriver.remote.webelement <span class="hljs-keyword">import</span> WebElement<br><span class="hljs-keyword">from</span> selenium.webdriver.common.action_chains <span class="hljs-keyword">import</span> ActionChains<br><span class="hljs-keyword">from</span> app.captcha_resolver <span class="hljs-keyword">import</span> CaptchaResolver<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, url</span>):<br>        self.browser = webdriver.Chrome()<br>        self.browser.get(url)<br>        self.wait = WebDriverWait(self.browser, <span class="hljs-number">10</span>)<br>        self.captcha_resolver = CaptchaResolver()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__del__</span>(<span class="hljs-params">self</span>):<br>        time.sleep(<span class="hljs-number">10</span>)<br>        self.browser.close()<br></code></pre></td></tr></table></figure><h2 id="iframe-切换支持"><a href="#iframe-切换支持" class="headerlink" title="iframe 切换支持"></a>iframe 切换支持</h2><p>这个验证码和 ReCaptcha 都是在 iframe 里面加载的，另外弹出的验证码图片又在另外一个 iframe 里面。所以需要切换 iframe</p><p><img src="/posts/13934/hcaptcha_entry_iframe.png"></p><p>分别能够支持切换到入口对应的 iframe 和验证码本身对应的 iframe:</p><p><img src="/posts/13934/hcaptcha_content_iframe.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_captcha_entry_iframe</span>(<span class="hljs-params">self</span>) -&gt; WebElement:<br>        self.browser.switch_to.default_content()<br>        captcha_entry_iframe = self.browser.find_element_by_css_selector(<br>            <span class="hljs-string">&#x27;.h-captcha &gt; iframe&#x27;</span>)<br>        <span class="hljs-keyword">return</span> captcha_entry_iframe<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">switch_to_captcha_entry_iframe</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-literal">None</span>:<br>        captcha_entry_iframe: WebElement = self.get_captcha_entry_iframe()<br>        self.browser.switch_to.frame(captcha_entry_iframe)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_captcha_content_iframe</span>(<span class="hljs-params">self</span>) -&gt; WebElement:<br>        self.browser.switch_to.default_content()<br>        captcha_content_iframe = self.browser.find_element_by_xpath(<br>            <span class="hljs-string">&#x27;//iframe[contains(@title, &quot;Main content&quot;)]&#x27;</span>)<br>        <span class="hljs-keyword">return</span> captcha_content_iframe<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">switch_to_captcha_content_iframe</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-literal">None</span>:<br>        captcha_content_iframe: WebElement = self.get_captcha_content_iframe()<br>        self.browser.switch_to.frame(captcha_content_iframe)<br><br></code></pre></td></tr></table></figure><h2 id="触发验证码"><a href="#触发验证码" class="headerlink" title="触发验证码"></a>触发验证码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">trigger_captcha</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-literal">None</span>:<br>        self.switch_to_captcha_entry_iframe()<br>        captcha_entry = self.wait.until(EC.presence_of_element_located(<br>            (By.CSS_SELECTOR, <span class="hljs-string">&#x27;#anchor #checkbox&#x27;</span>)))<br>        captcha_entry.click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        self.switch_to_captcha_content_iframe()<br>        captcha_element: WebElement = self.get_captcha_element()<br>        <span class="hljs-keyword">if</span> captcha_element.is_displayed:<br>            logger.debug(<span class="hljs-string">&#x27;trigged captcha successfully&#x27;</span>)<br></code></pre></td></tr></table></figure><p>首先调用 switch_to_captcha_entry_iframe 进行了 iframe 的切换，然后找到那个入口框对应的节点，然后点击一下。</p><p>点击完了之后我们再调用 switch_to_captcha_content_iframe 切换到验证码本身对应的 iframe 里面，查找验证码本身对应的节点是否加载出来了，如果加载出来了，那么就证明触发成功了。</p><p>怎么查找问题呢呢？用 Selenium 常规的节点搜索就好了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_captcha_target_text</span>(<span class="hljs-params">self</span>) -&gt; WebElement:<br>        captcha_target_name_element: WebElement = self.wait.until(EC.presence_of_element_located(<br>            (By.CSS_SELECTOR, <span class="hljs-string">&#x27;.prompt-text&#x27;</span>)))<br>        <span class="hljs-keyword">return</span> captcha_target_name_element.text<br></code></pre></td></tr></table></figure><p>通过调用这个方法，我们就能得到上图中完整的问题文本了。</p><h2 id="验证码识别"><a href="#验证码识别" class="headerlink" title="验证码识别"></a>验证码识别</h2><p>每张图片进行下载并转成 Base64 编码了，我们观察下它的 HTML 结构</p><p><img src="/posts/13934/image_html.png"></p><p>每个验证码其实都对应了一个 .task-image 的节点，然后里面有个 .image-wrapper 的节点，在里面有一个 .image 的节点，那图片怎么呈现的呢？这里它是设置了一个 style CSS 样式，通过 CSS 的 backgroud 来设置了验证码图片的地址。</p><p>所以，我们要想提取验证码图片也比较容易了，我们只需要找出 .image 节点的 style 属性的内容，然后提取其中的 url 就好了。</p><p>得到 URL 之后，转下 Base64 编码，利用 captcha_resolver 就可以对内容进行识别了。</p><p>所以代码可以写为如下内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">verify_captcha</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># get target text</span><br>        self.captcha_target_text = self.get_captcha_target_text()<br>        logger.debug(<br>            <span class="hljs-string">f&#x27;captcha_target_text <span class="hljs-subst">&#123;self.captcha_target_text&#125;</span>&#x27;</span><br>        )<br>        <span class="hljs-comment"># extract all images</span><br>        single_captcha_elements = self.wait.until(EC.visibility_of_all_elements_located(<br>            (By.CSS_SELECTOR, <span class="hljs-string">&#x27;.task-image .image-wrapper .image&#x27;</span>)))<br>        resized_single_captcha_base64_strings = []<br>        <span class="hljs-keyword">for</span> i, single_captcha_element <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(single_captcha_elements):<br>            single_captcha_element_style = single_captcha_element.get_attribute(<br>                <span class="hljs-string">&#x27;style&#x27;</span>)<br>            pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">&#x27;url\(&quot;(https.*?)&quot;\)&#x27;</span>)<br>            match_result = re.search(pattern, single_captcha_element_style)<br>            single_captcha_element_url = match_result.group(<br>                <span class="hljs-number">1</span>) <span class="hljs-keyword">if</span> match_result <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br>            logger.debug(<br>                <span class="hljs-string">f&#x27;single_captcha_element_url <span class="hljs-subst">&#123;single_captcha_element_url&#125;</span>&#x27;</span>)<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(CAPTCHA_SINGLE_IMAGE_FILE_PATH % (i,), <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                f.write(requests.get(single_captcha_element_url).content)<br>            resized_single_captcha_base64_string = resize_base64_image(<br>                CAPTCHA_SINGLE_IMAGE_FILE_PATH % (i,), (<span class="hljs-number">100</span>, <span class="hljs-number">100</span>))<br>            resized_single_captcha_base64_strings.append(<br>                resized_single_captcha_base64_string)<br><br>        logger.debug(<br>            <span class="hljs-string">f&#x27;length of single_captcha_element_urls <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(resized_single_captcha_base64_strings)&#125;</span>&#x27;</span>)<br></code></pre></td></tr></table></figure><p>用正则表达式提取出来了每张验证码图片的 url，提取出 url 之后，我们然后将其存入了 <code>resized_single_captcha_base64_strings</code> 列表里面。</p><p>这里的 Base64 编码我们单独定义了一个方法，传入了图片路径和调整大小，然后可以返回编码后的结果，定义如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> app.settings <span class="hljs-keyword">import</span> CAPTCHA_RESIZED_IMAGE_FILE_PATH<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">resize_base64_image</span>(<span class="hljs-params">filename, size</span>):<br>    width, height = size<br>    img = Image.<span class="hljs-built_in">open</span>(filename)<br>    new_img = img.resize((width, height))<br>    new_img.save(CAPTCHA_RESIZED_IMAGE_FILE_PATH)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(CAPTCHA_RESIZED_IMAGE_FILE_PATH, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        data = f.read()<br>        encoded_string = base64.b64encode(data)<br>        <span class="hljs-keyword">return</span> encoded_string.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="图像识别"><a href="#图像识别" class="headerlink" title="图像识别"></a>图像识别</h2><p>略</p><h2 id="模拟点击"><a href="#模拟点击" class="headerlink" title="模拟点击"></a>模拟点击</h2><p>得到 true false 列表了，我们只需要将结果是 true 的序号提取出来，然后对这些验证码小图点击就好了，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># click captchas</span><br>recognized_indices = [i <span class="hljs-keyword">for</span> i, x <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(recognized_results) <span class="hljs-keyword">if</span> x]<br>logger.debug(<span class="hljs-string">f&#x27;recognized_indices <span class="hljs-subst">&#123;recognized_indices&#125;</span>&#x27;</span>)<br>click_targets = self.wait.until(EC.visibility_of_all_elements_located(<br>    (By.CSS_SELECTOR, <span class="hljs-string">&#x27;.task-image&#x27;</span>)))<br><span class="hljs-keyword">for</span> recognized_index <span class="hljs-keyword">in</span> recognized_indices:<br>    click_target: WebElement = click_targets[recognized_index]<br>    click_target.click()<br>    time.sleep(random())<br></code></pre></td></tr></table></figure><p>这里我们用 for 循环将 true false 列表转成了一个列表，列表的每个元素代表 true 在列表中的位置，其实就是我们的点击目标了。</p><p>然后接着我们获取了所有的验证码小图对应的节点，然后依次调用 click 方法进行点击即可。</p><p>这样我们就可以实现验证码小图的逐个识别了。</p><h2 id="点击验证"><a href="#点击验证" class="headerlink" title="点击验证"></a>点击验证</h2><p>好，那么有了上面的逻辑，我们就能完成整个 HCaptcha 的识别和点选了。</p><p>最后，我们模拟点击验证按钮就好了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># after all captcha clicked</span><br>verify_button: WebElement = self.get_verify_button()<br><span class="hljs-keyword">if</span> verify_button.is_displayed:<br>    verify_button.click()<br>    time.sleep(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>而 verfiy_button 的提取也是用 Selenium 即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_verify_button</span>(<span class="hljs-params">self</span>) -&gt; WebElement:<br>    verify_button = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="hljs-string">&#x27;.button-submit&#x27;</span>)))<br>    <span class="hljs-keyword">return</span> verify_button<br></code></pre></td></tr></table></figure><h2 id="校验结果"><a href="#校验结果" class="headerlink" title="校验结果"></a>校验结果</h2><p>验证成功的标志就是出现一个绿色小对勾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_is_successful</span>(<span class="hljs-params">self</span>):<br>    self.switch_to_captcha_entry_iframe()<br>    anchor: WebElement = self.wait.until(EC.visibility_of_element_located((<br>        By.CSS_SELECTOR, <span class="hljs-string">&#x27;#anchor #checkbox&#x27;</span><br>    )))<br>    checked = anchor.get_attribute(<span class="hljs-string">&#x27;aria-checked&#x27;</span>)<br>    logger.debug(<span class="hljs-string">f&#x27;checked <span class="hljs-subst">&#123;checked&#125;</span>&#x27;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(checked) == <span class="hljs-string">&#x27;true&#x27;</span><br></code></pre></td></tr></table></figure><p>这里我们先切换了 iframe，然后检查了对应的 class 是否是符合期望的。</p><p>最后如果 get_is_successful 返回结果是 True，那就代表识别成功了，那就整个完成了。</p><p>如果返回结果是 False，我们可以进一步递归调用上述逻辑进行二次识别，直到识别成功即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># check if succeed</span><br>is_succeed = self.get_is_successful()<br><span class="hljs-keyword">if</span> is_succeed:<br>    logger.debug(<span class="hljs-string">&#x27;verifed successfully&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    self.verify_captcha()<br></code></pre></td></tr></table></figure><h1 id="ReCaptcha"><a href="#ReCaptcha" class="headerlink" title="ReCaptcha"></a>ReCaptcha</h1><p>待续</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>selenium</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
      <tag>selenium</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>selenium识别验证码是否通过</title>
    <link href="/posts/21451.html"/>
    <url>/posts/21451.html</url>
    
    <content type="html"><![CDATA[<p>其实就是识别验证码勾选框有没有打勾。</p><span id="more"></span><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>切换到验证码的iframe页anchor，获取元素recaptcha-anchor的属性aria-checked就可以了。<code>false</code> 和 <code>true</code> </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python3">import time<br>import requests<br>from selenium import webdriver<br><br>options = webdriver.ChromeOptions()<br>driver = webdriver.Chrome(&#x27;selenium/chromedriver.exe&#x27;, options=options)<br><br>driver.get(&quot;https://www.google.com/recaptcha/api2/demo&quot;)<br><br># 切换到勾选框<br>iframe = driver.find_element_by_css_selector(&#x27;iframe[src*=&quot;anchor&quot;]&#x27;)<br>driver.switch_to.frame(iframe)<br><br># 获取勾选框的打勾状态<br>for i in range(30):<br>    anchor = driver.find_element_by_id(&#x27;recaptcha-anchor&#x27;)<br>    is_checked = anchor.get_attribute(&quot;aria-checked&quot;)<br>    print(&#x27;当前识别状态：&#x27;, is_checked)<br>    time.sleep(3)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>selenium</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
      <tag>selenium</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx反代Scaleway s3对象储存媒体文件配置</title>
    <link href="/posts/52859.html"/>
    <url>/posts/52859.html</url>
    
    <content type="html"><![CDATA[<p>nginx反代Scaleway s3对象储存媒体文件的配置文件模板。</p><span id="more"></span><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://docs.joinmastodon.org/admin/optional/object-storage-proxy/" target="_blank" rel="noopener external nofollow noreferrer">Proxying object storage through nginx</a></li><li><a href="https://pullopen.github.io/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/2020/07/22/Move-mastodon-media-to-Scaleway.html" target="_blank" rel="noopener external nofollow noreferrer">如何将Mastodon媒体上传至Scaleway云储存</a></li></ul><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>例如 <code>s3.nl-ams.scw.cloud</code> 是你的 YOUR_S3_HOSTNAME：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">proxy_cache_path</span> <span class="hljs-string">/tmp/nginx_mstdn_media</span> <span class="hljs-string">levels=1:2</span> <span class="hljs-string">keys_zone=mastodon_media:100m</span> <span class="hljs-string">max_size=1g</span> <span class="hljs-string">inactive=24h;</span><br><br><span class="hljs-string">server</span> &#123;<br>  <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>  <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>  <span class="hljs-string">server_name</span> <span class="hljs-string">YOUR_BUCKET_NAME;</span><br>  <span class="hljs-string">root</span> <span class="hljs-string">/var/www/html;</span><br><br>  <span class="hljs-string">ssl_certificate</span> <span class="hljs-string">/etc/letsencrypt/live/YOUR_BUCKET_NAME/fullchain.pem;</span><br>  <span class="hljs-string">ssl_certificate_key</span> <span class="hljs-string">/etc/letsencrypt/live/YOUR_BUCKET_NAME/privkey.pem;</span><br><br>  <span class="hljs-string">keepalive_timeout</span> <span class="hljs-number">30</span><span class="hljs-string">;</span><br><br>  <span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/</span> &#123;<br>    <span class="hljs-string">index</span> <span class="hljs-string">index.html;</span><br>  &#125;<br><br>  <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>    <span class="hljs-string">try_files</span> <span class="hljs-string">$uri</span> <span class="hljs-string">@s3;</span><br>  &#125;<br><br>  <span class="hljs-string">set</span> <span class="hljs-string">$s3_backend</span> <span class="hljs-string">&#x27;https://YOUR_BUCKET_NAME.s3.nl-ams.scw.cloud&#x27;</span><span class="hljs-string">;</span><br><br>  <span class="hljs-string">location</span> <span class="hljs-string">@s3</span> &#123;<br>    <span class="hljs-string">limit_except</span> <span class="hljs-string">GET</span> &#123;<br>      <span class="hljs-string">deny</span> <span class="hljs-string">all;</span><br>    &#125;<br><br>    <span class="hljs-string">resolver</span> <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span> <span class="hljs-string">YOUR_BUCKET_NAME.s3.nl-ams.scw.cloud;</span><br>    <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Connection</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Authorization</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">Set-Cookie;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Methods&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-id-2;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-request-id;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-meta-server-side-encryption;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-server-side-encryption;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-bucket-region;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amzn-requestid;</span><br>    <span class="hljs-string">proxy_ignore_headers</span> <span class="hljs-string">Set-Cookie;</span><br>    <span class="hljs-string">proxy_pass</span> <span class="hljs-string">$s3_backend$uri;</span><br>    <span class="hljs-string">proxy_intercept_errors</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-string">proxy_cache</span> <span class="hljs-string">mastodon_media;</span><br>    <span class="hljs-string">proxy_cache_valid</span> <span class="hljs-number">200</span> <span class="hljs-string">48h;</span><br>    <span class="hljs-string">proxy_cache_use_stale</span> <span class="hljs-string">error</span> <span class="hljs-string">timeout</span> <span class="hljs-string">updating</span> <span class="hljs-string">http_500</span> <span class="hljs-string">http_502</span> <span class="hljs-string">http_503</span> <span class="hljs-string">http_504;</span><br>    <span class="hljs-string">proxy_cache_lock</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-string">expires</span> <span class="hljs-string">1y;</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Cache-Control</span> <span class="hljs-string">public;</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="hljs-string">&#x27;*&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">X-Cache-Status</span> <span class="hljs-string">$upstream_cache_status;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决Skipping acquire of configured file &#39;main/binary-i386/Packages&#39; as repository &#39;xxx&#39; doesn&#39;t support architecture &#39;i386&#39;</title>
    <link href="/posts/47269.html"/>
    <url>/posts/47269.html</url>
    
    <content type="html"><![CDATA[<p>在<a href="https://www.linuxcapable.com/how-to-install-upgrade-latest-nginx-mainline-stable-on-ubuntu-20-04/#gsc.tab=0" target="_blank" rel="noopener external nofollow noreferrer">安装1.22版nginx</a>的时候遇到了个问题。编辑 <code>/etc/apt/sources.list.d/nginx.list</code> 的时候加进去的库，在 <code>apt update</code> 的时候报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">N: Skipping acquire of configured file <span class="hljs-string">&#x27;nginx/binary-i386/Packages&#x27;</span> as repository <span class="hljs-string">&#x27;http://nginx.org/packages/ubuntu focal InRelease&#x27;</span> doesn<span class="hljs-string">&#x27;t support architecture &#x27;</span>i386<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><span id="more"></span><h1 id="解决办法1"><a href="#解决办法1" class="headerlink" title="解决办法1"></a>解决办法1</h1><p>首先找到的解决办法是在 <code>nginx.list</code> 指定arch为amd，也就是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb [arch=amd64] [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \</span><br><span class="hljs-string">http://nginx.org/packages/ubuntu `lsb_release -cs` nginx&quot;</span> \<br>    | sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/nginx.list<br></code></pre></td></tr></table></figure><p>但这样运行 <code>apt update</code> 依然会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">E: Malformed entry 1 <span class="hljs-keyword">in</span> list file /etc/apt/sources.list.d/nginx.list (URI parse)<br>E: The list of sources could not be <span class="hljs-built_in">read</span>.<br></code></pre></td></tr></table></figure><h1 id="根本解决办法"><a href="#根本解决办法" class="headerlink" title="根本解决办法"></a>根本解决办法</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://askubuntu.com/questions/741410/skipping-acquire-of-configured-file-main-binary-i386-packages-as-repository-x" target="_blank" rel="noopener external nofollow noreferrer">Skipping acquire of configured file ‘main&#x2F;binary-i386&#x2F;Packages’ as repository ‘xxx’ doesn’t support architecture ‘i386’</a></li><li><a href="https://blog.csdn.net/Leo_whj/article/details/111639223" target="_blank" rel="noopener external nofollow noreferrer">Ubuntu dpkg查看与修改architecture</a></li></ul><h2 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h2><p>先找到出问题的库，比如说 <code>repository &#39;xxx&#39; doesn&#39;t support architecture &#39;i386&#39;</code> ，那么我们就运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/apt/sources.list.d<br>grep -r xxx（出问题的库）  /etc/apt | grep -v amd64 <br><span class="hljs-comment"># 或者</span><br>grep xxx（出问题的库） * | grep -v amd64<br></code></pre></td></tr></table></figure><p>例如我这里可以用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/apt/sources.list.d<br>grep nginx * | grep -v amd64<br><span class="hljs-comment"># 或者</span><br>grep nginx * | grep -v amd64<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/apt/sources.list.d/nginx.list:deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu focal nginx<br></code></pre></td></tr></table></figure><p>那么我们就得到了.list文件名+路径 ： <code>/etc/apt/sources.list.d/nginx.list</code></p><p>这个就是出问题的。可以先试试在这个文件里面加上 <code>[arch=amd64]</code></p><p>例如我的例子，编辑 <code>/etc/apt/sources.list.d/nginx.list</code> 文件为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb [<span class="hljs-built_in">arch</span>=amd64] [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu focal nginx<br></code></pre></td></tr></table></figure><p>我这样失败了。因为这个语法会被判定为木马，那我们先取消这个解决办法，来找找根本原因</p><h2 id="根本原因"><a href="#根本原因" class="headerlink" title="根本原因"></a>根本原因</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看本机的架构内核</span><br>dpkg --print-architecture<br><span class="hljs-comment"># 查看多架构支持内核</span><br>dpkg --print-foreign-architectures<br></code></pre></td></tr></table></figure><p>第二条命令输出i386是让64位ubuntu运行32位程序，也就是多架构支持。也就是这个地方，导致了我们会出现这样的报错。</p><p>如果你不想要多架构支持，可以移除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg --remove-architecture i386<br></code></pre></td></tr></table></figure><p>之后再运行 <code>apt update</code> 即可。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>boring Bay clicker(linux 运行pyppeteer报错pyppeteer.errors.BrowserError Browser closed unexpectedly的解决办法)</title>
    <link href="/posts/20093.html"/>
    <url>/posts/20093.html</url>
    
    <content type="html"><![CDATA[<p>一个很无聊的项目~~ 使用 <code>pyppeteer</code> 模拟点击本博客的无聊湾链接，来刷点击量。</p><span id="more"></span><h1 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h1><p>仓库：<br><a href="https://github.com/tech-fever/boringBayClicker" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/tech-fever/boringBayClicker</a></p><h1 id="部署到VPS"><a href="#部署到VPS" class="headerlink" title="部署到VPS"></a>部署到VPS</h1><p>发现 <code>debian/ubuntu</code> 要运行的话缺少很多依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libcairo-gobject2 libxinerama1 libgtk2.0-0 libpangoft2-1.0-0 libthai0 libpixman-1-0 libxcb-render0 libharfbuzz0b libdatrie1 libgraphite2-3 libgbm1<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/tech-fever/boringBayClicker &amp;&amp; <span class="hljs-built_in">cd</span> boringBayClicker<br>pip install -r requirements.txt<br>python main<br></code></pre></td></tr></table></figure><h1 id="一些查看"><a href="#一些查看" class="headerlink" title="一些查看"></a>一些查看</h1><p>查看对应系统下的 <code>chromium</code> 安装路径和相关参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pyppeteer.launcher <span class="hljs-keyword">import</span> Launcher<br><span class="hljs-keyword">import</span> pyppeteer.chromium_downloader<br> <span class="hljs-string">&#x27; &#x27;</span>.join(Launcher().cmd)<br><span class="hljs-built_in">print</span>(pyppeteer.chromium_downloader.chromiumExecutable.get(<span class="hljs-string">&quot;linux&quot;</span>))<br><span class="hljs-built_in">print</span>(pyppeteer.chromium_downloader.chromiumExecutable.get(<span class="hljs-string">&quot;mac&quot;</span>))<br><span class="hljs-built_in">print</span>(pyppeteer.chromium_downloader.chromiumExecutable.get(<span class="hljs-string">&quot;win32&quot;</span>))<br><span class="hljs-built_in">print</span>(pyppeteer.chromium_downloader.chromiumExecutable.get(<span class="hljs-string">&quot;win64&quot;</span>))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>pyppeteer</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>pyppeteer</tag>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to Extract Azure API</title>
    <link href="/posts/37796.html"/>
    <url>/posts/37796.html</url>
    
    <content type="html"><![CDATA[<p>本文是如何提取Azure API从而使用API面板的教学。</p><span id="more"></span><h1 id="登录Azure"><a href="#登录Azure" class="headerlink" title="登录Azure"></a>登录Azure</h1><p>点此登录 -&gt; <a href="https://portal.azure.com/" target="_blank" rel="noopener external nofollow noreferrer">MicroSoft Azure</a></p><h1 id="登录-Azure-Cloud-Shell"><a href="#登录-Azure-Cloud-Shell" class="headerlink" title="登录 Azure Cloud Shell"></a>登录 Azure Cloud Shell</h1><p>进入主页后，如图，点击：<br><img src="/posts/37796/cli.jpg"></p><p>在网页下方找到Azure Cloud Shell再点击 <code>bash</code> :<br><img src="/posts/37796/bash.jpg"></p><p>如果是初次使用，需要先选择订阅，然后点击 <code>Create storage</code>:<br><img src="/posts/37796/createStorage.jpg"></p><p>需要耗费一些时间，请耐心等待几分钟。</p><p>之后你会看到这样的界面：<br><img src="/posts/37796/shell.jpg"></p><h1 id="生成API"><a href="#生成API" class="headerlink" title="生成API"></a>生成API</h1><p>输入下面命令并按回车即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">az ad sp create-for-rbac --role contributor --scopes /subscriptions/$(az account list --query [].<span class="hljs-built_in">id</span> -o tsv) <br></code></pre></td></tr></table></figure><p><img src="/posts/37796/cmd.jpg"></p><p>对于生成的信息，我们只复制大括号和大括号中间的内容。也就是类似下面的json格式信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>  <span class="hljs-string">&quot;appId&quot;</span>: <span class="hljs-string">&quot;e84cae80-c647-424d-8934-0de6da2ede0d&quot;</span>,<br>  <span class="hljs-string">&quot;displayName&quot;</span>: <span class="hljs-string">&quot;azcli&quot;</span>,<br>  <span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-string">&quot;DzXHi!EwGn2pp0Wbtbx5px3RYFsMYT9yZD&quot;</span>,<br>  <span class="hljs-string">&quot;tenant&quot;</span>: <span class="hljs-string">&quot;7e0a6485-5a39-4e2f-a12b-13e6c4a5b053&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>保存即可。</p><h1 id="导入azpanel"><a href="#导入azpanel" class="headerlink" title="导入azpanel"></a>导入azpanel</h1><p>以azpanel为例，导入：<br><img src="/posts/37796/azadd.jpg"></p><p>其余皆可留空，输入你的Azure登陆邮箱和刚刚得到的json信息（就是大括号那一坨）即可。<br><img src="/azadd2.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Azure</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Azure</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>azpanel: 免费开源的azure api面板</title>
    <link href="/posts/6184.html"/>
    <url>/posts/6184.html</url>
    
    <content type="html"><![CDATA[<div class="note note-danger">            <p>有被封号风险，慎用。</p>          </div><p>azpanel是一个免费开源的azure api面板。官方给的安装教程有用lnmp和bt面板的，这两种我都不太喜欢，所以写一下手动安装教程。</p><span id="more"></span><h1 id="项目信息"><a href="#项目信息" class="headerlink" title="项目信息"></a>项目信息</h1><ul><li>项目地址：<a href="https://github.com/azpanel/azpanel" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/azpanel/azpanel</a></li><li>演示站点：<a href="https://azpanel.net/" target="_blank" rel="noopener external nofollow noreferrer">https://azpanel.net</a></li><li>telegram 频道：<a href="https://t.me/azpanel" target="_blank" rel="noopener external nofollow noreferrer">https://t.me/azpanel</a></li><li>telegram 群聊：<a href="https://t.me/+w_DuAFGop4kzOGYx" target="_blank" rel="noopener external nofollow noreferrer">https://t.me/+w_DuAFGop4kzOGYx</a></li></ul><h1 id="官方安装教程"><a href="#官方安装教程" class="headerlink" title="官方安装教程"></a>官方安装教程</h1><ul><li><p>lnmp.org<br><a href="https://github.com/azpanel/azpanel/wiki/lnmp.org" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/azpanel/azpanel/wiki/lnmp.org</a></p></li><li><p>bt.cn<br><a href="https://github.com/azpanel/azpanel/wiki/bt.cn" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/azpanel/azpanel/wiki/bt.cn</a></p></li></ul><h1 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h1><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><p>理论上配置不要太低的Linux服务器都可以。我是在Ubuntu 20.04 LTS上安装的，本文命令也是基于此。</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>我们需要安装的东西有：<br>☑️ Nginx 1.17<br>☑️ MySQL 5.6 (或者mariadb)<br>☑️ PHP 7.2.5+</p><h2 id="安装PHP和nginx"><a href="#安装PHP和nginx" class="headerlink" title="安装PHP和nginx"></a>安装PHP和nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update &amp;&amp; apt upgrade -y<br>apt install php-fpm php-mysql php-curl php-xml nginx -y<br></code></pre></td></tr></table></figure><p>验证是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -v<br>nginx -v<br></code></pre></td></tr></table></figure><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>这里我是采用docker安装，其实直接安装也很方便啦。</p><h3 id="安装docker和docker-compose"><a href="#安装docker和docker-compose" class="headerlink" title="安装docker和docker-compose"></a>安装docker和docker-compose</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://get.docker.com | bash<br>apt install docker-compose<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker -v<br>docker-compose -v<br></code></pre></td></tr></table></figure><h3 id="docker-compose启动mysql"><a href="#docker-compose启动mysql" class="headerlink" title="docker-compose启动mysql"></a>docker-compose启动mysql</h3><p>先新建文件夹：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt/azpanel &amp;&amp; <span class="hljs-built_in">cd</span> /opt/azpanel<br>vim /opt/azpanel/docker-compose.yml<br><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3&quot;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">db:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:oracle</span> <span class="hljs-comment"># 这是针对arm的镜像，amd请更改</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:3306:3306</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./db/mysql:/var/lib/mysql</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">写你的root密码</span><br>      <span class="hljs-attr">MYSQL_DATABASE:</span> <span class="hljs-string">azpanel</span><br>      <span class="hljs-attr">MYSQL_USER:</span> <span class="hljs-string">azpanel</span><br>      <span class="hljs-attr">MYSQL_PASSWORD:</span> <span class="hljs-string">写你的数据库密码</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br></code></pre></td></tr></table></figure><p>再运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><h2 id="下载azpanel"><a href="#下载azpanel" class="headerlink" title="下载azpanel"></a>下载azpanel</h2><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /www/wwwroot/azpanel &amp;&amp; <span class="hljs-built_in">mkdir</span> /www/wwwlogs/ &amp;&amp; <span class="hljs-built_in">cd</span> /www/wwwroot/azpanel<br>git <span class="hljs-built_in">clone</span> https://github.com/azpanel/azpanel.git ./<br></code></pre></td></tr></table></figure><p>修改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /www/wwwroot/azpanel<br><span class="hljs-built_in">chmod</span> 755 -R *<br><span class="hljs-built_in">chown</span> -R www-data *<br><span class="hljs-comment"># www-data 是php-fpm和nginx的用户</span><br><span class="hljs-comment"># 可以用下面命令查看：</span><br><span class="hljs-built_in">cat</span> /etc/php/7.4/fpm/pool.d/www.conf | grep <span class="hljs-string">&quot;user = &quot;</span><br><span class="hljs-built_in">cat</span> /etc/nginx/nginx.conf | grep <span class="hljs-string">&quot;user&quot;</span><br></code></pre></td></tr></table></figure><h2 id="安装Composer"><a href="#安装Composer" class="headerlink" title="安装Composer"></a>安装Composer</h2><p>Composer 是PHP的一个依赖管理工具。 它能管理你的PHP项目所需要的所有依赖关系。 也就是说，Composer 会将你的PHP项目需要的所有代码库、依赖项从网上全部拉取下来，放到一起进行管理。</p><blockquote><p>参考：How to Install Composer: A Step-By-Step Guide and Best Practices</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /www/wwwroot/azpanel<br>php -r <span class="hljs-string">&quot;copy(&#x27;https://getcomposer.org/installer&#x27;, &#x27;composer-setup.php&#x27;);&quot;</span><br>php composer-setup.php <span class="hljs-comment"># 也可以全局安装：php composer-setup.php --install-dir=/usr/local/bin --filename=composer</span><br>php -r <span class="hljs-string">&quot;unlink(&#x27;composer-setup.php&#x27;);&quot;</span> <span class="hljs-comment"># 移除installer</span><br>php composer.phar <span class="hljs-comment"># 测试</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php composer.phar install<br></code></pre></td></tr></table></figure><p>安装成功的输出请看附录：<a href="#jump1">点击跳转</a><br><span id="jump2">继续安装</span></p><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>导入数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/azpanel/<br><span class="hljs-built_in">cp</span> /www/wwwroot/azpanel/database/*.sql /opt/azpanel/db/mysql/azpanel/<br>docker-compose down &amp;&amp; docker-compose up -d<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入容器</span><br>docker <span class="hljs-built_in">exec</span> -it azpanel_db_1 sh<br></code></pre></td></tr></table></figure><p>这里输入你的<strong>root</strong>密码，登入数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh-4.4<span class="hljs-comment"># mysql -uroot -p</span><br>Enter password: (输入你的root密码)<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection <span class="hljs-built_in">id</span> is 8<br>Server version: 8.0.29 MySQL Community Server - GPL<br><br>Copyright (c) 2000, 2022, Oracle and/or its affiliates.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> or <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>mysql&gt;<br></code></pre></td></tr></table></figure><p>数据库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql&gt; use azpanel;<br>Database changed<br>mysql&gt; <span class="hljs-built_in">source</span> /var/lib/mysql/azpanel/azure.sql;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; <span class="hljs-built_in">source</span> /var/lib/mysql/azpanel/config.sql;<br>Query OK, 12 rows affected (0.01 sec)<br>Records: 12  Duplicates: 0  Warnings: 0<br><br>mysql&gt; show tables;<br>+----------------------+<br>| Tables_in_azpanel    |<br>+----------------------+<br>| ann                  |<br>| azure                |<br>| azure_server         |<br>| azure_server_traffic |<br>| config               |<br>| login_log            |<br>| task                 |<br>| user                 |<br>| verify               |<br>+----------------------+<br>9 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.01 sec)<br><br>mysql&gt; \q<br>Bye<br>sh-4.4<span class="hljs-comment"># exit</span><br><span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>复制配置文件模板并编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /www/wwwroot/azpanel/<br><span class="hljs-built_in">cp</span> .example.env .<span class="hljs-built_in">env</span><br>vim .<span class="hljs-built_in">env</span><br></code></pre></td></tr></table></figure><p>如下修改</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">APP_DEBUG</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-section">[APP]</span><br><span class="hljs-attr">DEFAULT_TIMEZONE</span> = Asia/Shanghai<br><span class="hljs-attr">APP_NAME</span> = Azure<br><br><span class="hljs-section">[DATABASE]</span><br><span class="hljs-attr">TYPE</span> = mysql<br><span class="hljs-attr">HOSTNAME</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">DATABASE</span> = azpanel<br><span class="hljs-attr">USERNAME</span> = azpanel<br><span class="hljs-attr">PASSWORD</span> = 你的azpanel密码<br><span class="hljs-attr">HOSTPORT</span> = <span class="hljs-number">3306</span><br><span class="hljs-attr">CHARSET</span> = utf8<br><span class="hljs-attr">DEBUG</span> = <span class="hljs-literal">true</span><br><br><span class="hljs-section">[THEME]</span><br><span class="hljs-attr">CARD_WIDTH</span> = <span class="hljs-number">10</span><br><span class="hljs-attr">CARD_RIGHT_OFFSET</span> = <span class="hljs-number">1</span><br><br><span class="hljs-section">[LANG]</span><br><span class="hljs-attr">default_lang</span> = zh-cn<br></code></pre></td></tr></table></figure><h2 id="创建管理员"><a href="#创建管理员" class="headerlink" title="创建管理员"></a>创建管理员</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">php think createAdmin --email admin@azpanel.net --passwd 你的登陆密码<br><span class="hljs-comment"># 输出：</span><br><span class="hljs-comment"># An administrator account has been created.</span><br></code></pre></td></tr></table></figure><p>如果数据库配置错误，会这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[think\db\exception\PDOException]                                                      <br>SQLSTATE[HY000] [1045] Access denied <span class="hljs-keyword">for</span> user <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> (using password: NO)<br></code></pre></td></tr></table></figure><h2 id="导入更多数据库"><a href="#导入更多数据库" class="headerlink" title="导入更多数据库"></a>导入更多数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php think migrate:run<br></code></pre></td></tr></table></figure><h2 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">crontab -e<br></code></pre></td></tr></table></figure><p>然后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 0 * * * php /www/wwwroot/azpanel/think tools --action statisticsTraffic<br>0 * * * * php /www/wwwroot/azpanel/think autoRefreshAccount<br>0 * * * * php /www/wwwroot/azpanel/think closeTimeoutTask<br>0 * * * * php /www/wwwroot/azpanel/think trafficControlStop<br>*/5 * * * * php /www/wwwroot/azpanel/think trafficControlStart<br></code></pre></td></tr></table></figure><h2 id="编辑-nginx-配置"><a href="#编辑-nginx-配置" class="headerlink" title="编辑 nginx 配置"></a>编辑 nginx 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> /etc/nginx/sites-available/azpanel.conf<br><br>vim /etc/nginx/sites-available/azpanel.conf<br></code></pre></td></tr></table></figure><p>输入下面模板（把azpanel.net）改成你的域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs bash">server<br>    &#123;<br>        listen 80;<br>        server_name azpanel.net ;<br>        <span class="hljs-built_in">return</span> 301 https://$server_name<span class="hljs-variable">$request_uri</span>;<br>    &#125;<br><br>server<br>    &#123;<br>        listen 443 ssl http2;<br>        <span class="hljs-comment">#listen [::]:443 ssl http2;</span><br>        server_name azpanel.net ;<br>        index index.html index.htm index.php default.html default.htm default.php;<br>        root  /www/wwwroot/azpanel/public;<br><br>        ssl_certificate /etc/letsencrypt/live/azpanel.net/fullchain.pem;<br>        ssl_certificate_key /etc/letsencrypt/live/azpanel.net/privkey.pem;<br>        ssl_session_timeout 5m;<br>        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;<br>        ssl_prefer_server_ciphers on;<br>        ssl_ciphers <span class="hljs-string">&quot;TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5&quot;</span>;<br>        ssl_session_cache <span class="hljs-built_in">builtin</span>:1000 shared:SSL:10m;<br>        <span class="hljs-comment"># openssl dhparam -out /usr/local/nginx/conf/ssl/dhparam.pem 2048</span><br>        <span class="hljs-comment"># ssl_dhparam /usr/local/nginx/conf/ssl/dhparam.pem;</span><br><br>        include conf.d/azpanel/thinkphp.conf;<br>        <span class="hljs-comment">#error_page   404   /404.html;</span><br><br>        <span class="hljs-comment"># Deny access to PHP files in specific directory</span><br>        <span class="hljs-comment">#location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><br>        <span class="hljs-comment">#include enable-php.conf;</span><br>        location ~ \.php$ &#123;<br>          fastcgi_pass unix:/var/run/php/php-fpm.sock;<br>          include      conf.d/azpanel/php_fastcgi.conf;<br>        &#125;<br><br>        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$<br>        &#123;<br>            expires      30d;<br>        &#125;<br><br>        location ~ .*\.(js|css)?$<br>        &#123;<br>            expires      12h;<br>        &#125;<br><br>        location ~ /.well-known &#123;<br>            allow all;<br>        &#125;<br><br>        location ~ /\.<br>        &#123;<br>            deny all;<br>        &#125;<br><br>        access_log  /www/wwwlogs/azpanel.net.log;<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /etc/nginx/conf.d/azpanel/ &amp;&amp; vim /etc/nginx/conf.d/azpanel/thinkphp.conf<br></code></pre></td></tr></table></figure><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">location / &#123;<br>  <span class="hljs-keyword">if</span> (!-e <span class="hljs-variable">$request_filename</span>)&#123;<br>    rewrite ^(.*)$ /index.php?s=<span class="hljs-variable">$1</span> last; <span class="hljs-built_in">break</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/azpanel/php_fastcgi.conf<br></code></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs conf"># 404<br>try_files                     $fastcgi_script_name =404;<br><br># default fastcgi_params<br>include                       fastcgi_params;<br><br># fastcgi settings<br>fastcgi_index                 index.php;<br>fastcgi_buffers               8 16k;<br>fastcgi_buffer_size           32k;<br><br># fastcgi params<br>fastcgi_param DOCUMENT_ROOT   $realpath_root;<br>fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;<br></code></pre></td></tr></table></figure><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><p>先把你的域名进行dns解析到正确的ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install certbot python3-certbot-nginx -y<br>certbot certonly --nginx -d 你的域名<br></code></pre></td></tr></table></figure><h2 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /etc/nginx/sites-available/azpanel.conf /etc/nginx/sites-enabled/azpanel.conf<br>systemctl restart nginx<br></code></pre></td></tr></table></figure><h2 id="完成！"><a href="#完成！" class="headerlink" title="完成！"></a>完成！</h2><p><img src="/posts/6184/azpanel.jpg"></p><p><img src="/posts/6184/azpanel2.jpg"></p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="安装成功输出"><a href="#安装成功输出" class="headerlink" title="安装成功输出"></a><span id="jump1">安装成功输出</span></h2><p>看完可跳转到继续安装 -&gt; <a href="#jump2">点击跳转</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@ashburn:/www/wwwroot/azpanel<span class="hljs-comment"># php composer.phar install</span><br>Do not run Composer as root/super user! See https://getcomposer.org/root <span class="hljs-keyword">for</span> details<br>Continue as root/super user [<span class="hljs-built_in">yes</span>]? <span class="hljs-built_in">yes</span><br>No composer.lock file present. Updating dependencies to latest instead of installing from lock file. See https://getcomposer.org/install <span class="hljs-keyword">for</span> more information.<br>Loading composer repositories with package information<br>Updating dependencies<br>Lock file operations: 39 installs, 0 updates, 0 removals<br>  - Locking adbario/php-dot-notation (2.3.0)<br>  - Locking alibabacloud/client (1.5.31)<br>  - Locking clagiordano/weblibs-configmanager (v1.2.0)<br>  - Locking danielstjules/stringy (3.1.0)<br>  - Locking guzzlehttp/guzzle (6.5.8)<br>  - Locking guzzlehttp/promises (1.5.1)<br>  - Locking guzzlehttp/psr7 (1.9.0)<br>  - Locking league/flysystem (1.1.9)<br>  - Locking league/flysystem-cached-adapter (1.1.0)<br>  - Locking league/mime-type-detection (1.11.0)<br>  - Locking mtdowling/jmespath.php (2.6.1)<br>  - Locking nesbot/carbon (2.59.1)<br>  - Locking paragonie/constant_time_encoding (v2.6.3)<br>  - Locking paragonie/random_compat (v9.99.100)<br>  - Locking phpmailer/phpmailer (v6.6.3)<br>  - Locking phpseclib/phpseclib (3.0.14)<br>  - Locking psr/cache (1.0.1)<br>  - Locking psr/container (1.1.2)<br>  - Locking psr/http-message (1.0.1)<br>  - Locking psr/log (1.1.4)<br>  - Locking psr/simple-cache (1.0.1)<br>  - Locking ralouphie/getallheaders (3.0.3)<br>  - Locking symfony/deprecation-contracts (v2.5.2)<br>  - Locking symfony/polyfill-intl-idn (v1.26.0)<br>  - Locking symfony/polyfill-intl-normalizer (v1.26.0)<br>  - Locking symfony/polyfill-mbstring (v1.26.0)<br>  - Locking symfony/polyfill-php72 (v1.26.0)<br>  - Locking symfony/polyfill-php80 (v1.26.0)<br>  - Locking symfony/translation (v5.4.9)<br>  - Locking symfony/translation-contracts (v2.5.2)<br>  - Locking symfony/var-dumper (v4.4.42)<br>  - Locking topthink/framework (v6.0.13)<br>  - Locking topthink/think-captcha (v3.0.7)<br>  - Locking topthink/think-helper (v3.1.6)<br>  - Locking topthink/think-migration (v3.0.3)<br>  - Locking topthink/think-orm (v2.0.54)<br>  - Locking topthink/think-template (v2.0.8)<br>  - Locking topthink/think-trace (v1.4)<br>  - Locking topthink/think-view (v1.0.14)<br>Writing lock file<br>Installing dependencies from lock file (including require-dev)<br>Package operations: 39 installs, 0 updates, 0 removals<br>  - Downloading symfony/polyfill-mbstring (v1.26.0)<br>  - Downloading mtdowling/jmespath.php (2.6.1)<br>  - Downloading symfony/polyfill-php72 (v1.26.0)<br>  - Downloading symfony/polyfill-intl-normalizer (v1.26.0)<br>  - Downloading symfony/polyfill-intl-idn (v1.26.0)<br>  - Downloading ralouphie/getallheaders (3.0.3)<br>  - Downloading psr/http-message (1.0.1)<br>  - Downloading guzzlehttp/psr7 (1.9.0)<br>  - Downloading guzzlehttp/promises (1.5.1)<br>  - Downloading guzzlehttp/guzzle (6.5.8)<br>  - Downloading danielstjules/stringy (3.1.0)<br>  - Downloading clagiordano/weblibs-configmanager (v1.2.0)<br>  - Downloading adbario/php-dot-notation (2.3.0)<br>  - Downloading alibabacloud/client (1.5.31)<br>  - Downloading psr/cache (1.0.1)<br>  - Downloading league/mime-type-detection (1.11.0)<br>  - Downloading league/flysystem (1.1.9)<br>  - Downloading league/flysystem-cached-adapter (1.1.0)<br>  - Downloading symfony/translation-contracts (v2.5.2)<br>  - Downloading symfony/polyfill-php80 (v1.26.0)<br>  - Downloading symfony/deprecation-contracts (v2.5.2)<br>  - Downloading symfony/translation (v5.4.9)<br>  - Downloading nesbot/carbon (2.59.1)<br>  - Downloading phpmailer/phpmailer (v6.6.3)<br>  - Downloading paragonie/random_compat (v9.99.100)<br>  - Downloading paragonie/constant_time_encoding (v2.6.3)<br>  - Downloading phpseclib/phpseclib (3.0.14)<br>  - Downloading psr/container (1.1.2)<br>  - Downloading symfony/var-dumper (v4.4.42)<br>  - Downloading topthink/think-helper (v3.1.6)<br>  - Downloading psr/simple-cache (1.0.1)<br>  - Downloading psr/log (1.1.4)<br>  - Downloading topthink/think-orm (v2.0.54)<br>  - Downloading topthink/framework (v6.0.13)<br>  - Downloading topthink/think-captcha (v3.0.7)<br>  - Downloading topthink/think-migration (v3.0.3)<br>  - Downloading topthink/think-trace (v1.4)<br>  - Downloading topthink/think-template (v2.0.8)<br>  - Downloading topthink/think-view (v1.0.14)<br>  - Installing symfony/polyfill-mbstring (v1.26.0): Extracting archive<br>  - Installing mtdowling/jmespath.php (2.6.1): Extracting archive<br>  - Installing symfony/polyfill-php72 (v1.26.0): Extracting archive<br>  - Installing symfony/polyfill-intl-normalizer (v1.26.0): Extracting archive<br>  - Installing symfony/polyfill-intl-idn (v1.26.0): Extracting archive<br>  - Installing ralouphie/getallheaders (3.0.3): Extracting archive<br>  - Installing psr/http-message (1.0.1): Extracting archive<br>  - Installing guzzlehttp/psr7 (1.9.0): Extracting archive<br>  - Installing guzzlehttp/promises (1.5.1): Extracting archive<br>  - Installing guzzlehttp/guzzle (6.5.8): Extracting archive<br>  - Installing danielstjules/stringy (3.1.0): Extracting archive<br>  - Installing clagiordano/weblibs-configmanager (v1.2.0): Extracting archive<br>  - Installing adbario/php-dot-notation (2.3.0): Extracting archive<br>  - Installing alibabacloud/client (1.5.31): Extracting archive<br>  - Installing psr/cache (1.0.1): Extracting archive<br>  - Installing league/mime-type-detection (1.11.0): Extracting archive<br>  - Installing league/flysystem (1.1.9): Extracting archive<br>  - Installing league/flysystem-cached-adapter (1.1.0): Extracting archive<br>  - Installing symfony/translation-contracts (v2.5.2): Extracting archive<br>  - Installing symfony/polyfill-php80 (v1.26.0): Extracting archive<br>  - Installing symfony/deprecation-contracts (v2.5.2): Extracting archive<br>  - Installing symfony/translation (v5.4.9): Extracting archive<br>  - Installing nesbot/carbon (2.59.1): Extracting archive<br>  - Installing phpmailer/phpmailer (v6.6.3): Extracting archive<br>  - Installing paragonie/random_compat (v9.99.100): Extracting archive<br>  - Installing paragonie/constant_time_encoding (v2.6.3): Extracting archive<br>  - Installing phpseclib/phpseclib (3.0.14): Extracting archive<br>  - Installing psr/container (1.1.2): Extracting archive<br>  - Installing symfony/var-dumper (v4.4.42): Extracting archive<br>  - Installing topthink/think-helper (v3.1.6): Extracting archive<br>  - Installing psr/simple-cache (1.0.1): Extracting archive<br>  - Installing psr/log (1.1.4): Extracting archive<br>  - Installing topthink/think-orm (v2.0.54): Extracting archive<br>  - Installing topthink/framework (v6.0.13): Extracting archive<br>  - Installing topthink/think-captcha (v3.0.7): Extracting archive<br>  - Installing topthink/think-migration (v3.0.3): Extracting archive<br>  - Installing topthink/think-trace (v1.4): Extracting archive<br>  - Installing topthink/think-template (v2.0.8): Extracting archive<br>  - Installing topthink/think-view (v1.0.14): Extracting archive<br>27 package suggestions were added by new dependencies, use `composer suggest` to see details.<br>Generating <span class="hljs-built_in">autoload</span> files<br>&gt; @php think service:discover<br>Succeed!<br>&gt; @php think vendor:publish<br>File /www/wwwroot/azpanel/config/captcha.php exist!<br>File /www/wwwroot/azpanel/config/trace.php exist!<br>Succeed!<br>17 packages you are using are looking <span class="hljs-keyword">for</span> funding.<br>Use the `composer fund` <span class="hljs-built_in">command</span> to find out more!<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Azure</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Azure</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>v2board 免宝塔部署教程</title>
    <link href="/posts/17541.html"/>
    <url>/posts/17541.html</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ab671a48712902a98a0f2f20aeef4e4722ffa793ff7f0fcf89b3d9d176ffca78"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
      <tag>Notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>脚本生成仅允许cloudflare访问80 443端口的iptables规则</title>
    <link href="/posts/10938.html"/>
    <url>/posts/10938.html</url>
    
    <content type="html"><![CDATA[<p>Cloudflare是一家提供网站安全管理、性能优化等相关技术的跨国科技企业，Cloudflare可以帮助受保护站点抵御包括分布式拒绝服务攻击(DDoS, Distributed Denial of Service)在内的大多数网络攻击，确保该网站长期在线，阻止网络攻击、垃圾邮件等，同时提升网站的性能、访问速度以改善访客体验。Cloudflare提供用户免费使用，是防御DDos的最佳解决方案之一。</p><p>本文讲了如何用脚本设置防火墙 80 443 端口仅对Cloudflare CDN的IP开放。</p><blockquote><p>如果不懂iptables或者ip6tables的话最好别用，免得失联</p></blockquote><span id="more"></span><h1 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h1><ul><li>服务器。作者使用的是Ubuntu 20.04，关闭ufw</li><li>服务器已经配置iptables 【ip6tables可选】</li><li>实在失联了作者不负责</li><li>作者的服务器具有ipv4和ipv6，所以服务器已经配置iptables 和 ip6tables都是同步讲解，如果你只有其中一个，可以自行更改处理。</li></ul><ol><li><p>项目仓库地址<br><a href="https://github.com/tech-fever/cloudflare_ips_only_iptables" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/tech-fever/cloudflare_ips_only_iptables</a></p></li><li><p>原理<br>新建 iptables 链 CLOUDFLARE 并插入引用到 INPUT 的80 443 端口，对Cloudflare的ip采用的数据包控制方式是 RETURN，丢弃其他网络数据包。就是说如果Cloudflare的IP访问80 443，会先从CLOUDFLARE中匹配，匹配到以后就会返回INPUT链，所以需要之前INPUT链中就有对80 443端口的放行规则，如果之前没有，可以加入<code>iptables -A INPUT -p tcp -m multiport --dports http,https -j ACCEPT</code>，或者把所有的 <code>RETURN</code> 改成 <code>ACCEPT</code> 。如果非Cloudflare的IP访问80和443，在CLOUDFLARE中会匹配到最后两条规则，被记录并丢弃。</p></li><li><p>ip来源<br>脚本使用的所有ip来自Cloudflare官方给的api：</p></li></ol><ul><li><a href="https://www.cloudflare.com/ips-v4" target="_blank" rel="noopener external nofollow noreferrer">https://www.cloudflare.com/ips-v4</a></li><li><a href="https://www.cloudflare.com/ips-v6" target="_blank" rel="noopener external nofollow noreferrer">https://www.cloudflare.com/ips-v6</a></li></ul><ol start="4"><li>日志<br>日志文件保存在 <code>/var/log/messages</code> ，高版本默认没有这个文件，因为 <code>/etc/rsyslog.d/50-default.conf</code> 将其注释掉了，想看日志的话可以谷歌一下解决办法。<br>被DROP掉的连接会被记录，以下面两行开头：<br>对于ipv4： <code>IPTABLES_CLOUDFLARE_ONLY_BANNED: </code><br>对于ipv6： <code>IP6TABLES_CLOUDFLARE_ONLY_BANNED: </code></li></ol><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol><li>官方 <a href="https://developers.cloudflare.com/fundamentals/get-started/setup/allow-cloudflare-ip-addresses/" target="_blank" rel="noopener external nofollow noreferrer">Allow Cloudflare IP addresses</a></li><li>论坛帖子 《<a href="https://hostloc.com/thread-1007211-1-1.html" target="_blank" rel="noopener external nofollow noreferrer">小鸡iptables只允许cloudflareip</a>》</li></ol><h1 id="预处理【必须】"><a href="#预处理【必须】" class="headerlink" title="预处理【必须】"></a>预处理【必须】</h1><p>如果重启服务器，所有的规则都丢失了。所以要保存规则，使其持久化。安装iptables-persistent包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install iptables-persistent<br></code></pre></td></tr></table></figure><p>为了防止你改出问题，先保存当前的iptables规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#保存规则</span><br><span class="hljs-comment"># mkdir -p /etc/iptables/</span><br>iptables-save &gt; /etc/iptables/rules.v4<br>ip6tables-save &gt; /etc/iptables/rules.v6<br></code></pre></td></tr></table></figure><p>查看规则编号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># for ipv4</span><br>iptables -nvL --line-numbers<br><span class="hljs-comment"># for ipv6</span><br>ip6tables -nvL --line-numbers<br></code></pre></td></tr></table></figure><div class='note info'>在运行脚本之前先手动试试是否可行，如果出现问题可以随时reboot或强制断电重启，只要没有规则持久化（存入/etc/iptables/rules.v4 和 rules.v6 ），重启就会返回之前状态。</div><h1 id="iptables新建链【必须】"><a href="#iptables新建链【必须】" class="headerlink" title="iptables新建链【必须】"></a>iptables新建链【必须】</h1><p><font color='red'>只有ipv4的话直接跳到后面两节（不过这里有命令的详细解释）</font></p><p>创建一个链，命名为 CLOUDFLARE</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -N CLOUDFLARE<br>ip6tables -N CLOUDFLARE<br></code></pre></td></tr></table></figure><p>让INPUT引用（<strong>下面两种选一种</strong>）<br>插入引用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 适合于已经有其他iptables规则，默认让CLOUDFLARE插入到第一行，优先其他规则生效</span><br>iptables  -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>ip6tables -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br></code></pre></td></tr></table></figure><p>附加引用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># CLOUDFLARE，附加到最后一条，优先级最低</span><br>iptables  -A INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>ip6tables -A INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br></code></pre></td></tr></table></figure><h1 id="命令行添加IP"><a href="#命令行添加IP" class="headerlink" title="命令行添加IP"></a>命令行添加IP</h1><p>然后把CF的IP加进链里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        iptables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span><br>        ip6tables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>不允许其他</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 记录并丢弃网络数据包</span><br>iptables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br>ip6tables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IP6TABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br><br>iptables -A CLOUDFLARE -j DROP<br>ip6tables -A CLOUDFLARE -j DROP<br></code></pre></td></tr></table></figure><h1 id="如果你只有ipv4"><a href="#如果你只有ipv4" class="headerlink" title="如果你只有ipv4"></a>如果你只有ipv4</h1><p>如果你只有ipv4但上面的你看不懂不会改，可以直接执行这里。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -N CLOUDFLARE<br>iptables  -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        iptables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br>iptables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br>iptables -A CLOUDFLARE -j DROP<br></code></pre></td></tr></table></figure><p>iptables持久化一定要做，不然重启就没了<br>比如ubuntu可以安装iptables-persistent，规则保存在(默认)&#x2F;etc&#x2F;iptables&#x2F;rules.v4<br>centos不知道，好像自带吧，执行service iptables save</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install iptables-persistent<br>iptables-save &gt; /etc/iptables/rules.v4<br></code></pre></td></tr></table></figure><h1 id="脚本时间"><a href="#脚本时间" class="headerlink" title="脚本时间"></a>脚本时间</h1><h2 id="创建规则脚本"><a href="#创建规则脚本" class="headerlink" title="创建规则脚本"></a>创建规则脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># !/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Configure your iptables to allow IPs from Cloudflare only.</span><br><span class="hljs-comment"># For users whose HTTP server is directly exposed to the host 80/443.</span><br><br>iptables -N CLOUDFLARE<br>ip6tables -N CLOUDFLARE<br><br><span class="hljs-comment"># 可以换成 -A</span><br>iptables  -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>ip6tables -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        iptables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span><br>        ip6tables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br>iptables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br>ip6tables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IP6TABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br><br>iptables -A CLOUDFLARE -j DROP<br>ip6tables -A CLOUDFLARE -j DROP<br></code></pre></td></tr></table></figure><h2 id="更新脚本"><a href="#更新脚本" class="headerlink" title="更新脚本"></a>更新脚本</h2><p>这里带ipv4和ipv6：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment">#先删掉&quot;不允许所有&quot;，避免在下面命令执行期间GG</span><br>iptables -D CLOUDFLARE -j DROP<br>ip6tables -D CLOUDFLARE -j DROP<br><br><span class="hljs-comment">#清除规则(旧的CF IP)</span><br>iptables -F CLOUDFLARE<br>ip6tables -F CLOUDFLARE<br><span class="hljs-comment">#添加CF IP，下面可以对curl的结果做一次判断，可以避免网络问题可能出现的问题，自己写</span><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        iptables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span><br>        ip6tables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># 自己判断是否要保存，个人觉得可以手动执行脚本，之后看要不要保存</span><br><span class="hljs-comment">#mkdir -p /etc/iptables/</span><br><span class="hljs-comment"># iptables-save &gt; /etc/iptables/rules.v4</span><br><span class="hljs-comment"># ip6tables-save &gt; /etc/iptables/rules.v6</span><br><br><span class="hljs-comment"># 记录并禁用其他IP</span><br>iptables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br>ip6tables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IP6TABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br><br>iptables -A CLOUDFLARE -j DROP<br>ip6tables -A CLOUDFLARE -j DROP<br></code></pre></td></tr></table></figure><h2 id="清除规则脚本【包售后】"><a href="#清除规则脚本【包售后】" class="headerlink" title="清除规则脚本【包售后】"></a>清除规则脚本【包售后】</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables  -F CLOUDFLARE<br>ip6tables -F CLOUDFLARE<br>iptables  -D INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>ip6tables -D INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>iptables  -X CLOUDFLARE<br>ip6tables -X CLOUDFLARE<br><span class="hljs-comment"># 删除保存的规则并存入最新的（自己判断要不要去掉注释）</span><br><span class="hljs-comment">#&gt; /etc/iptables/rules.v4</span><br><span class="hljs-comment">#&gt; /etc/iptables/rules.v6</span><br><span class="hljs-comment"># iptables-save &gt; /etc/iptables/rules.v4</span><br><span class="hljs-comment"># ip6tables-save &gt; /etc/iptables/rules.v6</span><br></code></pre></td></tr></table></figure><h1 id="测试【重要】"><a href="#测试【重要】" class="headerlink" title="测试【重要】"></a>测试【重要】</h1><p>先看看网页能不能用域名正常访问。<br>使用下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -k -v 你的IP<br></code></pre></td></tr></table></figure><p>出现类似下面报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@host2:~<span class="hljs-comment"># curl -k -v `curl -4 ip.sb`</span><br>*   Trying 你的IP:80...<br>* connect to 你的IP port 80 failed: Connection timed out<br>* Failed to connect to 你的IP port 80: Connection timed out<br>* Closing connection 0<br>curl: (28) Failed to connect to 你的IP port 80: Connection timed out<br></code></pre></td></tr></table></figure><p>说明成功！</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#保存规则</span><br><span class="hljs-comment"># mkdir -p /etc/iptables/</span><br>iptables-save &gt; /etc/iptables/rules.v4<br>ip6tables-save &gt; /etc/iptables/rules.v6<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#引用规则</span><br>iptables-restore &lt; /etc/iptables/rules.v4<br>ip6tables-restore &lt; /etc/iptables/rules.v6<br></code></pre></td></tr></table></figure><h2 id="iptables和ip6tables仅开放22-80-443-端口和ping"><a href="#iptables和ip6tables仅开放22-80-443-端口和ping" class="headerlink" title="iptables和ip6tables仅开放22 80 443 端口和ping"></a>iptables和ip6tables仅开放22 80 443 端口和ping</h2><p>前提是安装iptables-persistent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install -y iptables-persistent<br></code></pre></td></tr></table></figure><div class='note info'>直接修改/etc/iptables/rules.v4 v6 文件的时候如果不保留别的规则，会导致别的规则丢失！比如docker的和ufw的和fail2ban的。有时候可以通过重启解决。</div><h3 id="iptables白名单-22-80-443-端口和允许ping"><a href="#iptables白名单-22-80-443-端口和允许ping" class="headerlink" title="iptables白名单 22 80 443 端口和允许ping"></a>iptables白名单 22 80 443 端口和允许ping</h3><p>编辑<code>/etc/iptables/rules.v4</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">*filter<br><br><span class="hljs-comment">#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn&#x27;t use lo0</span><br>-A INPUT -i lo -j ACCEPT<br>-A INPUT ! -i lo -d 127.0.0.0/8 -j REJECT<br><br><span class="hljs-comment">#  Accept all established inbound connections</span><br>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT<br><br><span class="hljs-comment">#  Allow all outbound traffic - you can modify this to only allow certain traffic</span><br>-A OUTPUT -j ACCEPT<br><br><span class="hljs-comment">#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).</span><br>-A INPUT -p tcp --dport 80 -j ACCEPT<br>-A INPUT -p tcp --dport 443 -j ACCEPT<br><br><span class="hljs-comment">#  Allow SSH connections</span><br><span class="hljs-comment">#  The -dport number should be the same port number you set in sshd_config</span><br>-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT<br><br><span class="hljs-comment">#  Allow ping</span><br>-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT<br><br><span class="hljs-comment">#  Log iptables denied calls</span><br>-A INPUT -m <span class="hljs-built_in">limit</span> --<span class="hljs-built_in">limit</span> 5/min -j LOG --log-prefix <span class="hljs-string">&quot;iptables denied: &quot;</span> --log-level 7<br><br><span class="hljs-comment">#  Reject all other inbound - default deny unless explicitly allowed policy</span><br>-A INPUT -j REJECT<br>-A FORWARD -j REJECT<br><br>COMMIT<br></code></pre></td></tr></table></figure><p>持久化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables-restore &lt; /etc/iptables/rules.v4<br></code></pre></td></tr></table></figure><h3 id="ip6tables白名单-22-80-443-端口和允许ping"><a href="#ip6tables白名单-22-80-443-端口和允许ping" class="headerlink" title="ip6tables白名单 22 80 443 端口和允许ping"></a>ip6tables白名单 22 80 443 端口和允许ping</h3><p>编辑<code>/etc/iptables/rules.v6</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">*filter<br><br><span class="hljs-comment">#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn&#x27;t use lo0</span><br>-A INPUT -i lo -j ACCEPT<br>-A INPUT ! -i lo -d ::1/128 -j REJECT<br><br><span class="hljs-comment">#  Accept all established inbound connections</span><br>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT<br><br><span class="hljs-comment">#  Allow all outbound traffic - you can modify this to only allow certain traffic</span><br>-A OUTPUT -j ACCEPT<br><br><span class="hljs-comment">#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).</span><br>-A INPUT -p tcp --dport 80 -j ACCEPT<br>-A INPUT -p tcp --dport 443 -j ACCEPT<br><br><span class="hljs-comment">#  Allow SSH connections</span><br><span class="hljs-comment">#  The -dport number should be the same port number you set in sshd_config</span><br>-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT<br><br><span class="hljs-comment">#  Allow ping</span><br>-A INPUT -p icmpv6 -j ACCEPT<br><br><span class="hljs-comment">#  Log iptables denied calls</span><br>-A INPUT -m <span class="hljs-built_in">limit</span> --<span class="hljs-built_in">limit</span> 5/min -j LOG --log-prefix <span class="hljs-string">&quot;iptables denied: &quot;</span> --log-level 7<br><br><span class="hljs-comment">#  Reject all other inbound - default deny unless explicitly allowed policy</span><br>-A INPUT -j REJECT<br>-A FORWARD -j REJECT<br><br>COMMIT<br></code></pre></td></tr></table></figure><p>持久化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip6tables-restore &lt; /etc/iptables/rules.v6<br></code></pre></td></tr></table></figure><h2 id="其他运维规则脚本"><a href="#其他运维规则脚本" class="headerlink" title="其他运维规则脚本"></a>其他运维规则脚本</h2><blockquote><p><a href="https://hostloc.com/forum.php?mod=viewthread&tid=1007102&highlight=%E8%A7%84%E5%88%99" target="_blank" rel="noopener external nofollow noreferrer">仅允许cloudflare ip访问nginx的规则的生成脚本</a><br><a href="https://pawswrite.xyz/2022/06/15/Restoring-original-visitor-IPs-From-CLoudFlare/">使用脚本编写Nginx规则恢复CloudFlare原始访问者 IP</a></p></blockquote><p>其他参考（还没看，做个记录）：<br><a href="https://github.com/drvy/ufw-cloudflare" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/drvy/ufw-cloudflare</a><br><a href="https://github.com/kingcc/cloudflare-ips-only" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/kingcc/cloudflare-ips-only</a></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Linux</category>
      
      <category>防火墙</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker部署的长毛象站点服务器迁移</title>
    <link href="/posts/4479.html"/>
    <url>/posts/4479.html</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="2970b943ea68b9402b59ae7242409c8698a54f7fe9d34bb7994f198e7b26bb93"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>长毛象</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>长毛象</tag>
      
      <tag>Notes</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用脚本编写Nginx规则恢复CloudFlare原始访问者 IP</title>
    <link href="/posts/32160.html"/>
    <url>/posts/32160.html</url>
    
    <content type="html"><![CDATA[<p>CloudFlare 是非常好用的免费 CDN，但是来自 CDN 的请求显示的访问者 IP 将是CDN的 IP ，而不是真实访问者的。Cloudflare 将原始访问者 IP 地址包含在 <a href="https://support.cloudflare.com/hc/en-us/articles/200170986-How-does-Cloudflare-handle-HTTP-Request-headers-" target="_blank" rel="noopener external nofollow noreferrer">X-Forwarded-For 和 CF-Connecting-IP</a> 标头中。我们可以通过Nginx来恢复原始访问者的 IP。</p><span id="more"></span><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>官方文章：</p><blockquote><p><a href="shttps://support.cloudflare.com/hc/articles/200170916">Restoring original visitor IP</a><br><a href="https://www.cloudflare.com/ips" target="_blank" rel="noopener external nofollow noreferrer">Cloudflare IP addresses</a><br><a href="https://danielmiessler.com/blog/getting-real-ip-addresses-using-cloudflare-nginx-and-varnish/" target="_blank" rel="noopener external nofollow noreferrer">Getting Real IP Addresses Using CloudFlare, Nginx, and Varnish</a></p></blockquote><h1 id="【推荐】脚本编写nginx规则"><a href="#【推荐】脚本编写nginx规则" class="headerlink" title="【推荐】脚本编写nginx规则"></a>【推荐】脚本编写nginx规则</h1><blockquote><p>这个脚本的前提是你的所有站点都使用cf进行保护，否则请把conf文件换个位置储存，再手动将文件include进你站点配置文件的server{}里。</p></blockquote><p>新建脚本文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /root/cf_rules<br>vim /root/cf_rules/update_cf_ip.sh<br><span class="hljs-built_in">chmod</span> +x /root/cf_rules/update_cf_ip.sh<br></code></pre></td></tr></table></figure><p>写入脚本内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;#Cloudflare&quot;</span> &gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;set_real_ip_from <span class="hljs-variable">$i</span>;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;set_real_ip_from <span class="hljs-variable">$i</span>;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;# use any of the following two&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;real_ip_header CF-Connecting-IP;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;#real_ip_header X-Forwarded-For;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br></code></pre></td></tr></table></figure><p>运行脚本后，我们可以得到一个 <code>/etc/nginx/conf.d/cloudflare_ip.conf</code> 的conf文件，添加完成后使用 <code>nginx -t</code> 来验证配置文件是否正确，正确无误后重启或者重新载入nginx即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -t<br>systemctl restart nginx<br></code></pre></td></tr></table></figure><p>使用cron计划任务来定期更新cloudflare_ip.conf文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 5 * * 1 /bin/bash /location/to/update_cf_ip.sh<br></code></pre></td></tr></table></figure><h1 id="手动恢复原始访问者-IP"><a href="#手动恢复原始访问者-IP" class="headerlink" title="手动恢复原始访问者 IP"></a>手动恢复原始访问者 IP</h1><p>首先编辑Nginx配置文件，一般为 <code>/etc/nginx/ngnix.conf</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/ngnix.conf<br></code></pre></td></tr></table></figure><h2 id="【方案1】对CloudFalre来源请求提取真实IP"><a href="#【方案1】对CloudFalre来源请求提取真实IP" class="headerlink" title="【方案1】对CloudFalre来源请求提取真实IP"></a>【方案1】对CloudFalre来源请求提取真实IP</h2><p>在http块中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#Cloudflare</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">173.245</span><span class="hljs-number">.48</span><span class="hljs-number">.0</span><span class="hljs-string">/20;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">103.21</span><span class="hljs-number">.244</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">103.22</span><span class="hljs-number">.200</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">103.31</span><span class="hljs-number">.4</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">141.101</span><span class="hljs-number">.64</span><span class="hljs-number">.0</span><span class="hljs-string">/18;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">108.162</span><span class="hljs-number">.192</span><span class="hljs-number">.0</span><span class="hljs-string">/18;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">190.93</span><span class="hljs-number">.240</span><span class="hljs-number">.0</span><span class="hljs-string">/20;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">188.114</span><span class="hljs-number">.96</span><span class="hljs-number">.0</span><span class="hljs-string">/20;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">197.234</span><span class="hljs-number">.240</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">198.41</span><span class="hljs-number">.128</span><span class="hljs-number">.0</span><span class="hljs-string">/17;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">162.158</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/15;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">104.16</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/13;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">104.24</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/14;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">172.64</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/13;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">131.0</span><span class="hljs-number">.72</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2400</span><span class="hljs-string">:cb00::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2606</span><span class="hljs-string">:4700::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2803</span><span class="hljs-string">:f800::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2405</span><span class="hljs-string">:b500::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2405</span><span class="hljs-string">:8100::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-string">2a06:98c0::/29;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-string">2c0f:f248::/32;</span><br><br><span class="hljs-comment"># use any of the following two</span><br><span class="hljs-string">real_ip_header</span> <span class="hljs-string">CF-Connecting-IP;</span><br><span class="hljs-comment">#real_ip_header X-Forwarded-For;</span><br></code></pre></td></tr></table></figure><div class='note info'>IP 截止至2022年6月28号是最新的。</div><p>最新IP列表请参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://www.cloudflare.com/ips-v4<br>https://www.cloudflare.com/ips-v6<br></code></pre></td></tr></table></figure><h2 id="【方案2】对所有来源请求提取真实IP"><a href="#【方案2】对所有来源请求提取真实IP" class="headerlink" title="【方案2】对所有来源请求提取真实IP"></a>【方案2】对所有来源请求提取真实IP</h2><p>用这个方案的前提是，你的Nginx代理的所有站点都使用了CloudFlare的CDN，而你又担心CloudFlare的IP地址产生变化，或者你觉得添加的IP太多太麻烦。那么你可以使用下面的办法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/0;</span><br><span class="hljs-string">real_ip_header</span> <span class="hljs-string">X-Forwarded-For;</span><br></code></pre></td></tr></table></figure><p><img src="/posts/32160/bt.png"></p><h2 id="重启生效"><a href="#重启生效" class="headerlink" title="重启生效"></a>重启生效</h2><p>先检测下修改后的语法有没有问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -t<br></code></pre></td></tr></table></figure><p>重启即可生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart nginx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Netflix DNS unlock Stream Media</title>
    <link href="/posts/8096.html"/>
    <url>/posts/8096.html</url>
    
    <content type="html"><![CDATA[<p>如何配置使用DNS解锁流媒体。【非原创，存档用】</p><span id="more"></span><h1 id="个人使用"><a href="#个人使用" class="headerlink" title="个人使用"></a>个人使用</h1><p>个人使用者，请仔细阅读以下使用指南，根据自己的实际情况进行配置。</p><p><font color='red'>以下示例解锁DNS为4.4.4.4，实际使用以对应DNS为准</font></p><p>由于DNS解锁的特殊性，比较推荐的落地搭建方式为X-UI或其他V2ray，Xray一键脚本。</p><h2 id="非V2ray相关协议简单方法-直接修改VPS的系统DNS"><a href="#非V2ray相关协议简单方法-直接修改VPS的系统DNS" class="headerlink" title="非V2ray相关协议简单方法-直接修改VPS的系统DNS"></a>非V2ray相关协议简单方法-直接修改VPS的系统DNS</h2><ul><li><strong>SS SSR Trojan等</strong></li></ul><p>由于这些协议本身无法进行DNS分流，请使用如下命令配置DNS：</p><ul><li><strong>Debian&#x2F;centos系统</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo -e &quot;nameserver 4.4.4.4（以实际为准）&quot; &gt; /etc/resolv.conf<br>       <br>  chattr +i /etc/resolv.conf<br></code></pre></td></tr></table></figure><p>第一行命令是将解锁DNS添加为系统DNS</p><p>第二行命令是将DNS文件属性修改为只读(避免被系统复写修改）</p><ul><li><strong>移除操作</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">chattr -i /etc/resolv.conf<br>   echo -e &quot;nameserver 8.8.8.8&quot; &gt; /etc/resolv.conf<br></code></pre></td></tr></table></figure><ul><li><strong>ubuntu系统</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">修改DNS<br>vi /etc/systemd/resolved.conf<br>输入<br>DNS=4.4.4.4（以实际为准）<br><br>:wq保存后<br><br>systemctl daemon-reload<br>systemctl restart systemd-resolved.service<br>mv /etc/resolv.conf /etc/resolv.conf.bak<br>ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf<br></code></pre></td></tr></table></figure><ul><li><strong>移除操作</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">修改DNS<br>vi /etc/systemd/resolved.conf<br>输入<br>DNS=8.8.8.8<br>DNS=1.1.1.1<br><br>:wq保存后<br><br>systemctl daemon-reload<br>systemctl restart systemd-resolved.service<br>mv /etc/resolv.conf /etc/resolv.conf.bak<br>ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf<br></code></pre></td></tr></table></figure><ul><li><strong>Shadowsocks-libev 版本</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">打开配置文件 默认 /etc/shadowsocks-libev/config.json<br>修改&quot;nameserver&quot;:&quot;4.4.4.4（以实际为准）&quot;<br></code></pre></td></tr></table></figure><ul><li><strong>SS docker 版本</strong></li></ul><p>添加参数 <code>-d &quot;4.4.4.4（以实际为准）&quot;</code></p><h2 id="非V2ray相关协议复杂方法-VPS安装dnsmasq实现DNS解锁分流"><a href="#非V2ray相关协议复杂方法-VPS安装dnsmasq实现DNS解锁分流" class="headerlink" title="非V2ray相关协议复杂方法-VPS安装dnsmasq实现DNS解锁分流"></a>非V2ray相关协议复杂方法-VPS安装dnsmasq实现DNS解锁分流</h2><p>需要有一定使用基础，此处以debian系统为例</p><p>一.安装dnsmasq</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get -y install dnsmasq<br></code></pre></td></tr></table></figure><p>二.配置dnsmasq</p><p>1.配置文件&#x2F;etc&#x2F;dnsmasq.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/dnsmasq.conf<br><br>server=/netflix.com/4.4.4.4<br>server=/disneyplus.com/4.4.4.4<br>...<br>...<br>resolv-file=/etc/resolv.dnsmasq.conf<br><br>具体需要添加的域名请在TG群发送“域名规则”获取。4.4.4.4以实际DNS为准。<br></code></pre></td></tr></table></figure><p>2.配置文件&#x2F;etc&#x2F;resolv.dnsmasq.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/resolv.dnsmasq.conf<br><br>nameserver 1.1.1.1<br>nameserver 8.8.8.8<br></code></pre></td></tr></table></figure><p>3.设置VPS系统DNS，将本机dnsmasq作为系统DNS服务器。参考上面的操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">chattr -i /etc/resolv.conf<br> echo -e &quot;nameserver 127.0.0.1&quot; &gt; /etc/resolv.conf<br> chattr +i /etc/resolv.conf<br></code></pre></td></tr></table></figure><p>4.重启dnsmasq</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/etc/init.d/dnsmasq restart<br></code></pre></td></tr></table></figure><p>四.卸载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get remove dnsmasq<br>chattr -i /etc/resolv.conf<br>chmod 777 /etc/resolv.conf<br>echo -e &quot;nameserver 8.8.8.8&quot; &gt; /etc/resolv.conf<br></code></pre></td></tr></table></figure><h2 id="V2ray相关协议，DNS分流"><a href="#V2ray相关协议，DNS分流" class="headerlink" title="V2ray相关协议，DNS分流"></a>V2ray相关协议，DNS分流</h2><p>标准配置文件修改要素：</p><p>1.开启流量识别</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;sniffing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;destOverride&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;http&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-string">&quot;tls&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>2.修改出口流量域名分类方式</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;UseIP&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>3.添加DNS分流</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-string">&quot;geosite:netflix&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>一般默认配置文件地址</p><p>V2ray</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/etc/v2ray/config.json<br><br>修改完成后重启 systemctl restart v2ray<br></code></pre></td></tr></table></figure><p>Xray</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/etc/xray/config.json<br><br>修改完成后重启 systemctl restart xray<br></code></pre></td></tr></table></figure><p>完整配置文件示例（wulabing-Xray脚本）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br> <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>   <span class="hljs-attr">&quot;access&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/log/xray/access.log&quot;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-attr">&quot;error&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/log/xray/error.log&quot;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-attr">&quot;loglevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;warning&quot;</span><br> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br> <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>   <span class="hljs-punctuation">&#123;</span><br>     <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vless&quot;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;clients&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>         <span class="hljs-punctuation">&#123;</span><br>           <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;123456-789-123456-45678-12345678&quot;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;flow&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xtls-rprx-direct&quot;</span><br>         <span class="hljs-punctuation">&#125;</span><br>       <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;decryption&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;none&quot;</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;fallbacks&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>         <span class="hljs-punctuation">&#123;</span><br>           <span class="hljs-attr">&quot;dest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">60000</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;alpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;xver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>         <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-punctuation">&#123;</span><br>           <span class="hljs-attr">&quot;dest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">60001</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;alpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;h2&quot;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;xver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>         <span class="hljs-punctuation">&#125;</span><br>       <span class="hljs-punctuation">]</span><br>     <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;streamSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;network&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tcp&quot;</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;security&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xtls&quot;</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;xtlsSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>         <span class="hljs-attr">&quot;minVersion&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1.2&quot;</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-attr">&quot;certificates&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-punctuation">&#123;</span><br>             <span class="hljs-attr">&quot;certificateFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/usr/local/etc/xray/self_signed_cert.pem&quot;</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-attr">&quot;keyFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/usr/local/etc/xray/self_signed_key.pem&quot;</span><br>           <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-punctuation">&#123;</span><br>             <span class="hljs-attr">&quot;certificateFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/ssl/xray.crt&quot;</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-attr">&quot;keyFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/ssl/xray.key&quot;</span><br>           <span class="hljs-punctuation">&#125;</span><br>         <span class="hljs-punctuation">]</span><br>       <span class="hljs-punctuation">&#125;</span><br>     <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;sniffing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;destOverride&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>         <span class="hljs-string">&quot;http&quot;</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-string">&quot;tls&quot;</span><br>       <span class="hljs-punctuation">]</span><br>     <span class="hljs-punctuation">&#125;</span><br>   <span class="hljs-punctuation">&#125;</span><br> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br> <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>   <span class="hljs-punctuation">&#123;</span><br>     <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UseIP&quot;</span>  <br>     <span class="hljs-punctuation">&#125;</span><br>   <span class="hljs-punctuation">&#125;</span><br> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br> <span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>   <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>     <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>     <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4&quot;</span><span class="hljs-punctuation">,</span> <br>       <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geosite:netflix&quot;</span> <span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:disney&quot;</span><br>       <span class="hljs-punctuation">]</span><br>     <span class="hljs-punctuation">&#125;</span><br>   <span class="hljs-punctuation">]</span><br> <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="其他脚本示例"><a href="#其他脚本示例" class="headerlink" title="其他脚本示例"></a>其他脚本示例</h2><h2 id="x-ui"><a href="#x-ui" class="headerlink" title="x-ui"></a>x-ui</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)<br></code></pre></td></tr></table></figure><p>进入【面板设置】——【Xray相关设置】替换文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;api&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;HandlerService&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;LoggerService&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;StatsService&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">62789</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dokodemo-door&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UseIP&quot;</span><span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blackhole&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;policy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;system&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;statsInboundDownlink&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;statsInboundUplink&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;routing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;rules&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;inboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;api&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geoip:private&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;bittorrent&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span>    <span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-string">&quot;geosite:netflix&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;stats&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="mack-a-八合一脚本"><a href="#mack-a-八合一脚本" class="headerlink" title="mack-a 八合一脚本"></a>mack-a 八合一脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -P /root -N --no-check-certificate &quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot; &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh<br></code></pre></td></tr></table></figure><p>运行脚本，选择【流媒体工具】 ——&gt; 选【2.DNS解锁流媒体】 ——&gt; 选【1.添加】 ——&gt; 输入您的DNS【4.4.4.4】 ——&gt; 默认输入【1】</p><h1 id="机场使用"><a href="#机场使用" class="headerlink" title="机场使用"></a>机场使用</h1><p><font color='red'>以下示例解锁DNS为4.4.4.4，实际使用以对应DNS为准</font></p><p>有些VPS无法配置DNS或配置DNS无效请联系客服定制SOCKS5等分流版本</p><h2 id="XrayR"><a href="#XrayR" class="headerlink" title="XrayR"></a>XrayR</h2><ul><li><strong>1.首先配置 DNS 文件</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/XrayR/dns.json<br></code></pre></td></tr></table></figure><p>全部删除覆盖</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;localhost&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;geosite:netflix&quot;</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dns_inbound&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ul><li><strong>2.修改 XrayR 配置文件</strong></li></ul><p>第 5 行去掉#号开启</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">DnsConfigPath<span class="hljs-punctuation">:</span>  /etc/XrayR/dns.json<br></code></pre></td></tr></table></figure><p>第 35 行附近修改参数</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">EnableDNS<span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br> DNSType<span class="hljs-punctuation">:</span> UseIP<br></code></pre></td></tr></table></figure><ul><li><strong>3.重启</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">XrayR restart<br></code></pre></td></tr></table></figure><h2 id="SoGa"><a href="#SoGa" class="headerlink" title="SoGa"></a>SoGa</h2><ul><li><strong>docker</strong></li></ul><p>要素</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json">-e default_dns=<span class="hljs-number">4.4</span><span class="hljs-number">.4</span><span class="hljs-number">.4</span> \<br>-e dns_cache_time=<span class="hljs-number">1</span> \<br>-e dns_strategy=ipv4_first \<br></code></pre></td></tr></table></figure><p>示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json">docker run --restart=on-failure --name soga -d \<br>-v /etc/soga/<span class="hljs-punctuation">:</span>/etc/soga/ --network host \<br>-e type=sspanel-uim \<br>-e server_type=ssr \<br>-e api=webapi \<br>-e webapi_url=https<span class="hljs-punctuation">:</span><span class="hljs-comment">//api.soga.com \</span><br>-e webapi_key=admin \<br>-e node_id=<span class="hljs-number">10</span> \<br>-e default_dns=<span class="hljs-number">4.4</span><span class="hljs-number">.4</span><span class="hljs-number">.4</span> \<br>-e dns_cache_time=<span class="hljs-number">1</span> \<br>-e dns_strategy=ipv4_first \<br>-e forbidden_bit_torrent=<span class="hljs-keyword">true</span> \<br>-e cert_domain=image.baidu.com \<br>-e cert_mode=http \<br>-e tunnel_enable=<span class="hljs-keyword">false</span> \<br>-e tunnel_proxy_protocol=<span class="hljs-keyword">true</span> \<br>-e proxy_protocol=<span class="hljs-keyword">true</span> \<br>vaxilu/soga<br></code></pre></td></tr></table></figure><ul><li><strong>脚本安装</strong></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">/etc/soga/soga.conf 修改 default_dns=<span class="hljs-number">4.4</span><span class="hljs-number">.4</span><span class="hljs-number">.4</span><br></code></pre></td></tr></table></figure><h1 id="软路由配置"><a href="#软路由配置" class="headerlink" title="软路由配置"></a>软路由配置</h1><p>软路由插件passwall，openclash，ssrplus+ 都是可以正常使用</p><p>由于DNS解锁的特殊性，对于SS协议使用软路由配置可能会出现无法解锁的情况，这是由于软路由插件直接接管SS的DNS导致流量无法转发。（不是必然出现，与科学插件版本有关）</p><p><font color='red'>推荐落地使用V2ray或者Xray协议。</font></p><p>设置要点：</p><p>*1.必须开启UDP转发代理</p><p>由于奈飞TV版本的特殊性，会不定期的使用UDP协议发送数据包查询DNS，UDP数据没有被代理则有可能出现看到一半跳提示：<code>奈飞检测到您可能使用了代理</code></p><p>*2.完备的强制代理域名列表</p><p>可在<a href="https://t.me/nfdns" target="_blank" rel="noopener external nofollow noreferrer">TG群 <strong>(opens new window)</strong></a>内发送<code>域名规则</code>获取</p><p>*小提示</p><p>passwall中<code>高级设置</code>，UDP转发端口设置为<code>所有</code></p><p>群友反馈</p><p>可能需要<code>关闭</code>软路由openwrt的turoacc组件中的<code>Shortcut-FE 流量分载</code>功能</p><p>如果实在都不行，可以考虑找到类似访问控制，全局控制等选项卡，将电视或者电视盒子的IP设置为完全走代理</p><h1 id="解锁验证"><a href="#解锁验证" class="headerlink" title="解锁验证"></a>解锁验证</h1><h2 id="本地验证"><a href="#本地验证" class="headerlink" title="本地验证"></a>本地验证</h2><p>本地连接节点，用无痕模式打开网页</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://www.netflix.com/title/70143836<br></code></pre></td></tr></table></figure><p>浏览器无痕模式可以正常打开网页，地址栏自动跳转到相应地区</p><p>如：新加坡</p><p><a href="https://www.netflix.com/**sg-zh**/title/70143836" target="_blank" rel="noopener external nofollow noreferrer">https://www.netflix.com/**sg-zh**/title/70143836</a></p><h2 id="部分VPS验证"><a href="#部分VPS验证" class="headerlink" title="部分VPS验证"></a>部分VPS验证</h2><p><font color='red'>使用修改VPS本地DNS方式</font>解锁的可以在VPS上运行脚本验证32位版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.61/nf_2.61_linux_amd64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>ARM64版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.61/nf_2.61_linux_arm64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><h1 id="解锁域名收集"><a href="#解锁域名收集" class="headerlink" title="解锁域名收集"></a>解锁域名收集</h1><h2 id="个性化解锁"><a href="#个性化解锁" class="headerlink" title="个性化解锁"></a>个性化解锁</h2><p>根据具体的解锁需求，将需要解锁的内容添加到DNS的分流设置规则内</p><p>示例添加奈飞，迪士尼和动画疯分流：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-string">&quot;geosite:netflix&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:disney&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;gamer.com.tw&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;bahamut.com.tw&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;hinet.net&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;fbcdn.net&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;gvt1.com&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;digicert.com&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;viblast.com&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>目前已知的geo文件自带流媒体分组域名</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;geosite:netflix&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:bahamut&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:hulu&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:hbo&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:disney&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:bbc&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:4chan&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:fox&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:abema&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:dmm&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:niconico&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:pixiv&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:bilibili&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:viu&quot;</span><br></code></pre></td></tr></table></figure><p>示例简化：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-string">&quot;geosite:netflix&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:disney&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:bahamut&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="动画疯"><a href="#动画疯" class="headerlink" title="动画疯"></a>动画疯</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">gamer.com.tw<br>bahamut.com.tw<br>hinet.net<br>fbcdn.net<br>gvt1.com<br>digicert.com<br>viblast.com<br></code></pre></td></tr></table></figure><h2 id="HBO-GO"><a href="#HBO-GO" class="headerlink" title="HBO GO"></a>HBO GO</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">conviva.com<br>go.com<br>hbo.com<br>hbogo.com<br>hbonow.com<br>hboasia.com<br>hbogo.com<br>hbogoasia.hk<br>hbogoasia.com<br>amazonaws.com<br>akamaihd.net<br>boltdns.net<br>cinemax.com<br>comhbo.com<br>hbomax.com<br>maxgo.com<br></code></pre></td></tr></table></figure><h2 id="Dazn"><a href="#Dazn" class="headerlink" title="Dazn"></a>Dazn</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">control.kochava.com<br>d151l6v8er5bdm.cloudfront.net<br>d1sgwhnao7452x.cloudfront.net<br>dazn-api.com<br>dazn.com<br>dazndn.com<br>dc2-vodhls-perform.secure.footprint.net<br>dca-ll-livedazn-dznlivejp.s.llnwi.net<br>dcalivedazn.akamaized.net<br>dcblivedazn.akamaized.net<br>indazn.com<br>indaznlab.com<br>intercom.io<br>logx.optimizely.com<br>s.yimg.jp<br>sentry.io<br></code></pre></td></tr></table></figure><h2 id="TVB（MyTvSuper）"><a href="#TVB（MyTvSuper）" class="headerlink" title="TVB（MyTvSuper）"></a>TVB（MyTvSuper）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">bigbigchannel.com.hk<br>bigbigshop.com<br>content.jwplatform.com<br>encoretvb.com<br>mytvsuper.com<br>mytvsuperlimited.hb.omtrdc.net<br>mytvsuperlimited.sc.omtrdc.net<br>tvb.com<br>tvb.com.au<br>tvbanywhere.com<br>tvbanywhere.com.sg<br>tvbc.com.cn<br>tvbeventpower.com.hk<br>tvbusa.com<br>tvbweekly.com<br>tvmedia.net.au<br>videos-f.jwpsrv.com<br></code></pre></td></tr></table></figure><h2 id="DMM"><a href="#DMM" class="headerlink" title="DMM"></a>DMM</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">dmm.com<br>dmm.co.jp<br>dmm-extension.com<br>dmmapis.com<br>api-p.videomarket.jp<br></code></pre></td></tr></table></figure><h2 id="Now-E"><a href="#Now-E" class="headerlink" title="Now E"></a>Now E</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">nowe.com<br>nowestatic.com<br></code></pre></td></tr></table></figure><h2 id="Bilibili-Taiwan"><a href="#Bilibili-Taiwan" class="headerlink" title="Bilibili Taiwan"></a>Bilibili Taiwan</h2><p>使用手机APP观看时，请点击播放设置，划开“启用https播放”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">akamaized.net<br>acg.tv<br>acgvideo.com<br>b23.tv<br>bigfun.cn<br>biliapi.com<br>biliapi.net<br>bilibili.com<br>bilibili.tv<br>bilibiligame.net<br>bilicdn1.com<br>bilicdn2.com<br>bilicdn3.com<br>bilicdn4.com<br>bilicdn5.com<br>biligame.com<br>biligame.net<br>bilivideo.com<br>bilivideo.cn<br>hdslb.com<br>im9.com<br>mincdn.com<br>biligo.com<br></code></pre></td></tr></table></figure><h2 id="catchplay"><a href="#catchplay" class="headerlink" title="catchplay"></a>catchplay</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">catchplay.com.tw<br>catchplay.com<br>cloudfront.net<br>akamaized.net<br></code></pre></td></tr></table></figure><h2 id="kktv"><a href="#kktv" class="headerlink" title="kktv"></a>kktv</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">kktv.com.tw<br>kktv.me<br>kk.stream<br></code></pre></td></tr></table></figure><h2 id="myvideo"><a href="#myvideo" class="headerlink" title="myvideo"></a>myvideo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">myvideo.net.tw<br></code></pre></td></tr></table></figure><h2 id="LineTV"><a href="#LineTV" class="headerlink" title="LineTV"></a>LineTV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">chocotv.com.tw<br>line-cdn.net<br>line-scdn.net<br>linetv.tw<br></code></pre></td></tr></table></figure><h2 id="LiTV"><a href="#LiTV" class="headerlink" title="LiTV"></a>LiTV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">litv.tv<br></code></pre></td></tr></table></figure><h2 id="4GTV"><a href="#4GTV" class="headerlink" title="4GTV"></a>4GTV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">4gtv.tv<br></code></pre></td></tr></table></figure><h2 id="ViuTV"><a href="#ViuTV" class="headerlink" title="ViuTV"></a>ViuTV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">viu.tv<br>viu.com<br>viu.now.com<br>amazonaws.com<br>cloudfront.net<br></code></pre></td></tr></table></figure><h2 id="Amazon-Prime-Video"><a href="#Amazon-Prime-Video" class="headerlink" title="Amazon Prime Video"></a>Amazon Prime Video</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">cloudfront.net<br>aiv-cdn.net<br>aiv-delivery.net<br>amazonprimevideo.cn<br>amazonprimevideo.com.cn<br>amazonprimevideos.com<br>amazonvideo.cc<br>amazonvideo.com<br>atv-ps.amazon.com<br>avodmp4s3ww-a.akamaihd.net<br>fls-na.amazon.com<br>llnwd.net<br>media-amazon.com<br>prime-video.com<br>primevideo.cc<br>primevideo.com<br>primevideo.info<br>primevideo.org<br>primevideo.tv<br></code></pre></td></tr></table></figure><h2 id="DMM-1"><a href="#DMM-1" class="headerlink" title="DMM"></a>DMM</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">dmm-extension.com<br>dmm.co.jp<br>dmm.com<br>videomarket.jp<br>p-smith.com<br>vmdash-cenc.akamaized.net<br>img.vm-movie.jp<br>bam.nr-data.net<br></code></pre></td></tr></table></figure><h2 id="Abema"><a href="#Abema" class="headerlink" title="Abema"></a>Abema</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">abema.io<br>abema.tv<br>ds-linear-abematv.akamaized.net<br>linear-abematv.akamaized.net<br>ds-vod-abematv.akamaized.net<br>vod-abematv.akamaized.net<br>ameba.jp<br>hayabusa.io<br>mobile-collector.newrelic.com<br>vod-abematv.akamaized.net<br>bucketeer.jp<br>abema.adx.promo<br>hayabusa.media<br></code></pre></td></tr></table></figure><h2 id="NicoNico"><a href="#NicoNico" class="headerlink" title="NicoNico"></a>NicoNico</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">dmc.nico<br>nicovideo.jp<br>nimg.jp<br>socdm.com<br></code></pre></td></tr></table></figure><h2 id="Telasa"><a href="#Telasa" class="headerlink" title="Telasa"></a>Telasa</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">telasa.jp<br>kddi-video.com<br>videopass.jp<br>d2lmsumy47c8as.cloudfront.net<br></code></pre></td></tr></table></figure><h2 id="Paravi"><a href="#Paravi" class="headerlink" title="Paravi"></a>Paravi</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">paravi.jp<br></code></pre></td></tr></table></figure><h2 id="U-NEXT"><a href="#U-NEXT" class="headerlink" title="U-NEXT"></a>U-NEXT</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">unext.jp<br>nxtv.jp<br></code></pre></td></tr></table></figure><h2 id="Hulu-Japan"><a href="#Hulu-Japan" class="headerlink" title="Hulu Japan"></a>Hulu Japan</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">hulu.com<br>huluad.com<br>huluim.com<br>hulustream.com<br>happyon.jp<br>hulu.jp<br>hjholdings.jp<br>streaks.jp<br>yb.uncn.jp<br>hulu.hb.omtrdc.net<br>conviva.com<br>imrworldwide.com<br>tealiumiq.com<br>tiqcdn.com<br>microad.jp<br>adsrvr.org<br>adsmoloco.com<br>yimg.jp<br>webantenna.info<br>doubleclick.net<br>usergram.info<br>hjholdings.tv<br></code></pre></td></tr></table></figure><h2 id="TVer"><a href="#TVer" class="headerlink" title="TVer"></a>TVer</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">tver.jp<br>edge.api.brightcove.com<br>players.brightcove.net<br></code></pre></td></tr></table></figure><h2 id="WOWOW"><a href="#WOWOW" class="headerlink" title="WOWOW"></a>WOWOW</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wowow.co.jp<br></code></pre></td></tr></table></figure><h2 id="Fuji-TV"><a href="#Fuji-TV" class="headerlink" title="Fuji TV"></a>Fuji TV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">fujitv.co.jp<br>stream.ne.jp<br></code></pre></td></tr></table></figure><h2 id="Radiko"><a href="#Radiko" class="headerlink" title="Radiko"></a>Radiko</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">radiko.jp<br>radionikkei.jp<br>smartstream.ne.jp<br></code></pre></td></tr></table></figure><h2 id="Karaoke-DAM"><a href="#Karaoke-DAM" class="headerlink" title="Karaoke@DAM"></a>Karaoke@DAM</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">clubdam.com<br></code></pre></td></tr></table></figure><h2 id="Games"><a href="#Games" class="headerlink" title="Games"></a>Games</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">cygames.jp<br>konosubafd.jp<br>colorfulpalette.org<br>cds1.clubdam.com<br>api.worldflipper.jp<br></code></pre></td></tr></table></figure><h2 id="music-jp"><a href="#music-jp" class="headerlink" title="music.jp"></a>music.jp</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">music-book.jp<br>overseaauth.music-book.jp<br></code></pre></td></tr></table></figure><h2 id="GYAO"><a href="#GYAO" class="headerlink" title="GYAO!"></a>GYAO!</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gyao.yahoo.co.jp<br></code></pre></td></tr></table></figure><h2 id="J-com-On-Demand"><a href="#J-com-On-Demand" class="headerlink" title="J:com On Demand"></a>J:com On Demand</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">id.zaq.ne.jp<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
      <category>自建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 学生包: Namecheap 一年免费SSL证书</title>
    <link href="/posts/15759.html"/>
    <url>/posts/15759.html</url>
    
    <content type="html"><![CDATA[<p>GitHub学生包赠送name.com免费一年的SSL证书。</p><span id="more"></span><h1 id="福利介绍"><a href="#福利介绍" class="headerlink" title="福利介绍"></a>福利介绍</h1><p>SSL 证书是一个数字证书，用于认证网站的身份并启用加密连接。一般我们都用免费的，当然能用，但往往几个月就会过期。而且别人一查，会发现证书可信度不够高。name.com的证书，原价10美元一年。可以通过学生包免费薅到，岂不乐哉。</p><h1 id="领取"><a href="#领取" class="headerlink" title="领取"></a>领取</h1><p>首先在<a href="https://education.github.com/pack/offers#namecheap" target="_blank" rel="noopener external nofollow noreferrer">GitHub学生包</a>页面生成offer code:<br><img src="/posts/15759/code.PNG"></p><p>之后点击<a href="https://www.namecheap.com/cart/addtocart.aspx?producttype=ssl&product=positivessl&action=purchase&period=1-YEAR&qty=1" target="_blank" rel="noopener external nofollow noreferrer">Namecheap网站</a>购买SSL证书，填入优惠码即可免费。<br><img src="/posts/15759/code.PNG"></p><h1 id="激活SSL证书"><a href="#激活SSL证书" class="headerlink" title="激活SSL证书"></a>激活SSL证书</h1><p>首先在服务器上生成CSR，参考这篇文章<a href="https://help.aliyun.com/document_detail/42218.html" target="_blank" rel="noopener external nofollow noreferrer">如何制作CSR文件</a>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@host]<span class="hljs-comment"># openssl req -new -nodes -sha256 -newkey rsa:2048 -keyout your_private.key -out CSR</span><br>Generating a RSA private key<br>......................+++++<br>.................................................+++++<br>writing new private key to <span class="hljs-string">&#x27;[]&#x27;</span><br>-----<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter <span class="hljs-string">&#x27;.&#x27;</span>, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:CN<br>State or Province Name (full name) []:Beijing<br>Locality Name (eg, city) [Default City]:Beijing<br>Organization Name (eg, company) [Default Company Ltd]:<br>Organizational Unit Name (eg, section) []:<br>Common Name (eg, your name or your server<span class="hljs-string">&#x27;s hostname) []:host</span><br><span class="hljs-string">Email Address []:example@aa.com</span><br><span class="hljs-string"></span><br><span class="hljs-string">Please enter the following &#x27;</span>extra<span class="hljs-string">&#x27; attributes</span><br><span class="hljs-string">to be sent with your certificate request</span><br><span class="hljs-string">A challenge password []:NferwjIEDRW</span><br><span class="hljs-string">An optional company name []:</span><br></code></pre></td></tr></table></figure><ul><li>Organization Name：公司名称，可以是中文或英文。</li><li>Organization Unit Name：部门名称，可以是中文或英文。</li><li>Country Code：申请单位所属国家，只能是两个字母的国家码。例如，中国只能是CN。</li><li>State or Province：州名或省份名称，可以是中文或英文。</li><li>Locality：城市名称，可以是中文或英文。</li><li>Common Name：申请SSL证书的具体网站域名。</li><li>Email Address：可选择不输入。</li><li>A challenge password：可选择不输入。</li></ul><p>会生成两个文件，一个your_private.key，一个CSR，其中CSR上传到namecheap网站，your_private.key则保留在服务器上，之后会用到。</p><p>在下面填入CSR内容：</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-literal">-----</span><span class="hljs-comment">BEGIN CERTIFICATE REQUEST</span><span class="hljs-literal">-----</span><br><span class="hljs-comment">类似于这样的格式</span><br><span class="hljs-literal">-----</span><span class="hljs-comment">END CERTIFICATE REQUEST</span><span class="hljs-literal">-----</span><br></code></pre></td></tr></table></figure><p><img src="/posts/15759/CSR.PNG"></p><p>然后选择验证方式，如果有域名邮箱，可以直接用域名邮箱进行验证即可。<br><img src="/posts/15759/confirm.PNG"></p><h1 id="证书安装"><a href="#证书安装" class="headerlink" title="证书安装"></a>证书安装</h1><p>根据<a href="https://www.namecheap.com/support/knowledgebase/article.aspx/795/69/how-to-install-ssl-certificates/?_gl=1*ibgtzr*_ga*MjU3MTYxMjkxLjE2NTQ3NTkyOTk.*_ga_7DMJMG20P8*MTY1NDc1OTI5OS4xLjEuMTY1NDc2MjczNS42MA.." target="_blank" rel="noopener external nofollow noreferrer">Namecheap的官方安装教程</a>，有很多种选择，这里我们选择手动配置Nginx进行安装。</p><h1 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h1><p>下载证书文件到服务器：<br><img src="/posts/15759/download.PNG">  </p><p>将两个文件的内容（your_domain.crt 和 your_domain.ca-bundle）合并到一个crt文件中:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> your_domain.crt your_domain.ca-bundle &gt;&gt; your_domain_chain.crt<br></code></pre></td></tr></table></figure><p>修改证书路径：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">ssl_certificate</span> <span class="hljs-string">/path/to/certificate/your_domain_chain.crt;</span><br><br><span class="hljs-string">ssl_certificate_key</span> <span class="hljs-string">/path/to/your_private.key;</span><br></code></pre></td></tr></table></figure><h1 id="重启Nginx即可"><a href="#重启Nginx即可" class="headerlink" title="重启Nginx即可"></a>重启Nginx即可</h1><p>验证配置文件是否正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ nginx -t<br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf <span class="hljs-built_in">test</span> is successful<br></code></pre></td></tr></table></figure><p>重启：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl reload nginx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>GitHub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>web开发</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 学生包：没用的Netwise服务器托管</title>
    <link href="/posts/56330.html"/>
    <url>/posts/56330.html</url>
    
    <content type="html"><![CDATA[<p>GitHub 学生包有很多福利。netwise是英国的基础设施供应商。Github学生包可为学生提供12个月的基础 1U 服务器托管包。其实没啥用。</p><blockquote><p>Free single unit server colocation package free for 12 months.</p></blockquote><span id="more"></span><h1 id="福利介绍"><a href="#福利介绍" class="headerlink" title="福利介绍"></a>福利介绍</h1><p><strong>12个月</strong>的位于<strong>伦敦</strong>的服务器托管基础服务，这意味着要使用托管服务，您需要<strong>拥有自己的物理服务器</strong>。 </p><p>服务器将受益于数据中心设计的高正常运行时间冗余，例如弹性电源、运营商级连接、适当设计的冷却系统、增强的安全性和 24x7 技术支持。</p><div class="note info">请注意：我们不提供服务器，因此您必须拥有自己的物理服务器硬件才能使用此服务。</div><p>包含以下内容：  </p><ul><li>1U 安全空间？</li><li>0.5 安培功率分配？</li><li>1TB 流量</li><li>100 Mbps 带宽</li><li>一个 ipv4 地址</li></ul><p><img src="/posts/56330/benifits.PNG"></p><p>另外包括技术支持：</p><ul><li><input checked="" disabled="" type="checkbox"> 24 小时技术专家支持</li><li><input checked="" disabled="" type="checkbox"> 一流设施？</li><li><input checked="" disabled="" type="checkbox"> 高弹性低延迟网络</li><li><input checked="" disabled="" type="checkbox"> 冗余功率和冷却</li></ul><p><img src="/posts/56330/features.PNG"></p><h1 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h1><blockquote><p>官网链接：<a href="https://www.netwise.co.uk/students/" target="_blank" rel="noopener external nofollow noreferrer">Netwise Students</a><br>点击右上角 <code>BOOK A TOUR</code> 注册账号。</p></blockquote><p>注意，这里选择 <code>London Central</code> 。<br><img src="/posts/56330/register.PNG"></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>GitHub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>web开发</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 学生包: Azure 100美金试用</title>
    <link href="/posts/64130.html"/>
    <url>/posts/64130.html</url>
    
    <content type="html"><![CDATA[<p>本文详解如何薅GitHub的学生包里的Azure给的100美金试用，有效期一年，<font color='orange'>不需要信用卡，而是学校的电子邮件地址</font>。<br><img src="/posts/64130/azure100.PNG"></p><span id="more"></span><h1 id="福利解释"><a href="#福利解释" class="headerlink" title="福利解释"></a>福利解释</h1><p>Azure这个福利主要是给了<strong>100美金</strong>的试用（为期一年），同时可以享受1年期的2个Azure虚拟机，Azure SQL数据库，和5GB的本地冗余存储热块。同时还有永久的Azure应用服务和云函数，集群容器管理Azure Kubernetes服务，静态页面部署（最多10个）等等。<br><img src="/posts/64130/100.PNG">  </p><ol><li>Linux 虚拟机 750 小时&#x2F;月，即套餐B1S VM（1核1GB内存）开一个免费用一年。</li><li>Windows 虚拟机 750 小时&#x2F;月，即套餐B1S VM（1核1GB内存）开一个免费用一年。</li><li>托管磁盘 两个 64 GB 的 P6 SDD ，Blob 存储 5 GB 。文件存储 5 GB。</li><li>SQL 数据库 250 GB ，创建可提供内置智能功能的 SQL 数据库。</li><li>Azure Cosmos DB 数据库 400 RU 数&#x2F;秒</li></ol><p>关于带宽的问题，Azure官方的 <a href="https://azure.microsoft.com/zh-cn/pricing/details/bandwidth/" target="_blank" rel="noopener external nofollow noreferrer">带宽定价</a> 有说明。下面是我的理解，不一定对：</p><ul><li>数据传入：免费</li><li>数据传出：<ul><li>前100GB免费</li><li>后10TB：<ul><li>$0.12&#x2F;GB</li><li><a href="https://docs.microsoft.com/zh-cn/azure/virtual-network/routing-preference-overview" target="_blank" rel="noopener external nofollow noreferrer">路由首选传输 ISP 网络</a>：$0.12&#x2F;GB</li></ul></li></ul></li><li>区域之间：<ul><li>同区域免费</li><li>跨区域 $0.02 ~ 0.16&#x2F;GB 不等</li></ul></li></ul><p>就是说前100GB免费，而100刀的话，基本每个月还可以超大概70GB的样子。</p><p>参考：</p><blockquote><p>Azure $200（需要信用卡）：<a href="https://visualstudio.microsoft.com/zh-hans/dev-essentials/" target="_blank" rel="noopener external nofollow noreferrer">《Visual Studio Dev Essentials 免费工具. 云服务和培训》</a><br>Azure $100 （需要教育邮箱）：<a href="https://azure.microsoft.com/zh-cn/free/students/" target="_blank" rel="noopener external nofollow noreferrer">使用面向学生的 Azure 在云中免费生成内容</a></p></blockquote><p><img src="/posts/64130/azurefree.PNG"></p><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><p>激活账号非常简单方便。</p><p>从<strong>学生包的链接</strong>进入：<br><img src="/posts/64130/link.PNG">  </p><p>之后可以选择使用已经有的微软账号登录或者新建账号登录，均可。最后选择自己需要的福利进行激活。</p><p>一般来说用的最多的就是：</p><ul><li>Azure 免费帐户 + 100 美元信用额度</li></ul><p>但是之后又需要你用<strong>教育邮箱</strong>来进行激活：<br><img src="/posts/64130/join.PNG">  </p><h1 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h1><p><img src="/posts/64130/start.PNG"><br>进入首页，点击创建资源：<br><img src="/posts/64130/create.PNG"><br>选择虚拟机-创建：<br><img src="/posts/64130/VM.PNG"><br>如果使用私钥登录SSH的话，按照下图创建，并命名密钥对名字即可，如果使用密码登录，指定密码和用户名即可，新手建议后者：<br><img src="/posts/64130/basic.PNG"><br>改用密码登录：<br><img src="/posts/64130/passwd.PNG"> </p><div class='note info'>如果使用密钥连接SSH，一定要记得下载密钥！只有一次下载机会。</div><p>之后对细节进行确认，再点击创建，即可。最后等待部署完成<br><img src="/posts/64130/ok.PNG"></p><h1 id="更换磁盘"><a href="#更换磁盘" class="headerlink" title="更换磁盘"></a>更换磁盘</h1><p>Azure for Student包含两个免费的64GB的p6性能的磁盘。但创建实例的时候默认创建30GB的磁盘且不能更改，这个30GB是<strong>收费</strong>的，虽然我们有100刀可拿来扣，但实在亏啊，所以一定要修改成64GB。</p><h2 id="停止实例"><a href="#停止实例" class="headerlink" title="停止实例"></a>停止实例</h2><p>直接修改会发现实例在运行的时候是不能改的。所以先停止实例。<br><img src="/posts/64130/warn.PNG"></p><p>在资源中找到实例，点击概述，找到停止：<br><img src="/posts/64130/stop.PNG"></p><div class='note info'>面板上重启机器会导致IP变化。但静态IP是要收费的。不过一般来说也不会重启所以我个人觉得无所谓了。</div><h2 id="更改磁盘容量【必须】"><a href="#更改磁盘容量【必须】" class="headerlink" title="更改磁盘容量【必须】"></a>更改磁盘容量【必须】</h2><p>点击磁盘：<br><img src="/posts/64130/disk.PNG"></p><p>调整大小：<br><img src="/posts/64130/adjust.PNG"></p><p>之后返回页面点击概述-开始，启动虚拟机即可~</p><div class='note info'>磁盘页面的磁盘容量如果没有变化，刷新就好。</div><h1 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h1><p>点开刚创建的虚拟机 -&gt; 网络 -&gt; 入站端口规则 -&gt; 添加入站端口规则 + 添加出站端口规则，你需要用到什么端口就开什么端口，如果对安全要求不高且怕麻烦的话，建议一次性全开了。出入站都是如下图所设置，规则名字不要重复就好。<br><img src="/posts/64130/inbound.png">  </p><h1 id="增加磁盘【可选】"><a href="#增加磁盘【可选】" class="headerlink" title="增加磁盘【可选】"></a>增加磁盘【可选】</h1><p>因为b1s性能垃圾。一般我都不开windows，所以多出来一个64GB磁盘。点击 <code>磁盘</code> ，点击附加磁盘，</p><p>之后按照官方教程来即可：<br><a href="https://docs.microsoft.com/zh-cn/azure/virtual-machines/linux/attach-disk-portal" target="_blank" rel="noopener external nofollow noreferrer">使用门户将数据磁盘附加到 Linux VM</a></p><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>列出磁盘：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i <span class="hljs-string">&quot;sd&quot;</span><br></code></pre></td></tr></table></figure><p>输出类似于以下示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">sda     0:0:0:0      30G<br>├─sda1             29.9G /<br>├─sda14               4M<br>└─sda15             106M /boot/efi<br>sdb     1:0:1:0      14G<br>└─sdb1               14G /mnt<br>sdc     3:0:0:0       4G<br></code></pre></td></tr></table></figure><p>在此示例中，添加的磁盘是 <code>sdc</code>。 它的 LUN 为 0，大小为 4 GB。<br>如果附加新磁盘，需要对磁盘进行分区。</p><p><code>parted</code> 实用程序可用于对数据磁盘进行分区和格式设置。</p><ul><li>建议使用适用于你的发行版的最新版 <code>parted</code>。</li><li>如果磁盘大于或等于 2 TiB，必须使用 GPT 分区。 如果磁盘小于 2 TiB，则可以使用 MBR 或 GPT 分区。</li></ul><p>以下示例在 <code>/dev/sdc</code> 上使用 <code>parted</code>，那里是大多数 VM 上第一块数据磁盘通常所在的位置。 将 <code>sdc</code> 替换为磁盘的正确选项。 我们还使用 <a href="https://xfs.wiki.kernel.org/" target="_blank" rel="noopener external nofollow noreferrer">XFS</a> 文件系统对其进行格式设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo parted /dev/sdc --script mklabel gpt mkpart xfspart xfs 0% 100%<br>sudo mkfs.xfs /dev/sdc1<br>sudo partprobe /dev/sdc1<br></code></pre></td></tr></table></figure><h2 id="装载磁盘"><a href="#装载磁盘" class="headerlink" title="装载磁盘"></a>装载磁盘</h2><p>使用 <code>mkdir</code> 创建一个目录来装载文件系统。 以下示例在 <code>/datadrive</code> 处创建一个目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> /datadrive<br></code></pre></td></tr></table></figure><p>然后，使用 <code>mount</code> 来装载文件系统。 以下示例将 <em>&#x2F;dev&#x2F;sdc1</em> 分区装载到 <code>/datadrive</code> 装入点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mount /dev/sdc1 /datadrive<br></code></pre></td></tr></table></figure><p>若要确保在重新引导后自动重新装载驱动器，必须将其添加到 <em>&#x2F;etc&#x2F;fstab</em> 文件。 强烈建议在 &#x2F;etc&#x2F;fstab 中使用 UUID（全局唯一标识符）来引用驱动器而不是只使用设备名称（例如 &#x2F;&#x2F;dev&#x2F;sdc1） 。 如果 OS 在启动过程中检测到磁盘错误，使用 UUID 可以避免将错误的磁盘装载到给定位置。 然后为剩余的数据磁盘分配这些设备 ID。 若要查找新驱动器的 UUID，请使用 <code>blkid</code> 实用工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo blkid<br></code></pre></td></tr></table></figure><p>输出与以下示例类似：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">/dev/sda1: LABEL=<span class="hljs-string">&quot;cloudimg-rootfs&quot;</span> UUID=<span class="hljs-string">&quot;11111111-1b1b-1c1c-1d1d-1e1e1e1e1e1e&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span> PARTUUID=<span class="hljs-string">&quot;1a1b1c1d-11aa-1234-1a1a1a1a1a1a&quot;</span><br>/dev/sda15: LABEL=<span class="hljs-string">&quot;UEFI&quot;</span> UUID=<span class="hljs-string">&quot;BCD7-96A6&quot;</span> TYPE=<span class="hljs-string">&quot;vfat&quot;</span> PARTUUID=<span class="hljs-string">&quot;1e1g1cg1h-11aa-1234-1u1u1a1a1u1u&quot;</span><br>/dev/sdb1: UUID=<span class="hljs-string">&quot;22222222-2b2b-2c2c-2d2d-2e2e2e2e2e2e&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span> PARTUUID=<span class="hljs-string">&quot;1a2b3c4d-01&quot;</span><br>/dev/sda14: PARTUUID=<span class="hljs-string">&quot;2e2g2cg2h-11aa-1234-1u1u1a1a1u1u&quot;</span><br>/dev/sdc1: UUID=<span class="hljs-string">&quot;33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e&quot;</span> TYPE=<span class="hljs-string">&quot;xfs&quot;</span> PARTLABEL=<span class="hljs-string">&quot;xfspart&quot;</span> PARTUUID=<span class="hljs-string">&quot;c1c2c3c4-1234-cdef-asdf3456ghjk&quot;</span><br></code></pre></td></tr></table></figure><div class='note info'>错误地编辑 /etc/fstab 文件可能会导致系统无法引导。 如果没有把握，请参考分发的文档来获取有关如何正确编辑该文件的信息。 另外，建议在编辑前备份 /etc/fstab 文件。</div><p>在文本编辑器中打开 <em>&#x2F;etc&#x2F;fstab</em> 文件，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/fstab<br></code></pre></td></tr></table></figure><p>在此示例中，使用在之前的步骤中创建的 <code>/dev/sdc1</code> 设备的 UUID 值并使用 <code>/datadrive</code> 装入点。 在 <code>/etc/fstab</code> 文件的末尾添加以下行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">UUID=33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e   /datadrive   xfs   defaults,nofail   1   2<br></code></pre></td></tr></table></figure><p>因为使用的是 nano 编辑器，所以在编辑完文件后，使用 <code>Ctrl+O</code> 写入该文件，然后使用 <code>Ctrl+X</code> 退出该编辑器。</p><h2 id="验证磁盘"><a href="#验证磁盘" class="headerlink" title="验证磁盘"></a>验证磁盘</h2><p>现在可以再次使用 <code>lsblk</code> 来查看磁盘和装入点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i <span class="hljs-string">&quot;sd&quot;</span><br></code></pre></td></tr></table></figure><p>输出将如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">sda     0:0:0:0      30G<br>├─sda1             29.9G /<br>├─sda14               4M<br>└─sda15             106M /boot/efi<br>sdb     1:0:1:0      14G<br>└─sdb1               14G /mnt<br>sdc     3:0:0:0       4G<br>└─sdc1                4G /datadrive<br></code></pre></td></tr></table></figure><p>可以看到 <code>sdc</code> 现在已装载到 <code>/datadrive</code>。</p><p>查看总磁盘容量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sL yabs.sh | bash -s -- -fig<br></code></pre></td></tr></table></figure><h2 id="多嘴一句"><a href="#多嘴一句" class="headerlink" title="多嘴一句"></a>多嘴一句</h2><p>B1s这个性能限制到了10%，硬盘性能也非常差。意思就是拿来玩玩就好了。实际上做不了啥。</p><p><img src="/posts/64130/b1s.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>GitHub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Azure</tag>
      
      <tag>GitHub</tag>
      
      <tag>web开发</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【tgbot api 反代】Telegram机器人api被墙解决办法：自建反代</title>
    <link href="/posts/38606.html"/>
    <url>/posts/38606.html</url>
    
    <content type="html"><![CDATA[<p>如果我们需要在大陆的服务器&#x2F;网络上使用telegram bot的API，那要么翻墙要么反代。本来可以用CloudFlare的workers进行反代，但前不久它已经被墙了。但是我们可以用自己的<strong>国外</strong>服务器进行反代。</p><span id="more"></span><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li>不受GFW封锁的服务器</li><li>一个没有被墙的域名</li></ul><h1 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h1><p>这个应该不必说。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Ubuntu或者Debian</span><br>apt install nginx<br><span class="hljs-comment"># CentOS或者Red Hat</span><br>yum install nginx<br></code></pre></td></tr></table></figure><h1 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h1><p>找到你nginx的配置文件，在http{}中加上下面的配置。</p><p>目前较新版本的nginx是在 <code>/etc/nginx/conf.d/</code> 文件夹下。</p><p>老一点的版本是在： <code>/etc/nginx/sites-available/</code> 文件夹下。</p><p>新建<code>.conf</code>结尾的文件即可。例如：<code>vim /etc/nginx/conf.d/telebotapi.conf</code></p><p>然后加入下面配置 （记得把 <code>yourDomainName</code> 换成你的域名，有两处）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># http强制跳转到htpps</span><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">yourDomainName;</span><br><br>    <span class="hljs-comment"># Enforce HTTPS</span><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$server_name$request_uri;</span><br>&#125;<br><span class="hljs-comment">## https</span><br><span class="hljs-string">server</span> &#123;<br>        <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl;</span><br>        <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl;</span><br><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">yourDomainName;</span><br><br>        <span class="hljs-comment">## ssl密钥路径自己改改</span><br><span class="hljs-comment">#ssl_certificate server.pem;</span><br><span class="hljs-comment">#ssl_certificate_key server.key;</span><br><br>        <span class="hljs-comment">## root非必要</span><br><span class="hljs-string">root</span> <span class="hljs-string">/var/www/tgbot/;</span><br><br>        <span class="hljs-comment">## dns必须写，不然会报502错误</span><br>        <span class="hljs-string">resolver</span> <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span><span class="hljs-string">;</span><br><br>        <span class="hljs-comment">## 以bot开头的请求都会被正则匹配到</span><br>        <span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">^/bot</span> &#123;<br><span class="hljs-string">proxy_buffering</span> <span class="hljs-string">off;</span><br>                <span class="hljs-string">proxy_pass</span>  <span class="hljs-string">https://api.telegram.org$request_uri;</span><br>                <span class="hljs-string">proxy_http_version</span> <span class="hljs-number">1.1</span><span class="hljs-string">;</span><br>        &#125;<br><br>        <span class="hljs-comment">## 和上面root一样非必要，这个主要是用来确认服务器状态的。也可以改成return 403</span><br><span class="hljs-string">location</span> <span class="hljs-string">/</span>&#123; <br><span class="hljs-string">try_files</span> <span class="hljs-string">/$uri</span> <span class="hljs-string">$uri</span> <span class="hljs-string">/index.html;</span><br>&#125;<br><br>        <span class="hljs-comment">## no log no fix</span><br>        <span class="hljs-string">error_log</span>    <span class="hljs-string">/var/log/tg.log</span>  <span class="hljs-string">error;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><code>yourDomainName</code>-<font color="red">你准备的域名</font></p><p>测试一下语法是否正确：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nginx -t</span><br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is successful<br></code></pre></td></tr></table></figure><p>重新加载配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl reload nginx<br></code></pre></td></tr></table></figure><p>🎉然后执行 <code>systemctl restart nginx</code> </p><h1 id="安装certbot（申请证书用）"><a href="#安装certbot（申请证书用）" class="headerlink" title="安装certbot（申请证书用）"></a>安装certbot（申请证书用）</h1><p>如果已经有证书，直接将Nginx配置文件中<code>ssl_certificate server.pem;</code> <code>ssl_certificate_key server.key;</code> 写入你的证书地址，并取消注释（删除<code>#</code>）即可，那可以跳过本小节。</p><p><code>ssl_certificate</code>-SSL证书路径<br><code>ssl_certificate_key</code>-SSL证书路径</p><p>不知道的可以参考文章：<a href="https://pawswrite.xyz/posts/24128.html">自动为你的域名申请证书：certbot的安装和使用</a></p><h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p>将原来的 <code>https://api.telegram.org/</code> 替换为 <code>https://yourDomainName/</code> ,即可正常推送消息</p><h1 id="防止盗用"><a href="#防止盗用" class="headerlink" title="防止盗用"></a>防止盗用</h1><h1 id="用防火墙限制访问的源IP"><a href="#用防火墙限制访问的源IP" class="headerlink" title="用防火墙限制访问的源IP"></a>用防火墙限制访问的源IP</h1><p><code>serverIp</code>-你用来访问反代域名的ip地址,你系统安装的那个就用那个命令,<code>ufw</code> <code>iptables</code> 都可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#ubuntu</span><br>ufw allow proto tcp from serverIp to any port 443<br><span class="hljs-comment">#centos</span><br>iptables -I INPUT -p tcp --dport 443 -j DROP<br>iptables -I INPUT -s serverIp -p tcp --dport 443 -j ACCEPT<br></code></pre></td></tr></table></figure><p>但问题是如果你用了反代的服务器建了别的站，会导致别的站不能访问。不过你可以换个端口来反代telegram bot，相应的，防火墙规则也换一个端口就好。</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><blockquote><p>本文参考哪吒面板文档：<a href="https://nezhahq.github.io/guide/q1.html" target="_blank" rel="noopener external nofollow noreferrer">TG api被墙解决方案</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>Telegram Bot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Nginx做简单反向代理</title>
    <link href="/posts/41647.html"/>
    <url>/posts/41647.html</url>
    
    <content type="html"><![CDATA[<p>Nginx是一个很强大的轻量级的Web服务器、反向代理服务器，由于它的内存占用少，启动极快，高并发能力强，在互联网项目中广泛应用。如果想要在一个服务器上布置很多个站点，并且都直接用域名不加端口号，也就是用443&#x2F;80端口访问，那么反向代理必不可少。本文用搭建 <code>Speedtest-x</code> 服务器来介绍简单的Nginx反代。</p><span id="more"></span><h1 id="首先搭建站点"><a href="#首先搭建站点" class="headerlink" title="首先搭建站点"></a>首先搭建站点</h1><p>首先可以看<a href="https://pawswrite.xyz/2022/06/01/Deploy-your-own-speedtest-website/">用服务器搭建你自己的SpeedTest测速服务器</a>来搭建自己的网页，但最后是访问 <code>&#123;IP&#125;:&#123;端口&#125;/index.html</code> 进行测速打开网页，这样很不方便。这里我们记住端口号就好。</p><h1 id="修改端口的host"><a href="#修改端口的host" class="headerlink" title="修改端口的host"></a>修改端口的host</h1><p>对于<a href="https://pawswrite.xyz/2022/06/01/Deploy-your-own-speedtest-website/">用服务器搭建你自己的SpeedTest测速服务器</a>这篇文章，我们的站点是可以通过外网来访问端口最终来访问网页的，但既然我们已经要进行反代了，那么对外网开放端口并不是一个很好的选择。我们可以先停止之前的容器。</p><p><code>docker ps</code>查看容器信息，找到对应的容器ID（CONTAINER ID）。</p><p>然后<code>docker stop speedtest-x &amp;&amp; docker rm speedtest-x</code>或者<code>docker stop 容器ID &amp;&amp; docker rm 容器ID</code></p><ol><li><p>arm架构<br>运行 <code>docker run -d -p 127.0.0.1:9001:80 -it --name speedtest-x stilleshan/speedtest-x</code></p></li><li><p>amd架构<br>运行 <code>docker run -d -p 127.0.0.1:9001:80 -it --name speedtest-x badapple9/speedtest-x</code></p></li></ol><h1 id="Nginx-反代"><a href="#Nginx-反代" class="headerlink" title="Nginx 反代"></a>Nginx 反代</h1><h2 id="新建配置文件"><a href="#新建配置文件" class="headerlink" title="新建配置文件"></a>新建配置文件</h2><p>在 <code>/etc/nginx/conf.d/</code> 文件夹下新建 <code>.conf</code> 结尾的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/speedtest-x.conf<br></code></pre></td></tr></table></figure><p>将下面配置复制进去，记得把域名 <code>speedtest.pawswrite.xyz</code> 改成你的域名，有两处：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">speedtest.pawswrite.xyz;</span><br><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$host$request_uri;</span><br>&#125;<br><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-comment"># Replace bark.app.dev with your real domain name.</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">speedtest.pawswrite.xyz;</span><br><br>    <span class="hljs-comment"># ssl_certificate /path/to/signed_cert_plus_intermediates;</span><br>    <span class="hljs-comment"># ssl_certificate_key /path/to/private_key;</span><br>    <span class="hljs-string">ssl_session_timeout</span> <span class="hljs-string">1d;</span><br>    <span class="hljs-string">ssl_session_cache</span> <span class="hljs-string">shared:MozSSL:10m;</span>  <span class="hljs-comment"># about 40000 sessions</span><br>    <span class="hljs-string">ssl_session_tickets</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># modern configuration</span><br>    <span class="hljs-string">ssl_protocols</span> <span class="hljs-string">TLSv1.3;</span><br>    <span class="hljs-string">ssl_prefer_server_ciphers</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># HSTS (ngx_http_headers_module is required) (63072000 seconds)</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Strict-Transport-Security</span> <span class="hljs-string">&quot;max-age=63072000&quot;</span> <span class="hljs-string">always;</span><br><br>    <span class="hljs-comment"># OCSP stapling</span><br>    <span class="hljs-string">ssl_stapling</span> <span class="hljs-string">on;</span><br>    <span class="hljs-string">ssl_stapling_verify</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-comment"># verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br>    <span class="hljs-comment"># ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><br>    <span class="hljs-comment"># replace with the IP address of your resolver</span><br>    <span class="hljs-comment">#resolver 127.0.0.1;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br><br>        <span class="hljs-string">log_not_found</span> <span class="hljs-string">on;</span><br>        <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://127.0.0.1:9001;</span><br><br>        <span class="hljs-string">proxy_read_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_connect_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_redirect</span> <span class="hljs-string">off;</span><br><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span>              <span class="hljs-string">$host;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$scheme;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Real-IP</span>         <span class="hljs-string">$remote_addr;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>测试一下语法是否正确：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nginx -t</span><br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is successful<br></code></pre></td></tr></table></figure><p>重新加载配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl reload nginx<br></code></pre></td></tr></table></figure><h1 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h1><h1 id="安装certbot"><a href="#安装certbot" class="headerlink" title="安装certbot"></a>安装certbot</h1><p>看另一篇文章。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器主机推荐（带aff）</title>
    <link href="/posts/35000.html"/>
    <url>/posts/35000.html</url>
    
    <content type="html"><![CDATA[<p>服务器推荐（带aff）。以高性价比服务器为主。</p><span id="more"></span><h1 id="高配建站用"><a href="#高配建站用" class="headerlink" title="高配建站用"></a>高配建站用</h1><h2 id="SpeedyPage"><a href="#SpeedyPage" class="headerlink" title="SpeedyPage"></a>SpeedyPage</h2><p class="note note-primary">【强烈推荐】建站的性价比之选，考虑国内访问的话，服务器建议选新加坡。</p><blockquote><p>本博客测评文章在：<a href="https://pawswrite.xyz/posts/a3057227.html">SpeedyPage VPS 全方位测评</a></p></blockquote><p><a href="https://my.speedypage.com/aff.php?aff=115" target="_blank" rel="noopener external nofollow noreferrer">SpeedyPage 注册链接</a></p><p><a class="btn" href="https://my.speedypage.com/aff.php?aff=115" title="Register">SpeedyPage 点此注册</a></p><p>简介：<br>伦敦新商户，历史短，但服务器相对高配，工单回复很快，硬盘是三星 980 Pro NVMe Gen4 ，CPU 是 AMD Ryzen 9 5950X 16-Core Processor CPU</p><blockquote><p>购买后回复<a href="https://lowendspirit.com/discussion/4148/speedypage-3-2ghz-kvm-vps-in-the-uk-daily-backups-double-bandwidth#latest" target="_blank" rel="noopener external nofollow noreferrer">LET帖子</a>获得双倍流量，新加坡没有双倍</p></blockquote><p>总结一下：</p><ul><li><input checked="" disabled="" type="checkbox"> <strong>高性能</strong> CPU，一个顶俩</li><li><input checked="" disabled="" type="checkbox"> <strong>99.99%</strong> 的在线率保证<ul><li>根据他家 <a href="https://speedypage.com/how-to/kb/sla-guarantee/" target="_blank" rel="noopener external nofollow noreferrer">SLA</a> ，每宕机15分钟就赔偿月付的10%</li></ul></li><li><input checked="" disabled="" type="checkbox"> <strong>每日备份</strong>：但只有1个备份位</li><li><input checked="" disabled="" type="checkbox"> <strong>DDOS 防护</strong>：提供 <code>100 Gbit+</code> 的 <code>DDOS</code> 保护</li><li><input checked="" disabled="" type="checkbox"> 支付方式：支持Stripe（信用卡）、PayPal、支付宝、比特币、银行转账</li><li><input checked="" disabled="" type="checkbox"> 区域：新加坡，伦敦，美国阿什本可选，可随时发工单更换区域，且保留数据</li><li><input checked="" disabled="" type="checkbox"> 退款政策：60 天退款保证（不过到底能不能退就不清楚了）</li><li><input checked="" disabled="" type="checkbox"> 系统支持：内存 <code>2 GB</code> 以及 <code>2 GB</code> 以上提供 <code>Windows</code> 支持。提供 <code>Oracle Linux</code> 等等</li><li><input checked="" disabled="" type="checkbox"> 提供 <code>/64 IPv6</code></li></ul><p>优惠码：<br>虚拟主机，循环优惠20%：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">LES20OFF<br></code></pre></td></tr></table></figure><p>VPS服务器，日常循环优惠10%：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">LET10OFF<br></code></pre></td></tr></table></figure><p>VPS服务器，**黑五循环优惠20%**：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">BF20<br></code></pre></td></tr></table></figure><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>可选区域（可发工单带数据互相迁移）：</p><ul><li>新加坡</li><li>英国伦敦</li><li>美国阿什本</li></ul><table><thead><tr><th><img src="https://speedypage.com/images/sm-cpu.svg">CPU</th><th><img src="https://speedypage.com/images/sm-ram.svg">内存</th><th><img src="https://speedypage.com/images/sm-ssd.svg">NVMe 硬盘</th><th><img src="https://speedypage.com/images/sm-bandwidth.svg">流量和带宽</th><th><img src="https://speedypage.com/images/sm-websites.svg">IP 分配</th><th><img src="https://speedypage.com/images/sm-backup.svg">每日备份</th><th>价格</th><th>购买链接</th></tr></thead><tbody><tr><td>1 Core</td><td>1 GB DDR4</td><td>15 GB</td><td>2 TB @ 1000 Mbps<img src="https://speedypage.com/images/anti-ddos.svg"></td><td>1 IPv4 &amp; &#x2F;64 IPv6</td><td><img src="https://speedypage.com/images/included.svg">支持</td><td><strong>$4.29&#x2F;月</strong></td><td><a href="https://my.speedypage.com/cart.php?a=add&aff=115&pid=41&cy=4" target="_blank" rel="noopener external nofollow noreferrer">现在订购</a></td></tr><tr><td>1 Core</td><td>2 GB DDR4</td><td>30 GB</td><td>5 TB @ 1000 Mbps<img src="https://speedypage.com/images/anti-ddos.svg"></td><td>1 IPv4 &amp; &#x2F;64 IPv6</td><td><img src="https://speedypage.com/images/included.svg">支持</td><td><strong>$5.99&#x2F;月</strong></td><td><a href="https://my.speedypage.com/cart.php?a=add&aff=115&pid=43&cy=4" target="_blank" rel="noopener external nofollow noreferrer">现在订购</a></td></tr><tr><td>2 Cores</td><td>4 GB DDR4</td><td>60 GB</td><td>8 TB @ 1000 Mbps<img src="https://speedypage.com/images/anti-ddos.svg"></td><td>1 IPv4 &amp; &#x2F;64 IPv6</td><td><img src="https://speedypage.com/images/included.svg">支持</td><td><strong>$11.99&#x2F;月</strong></td><td><a href="https://my.speedypage.com/cart.php?a=add&aff=115&pid=45&cy=4" target="_blank" rel="noopener external nofollow noreferrer">现在订购</a></td></tr><tr><td>3 Cores</td><td>6 GB DDR4</td><td>90 GB</td><td>10 TB @ 1000 Mbps<img src="https://speedypage.com/images/anti-ddos.svg"></td><td>1 IPv4 &amp; &#x2F;64 IPv6</td><td><img src="https://speedypage.com/images/included.svg">支持</td><td><strong>$15.49&#x2F;月</strong></td><td><a href="https://my.speedypage.com/cart.php?a=add&aff=115&pid=49&cy=4" target="_blank" rel="noopener external nofollow noreferrer">现在订购</a></td></tr><tr><td>4 Cores</td><td>8 GB DDR4</td><td>120 GB</td><td>12 TB @ 1000 Mbps<img src="https://speedypage.com/images/anti-ddos.svg"></td><td>1 IPv4 &amp; &#x2F;64 IPv6</td><td><img src="https://speedypage.com/images/included.svg">支持</td><td><strong>$17.99&#x2F;月</strong></td><td><a href="https://my.speedypage.com/cart.php?a=add&aff=115&pid=52&cy=4" target="_blank" rel="noopener external nofollow noreferrer">现在订购</a></td></tr><tr><td>4 Cores</td><td>10 GB DDR4</td><td>150 GB</td><td>14 TB @ 1000 Mbps<img src="https://speedypage.com/images/anti-ddos.svg"></td><td>1 IPv4 &amp; &#x2F;64 IPv6</td><td><img src="https://speedypage.com/images/included.svg">支持</td><td><strong>$23.99&#x2F;月</strong></td><td><a href="https://my.speedypage.com/cart.php?a=add&aff=115&pid=54&cy=4" target="_blank" rel="noopener external nofollow noreferrer">现在订购</a></td></tr><tr><td>5 Cores</td><td>12 GB DDR4</td><td>180 GB</td><td>16 TB @ 1000 Mbps<img src="https://speedypage.com/images/anti-ddos.svg"></td><td>1 IPv4 &amp; &#x2F;64 IPv6</td><td><img src="https://speedypage.com/images/included.svg">支持</td><td><strong>$27.49&#x2F;月</strong></td><td><a href="https://my.speedypage.com/cart.php?a=add&aff=115&pid=56&cy=4" target="_blank" rel="noopener external nofollow noreferrer">现在订购</a></td></tr></tbody></table><blockquote><p>顺便说一下，他家后台控制面板真的挺好看的，支持的系统也挺全</p></blockquote><p><img src="/posts/35000/os.png"></p><p><img src="https://speedypage.com/images/vf.png" alt="后套控制面板"></p><h3 id="其他服务"><a href="#其他服务" class="headerlink" title="其他服务"></a>其他服务</h3><p>考虑到他家 99.99 % 的在线率保证，其实其他服务也可以考虑。</p><p>复制下面优惠码，可获得<strong>第一个月1美元</strong>：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">FIRSTMONTH</span><br></code></pre></td></tr></table></figure><blockquote><p>2022 年 11 月 18 日过期</p></blockquote><p>支持 <code>.uk, .co.uk, .org.uk, .me.uk, .ltd.uk, .net.uk, .plc.uk</code> 免费域名注册。</p><h4 id="网站托管"><a href="#网站托管" class="headerlink" title="网站托管"></a>网站托管</h4><p><a class="btn" href="https://my.speedypage.com/aff.php?aff=115" title="Register">点此注册</a></p><p>所有套餐首月仅需一美元，不同套餐具体配置可以去官网看。</p><ul><li><img src="https://speedypage.com/images/circle-checkmark.svg">NVMe Disk Space</li><li><img src="https://speedypage.com/images/circle-checkmark.svg">免费当日迁移</li><li><img src="https://speedypage.com/images/circle-checkmark.svg">60 天退款保证</li></ul><p>最低套餐 $3.29&#x2F;mo ：</p><ul><li><img src="https://speedypage.com/images/sm-websites.svg"><strong>2</strong> 托管网站</li><li><img src="https://speedypage.com/images/sm-bandwidth.svg"><strong>无限</strong> 流量</li><li><img src="https://speedypage.com/images/sm-features.svg"><strong>无限</strong> 子域名, 邮件, MySQL, Databases, &amp; FTP 账号</li><li><img src="https://speedypage.com/images/sm-anycast.svg">Anycast DNS</li><li><img src="https://speedypage.com/images/sm-ram.svg">2 GB Memory</li><li><img src="https://speedypage.com/images/sm-cpu.svg">1 CPU Core</li><li><img src="https://speedypage.com/images/sm-entry.svg">25 Entry Processes</li><li><img src="https://speedypage.com/images/sm-backup.svg">Daily Backups (Stored<br>for 31 days)</li><li><img src="https://speedypage.com/images/anti-ddos.svg">DDoS Protection</li><li><img src="https://speedypage.com/images/sm-cp.svg">cPanel Control Panel<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3></li></ul><ul><li>WordPress 托管：<ul><li>WordPress Deluxe</li><li>邮局</li><li>免费SSL</li><li>80Tbit+ CDN</li><li>Imunify360 安全套件</li></ul></li><li>Reseller Hosting</li></ul><h1 id="低配学习用"><a href="#低配学习用" class="headerlink" title="低配学习用"></a>低配学习用</h1><h2 id="RackNerd"><a href="#RackNerd" class="headerlink" title="RackNerd"></a>RackNerd</h2><p>一直在用，线路还行，就这个价位来说，性价比非常高。有几年的历史了，但老板有官司在身，人品存疑，有跑路风险，<strong>不建议建站</strong>。实在需要建站的话<strong>建议定时备份数据</strong>。</p><p>实时监控：<a href="https://status.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">https://status.racknerd.com/</a><br>官网：<a href="https://www.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">https://www.racknerd.com/</a></p><h3 id="RackNerd-VPS-所有目前在售特价促销小鸡汇总："><a href="#RackNerd-VPS-所有目前在售特价促销小鸡汇总：" class="headerlink" title="RackNerd VPS 所有目前在售特价促销小鸡汇总："></a>RackNerd VPS 所有目前在售特价促销小鸡汇总：</h3><p>本站有很多服务器自建教程，除了 <code>bitwarden</code> ，一般 <code>1c1g</code> 就能玩转大部分自建项目。如果只是想用来科学上网，那最低配 512MB 内存都<strong>绰绰有余</strong>。</p><p>下面一些服务器可以在<a href="https://lowendtalk.com/" target="_blank" rel="noopener external nofollow noreferrer">LowEndTalk</a>回复，或者可以发工单，来流量加倍。但反正一般用不完这个流量。</p><p>推荐机房：<strong>洛杉矶DC02</strong> 和 <strong>圣何塞</strong>，个人建议，如果可选<strong>洛杉矶DC02</strong>就选它。</p><h4 id="2022年双11"><a href="#2022年双11" class="headerlink" title="2022年双11"></a>2022年双11</h4><p>2022’s 11.11 Promo</p><table><thead><tr><th align="center">内存</th><th align="center">CPU</th><th align="center">SSD</th><th align="center">流量&#x2F;月</th><th align="center">价格&#x2F;年</th><th align="center">购买</th></tr></thead><tbody><tr><td align="center">1.11 GB</td><td align="center">1 vCPU</td><td align="center">11G</td><td align="center">3000GB</td><td align="center">$11.11</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=687&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">2.11 GB</td><td align="center">1 vCPU</td><td align="center">21G</td><td align="center">4000GB</td><td align="center">$17.11</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=688&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">3.11 GB</td><td align="center">2 vCPU</td><td align="center">41G</td><td align="center">5000GB</td><td align="center">$29.11</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=689&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">4.11 GB</td><td align="center">2 vCPU</td><td align="center">61G</td><td align="center">5000GB</td><td align="center">$48.11</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=690&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr></tbody></table><h4 id="历年促销服务器（可能缺货）"><a href="#历年促销服务器（可能缺货）" class="headerlink" title="历年促销服务器（可能缺货）"></a>历年促销服务器（可能缺货）</h4><table><thead><tr><th align="center">内存</th><th align="center">CPU</th><th align="center">SSD</th><th align="center">流量&#x2F;月</th><th align="center">价格&#x2F;年</th><th align="center">购买</th></tr></thead><tbody><tr><td align="center">【荐】512MB</td><td align="center">1C</td><td align="center">10G</td><td align="center">1T</td><td align="center">$9.89</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=620&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">768MB</td><td align="center">1C</td><td align="center">12G</td><td align="center">1T</td><td align="center">$10.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=587&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">768MB</td><td align="center">1C</td><td align="center">10G</td><td align="center">2T</td><td align="center">$11.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=679&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">【荐】1G</td><td align="center">1C</td><td align="center">20G</td><td align="center">2T</td><td align="center">$13.98</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=621&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">1G</td><td align="center">1C</td><td align="center">25G</td><td align="center">4T</td><td align="center">$14.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=588&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">1.2G</td><td align="center">1C</td><td align="center">18G</td><td align="center">2T</td><td align="center">$14.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=670&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">1G</td><td align="center">1C</td><td align="center">16G</td><td align="center">3T</td><td align="center">$14.98</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=680&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">1.5G</td><td align="center">2C</td><td align="center">20G</td><td align="center">4T</td><td align="center">$16.55</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=135&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">2G</td><td align="center">2C</td><td align="center">25G</td><td align="center">4T</td><td align="center">$20.98</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=681&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">2G</td><td align="center">3C</td><td align="center">25G</td><td align="center">3T</td><td align="center">$21.80</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=58&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">2.5G</td><td align="center">3C</td><td align="center">40G</td><td align="center">6.5T</td><td align="center">$23.49</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=137&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">2G</td><td align="center">2C</td><td align="center">35G</td><td align="center">4T</td><td align="center">$24.98</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=622&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">2.5G</td><td align="center">2C</td><td align="center">40G</td><td align="center">3T</td><td align="center">$25.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=671&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">2.5G</td><td align="center">3C</td><td align="center">40G</td><td align="center">6T</td><td align="center">$27.80</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=57&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">2.5G</td><td align="center">2C</td><td align="center">50G</td><td align="center">6T</td><td align="center">$27.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=589&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">【荐】3G</td><td align="center">3C</td><td align="center">40G</td><td align="center">4T</td><td align="center">$27.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=147&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">3.5G</td><td align="center">3C</td><td align="center">45G</td><td align="center">7T</td><td align="center">$28.99</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=130&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">3G</td><td align="center">3C</td><td align="center">33G</td><td align="center">6T</td><td align="center">$29.89</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=122&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">3G</td><td align="center">2C</td><td align="center">35G</td><td align="center">5T</td><td align="center">$29.99</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=473&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">3G</td><td align="center">2C</td><td align="center">50G</td><td align="center">6T</td><td align="center">$31.98</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=623&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">3G</td><td align="center">2C</td><td align="center">60G</td><td align="center">8T</td><td align="center">$34.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=590&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">3.5G</td><td align="center">2C</td><td align="center">60G</td><td align="center">6T</td><td align="center">$35.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=672&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">4G</td><td align="center">3C</td><td align="center">75G</td><td align="center">10T</td><td align="center">$43.39</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=591&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">5.5G</td><td align="center">4C</td><td align="center">88G</td><td align="center">10T</td><td align="center">$63.88</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=254&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">8G</td><td align="center">4C</td><td align="center">100G</td><td align="center">5T</td><td align="center">$89</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=312&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">6G</td><td align="center">4C</td><td align="center">140G</td><td align="center">6T</td><td align="center">$95</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=63&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr><tr><td align="center">8G</td><td align="center">4C</td><td align="center">200G</td><td align="center">8T</td><td align="center">$135</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=64&ref=pawswrite.xyz" target="_blank" rel="noopener external nofollow noreferrer">链接</a></td></tr></tbody></table><h3 id="Looking-Glass-x2F-网络测速"><a href="#Looking-Glass-x2F-网络测速" class="headerlink" title="Looking Glass &#x2F; 网络测速"></a>Looking Glass &#x2F; 网络测速</h3><ul><li>圣何塞 – <a href="http://lg-sj.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">http://lg-sj.racknerd.com/</a></li><li>洛杉矶<ul><li>LA-DC01 - <a href="http://lg-lax.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">http://lg-lax.racknerd.com/</a></li><li>LA-DC02 – <a href="https://lg-lax02.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">https://lg-lax02.racknerd.com/</a></li></ul></li><li>芝加哥 – <a href="http://lg-chi.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">http://lg-chi.racknerd.com/</a></li><li>纽约 – <a href="http://lg-ny.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">http://lg-ny.racknerd.com/</a></li><li>弗吉尼亚 – <a href="http://lg-ash.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">http://lg-ash.racknerd.com/</a></li><li>亚特兰大 – <a href="http://lg-atl.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">http://lg-atl.racknerd.com/</a></li><li>西雅图 – <a href="http://lg-sea.racknerd.com/" target="_blank" rel="noopener external nofollow noreferrer">http://lg-sea.racknerd.com/</a></li></ul><h3 id="附一个跑分"><a href="#附一个跑分" class="headerlink" title="附一个跑分"></a>附一个跑分</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs clean">## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #<br>##              Yet-Another-Bench-Script              #<br>##                     v2022<span class="hljs-number">-05</span><span class="hljs-number">-06</span>                    #<br>## https:<span class="hljs-comment">//github.com/masonr/yet-another-bench-script #</span><br>## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #<br><br>Sat <span class="hljs-number">11</span> Jun <span class="hljs-number">2022</span> <span class="hljs-number">01</span>:<span class="hljs-number">39</span>:<span class="hljs-number">11</span> PM EDT<br><br>Basic System Information:<br>---------------------------------<br>Uptime     : <span class="hljs-number">7</span> days, <span class="hljs-number">1</span> hours, <span class="hljs-number">5</span> minutes<br>Processor  : Intel(R) Xeon(R) CPU E5<span class="hljs-number">-2690</span> <span class="hljs-number">0</span> @ <span class="hljs-number">2.90</span>GHz<br>CPU cores  : <span class="hljs-number">1</span> @ <span class="hljs-number">2899.996</span> MHz<br>AES-NI     : ✔ Enabled<br>VM-x/AMD-V : ❌ Disabled<br>RAM        : <span class="hljs-number">735.1</span> MiB<br>Swap       : <span class="hljs-number">765.0</span> MiB<br>Disk       : <span class="hljs-number">14.0</span> GiB<br>Distro     : Debian GNU/Linux <span class="hljs-number">10</span> (buster)<br>Kernel     : <span class="hljs-number">4.19</span><span class="hljs-number">.0</span><span class="hljs-number">-20</span>-amd64<br><br>fio Disk Speed Tests (Mixed R/W <span class="hljs-number">50</span>/<span class="hljs-number">50</span>):<br>---------------------------------<br>Block Size | <span class="hljs-number">4</span>k            (IOPS) | <span class="hljs-number">64</span>k           (IOPS)<br>  ------   | ---            ----  | ----           ---- <br>Read       | <span class="hljs-number">71.15</span> MB/s   (<span class="hljs-number">17.7</span>k) | <span class="hljs-number">954.21</span> MB/s  (<span class="hljs-number">14.9</span>k)<br>Write      | <span class="hljs-number">71.34</span> MB/s   (<span class="hljs-number">17.8</span>k) | <span class="hljs-number">959.24</span> MB/s  (<span class="hljs-number">14.9</span>k)<br>Total      | <span class="hljs-number">142.49</span> MB/s  (<span class="hljs-number">35.6</span>k) | <span class="hljs-number">1.91</span> GB/s    (<span class="hljs-number">29.8</span>k)<br>           |                      |                     <br>Block Size | <span class="hljs-number">512</span>k          (IOPS) | <span class="hljs-number">1</span>m            (IOPS)<br>  ------   | ---            ----  | ----           ---- <br>Read       | <span class="hljs-number">1.21</span> GB/s     (<span class="hljs-number">2.3</span>k) | <span class="hljs-number">1.20</span> GB/s     (<span class="hljs-number">1.1</span>k)<br>Write      | <span class="hljs-number">1.27</span> GB/s     (<span class="hljs-number">2.4</span>k) | <span class="hljs-number">1.28</span> GB/s     (<span class="hljs-number">1.2</span>k)<br>Total      | <span class="hljs-number">2.49</span> GB/s     (<span class="hljs-number">4.8</span>k) | <span class="hljs-number">2.48</span> GB/s     (<span class="hljs-number">2.4</span>k)<br><br>iperf3 Network Speed Tests (IPv4):<br>---------------------------------<br>Provider        | Location (Link)           | Send Speed      | Recv Speed     <br>                |                           |                 |                <br>Clouvider       | London, UK (<span class="hljs-number">10</span>G)          | <span class="hljs-number">618</span> Mbits/sec   | <span class="hljs-number">90.7</span> Mbits/sec <br>Online.net      | Paris, FR (<span class="hljs-number">10</span>G)           | <span class="hljs-number">637</span> Mbits/sec   | <span class="hljs-number">52.5</span> Mbits/sec <br>Hybula          | The Netherlands (<span class="hljs-number">40</span>G)     | <span class="hljs-number">596</span> Mbits/sec   | <span class="hljs-number">486</span> Mbits/sec  <br>Clouvider       | NYC, NY, US (<span class="hljs-number">10</span>G)         | <span class="hljs-number">762</span> Mbits/sec   | <span class="hljs-number">190</span> Mbits/sec  <br>Velocity Online | Tallahassee, FL, US (<span class="hljs-number">10</span>G) | busy            | busy           <br>Clouvider       | Los Angeles, CA, US (<span class="hljs-number">10</span>G) | <span class="hljs-number">809</span> Mbits/sec   | <span class="hljs-number">836</span> Mbits/sec  <br><br>Geekbench <span class="hljs-number">5</span> Benchmark Test:<br>---------------------------------<br>Test            | Value                         <br>                |                               <br>Single Core     | <span class="hljs-number">476</span>                           <br>Multi Core      | <span class="hljs-number">496</span>                           <br>Full Test       | https:<span class="hljs-comment">//browser.geekbench.com/v5/cpu/15416382</span><br></code></pre></td></tr></table></figure><h3 id="RN-流量翻倍"><a href="#RN-流量翻倍" class="headerlink" title="RN 流量翻倍"></a>RN 流量翻倍</h3><p>购买完成后，可进行流量翻倍（虽然此活动有适用范围，但实行的很灵活，目前全适用，算福利）</p><h4 id="方法1：到LET（lowendtalk）论坛的特定贴子里回帖"><a href="#方法1：到LET（lowendtalk）论坛的特定贴子里回帖" class="headerlink" title="方法1：到LET（lowendtalk）论坛的特定贴子里回帖"></a>方法1：到LET（lowendtalk）论坛的<a href="https://lowendtalk.com/discussion/178275/its-over-heres-this-dont-forget/p1" target="_blank" rel="noopener external nofollow noreferrer">特定贴子</a>里回帖</h4><p>回帖评论可以直接用这个模板：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Hello, I would like to double the bandwidth.<br><span class="hljs-keyword">Order</span> <span class="hljs-title">Number</span>: 邮件里有<br>Invoice ID: <span class="hljs-comment">#邮件里有</span><br>Thanks!<br></code></pre></td></tr></table></figure><p>没LET账号的可注册一个，注册时候需要填写注册理由（比如想来交流学习了解VPS资讯），译成英文后写上去。要验证邮箱，等待LET论坛管理员审核你的信息，审核通过会收到邮件，就能正常使用账号回帖评论了）</p><h4 id="方法2：可以发工单申请翻倍"><a href="#方法2：可以发工单申请翻倍" class="headerlink" title="方法2：可以发工单申请翻倍"></a>方法2：可以发工单申请翻倍</h4><p>（我在LOC有看到某些MJJ成功的）</p><p>注：如果是去年&#x2F;前年买的错过翻倍流量的小鸡，可以用续费的invoice号（某MJJ分享的经历）</p><h4 id="方法3：可以找你走他链接的那位AFFman，请他帮忙在LET论坛回帖翻倍流量。"><a href="#方法3：可以找你走他链接的那位AFFman，请他帮忙在LET论坛回帖翻倍流量。" class="headerlink" title="方法3：可以找你走他链接的那位AFFman，请他帮忙在LET论坛回帖翻倍流量。"></a>方法3：可以找你走他链接的那位AFFman，请他帮忙在LET论坛回帖翻倍流量。</h4><p>（比如你走此贴上面链接买的，可以私信我，提供你的Order Number和Invoice ID，我帮你去回帖翻倍）</p><h3 id="流量用完"><a href="#流量用完" class="headerlink" title="流量用完"></a>流量用完</h3><p>流量少的当月不小心用完流量的，当月会停机，次月1号重置流量 (美西时间每月1号)</p><h3 id="机房介绍"><a href="#机房介绍" class="headerlink" title="机房介绍"></a>机房介绍</h3><p>RN VPS的机房目前主要是 CC 机房和 MC机房<br>CC 机房（全称ColoCrossing）：此机房IP基本被 Google 列入黑名单了，富强时搜索会跳Google 验证。圣何塞、西雅图、芝加哥、达拉斯等等都是这个。<br>MC机房（全称Multacom Corporation）：仅有洛杉矶DC2是这个机房。目前较挤，晚高峰表现差些，好处是 IP不会跳 Google 验证，另有IPv6。</p><p>各有优劣，一般建议可选洛杉矶或圣何塞，但最终还是根据自身需求和实测为准。</p><p>注：google跳验证码问题，可用一键脚本WARP 解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N https://cdn.jsdelivr.net/gh/fscarmen/warp/menu.sh &amp;&amp; bash menu.sh d <br></code></pre></td></tr></table></figure><p>（此脚本项目地址：<a href="https://github.com/fscarmen/warp" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/fscarmen/warp</a> ）</p><h3 id="机房迁移"><a href="#机房迁移" class="headerlink" title="机房迁移"></a>机房迁移</h3><p>如果你购买的套餐是多个机房可选的那种，可以发工单免费迁移，如果你买的是固定某个机房的，可能要花5刀迁移（一般情况也是免费），一些低价套餐（小于10刀）好像就迁移不了（成功&#x2F;失败案例都不少，以自己工单结果为准）。<br>工单意思可以这样说：线路不好请求换机房，请帮我把这台VPS迁移到XXX</p><p>注1：迁移后IP会变，数据会丢（做好备份），是台同配置的新机器，翻倍的流量可能会没。（可以工单意思回：我之前在Let论坛中留言过，流量翻倍到了2xT（英文注意用过去式表达）。现在流量变回了xt，能申请调整回2xt吗？）<br>注2：小鸡迁到LA（dc2）机房的，如果小鸡没有ipv6而自己又需要，可以发工单要个。RN 目前只有DC系列才有ipv6，幸运的话ipv6可以解锁奈飞。</p><h3 id="改邮箱"><a href="#改邮箱" class="headerlink" title="改邮箱"></a>改邮箱</h3><p>alenxu在2022-1-22曾说过：我们更换邮箱需要支付费用的哦，防止很多黄牛买了然后转手。<br>（RN公司员工在LOC的ID：alenxu）</p><p>不过，目前是可以发工单免费申请改邮箱。</p><h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><p>push一次是8刀费用，发工单提push。（push费用是按次算不是按台算的，比如A账号有4台小鸡，要push其中2台到B账号，只需支付8刀而不是16刀）</p>]]></content>
    
    
    <categories>
      
      <category>VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自动为你的域名申请证书：certbot的安装和使用</title>
    <link href="/posts/24128.html"/>
    <url>/posts/24128.html</url>
    
    <content type="html"><![CDATA[<p>certbot的安装和使用。</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>打开<a href="https://certbot.eff.org/" target="_blank" rel="noopener external nofollow noreferrer">Certbot官网</a>。</p><p>选择自己的web服务器和系统：</p><p><img src="/posts/24128/certbot.png"></p><p>比如 Nginx 和 Red Hat (没有这个所以选择CentOS)</p><p>跟着指示做即可</p><h1 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h1><p>先在nginx的配置文件的http{}中加上你的server{}部分，填入你的域名，certbot会自动检测。之后使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo certbot --nginx<br></code></pre></td></tr></table></figure><p>仅申请证书（不希望certbot修改你的nginx配置文件，希望自己修改的话用这个）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">certbot certonly --nginx<br></code></pre></td></tr></table></figure><p>手动模拟更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo certbot renew --dry-run<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux禁用ipv6</title>
    <link href="/posts/5248.html"/>
    <url>/posts/5248.html</url>
    
    <content type="html"><![CDATA[<p>有时候ipv6并不好用，所以需要禁用。</p><span id="more"></span><p>【非原创】</p><h1 id="查看是否启用ipv6"><a href="#查看是否启用ipv6" class="headerlink" title="查看是否启用ipv6"></a>查看是否启用ipv6</h1><p><code>ip a</code><br>如果启用了 IPv6 协议（您的网卡名称可能不同），应该可以看到inet6</p><h1 id="临时禁用"><a href="#临时禁用" class="headerlink" title="临时禁用"></a>临时禁用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1<br>sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1<br>sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1<br></code></pre></td></tr></table></figure><p>上述方法只是在 Ubuntu 系统中临时禁用了 IPv6 协议，重启后系统会自动再次启用 IPv6。</p><h1 id="永久禁用-IPv6"><a href="#永久禁用-IPv6" class="headerlink" title="永久禁用 IPv6"></a>永久禁用 IPv6</h1><p>通过本文编辑器来修改 &#x2F;etc&#x2F;sysctl.conf 文件：</p><ol><li><p>使用 VIM 或 Nano 等文件编辑器打开 &#x2F;etc&#x2F;sysctl.conf 配置文件</p></li><li><p>将以下 3 行内容添加到 &#x2F;etc&#x2F;sysctl.conf 配置文件当中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs conf">net.ipv6.conf.all.disable_ipv6=1<br>net.ipv6.conf.default.disable_ipv6=1<br>net.ipv6.conf.lo.disable_ipv6=1<br></code></pre></td></tr></table></figure></li><li><p>配置文件修改完成后，要使设置生效，还需要在「终端」中执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sysctl -p<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Docker】Docker 和 Docker Compose 安装</title>
    <link href="/posts/30011.html"/>
    <url>/posts/30011.html</url>
    
    <content type="html"><![CDATA[<p>本文介绍了 <code>Docker</code> 和 <code>Docker-compose</code> 的安装。</p><span id="more"></span><p>本文参考来源：学习资料【非官方】：<a href="https://yeasy.gitbook.io/docker_practice/" target="_blank" rel="noopener external nofollow noreferrer">Docker - 从入门到实践</a></p><h1 id="Docker-介绍"><a href="#Docker-介绍" class="headerlink" title="Docker 介绍"></a><code>Docker</code> 介绍</h1><p>Docker 使用 Google 公司推出的 Go 语言 进行开发实现，基于 Linux 内核的 cgroup，namespace，以及 OverlayFS 类的 Union FS 等技术，对进程进行<em>封装隔离</em>，属于 <strong>操作系统层面的虚拟化技术</strong>。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为<strong>容器</strong>。</p><p><img src="https://docs.microsoft.com/en-us/virtualization/windowscontainers/deploy-containers/media/docker-on-linux.png"></p><h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>官网：<a href="https://www.docker.com/" target="_blank" rel="noopener external nofollow noreferrer">Docker</a><br>文档：<a href="https://docs.docker.com/" target="_blank" rel="noopener external nofollow noreferrer">Docker Documentation</a></p><h1 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a><code>Docker</code> 安装</h1><h2 id="官方文档最新版本安装方式"><a href="#官方文档最新版本安装方式" class="headerlink" title="官方文档最新版本安装方式"></a>官方文档最新版本安装方式</h2><p>Docker 分为 stable test 和 nightly 三个更新频道。<br>官方网站上有各种环境下的 安装指南，这里主要介绍 <code>Docker</code> 在 Linux 、Windows 10 和 macOS 上的安装。最新版本可以参考官方文档：<br><code>https://docs.docker.com/desktop/linux/install/</code></p><h2 id="【推荐】使用脚本自动安装"><a href="#【推荐】使用脚本自动安装" class="headerlink" title="【推荐】使用脚本自动安装"></a>【推荐】使用脚本自动安装</h2><p>在测试或开发环境中 <code>Docker</code> 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装：<br>若你想安装测试版的 <code>Docker</code>, 请从 <code>test.docker.com</code> 获取脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># curl -fsSL test.docker.com -o get-docker.sh</span><br>curl -fsSL get.docker.com -o get-docker.sh<br>sudo sh get-docker.sh --mirror Aliyun<br><span class="hljs-comment"># sudo sh get-docker.sh --mirror AzureChinaCloud</span><br></code></pre></td></tr></table></figure><h2 id="Ubuntu包管理器"><a href="#Ubuntu包管理器" class="headerlink" title="Ubuntu包管理器"></a>Ubuntu包管理器</h2><p>两种安装方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install docker.io<br></code></pre></td></tr></table></figure><p>或者有snap的话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">snap install docker<br></code></pre></td></tr></table></figure><p>用snap安装会一起把 <code>Docker-compose</code> 也安装了，但安装的版本比较低。是 <code>docker-compose version 1.25.0</code> 。</p><h1 id="测试-Docker-是否安装正确"><a href="#测试-Docker-是否安装正确" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h1><p>查看<code>Docker</code>版本：<code>docker -v</code>。</p><p>测试启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker run --<span class="hljs-built_in">rm</span> hello-world<br></code></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Unable <span class="hljs-built_in">to</span> find image <span class="hljs-string">&#x27;hello-world:latest&#x27;</span> locally<br>latest: Pulling <span class="hljs-built_in">from</span> library/hello-world<br><span class="hljs-number">4</span>ee5c797bcd7: Pull complete<br>Digest: sha256:<span class="hljs-number">308866</span>a43596e83578c7dfa15e27a73011bdd402185a84c5cd7f32a88b501a24<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hello-world:latest<br><br>Hello <span class="hljs-built_in">from</span> Docker!<br>This message shows that your installation appears <span class="hljs-built_in">to</span> be working correctly.<br><br>To generate this message, Docker took <span class="hljs-keyword">the</span> following steps:<br> <span class="hljs-number">1.</span> The Docker client contacted <span class="hljs-keyword">the</span> Docker daemon.<br> <span class="hljs-number">2.</span> The Docker daemon pulled <span class="hljs-keyword">the</span> <span class="hljs-string">&quot;hello-world&quot;</span> image <span class="hljs-built_in">from</span> <span class="hljs-keyword">the</span> Docker Hub.<br>    (arm32v7)<br> <span class="hljs-number">3.</span> The Docker daemon created <span class="hljs-keyword">a</span> <span class="hljs-built_in">new</span> container <span class="hljs-built_in">from</span> that image which runs <span class="hljs-keyword">the</span><br>    executable that produces <span class="hljs-keyword">the</span> output you are currently reading.<br> <span class="hljs-number">4.</span> The Docker daemon streamed that output <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> Docker client, which sent <span class="hljs-keyword">it</span><br>    <span class="hljs-built_in">to</span> your terminal.<br><br>To <span class="hljs-keyword">try</span> something more ambitious, you can run <span class="hljs-keyword">an</span> Ubuntu container <span class="hljs-keyword">with</span>:<br> $ docker run -<span class="hljs-keyword">it</span> ubuntu bash<br><br>Share images, automate workflows, <span class="hljs-keyword">and</span> more <span class="hljs-keyword">with</span> <span class="hljs-keyword">a</span> free Docker ID:<br> <span class="hljs-keyword">https</span>://hub.docker.com/<br><br>For more examples <span class="hljs-keyword">and</span> ideas, visit:<br> <span class="hljs-keyword">https</span>://docs.docker.com/<span class="hljs-built_in">get</span>-started/<br></code></pre></td></tr></table></figure><p>若能正常输出以上信息，则说明安装成功。</p><h1 id="启动-Docker"><a href="#启动-Docker" class="headerlink" title="启动 Docker"></a>启动 Docker</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo systemctl <span class="hljs-built_in">enable</span> docker</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo systemctl start docker</span><br></code></pre></td></tr></table></figure><h1 id="Docker-compose-手动安装"><a href="#Docker-compose-手动安装" class="headerlink" title="Docker-compose 手动安装"></a><code>Docker-compose</code> 手动安装</h1><p>Linux 上我们可以从 Github 上下载它的二进制包来使用，最新发行的版本地址：</p><p><a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/docker/compose/releases</a></p><p>运行以下命令以下载 Docker Compose 的当前稳定版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo curl -L <span class="hljs-string">&quot;https://github.com/docker/compose/releases/download/v2.6.0/docker-compose-<span class="hljs-subst">$(uname -s)</span>-<span class="hljs-subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>要安装其他版本的 Compose，请替换 v2.2.2。</p><blockquote><p>国内镜像加速：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.6.0/docker-compose-`<span class="hljs-built_in">uname</span> -s`-`<span class="hljs-built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>将可执行权限应用于二进制文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>创建软链：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose<br></code></pre></td></tr></table></figure><p>测试是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose --version<br></code></pre></td></tr></table></figure><h1 id="Docker-compose-基础使用"><a href="#Docker-compose-基础使用" class="headerlink" title="Docker-compose 基础使用"></a><code>Docker-compose</code> 基础使用</h1><p>在测试目录中，执行以下命令来启动应用程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up<br></code></pre></td></tr></table></figure><p>如果你想在后台执行该服务可以加上 -d 参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux笔记：firewall-cmd防火墙使用</title>
    <link href="/posts/58059.html"/>
    <url>/posts/58059.html</url>
    
    <content type="html"><![CDATA[<p>一些<code>Red Hat</code> <code>CentOS</code> 防火墙使用笔记。用 <code>firewalld</code> 来管理 <code>iptables</code> 防火墙。</p><span id="more"></span><h1 id="一键开启"><a href="#一键开启" class="headerlink" title="一键开启"></a>一键开启</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --zone=public --add-port=22/tcp<br></code></pre></td></tr></table></figure><h1 id="运行、停止、禁用firewalld"><a href="#运行、停止、禁用firewalld" class="headerlink" title="运行、停止、禁用firewalld"></a>运行、停止、禁用firewalld</h1><p>启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start  firewalld<br></code></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status firewalld 或者 firewall-cmd --state<br></code></pre></td></tr></table></figure><p>停止：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">disable</span> firewalld<br></code></pre></td></tr></table></figure><p>禁用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop firewalld<br></code></pre></td></tr></table></figure><p>查看firewall是否运行,下面两个命令都可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status firewalld.service<br><br>firewall-cmd --state<br></code></pre></td></tr></table></figure><h1 id="查看default-zone和active-zone"><a href="#查看default-zone和active-zone" class="headerlink" title="查看default zone和active zone"></a>查看default zone和active zone</h1><p>默认的 <code>default zone</code> 和 <code>active zone</code> 都应该是public</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --get-default-zone<br><br>firewall-cmd --get-active-zones<br></code></pre></td></tr></table></figure><h1 id="查看当前开了哪些端口"><a href="#查看当前开了哪些端口" class="headerlink" title="查看当前开了哪些端口"></a>查看当前开了哪些端口</h1><p>其实一个服务对应一个端口，每个服务对应&#x2F;usr&#x2F;lib&#x2F;firewalld&#x2F;services下面一个xml文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看端口</span><br>firewall-cmd --zone=public --list-ports<br><span class="hljs-comment"># 查看服务</span><br>firewall-cmd --list-services<br></code></pre></td></tr></table></figure><p>更新防火墙规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --reload<br></code></pre></td></tr></table></figure><p>添加一个服务到firewalld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --add-service=https或者http换成想要开放的service<br></code></pre></td></tr></table></figure><p>这样添加的service当前立刻生效，但系统下次启动就失效，可以测试使用。要永久开发一个service，加上 –permanent</p><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p>如果要添加的端口并没有服务对应</p><p>就要新建一个服务，在&#x2F;usr&#x2F;lib&#x2F;firewalld&#x2F;services，随便拷贝一个xml文件到一个新名字。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-service=myservice<br></code></pre></td></tr></table></figure><p>重启firewalld 生效</p><!-- ```bash``````bash``` --><h1 id="查询表"><a href="#查询表" class="headerlink" title="查询表"></a>查询表</h1><p>1、firewalld的基本使用</p><p>启动： systemctl start firewalld</p><p>查看状态： systemctl status firewalld</p><p>停止： systemctl disable firewalld</p><p>禁用： systemctl stop firewalld</p><p>2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。</p><p>启动一个服务：systemctl start firewalld.service</p><p>关闭一个服务：systemctl stop firewalld.service</p><p>重启一个服务：systemctl restart firewalld.service</p><p>显示一个服务的状态：systemctl status firewalld.service</p><p>在开机时启用一个服务：systemctl enable firewalld.service</p><p>在开机时禁用一个服务：systemctl disable firewalld.service</p><p>查看服务是否开机启动：systemctl is-enabled firewalld.service</p><p>查看已启动的服务列表：systemctl list-unit-files|grep enabled</p><p>查看启动失败的服务列表：systemctl –failed</p><p>3.配置firewalld-cmd</p><p>查看版本： firewall-cmd –version</p><p>查看帮助： firewall-cmd –help</p><p>显示状态： firewall-cmd –state</p><p>查看所有打开的端口： firewall-cmd –zone&#x3D;public –list-ports</p><p>更新防火墙规则： firewall-cmd –reload</p><p>查看区域信息:  firewall-cmd –get-active-zones</p><p>查看指定接口所属区域： firewall-cmd –get-zone-of-interface&#x3D;eth0</p><p>拒绝所有包：firewall-cmd –panic-on</p><p>取消拒绝状态： firewall-cmd –panic-off</p><p>查看是否拒绝： firewall-cmd –query-panic</p><p>那怎么开启一个端口呢</p><p>添加</p><p>firewall-cmd –zone&#x3D;public –add-port&#x3D;80&#x2F;tcp –permanent    （–permanent永久生效，没有此参数重启后失效）</p><p>重新载入</p><p>firewall-cmd –reload</p><p>查看</p><p>firewall-cmd–zone&#x3D;public–query-port&#x3D;80&#x2F;tcp</p><p>删除</p><p>firewall-cmd –zone&#x3D;public –remove-port&#x3D;80&#x2F;tcp –permanent</p><p>作者：依然饭太稀<br>链接：<a href="https://www.jianshu.com/p/064e2887709b" target="_blank" rel="noopener external nofollow noreferrer">https://www.jianshu.com/p/064e2887709b</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Linux</category>
      
      <category>防火墙</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用服务器搭建你自己的SpeedTest测速服务器</title>
    <link href="/posts/9854.html"/>
    <url>/posts/9854.html</url>
    
    <content type="html"><![CDATA[<p>经常用Speedtest测速，但实际上你也可以用服务器搭建自己的测速网站。测试的是你上传&#x2F;下载流文件到测速服务器的速度。注意测速的上限是你服务器的带宽上限。</p><p>❗ <strong>注意</strong>：</p><div class="note info"><p>一定程度上存在被恶意刷流量的风险，在对外分享你的测速页面后，请注意观察服务器流量使用情况，避免流量使用异常。</p></div><p><img src="/posts/9854/demo.png"></p><span id="more"></span><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><ul><li><a href="https://github.com/BadApple9/speedtest-x" target="_blank" rel="noopener external nofollow noreferrer">Speedtest-X</a></li><li><a href="https://github.com/librespeed/speedtest" target="_blank" rel="noopener external nofollow noreferrer">LibreSpeed</a></li></ul><p>本文介绍的是<a href="https://github.com/BadApple9/speedtest-x" target="_blank" rel="noopener external nofollow noreferrer">Speedtest-X</a>的搭建。</p><ul><li>用户测速会上传测速记录并保存至网站服务器</li><li>不依赖 MySQL，使用文件数据库</li><li>IP 库改用 ip.sb，运营商记录更为精确</li></ul><h1 id="Docker部署"><a href="#Docker部署" class="headerlink" title="Docker部署"></a>Docker部署</h1><p>使用<code>uname -m</code>或者<code>arch</code>命令查看你自己服务器的架构。然后在下面2选1。</p><h3 id="arm架构"><a href="#arm架构" class="headerlink" title="arm架构"></a>arm架构</h3><p>运行 <code>docker run -d -p 9001:80 -it --name speedtest-x stilleshan/speedtest-x</code></p><h3 id="amd架构"><a href="#amd架构" class="headerlink" title="amd架构"></a>amd架构</h3><p>运行 <code>docker run -d -p 9001:80 -it --name speedtest-x badapple9/speedtest-x</code></p><h2 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h2><ul><li><p><code>-d</code>：以常驻进程模式启动</p><p>9001: 默认容器开放端口，可改为其他端口</p></li></ul><p>启动时可指定的环境变量：</p><ul><li><p><code>-e WEBPORT=80:</code> 容器内使用的端口</p></li><li><p><code>-e MAX_LOG_COUNT=100:</code> 最大可保存多少条测速记录</p></li><li><p><code>-e IP_SERVICE=ip.sb:</code> 使用的 IP 运营商解析服务(<code>ip.sb</code> 或 <code>ipinfo.io</code>)</p></li><li><p><code>-e SAME_IP_MULTI_LOGS=false:</code> 是否允许同一IP记录多条测速结果</p></li></ul><h2 id="ipv6支持【不建议】"><a href="#ipv6支持【不建议】" class="headerlink" title="ipv6支持【不建议】"></a>ipv6支持【不建议】</h2><p>如果想让 <code>Docker</code> 容器支持 <code>ipv6</code>，可编辑 <code>/etc/docker/daemon.json</code> ，加上以下内容：（如果不存在这个文件则直接创建）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>  <span class="hljs-string">&quot;ipv6&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;fixed-cidr-v6&quot;</span>: <span class="hljs-string">&quot;fd00::/80&quot;</span>,<br>  <span class="hljs-string">&quot;experimental&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;ip6tables&quot;</span>: <span class="hljs-literal">true</span><br>&#125;<br></code></pre></td></tr></table></figure><p>注意，你在使用<code>docker run</code>命令的时候会读取这个文件内容，创建其他容器也会同时支持ipv6，如果创建完容器又删除这段内容，之前创建的docker容器依然会支持ipv6。所以如果不想要的话建议创建完容器就删除。以免其他容器出现错误。</p><h1 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h1><p>访问 <code>&#123;IP&#125;:&#123;端口&#125;/index.html</code> 进行测速。<br><img src="https://raw.githubusercontent.com/BadApple9/images/main/indexdemo.png"> <img src="https://raw.githubusercontent.com/BadApple9/images/main/resultsdemo.png"></p><h1 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h1><p>如果想要用域名来访问，可以采用Nginx反代的方法。</p><p>参考本站另一篇文章：<br><a href="https://pawswrite.xyz/posts/41647.html">用Nginx做简单反向代理</a></p>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>Speedtest</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>Speedtest</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS 测试脚本收集</title>
    <link href="/posts/10677.html"/>
    <url>/posts/10677.html</url>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>收集了一些常用的VPS测试脚本、ip解锁检测脚本。</p><span id="more"></span><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E4%BB%8B%E7%BB%8D">介绍</a></li><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E7%BB%BC%E5%90%88%E6%80%A7%E6%B5%8B%E8%AF%95">综合性测试</a><ul><li><a href="#yabssh">yabs.sh</a><ul><li><a href="#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95">使用方法</a></li></ul></li><li><a href="#%E5%85%B6%E4%BB%96%E7%BB%BC%E5%90%88%E6%B5%8B%E8%AF%95">其他综合测试</a></li></ul></li><li><a href="#%E4%BF%AE%E6%94%B9%E6%BA%90">#修改源</a></li><li><a href="#%E7%BD%91%E7%BB%9C%E6%83%85%E5%86%B5%E6%B5%8B%E8%AF%95">网络情况测试</a><ul><li><a href="#%E6%B5%8B%E9%80%9F">测速</a></li><li><a href="#%E5%9B%BD%E5%86%85%E4%B8%89%E7%BD%91%E6%B5%8B%E9%80%9F">国内三网测速</a><ul><li><a href="#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-1">使用方法</a></li></ul></li><li><a href="#%E7%BA%BF%E8%B7%AF%E6%B5%8B%E8%AF%95">线路测试</a></li></ul></li><li><a href="#%E6%B5%81%E5%AA%92%E4%BD%93%E8%A7%A3%E9%94%81%E6%83%85%E5%86%B5">流媒体解锁情况</a><ul><li><a href="#%E7%BB%BC%E5%90%88%E8%A7%A3%E9%94%81%E6%A3%80%E6%B5%8B">综合解锁检测</a><ul><li><a href="#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-2">使用方法</a></li></ul></li><li><a href="#tiktok-%E6%A3%80%E6%B5%8B">TikTok 检测</a></li><li><a href="#%E8%9E%8D%E5%90%88%E6%80%AA%E5%A4%A7%E6%9D%82%E7%83%A9%E8%84%9A%E6%9C%AC">融合怪大杂烩脚本</a></li><li><a href="#%E4%BD%9C%E8%80%85%E5%B7%B2%E7%BB%8F%E5%BC%83%E7%94%A8%E4%B8%8D%E5%86%8D%E6%9B%B4%E6%96%B0">【作者已经弃用不再更新】</a><ul><li><a href="#%E5%BC%83%E7%94%A8disneyplus-%E8%A7%A3%E9%94%81%E6%A3%80%E6%B5%8B">【弃用】<del>DisneyPlus 解锁检测</del></a></li><li><a href="#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-3">使用方法</a></li></ul></li><li><a href="#%E5%BC%83%E7%94%A8netflix-%E8%A7%A3%E9%94%81%E6%A3%80%E6%B5%8B">【弃用】<del>NetFlix 解锁检测</del></a></li><li><a href="#%E5%BC%83%E7%94%A8youtube-%E7%BC%93%E5%AD%98%E8%8A%82%E7%82%B9%E5%9C%B0%E5%9F%9F%E4%BF%A1%E6%81%AF%E6%A3%80%E6%B5%8B">【弃用】<del>Youtube 缓存节点、地域信息检测</del></a><h1 id="综合性测试"><a href="#综合性测试" class="headerlink" title="综合性测试"></a>综合性测试</h1></li></ul></li></ul><p>综合性测试，包括硬件基础信息，硬盘IO速度，网速，有的还包括CPU跑分测试等。</p><h2 id="yabs-sh"><a href="#yabs-sh" class="headerlink" title="yabs.sh"></a>yabs.sh</h2><p>特色是可以基于Geekbench进行CPU跑分测试，但测速仅包含国外测速。</p><blockquote><p>项目地址：<a href="https://github.com/masonr/yet-another-bench-script" target="_blank" rel="noopener external nofollow noreferrer">yabs.sh</a></p></blockquote><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><code>curl -sL yabs.sh | bash</code> </p><p>or </p><p><code>wget -qO- yabs.sh | bash</code></p><p>输出举例：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2020-09-21                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br>Mon 21 Sep 2020 12:31:13 AM EDT<br><br>Basic System Information:<br>---------------------------------<br>Processor  : Intel(R) Xeon(R) E-2276G CPU @ 3.80GHz<br>CPU cores  : 12 @ 800.087 MHz<br>AES-NI     : ✔ Enabled<br>VM-x/AMD-V : ✔ Enabled<br>RAM        : 15Gi<br>Swap       : 14Gi<br>Disk       : 865G<br><br>fio Disk Speed Tests (Mixed R/W 50/50):<br>---------------------------------<br>Block Size |<span class="hljs-string"> 4k            (IOPS) </span>|<span class="hljs-string"> 64k           (IOPS)</span><br><span class="hljs-string">  ------   </span>|<span class="hljs-string"> ---            ----  </span>|<span class="hljs-string"> ----           ----</span><br><span class="hljs-string">Read       </span>|<span class="hljs-string"> 445.04 MB/s (111.2k) </span>|<span class="hljs-string"> 475.05 MB/s   (7.4k)</span><br><span class="hljs-string">Write      </span>|<span class="hljs-string"> 446.22 MB/s (111.5k) </span>|<span class="hljs-string"> 477.55 MB/s   (7.4k)</span><br><span class="hljs-string">Total      </span>|<span class="hljs-string"> 891.26 MB/s (222.8k) </span>|<span class="hljs-string"> 952.60 MB/s  (14.8k)</span><br><span class="hljs-string">           </span>|<span class="hljs-string">                      </span>|<br>Block Size |<span class="hljs-string"> 512k          (IOPS) </span>|<span class="hljs-string"> 1m            (IOPS)</span><br><span class="hljs-string">  ------   </span>|<span class="hljs-string"> ---            ----  </span>|<span class="hljs-string"> ----           ----</span><br><span class="hljs-string">Read       </span>|<span class="hljs-string"> 474.42 MB/s    (926) </span>|<span class="hljs-string"> 472.32 MB/s    (461)</span><br><span class="hljs-string">Write      </span>|<span class="hljs-string"> 499.63 MB/s    (975) </span>|<span class="hljs-string"> 503.77 MB/s    (491)</span><br><span class="hljs-string">Total      </span>|<span class="hljs-string"> 974.05 MB/s   (1.9k) </span>|<span class="hljs-string"> 976.10 MB/s    (952)</span><br><span class="hljs-string"></span><br><span class="hljs-string">iperf3 Network Speed Tests (IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider        </span>|<span class="hljs-string"> Location (Link)           </span>|<span class="hljs-string"> Send Speed      </span>|<span class="hljs-string"> Recv Speed</span><br><span class="hljs-string">                </span>|<span class="hljs-string">                           </span>|<span class="hljs-string">                 </span>|<br>Clouvider       |<span class="hljs-string"> London, UK (10G)          </span>|<span class="hljs-string"> 1.19 Gbits/sec  </span>|<span class="hljs-string"> 2.39 Gbits/sec</span><br><span class="hljs-string">Online.net      </span>|<span class="hljs-string"> Paris, FR (10G)           </span>|<span class="hljs-string"> 2.35 Gbits/sec  </span>|<span class="hljs-string"> 2.04 Gbits/sec</span><br><span class="hljs-string">WorldStream     </span>|<span class="hljs-string"> The Netherlands (10G)     </span>|<span class="hljs-string"> 2.17 Gbits/sec  </span>|<span class="hljs-string"> 1.29 Gbits/sec</span><br><span class="hljs-string">Wifx            </span>|<span class="hljs-string"> Zurich, CH (10G)          </span>|<span class="hljs-string"> 1.28 Gbits/sec  </span>|<span class="hljs-string"> 522 Mbits/sec</span><br><span class="hljs-string">Biznet          </span>|<span class="hljs-string"> Jakarta, Indonesia (1G)   </span>|<span class="hljs-string"> 19.4 Mbits/sec  </span>|<span class="hljs-string"> 41.8 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> NYC, NY, US (10G)         </span>|<span class="hljs-string"> 9.40 Gbits/sec  </span>|<span class="hljs-string"> 9.41 Gbits/sec</span><br><span class="hljs-string">Velocity Online </span>|<span class="hljs-string"> Tallahassee, FL, US (10G) </span>|<span class="hljs-string"> 2.39 Gbits/sec  </span>|<span class="hljs-string"> 2.94 Gbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> Los Angeles, CA, US (10G) </span>|<span class="hljs-string"> 2.40 Gbits/sec  </span>|<span class="hljs-string"> 2.89 Gbits/sec</span><br><span class="hljs-string">Iveloz Telecom  </span>|<span class="hljs-string"> Sao Paulo, BR (2G)        </span>|<span class="hljs-string"> 136 Mbits/sec   </span>|<span class="hljs-string"> 192 Mbits/sec</span><br><span class="hljs-string"></span><br><span class="hljs-string">iperf3 Network Speed Tests (IPv6):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider        </span>|<span class="hljs-string"> Location (Link)           </span>|<span class="hljs-string"> Send Speed      </span>|<span class="hljs-string"> Recv Speed</span><br><span class="hljs-string">                </span>|<span class="hljs-string">                           </span>|<span class="hljs-string">                 </span>|<br>Clouvider       |<span class="hljs-string"> London, UK (10G)          </span>|<span class="hljs-string"> 803 Mbits/sec   </span>|<span class="hljs-string"> 2.09 Gbits/sec</span><br><span class="hljs-string">Online.net      </span>|<span class="hljs-string"> Paris, FR (10G)           </span>|<span class="hljs-string"> 2.32 Gbits/sec  </span>|<span class="hljs-string"> 2.20 Gbits/sec</span><br><span class="hljs-string">WorldStream     </span>|<span class="hljs-string"> The Netherlands (10G)     </span>|<span class="hljs-string"> 1.95 Gbits/sec  </span>|<span class="hljs-string"> 1.49 Gbits/sec</span><br><span class="hljs-string">Wifx            </span>|<span class="hljs-string"> Zurich, CH (10G)          </span>|<span class="hljs-string"> 168 Mbits/sec   </span>|<span class="hljs-string"> 579 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> NYC, NY, US (10G)         </span>|<span class="hljs-string"> 9.28 Gbits/sec  </span>|<span class="hljs-string"> 9.28 Gbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> Los Angeles, CA, US (10G) </span>|<span class="hljs-string"> 2.80 Gbits/sec  </span>|<span class="hljs-string"> 2.90 Gbits/sec</span><br><span class="hljs-string"></span><br><span class="hljs-string">Geekbench 4 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test            </span>|<span class="hljs-string"> Value</span><br><span class="hljs-string">                </span>|<br>Single Core     |<span class="hljs-string"> 6035</span><br><span class="hljs-string">Multi Core      </span>|<span class="hljs-string"> 24473</span><br><span class="hljs-string">Full Test       </span>|<span class="hljs-string"> https://browser.geekbench.com/v4/cpu/15770150</span><br><span class="hljs-string"></span><br><span class="hljs-string">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test            </span>|<span class="hljs-string"> Value</span><br><span class="hljs-string">                </span>|<br>Single Core     |<span class="hljs-string"> 1348</span><br><span class="hljs-string">Multi Core      </span>|<span class="hljs-string"> 5857</span><br><span class="hljs-string">Full Test       </span>|<span class="hljs-string"> https://browser.geekbench.com/v5/cpu/3844555</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p><strong>只测试CPU跑分</strong></p><p>Geekbench 5<br><code>curl -sL yabs.sh | bash -s -- -fi</code></p><p>Geekbench 4<br><code>curl -sL yabs.sh | bash -s -- -fi4</code></p><p><strong>其他参数</strong></p><ul><li><code>-f/-d</code> 不进行硬盘测速</li><li><code>-i</code> 不测速</li><li><code>-g</code> 不测CPU跑分，就是geekbench</li><li><code>-h</code> 打印帮助信息</li><li><code>-4</code> 跑Geekbench 4 （默认跑5）</li><li><code>-9</code> 跑Geekbench 4和Geekbench 5</li></ul><h2 id="其他综合测试"><a href="#其他综合测试" class="headerlink" title="其他综合测试"></a>其他综合测试</h2><p>系统信息、硬件信息、三网测速：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -qO- sb.oldking.net | bash<br></code></pre></td></tr></table></figure><p>teddysun 提供的综合脚本，检测 CPU，内存，负载，磁盘 IO，带宽：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -qO- bench.sh | bash<br>curl -Lso- bench.sh | bash<br></code></pre></td></tr></table></figure><h1 id="修改源"><a href="#修改源" class="headerlink" title="#修改源"></a>#修改源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh)<br></code></pre></td></tr></table></figure><h1 id="网络情况测试"><a href="#网络情况测试" class="headerlink" title="网络情况测试"></a>网络情况测试</h1><h2 id="测速"><a href="#测速" class="headerlink" title="测速"></a>测速</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(wget -qO- https://down.vpsaff.net/linux/speedtest/superbench.sh)<br></code></pre></td></tr></table></figure><h2 id="国内三网测速"><a href="#国内三网测速" class="headerlink" title="国内三网测速"></a>国内三网测速</h2><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -Lso- https://git.io/superspeed.sh)<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -Lso- https://git.io/J1SEh)<br></code></pre></td></tr></table></figure><h2 id="线路测试"><a href="#线路测试" class="headerlink" title="线路测试"></a>线路测试</h2><ol><li>测试回程-详细<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -qO- git.io/autobesttrace | bash<br></code></pre></td></tr></table></figure></li><li>回程测试 1<br>二进制，不支持 <code>arm</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate https://tutu.ovh/bash/returnroute/route &amp;&amp; <span class="hljs-built_in">chmod</span> +x route &amp;&amp; clear &amp;&amp; ./route<br></code></pre></td></tr></table></figure></li><li>回程测试 2<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://raw.githubusercontent.com/zhucaidan/mtr_trace/main/mtr_trace.sh|bash<br></code></pre></td></tr></table></figure></li><li>回程测试 3<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://raw.githubusercontent.com/zhanghanyun/backtrace/main/install.sh -sSf | sh<br></code></pre></td></tr></table></figure></li></ol><h1 id="流媒体解锁情况"><a href="#流媒体解锁情况" class="headerlink" title="流媒体解锁情况"></a>流媒体解锁情况</h1><p><strong>脚本测试结果不一定正确！以实际使用为准！</strong></p><h2 id="综合解锁检测"><a href="#综合解锁检测" class="headerlink" title="综合解锁检测"></a>综合解锁检测</h2><p>目前<strong>最全</strong>的解锁测试脚本，但 <code>Disney+</code> 的解锁情况会有错误出现。支持docker运行，支持 <code>ipv4</code> <code>ipv6</code> 双栈检测，支持 <code>iOS</code> 。可以结合下面提到的Disney+测试脚本进行测试。iOS运行方法请参考<a href="https://github.com/lmc999/RegionRestrictionCheck/wiki/iOS%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%96%B9%E6%B3%95" target="_blank" rel="noopener external nofollow noreferrer">此处</a>。</p><blockquote><p>项目地址：<a href="https://github.com/lmc999/RegionRestrictionCheck" target="_blank" rel="noopener external nofollow noreferrer">RegionRestrictionCheck</a></p></blockquote><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p><strong>使用脚本前请确认curl已安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media)<br></code></pre></td></tr></table></figure><ol><li><p>只检测IPv4结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media) -M 4<br></code></pre></td></tr></table></figure></li><li><p>只检测IPv6结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media) -M 6<br></code></pre></td></tr></table></figure></li><li><p>指定检测的网卡名称：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media) -I eth0<br></code></pre></td></tr></table></figure></li><li><p>选择脚本语言为英文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media) -E<br></code></pre></td></tr></table></figure></li></ol><p><strong>或者直接运行以下Docker命令</strong> (兼容ARM架构)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -ti --net=host lmc999/regioncheck &amp;&amp; docker rmi lmc999/regioncheck<br></code></pre></td></tr></table></figure><h2 id="TikTok-检测"><a href="#TikTok-检测" class="headerlink" title="TikTok 检测"></a>TikTok 检测</h2><p>不一定准</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsL -o ./t.sh.x https://github.com/lmc999/TikTokCheck/raw/main/t.sh.x &amp;&amp; <span class="hljs-built_in">chmod</span> +x ./t.sh.x &amp;&amp; ./t.sh.x &amp;&amp; <span class="hljs-built_in">rm</span> ./t.sh.x<br></code></pre></td></tr></table></figure><h2 id="融合怪大杂烩脚本"><a href="#融合怪大杂烩脚本" class="headerlink" title="融合怪大杂烩脚本"></a>融合怪大杂烩脚本</h2><p>可能会有 <code>bug</code> ，<strong>慎用</strong></p><p>不建议在生产环境使用！！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(wget -qO- --no-check-certificate https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh) <br></code></pre></td></tr></table></figure><h2 id="【作者已经弃用不再更新】"><a href="#【作者已经弃用不再更新】" class="headerlink" title="【作者已经弃用不再更新】"></a>【作者已经弃用不再更新】</h2><p>依然可以使用，但不保证准确性。</p><h3 id="【弃用】DisneyPlus-解锁检测"><a href="#【弃用】DisneyPlus-解锁检测" class="headerlink" title="【弃用】DisneyPlus 解锁检测"></a>【弃用】<del>DisneyPlus 解锁检测</del></h3><p>检测出口IP是否解锁DisneyPlus的脚本</p><ol><li>支持双栈检测</li><li>会获取权验接口模拟登陆DisneyPlus以验证是否真的可以解锁，故检测准确率高于大多第三方脚本</li></ol><p>项目地址： <a href="https://github.com/sjlleo/VerifyDisneyPlus" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/sjlleo/VerifyDisneyPlus</a></p><p><img src="https://user-images.githubusercontent.com/13616352/114509583-41d5e200-9c68-11eb-8127-8bbce25dcf75.png"></p><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O dp https://github.com/sjlleo/VerifyDisneyPlus/releases/download/1.01/dp_1.01_linux_amd64 &amp;&amp; <span class="hljs-built_in">chmod</span> +x dp &amp;&amp; clear &amp;&amp; ./dp<br></code></pre></td></tr></table></figure><h2 id="【弃用】NetFlix-解锁检测"><a href="#【弃用】NetFlix-解锁检测" class="headerlink" title="【弃用】NetFlix 解锁检测"></a>【弃用】<del>NetFlix 解锁检测</del></h2><p>用Go语言编写，几秒内快速完成IPv4&#x2F;IPv6的NF解锁情况判断。支持双栈检测。支持指定网卡出口测试。</p><ul><li><input checked="" disabled="" type="checkbox"> 解锁情况判断</li><li><input checked="" disabled="" type="checkbox"> 地域信息显示</li><li><input checked="" disabled="" type="checkbox"> 双栈网络测试</li><li><input checked="" disabled="" type="checkbox"> 代理检测 (Experiment)</li></ul><p>####使用方法</p><p>使用前，如果您不知道您使用的是什么架构的CPU，请先使用<code>uname -m</code>查看</p><p><strong>如果提示<code>Exec format error</code>是因为您下载了与您系统架构不对应的二进制文件</strong></p><p>对于<code>amd64</code>（<code>x86_64</code>），请使用如下命令下载运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/v3.0/nf_linux_amd64 &amp;&amp; <span class="hljs-built_in">chmod</span> +x nf &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>对于<code>arm64</code>，请使用如下命令下载运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/v3.0/nf_linux_arm64 &amp;&amp; <span class="hljs-built_in">chmod</span> +x nf &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>对于部分路由器，其SoC使用了<code>mips</code>架构，请使用如下命令下载运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/v3.0/nf_linux_mips &amp;&amp; <span class="hljs-built_in">chmod</span> +x nf &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>####相关名词解释</p><ol><li><strong>不提供服务</strong> - 所在的地区NF没开通，连自制剧也看不了</li><li><strong>宽松版权</strong> - 有些NF拍摄的影片不是特别注重版权，所以限制放的很开</li><li><strong>解锁自制剧</strong> - 代表可以看由NF自己拍摄的影片</li><li><strong>解锁非自制剧</strong> - 代表可以看NF买下的第三方版权影片</li><li><strong>地域解锁</strong> - NF在不同的地区可以看的片源都是不同的，有些影片只能在特定区观看</li></ol><p>一般来说，需要能看非自制剧才算真正意义上的NF解锁</p><p>####指定网卡出口测试<br>有些时候，我们使用了<code>Warp</code>或者是其他隧道网卡工具的时候，设置的路由表默认不通过他们上网</p><p>在这种情况下，如果我们依旧想要测试该网卡出口是否支持解锁NetFlix，可以选择指定网卡IP进行测试</p><p>在终端输入<code>ip a</code>，查看您想测试的网卡IP，然后加入参数 <code>-address</code> + 您的网卡IP地址即可，具体可看下图</p><p><img src="https://user-images.githubusercontent.com/13616352/169537511-8a10c9d2-3f4c-438a-b20a-8e5e31464259.png" alt="图片"></p><h2 id="【弃用】Youtube-缓存节点、地域信息检测"><a href="#【弃用】Youtube-缓存节点、地域信息检测" class="headerlink" title="【弃用】Youtube 缓存节点、地域信息检测"></a>【弃用】<del>Youtube 缓存节点、地域信息检测</del></h2><p>用于检测&#x2F;诊断Youtube地域信息的。</p><p><img src="https://user-images.githubusercontent.com/13616352/112748155-97658a00-8fec-11eb-82a2-1839781ce968.png" alt="image"></p><ol><li>支持双栈网络测试</li><li>显示当前网络到Youtube的连接模式</li><li>在<code>Google Global Cache</code>连接模式下，会提供ISP信息</li><li>支持获取当前网络所访问Youtube视频节点的地域信息</li><li>如果地域信息可用，会显示Youtube识别到的地区信息</li></ol><p>####使用方法</p><ul><li><p>支持IPv4网络的机器：</p><p> <code>wget -O tubecheck https://github.com/sjlleo/TubeCheck/releases/download/1.0Beta/tubecheck_1.0beta_linux_amd64 &amp;&amp; chmod +x tubecheck &amp;&amp; clear &amp;&amp; ./tubecheck</code></p></li><li><p>支持IPv4或者IPv6网络的机器（通用选项）：</p><p> <code>wget -O tubecheck https://cdn.jsdelivr.net/gh/sjlleo/TubeCheck/CDN/tubecheck_1.0beta_linux_amd64 &amp;&amp; chmod +x tubecheck &amp;&amp; clear &amp;&amp; ./tubecheck</code></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 配置 ProxyChains 上网</title>
    <link href="/posts/34687.html"/>
    <url>/posts/34687.html</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><code>ProxyChains</code>是一个<code>Linux</code>和<code>Unix</code>下的代理工具，允许<code>TCP</code>和<code>DNS</code>通过代理隧道，支持<code>HTTP</code>、<code>SOCKS4</code>、<code>SOCKS5</code>类型的代理服务器，且可配置多个代理。</p><p><code>ProxyChains</code>通过用户自定义的代理列表强制连接指定的应用程序。</p><p>本文简述<code>Linux</code>下如何通过<code>ProxyChains</code>使用<code>Clash</code>主机代理。</p><span id="more"></span><h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><h2 id="GitHub项目地址"><a href="#GitHub项目地址" class="headerlink" title="GitHub项目地址"></a>GitHub项目地址</h2><p><code>ProxyChains</code>：<a href="https://github.com/haad/proxychains" target="_blank" rel="noopener external nofollow noreferrer">haad&#x2F;proxychains: proxychains - a tool that forces any TCP connection made by any given application to follow through proxy like TOR or any other SOCKS4, SOCKS5 or HTTP(S) proxy. Supported auth-types: “user&#x2F;pass” for SOCKS4&#x2F;5, “basic” for HTTP. (github.com)</a></p><p><code>ProxyChains-ng</code>：<a href="https://github.com/rofl0r/proxychains-ng" target="_blank" rel="noopener external nofollow noreferrer">rofl0r&#x2F;proxychains-ng: proxychains ng (new generation) - a preloader which hooks calls to sockets in dynamically linked programs and redirects it through one or more socks&#x2F;http proxies. continuation of the unmaintained proxychains project. the sf.net page is currently not updated, use releases from github release page instead.</a></p><h1 id="安装ProxyChains4"><a href="#安装ProxyChains4" class="headerlink" title="安装ProxyChains4"></a>安装ProxyChains4</h1><p><code>kali</code>默认预装<code>proxychains4</code>，其它基于<code>Debian</code>的<code>Linux</code>发行版可通过如下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install proxychains4<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install proxychains<br></code></pre></td></tr></table></figure><h1 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>proxychains4.conf<br></code></pre></td></tr></table></figure><p>如果刚刚是用<code>apt-get install proxychains</code>安装的话就是修改：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>proxychains.conf<br></code></pre></td></tr></table></figure><p>取消<code>dynamic_chain</code>的注释，<del>也可以注释掉<code>strict_chain</code></del>:</p><p><img src="/posts/34687/comment.png"></p><p><font color="orange">注：请在代理软件上勾选<code>允许本地网络连接</code>选项。</font></p><p>在这个配置文件最下面有[ProxyList]这么一行，在这行下面添加上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">socks5 127.0.0.1 7891 <br><span class="hljs-comment"># 7891 取决于yaml的配置</span><br></code></pre></td></tr></table></figure><p>如果有别的比如<code>socks4 127.0.0.1 9050</code>那么就把它给注释掉。</p><p>重启，若要在代理下使用某条命令，则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">proxychains [<span class="hljs-built_in">command</span>]<br></code></pre></td></tr></table></figure><p>即可在proxychains代理规则下启动。</p><p>比如说使用curl的时候用代理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">proxychains curl -fsSL https://get.docker.com | sh<br></code></pre></td></tr></table></figure><p>例如使用snap的时候用代理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@raspberrypi:~# proxychains snap install docker<br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/aarch64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.16<br>[proxychains] DLL init: proxychains-ng 4.16<br>Download snap &quot;docker&quot; (1783) from channel<br></code></pre></td></tr></table></figure><p>测试网络：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping google.com<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>RaspberryPi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【保姆级教程】Linux（树莓派）用代理上网并配置web界面</title>
    <link href="/posts/59203.html"/>
    <url>/posts/59203.html</url>
    
    <content type="html"><![CDATA[<p>本文记录了国内的Linux系统如何用Clash代理上网，并配置web界面，来方便切换节点，查看连接和日志。</p><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p>Clash GitHub地址为：<a href="https://github.com/Dreamacro/clash/releases" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/Dreamacro/clash/releases</a></p><p>常用的web界面有yacd和razord。本文讲了三种配置clash UI web界面的方法。</p><ol><li>razord: 可以自建，~~也可以用本站的 - <a href="http://clash.pawswrite.xyz/" target="_blank" rel="noopener external nofollow noreferrer">http://clash.pawswrite.xyz/</a> ~~<br><img src="/posts/59203/razord.png"></li><li>yacd GitHub 项目地址: <a href="https://github.com/haishanh/yacd" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/haishanh/yacd</a><br><img src="/posts/59203/yacd.png"></li></ol><span id="more"></span><h1 id="安装Clash"><a href="#安装Clash" class="headerlink" title="安装Clash"></a>安装Clash</h1><p>树莓派是 <code>ARM</code> 架构的卡片电脑。请用 <code>arch</code> 或 <code>uname -m</code> 命令查看你的架构。（树莓派3&#x2F;4&#x2F;400的cpu虽然是64位，但可能官方装的系统是32位的），例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs s">pi@raspberrypi:~$ arch<br>armv7l<br></code></pre></td></tr></table></figure><p>然后找到服务器下载对应的版本，树莓派3&#x2F;4一般32位的就是<code>armv7</code>，64位就是<code>armv8</code>（<code>arch</code>命令显示<code>aarch64</code>）。</p><p>一般的服务器，64位的都是<code>clash-linux-amd64</code>版本。国内服务器一般无法从GitHub下载clash，本站提供了下载链接。</p><p><strong>本文写于2022&#x2F;5&#x2F;30，所提供的下载链接截至目前都是最新版本</strong></p><table><thead><tr><th><code>arch</code>结果</th><th>架构</th><th>GitHub链接</th><th>本站链接（点击下载或右键复制下载链接）</th></tr></thead><tbody><tr><td><code>x86</code></td><td>i386</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-386-v1.10.6.gz" target="_blank" rel="noopener external nofollow noreferrer">clash-linux-386-v1.10.6.gz</a></td><td><a href="59203/clash/clash-linux-386-v1.10.6.gz">clash-linux-386-v1.10.6.gz</a></td></tr><tr><td><code>x86_64</code></td><td>amd64</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-amd64-v1.10.6.gz" target="_blank" rel="noopener external nofollow noreferrer">clash-linux-amd64-v1.10.6.gz</a></td><td><a href="59203/clash/clash-linux-amd64-v1.10.6.gz">clash-linux-amd64-v1.10.6.gz</a></td></tr><tr><td></td><td>armv5</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv5-v1.10.6.gz" target="_blank" rel="noopener external nofollow noreferrer">clash-linux-armv5-v1.10.6.gz</a></td><td><a href="59203/clash/clash-linux-armv5-v1.10.6.gz">clash-linux-armv5-v1.10.6.gz</a></td></tr><tr><td></td><td>armv6</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv6-v1.10.6.gz" target="_blank" rel="noopener external nofollow noreferrer">clash-linux-armv6-v1.10.6.gz</a></td><td><a href="59203/clash/clash-linux-armv6-v1.10.6.gz">clash-linux-armv6-v1.10.6.gz</a></td></tr><tr><td><code>armv7l</code></td><td>armv7</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv7-v1.10.6.gz" target="_blank" rel="noopener external nofollow noreferrer">clash-linux-armv7-v1.10.6.gz</a></td><td><a href="59203/clash/clash-linux-armv7-v1.10.6.gz">clash-linux-armv7-v1.10.6.gz</a></td></tr><tr><td><code>aarch64</code></td><td>armv8</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv8-v1.10.6.gz" target="_blank" rel="noopener external nofollow noreferrer">clash-linux-armv8-v1.10.6.gz</a></td><td><a href="clash-linux-armv8-v1.10.6.gz">clash-linux-armv8-v1.10.6.gz</a></td></tr></tbody></table><p>通过本站链接下载clash：<br><font color="orange">把第二条命令最后的 clash-linux-armv8-v1.10.6.gz 换成你需要的版本</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建clash文件夹并打开</span><br><span class="hljs-built_in">mkdir</span> /root/clash &amp;&amp; <span class="hljs-built_in">cd</span> /root/clash<br><span class="hljs-comment"># 下载压缩文件包，可以把最后的 clash-linux-armv8-v1.10.6.gz 换成你需要的版本即可，也可以通过在上面的表格里右键，复制链接地址，然后用复制的链接替换下面的链接</span><br>curl https://pawswrite.xyz/posts/clash/clash-linux-armv8-v1.10.6.gz &gt; clash.gz<br><span class="hljs-comment"># 解压文件</span><br>gzip -d clash.gz<br><span class="hljs-comment"># 赋予clash可执行权限</span><br><span class="hljs-built_in">chmod</span> +x clash<br></code></pre></td></tr></table></figure><blockquote><p>其他查看系统架构的命令：<br>    1. <code>uname -a</code><br>    2. <code>cat /proc/cpuinfo</code><br>    3. <code>getconf LONG_BIT</code><br>    4. <code>file /bin/bash</code><br>    5. <code>cat /proc/version</code><br>    6. <code>dpkg --print-architecture</code></p></blockquote><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p><code>clash</code> 默认配置文件放在 <code>/root/.config/clash</code> 目录下，需要两个文件，<code>config.yaml</code>、<code>Country.mmdb</code> 。</p><ol><li><p><code>config.yml</code> 是你的配置文件。但可能有的人并不喜欢把配置文件放在 <code>/root/.config/clash</code> 目录。也可以另外放。在运行的时候使用<code>/root/clash/clash -f 配置文件名 -d 配置文件路径</code></p></li><li><p><code>Country.mmdb</code> 是一个设计用于存储IPv4和IPv6的数据信息的数据库，mmdb文件是一个二进制格式的文件，它使用一个二分查找树加速IP信息的查询。<code>clash</code> 分流的时候会用到，直接运行 <code>clash</code> 的话，他会从GitHub上下载，如果你是国内的话，下载链接是 <a href="https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb" target="_blank" rel="noopener external nofollow noreferrer">https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb</a> ，原项目地址是：<a href="https://github.com/Dreamacro/maxmind-geoip/releases" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/Dreamacro/maxmind-geoip/releases</a> ，但前几天<code>cdn.jsdelivr.net</code>刚被墙，所以不管是原来的项目地址还是国内并下不下来。</p></li></ol><h2 id="下载Country-mmdb"><a href="#下载Country-mmdb" class="headerlink" title="下载Country.mmdb"></a>下载Country.mmdb</h2><p>将 Country.zip 文件下载到<code>/root/.config</code>文件夹中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 采用我站链接【推荐】</span><br>curl -o /root/.config/clash/Country.mmdb --create-dirs https://pawswrite.xyz/2022/05/30/RaspberryPi-using-proxy/clash/Country.mmdb<br></code></pre></td></tr></table></figure><p>如果采用其他链接下载【可能会被墙】：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 采用GitHub原项目地址</span><br>curl -o /root/.config/clash/Country.mmdb --create-dirs https://github.com/Dreamacro/maxmind-geoip/releases/download/20220512/Country.mmdb<br><span class="hljs-comment"># 采用cdn加速GitHub</span><br>curl -o /root/.config/clash/Country.mmdb --create-dirs https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb<br></code></pre></td></tr></table></figure><p>点击下载👉<a href="59203/clash/Country.mmdb">Country.mmdb</a></p><h2 id="下载配置文件"><a href="#下载配置文件" class="headerlink" title="下载配置文件"></a>下载配置文件</h2><p>这个就得找你的机场了。自行从机场下载相对应的配置文件<code>config.yaml</code>。这里推荐作者朋友用的机场 GLaDOS，盲猜机场老板是游戏传送门的粉丝，刚好我也很喜欢这个游戏。它提供了Linux版本的<a href="https://glados.rocks/console/terminal" target="_blank" rel="noopener external nofollow noreferrer">clash配置文件</a>。</p><blockquote><p><font color="red">注册GLaDOS(注册地址在 <a href="https://github.com/glados-network/GLaDOS" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/glados-network/GLaDOS</a> 实时更新), 并输入邀请码:<br> <code>N3CMR-9H4SV-RE0Z6-LE1RZ</code> 激活</font></p></blockquote><p>请使用下面命令下载配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -o /root/.config/clash/config.yaml 你的clash配置文件url<br></code></pre></td></tr></table></figure><p>如果你的机场不提供clash的配置文件，可以用本站的订阅转换地址进行订阅转换（<strong>不要使用短链接</strong>）：</p><p><a href="https://sub.pawswrite.xyz/" target="_blank" rel="noopener external nofollow noreferrer">https://sub.pawswrite.xyz/</a></p><p>如果订阅下载不下来，可以浏览器打开，然后复制所有的订阅信息，再回到服务器或者树莓派，新建文件粘贴进去，注意粘贴之前要删空：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /root/.config/clash/config.yaml<br></code></pre></td></tr></table></figure><h1 id="启动Clash"><a href="#启动Clash" class="headerlink" title="启动Clash"></a>启动Clash</h1><p>现在就可以<strong>直接启动clash</strong>了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/root/clash/clash<br></code></pre></td></tr></table></figure><p>如果出现类似下面的信息，就是启动成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@raspberrypi:/root/clash# /root/clash/clash<br>INFO[0000] RESTful API listening at: [::]:9090<br>INFO[0000] HTTP proxy listening at: [::]:7890<br>INFO[0000] SOCKS proxy listening at: [::]:7891<br></code></pre></td></tr></table></figure><p>日志提示已经开放了HTTP代理服务端口为7890, SOCK55服务端口为7891。后面设置其他程序(浏览器&#x2F;GIT等)通过7890&#x2F;7891来代理访问网络就可以了。</p><p>检查是否启动成功，还可以开一个新的ssh session或者terminal，在新终端中输入<code>curl localhost:9090</code>并回车，出现下面信息则是成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pi@raspberrypi:~$ curl localhost:9090<br>&#123;<span class="hljs-string">&quot;hello&quot;</span>:<span class="hljs-string">&quot;clash&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>这个时候就可以使用 <code>clash</code> ，只是需要另开一个terminal。</p><p>如果想要配置 <code>clash.service</code> 来实现开机自启动，进行进程维护，以及配置web UI面板来管理Clash，在下面的章节有提到。</p><h1 id="使用clash代理"><a href="#使用clash代理" class="headerlink" title="使用clash代理"></a>使用clash代理</h1><ol><li><p>例如 Git:</p><p> 新开一个Terminal:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/twbs/bootstrap.git --config <span class="hljs-string">&quot;http.proxy=127.0.0.1:7890&quot;</span><br></code></pre></td></tr></table></figure><p> clash 打印如下日志说明clash完成了工作<br> <code>INFO[0007] [TCP] 127.0.0.1:54875 --&gt; github.com:443 match DomainKeyword(github) using Proxy</code></p></li><li><p>例如 NPM:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> proxy http://127.0.0.1:7890 <br>npm install pm2 -g <br>npm config delete proxy  <span class="hljs-comment">#取消代理设置</span><br></code></pre></td></tr></table></figure></li><li><p>通过设置Shell的环境变量, 例如 APT&#x2F;CURL:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> https_proxy=<span class="hljs-string">&quot;socks5://127.0.0.1:7891&quot;</span><br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;http://127.0.0.1:7890&quot;</span><br>apt update <br>apt install wget <br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">#取消代理设置</span><br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;127.0.0.1:7890&quot;</span> <br>curl https://ifconfig.me <br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">#取消代理设置</span><br></code></pre></td></tr></table></figure></li><li><p>SSH 通过代理连接服务器, 例如:</p><p> ubuntu 下编辑 ~&#x2F;.ssh&#x2F;config 文件:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Host 1.1.1.1<br>User root<br>ProxyCommand /usr/bin/nc -X5 -x 127.0.0.1:7891  %h %p<br></code></pre></td></tr></table></figure><p> 连接服务器</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh root@1.1.1.1<br></code></pre></td></tr></table></figure></li><li><p>桌面型Linux(如Ubuntu 22.04)<br> 请打开设置-网络-设置网络代理为SOCK5, 地址为 127.0.0.1, 端口为7891.</p></li></ol><p><strong>注意: ping 并不是 TCP 应用，因此无法使用Clash的HTTP&#x2F;SOCK5代理。</strong></p><h1 id="【进阶】ProxyChains"><a href="#【进阶】ProxyChains" class="headerlink" title="【进阶】ProxyChains"></a>【进阶】ProxyChains</h1><p>个人认为ProxyChains是Linux上最好用的代理工具。配合Clash使用非常方便，具体可看另一篇文章：<br><a href="https://pawswrite.xyz/2022/05/31/ProxyChains/">https://pawswrite.xyz/2022/05/31/ProxyChains/</a></p><h1 id="测试网络"><a href="#测试网络" class="headerlink" title="测试网络"></a>测试网络</h1><p>看看能不能上谷歌：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/root/clash/clash <span class="hljs-comment"># 启动clash</span><br></code></pre></td></tr></table></figure><p>新开一个terminal，并输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> https_proxy=http://127.0.0.1:7890<br>ping google.com<br></code></pre></td></tr></table></figure><p>若能ping通则能正常翻墙，如果不能的话，检查机场订阅有没有过期，配置文件还能不能用。</p><h1 id="进阶：管理Clash【可选】"><a href="#进阶：管理Clash【可选】" class="headerlink" title="进阶：管理Clash【可选】"></a>进阶：管理Clash【可选】</h1><h1 id="service守护进程，配置开机自启"><a href="#service守护进程，配置开机自启" class="headerlink" title="service守护进程，配置开机自启"></a>service守护进程，配置开机自启</h1><p>不希望Clash专门占用一个terminal，希望关闭对话以后依然在后台运行，如果出错了自动重启，并实现开机重启。那么就可以照本章节来做。</p><p>输入以下指令创建clash.service文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> /etc/systemd/system/clash.service<br></code></pre></td></tr></table></figure><p>双击打开clash.service文件，粘贴以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=clash daemon<br>After=network.target<br><br>[Service]<br>Type=simple<br>Restart=always<br>ExecStart=/root/clash/clash -d /root/.config/clash<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>然后设置clash开机自启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> clash<br>service clash start<br></code></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status clash.service<br></code></pre></td></tr></table></figure><h1 id="UI面板"><a href="#UI面板" class="headerlink" title="UI面板"></a>UI面板</h1><p>第1种选择的razord面板是最简单最方便的，并且可以和第2种选择里的yacd面板共存，第二种是yacd面板，较简单，第三种是自建razord面板。但是2、3种只能选一个，第2、3种面板都需要修改配置文件。但第1种用的是别人建的razord面板，<em><strong>不需要修改配置</strong></em>。</p><h2 id="【第1种选择】本站面板（最方便）"><a href="#【第1种选择】本站面板（最方便）" class="headerlink" title="【第1种选择】本站面板（最方便）"></a>【第1种选择】本站面板（最方便）</h2><p>浏览器输入：</p><ul><li><a href="http://clash.pawswrite.xyz/" target="_blank" rel="noopener external nofollow noreferrer">http://clash.pawswrite.xyz/</a><!-- - http://clash.razord.top/ --><!-- - https://yacd.haishan.me/ --></li></ul><p>填入ip地址和端口。</p><blockquote><p>注意如果连不上的话要用http而不是https。</p></blockquote><p>关于Host：</p><ul><li>如果你是用桌面版Linux，就在Linux系统中的浏览器打开这个网址，输入127.0.0.1就可。</li><li>如果你是用服务器，就输入公网IP</li><li>如果你是用openwrt或者树莓派或者其他server版系统，没有公网IP，那就输入<code>ifconfig</code>，查看本机ip，然后在用同一个局域网下（比如说连到同一个WiFi）的其他设备下用浏览器打开，并且输入刚刚得到的ip</li></ul><p><img src="/posts/59203/ip.png"></p><p>关于端口：端口就是启动Clash以后打印的<code>RESTful API listening at: [::]:9090</code>这里的端口号，（默认9090）<br><img src="/posts/59203/razord2.png"></p><p>关于密码：没有修改过配置文件的话一般留空。如果连不上就去配置文件查看，看开头是否有 <code>secret</code> 这一项。</p><h2 id="【第2种选择】自建yacd面板"><a href="#【第2种选择】自建yacd面板" class="headerlink" title="【第2种选择】自建yacd面板"></a>【第2种选择】自建yacd面板</h2><p><a href="https://github.com/haishanh/yacd/releases" target="_blank" rel="noopener external nofollow noreferrer">yacd 项目地址</a>:<br><img src="/posts/59203/yacd.png"><br><a href="https://github.com/haishanh/yacd/releases" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/haishanh/yacd/releases</a></p><p>首先，下载最新版<a href="59203/clash/yacd.tar.xz">yacd</a>。<br>推荐：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -o /root/.config/clash/yacd.tar.xz https://pawswrite.xyz/2022/05/30/RaspberryPi-using-proxy/clash/yacd.tar.xz<br>tar -xvJf /root/.config/clash/yacd.tar.xz -C /root/.config/clash/ <br><span class="hljs-built_in">mv</span> /root/.config/clash/public /root/.config/clash/dashboard<br><span class="hljs-built_in">rm</span> /root/.config/clash/yacd.tar.xz<br></code></pre></td></tr></table></figure><p><img src="/posts/59203/yacd2.PNG"></p><p>备选：<br>点击下载👉<a href="59203/clash/yacd.tar.xz">yacd</a>，下载到本地后再拖动上传到&#x2F;root&#x2F;.config&#x2F;clash目录解压</p><h2 id="【第3种选择】自建razord面板"><a href="#【第3种选择】自建razord面板" class="headerlink" title="【第3种选择】自建razord面板"></a>【第3种选择】自建razord面板</h2><p>dashboard项目地址：<br><a href="https://github.com/Dreamacro/clash-dashboard/tags" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/Dreamacro/clash-dashboard/tags</a></p><p>从本站直接下载v0.3.0版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -O https://pawswrite.xyz/2022/05/30/RaspberryPi-using-proxy/clash/dashboard.zip<br>unzip -d /root/.config/clash/ dashboard.zip &amp;&amp; <span class="hljs-built_in">rm</span> dashboard.zip<br></code></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>自建yacd界面和razord界面都需要在配置文件里修改后才能使用，<font color="red">但是用别人的不需要</font></p><p>编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /root/.config/clash/config.yaml<br></code></pre></td></tr></table></figure><p>在配置文件开头加入下面几行：<br><em>如果配置文件已经有这几行就不用加了，比如GLaDOS提供的Linux版本配置文件就已经自带了</em></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 您可以将静态网页资源（如 clash-dashboard）放置在一个目录中，clash 将会服务于 `$&#123;API&#125;/ui`</span><br><span class="hljs-comment"># 参数应填写配置目录的相对路径或绝对路径。</span><br><span class="hljs-attr">external-ui:</span> <span class="hljs-string">dashboard</span><br><span class="hljs-comment"># A RESTful API for clash</span><br><span class="hljs-attr">external-controller:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:9090</span><br><span class="hljs-comment"># Secret for RESTful API (Optional)口令 (可选)留空就是没有</span><br><span class="hljs-attr">secret:</span> <span class="hljs-string">&quot;yourpassword&quot;</span><br></code></pre></td></tr></table></figure><p><font color="orange">记住自己配置的口令，后面会用上</font></p><p>重启clash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart clash<br></code></pre></td></tr></table></figure><p>在浏览器中输入 <code>http://你的ip:9090/ui/</code> 进行访问。如果有公网IP就填公网IP，可以在外网进行访问还可以配置Nginx进行反代。</p><p>关于Host：</p><ul><li>如果你是用桌面版Linux，就在Linux系统中的浏览器打开这个网址，输入127.0.0.1就可。</li><li>如果你是用服务器，就输入公网IP</li><li>如果你是用openwrt或者树莓派或者其他server版系统，没有公网IP，那就输入<code>ifconfig</code>，查看本机ip，然后在用同一个局域网下（比如说连到同一个WiFi）的其他设备下用浏览器打开，并且输入刚刚得到的ip</li></ul><p><img src="/posts/59203/ip.png"></p><p>关于端口：端口就是启动Clash以后打印的<code>RESTful API listening at: [::]:9090</code>这里的端口号，也就是配置文件里设置的<code>external-controller</code>（默认9090）<br>关于密码：去配置文件查看，看填入secret后面的内容，比如<code>yourpassword</code><br><img src="/posts/59203/razord2.png"></p>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>RaspberryPi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NextCloud: 配置你自己的云服务器【快速部署版】</title>
    <link href="/posts/43831.html"/>
    <url>/posts/43831.html</url>
    
    <content type="html"><![CDATA[<p><strong>NextCloud</strong>是开源的个人云存储服务，提供云存储服务，内置了Office文档、图片相册、日历联系人、两步验证、文件管理、RSS阅读等丰富的应用。可安装在本地或云主机。简单来说就是不要钱的百度云。本文使用 <code>docker-compose</code> 进行部署。</p><span id="more"></span><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><p>笔者的服务器是 <code>arm</code> 架构, <code>Ubuntu 20.04.4 LTS</code> 系统。但因为我们是使用Docker进行安装，所以系统环境并不是非常重要。大家选一个网速不错硬盘够用的服务器即可。</p><p><code>NextCloud</code>官方镜像仓库地址：<a href="https://hub.docker.com/_/nextcloud?tab=description" target="_blank" rel="noopener external nofollow noreferrer">nextcloud</a></p><h2 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>首先需要安装 <code>Docker</code>，具体安装请参照官方文档：<a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener external nofollow noreferrer">Get Docker</a>。笔者的安装是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">snap install docker<br></code></pre></td></tr></table></figure><p>检查安装是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker -v<br></code></pre></td></tr></table></figure><h3 id="安装-docker-compose"><a href="#安装-docker-compose" class="headerlink" title="安装 docker-compose"></a>安装 <code>docker-compose</code></h3><p><code>docker-compose</code> 是一个非常方便的部署docker容器的方式，减少了许多代码量，便于维护。由于Nextcloud还需要数据库的支持，如果单独用docker的话，需要手动依次运行2个容器，因此使用 <code>docker-compose</code> 部署。</p><p><code>snap</code> 进行安装会直接一起把<code>docker-compose</code>一起安装了。用命令进行检查：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose -v<br></code></pre></td></tr></table></figure><p>如果没有的话参照这里进行安装：<a href="https://www.runoob.com/docker/docker-compose.html" target="_blank" rel="noopener external nofollow noreferrer">Docker Compose 菜鸟教程</a></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>在根目录（或者你喜欢的地方）创建nextcloud文件夹，用于保存所有数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> nextcloud &amp;&amp; <span class="hljs-built_in">cd</span> nextcloud<br></code></pre></td></tr></table></figure><p>在本地创建 <code>docker-compose,yml</code> 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim docker-compose.yml<br></code></pre></td></tr></table></figure><p>复制以下内容（可以修改<code>MYSQL_ROOT_PASSWORD</code>和<code>MYSQL_PASSWORD</code>）：</p><blockquote><p><font color='red'>注意，如果你是其他内核版本的服务器，请将arm64v8&#x2F;mysql:oracle更改为你相应的mysql镜像，比如mysql:latest</font></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><br><span class="hljs-attr">services:</span><br><br>  <span class="hljs-attr">db:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">arm64v8/mysql:oracle</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">--default-authentication-plugin=mysql_native_password</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./mysql:/var/lib/mysql</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_ROOT_PASSWORD=l12345</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_USER=user</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_PASSWORD=l12345</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_DATABASE=clouddata</span><br>      <br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">internal_network</span><br><br>  <span class="hljs-attr">app:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">nextcloud:latest</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./nextcloud:/var/www/html</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8000</span><span class="hljs-string">:80</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">depends_on:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">db</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">internal_network</span><br><br><span class="hljs-comment">#   redis:</span><br><span class="hljs-comment">#     image: redis:latest</span><br><span class="hljs-comment">#     volumes:</span><br><span class="hljs-comment">#       - ./redis/data:/data</span><br><span class="hljs-comment">#     healthcheck:</span><br><span class="hljs-comment">#       test: [&#x27;CMD&#x27;, &#x27;redis-cli&#x27;, &#x27;ping&#x27;]</span><br><span class="hljs-comment">#     networks:</span><br><span class="hljs-comment">#       - internal_network</span><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">internal_network:</span><br></code></pre></td></tr></table></figure><p>然后在当前目录执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><p>之后用<code>docker ps</code>查看容器运行情况，<code>docker logs 容器名</code>来查看日志。</p><h3 id="遇到任何问题需要重启"><a href="#遇到任何问题需要重启" class="headerlink" title="遇到任何问题需要重启"></a>遇到任何问题需要重启</h3><p>在<code>docker-compose,yml</code> 文件同文件夹下运行：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">docker-compose <span class="hljs-meta">down</span><br>docker-compose <span class="hljs-meta">up</span> -d<br></code></pre></td></tr></table></figure><h2 id="网页配置"><a href="#网页配置" class="headerlink" title="网页配置"></a>网页配置</h2><p>在你的浏览器输入<code>http://你的ip:8000</code> ，即可进入网页进行设置。会出现如下界面，在该界面填入你要设置的管理员账户的账户名和密码即可：</p><p><img src="/posts/43831/start.PNG"></p><p>点击<em>储存于数据库</em>，选择中间的MySQL，在下面依次填入你的数据库用户、密码、名称。也就是之前文件中设置的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_USER=user</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_PASSWORD=l12345</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_DATABASE=clouddata</span><br></code></pre></td></tr></table></figure><p>那么就依次填入：user，l12345，clouddata</p><p>最下面的填入<code>db</code>即可。</p><blockquote><p>这里最后一栏就是填入你的数据库容器名或者别名，使用<code>docker ps</code>查看容器名，一般是<code>nextcloud_db_1</code>或者<code>nextcloud-db-1</code>，取决于<code>docker-compose</code>版本，那么用<code>docker inspect nextcloud_db_1</code>查看<code>alias</code>别名，一般是<code>db</code>。如果不是默认端口的话还需要指定端口。</p></blockquote><p><img src="/posts/43831/setup.PNG"></p><p>之后就可以成功配置，你可以选择是否下载常用应用。</p><p><img src="/posts/43831/hello.PNG"></p><!-- ## Nginx 反代安装`nginx`:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install nginx<br></code></pre></td></tr></table></figure><p>创建 nextcloud.conf nginx 配置文件 </p><p><code>bash vim /etc/nginx/conf.d/nextcloud.conf </code> –&gt;</p>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>NextCloud</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>permanent alias Linux</title>
    <link href="/posts/5260.html"/>
    <url>/posts/5260.html</url>
    
    <content type="html"><![CDATA[<p>Linux设置永久 <code>alias</code> 别名的方法。</p><span id="more"></span><p>打开文件进行编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br></code></pre></td></tr></table></figure><p>添加下面这行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> [<span class="hljs-built_in">alias</span> name]= <span class="hljs-string">&#x27;[command]&#x27;</span><br></code></pre></td></tr></table></figure><p>比如说使用 <code>dc</code> 作为 <code>docker-compose</code> 的别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> dc=<span class="hljs-string">&#x27;docker-compose&#x27;</span><br></code></pre></td></tr></table></figure><p>最后使其生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【订阅转换】自建订阅转换平台</title>
    <link href="/posts/4014.html"/>
    <url>/posts/4014.html</url>
    
    <content type="html"><![CDATA[<p>    <strong><em><span style="color:#E53333;">笔者的订阅转换链接：<a href="https://sub.pawswrite.xyz" target="_blank">https://sub.pawswrite.xyz</a></span></em></strong></p><p>订阅转换是说，把一份配置文件&#x2F;节点列表中的节点提取出来，配上一些好用的分流规则，适配Clash|ClashR|QuantumultX|ShadowRocket|Surge等等客户端。</p><span id="more"></span><ul><li><p>机场可能提供了纯v2节点列表或者小火箭的配置文件，但你需要用在Clash或者Surge等其他的客户端，但机场没给现成的。</p></li><li><p>你不满意机场提供的分流规则，想换成别的。机场给的配置文件也不能够涵盖你的需求。</p></li><li><p>你用一键脚本自建翻墙节点，需要转换成不同客户端的配置文件。</p></li></ul><p>这个时候就需要用到订阅转换。现在有一些大佬做了订阅转换的网站，比如说<a href="bianyuan.xyz">边缘订阅转换</a>。这些都是公益免费很方便。但问题就在于，用别人的后端转换订阅，存在一定的数据隐患，那还有甚者说自己的订阅已经被盗用，流量也是不正常。（当然我没出现过这种问题，一般来说人家也不屑于。。。）</p><p>偷订阅这种事情，除了当事人，没人知道到底有没有。实在不行，那咱们就自己建一个订阅转换。毕竟前后端都已经开源了。</p><h2 id="前期需求"><a href="#前期需求" class="headerlink" title="前期需求"></a>前期需求</h2><ul><li>一台拥有公网IP的服务器（没有公网IP就自己研究内网穿透啊什么的）</li><li>一个域名</li></ul><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p>前端项目地址：<a href="https://github.com/CareyWang/sub-web" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/CareyWang/sub-web</a><br>后端项目地址：<a href="https://github.com/tindy2013/subconverter" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/tindy2013/subconverter</a></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>作者使用的是CloudFlare进行解析。解析两个域名，分别给前端和后端。  </p><ol><li>前端 我们使用 sub.你的域名 进行解析</li><li>后端 我们使用 suc.你的域名 进行解析</li></ol><p><strong>开启CDN代理会更安全</strong></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>使用<code>uname -a</code>看一下自己的服务器架构，如果是amd，直接使用官方镜像，如果是arm则需要自己构建镜像或者使用笔者构建的镜像：<code>docker push techfever/sub-web:latest</code></p><h3 id="【amd架构】Docker运行"><a href="#【amd架构】Docker运行" class="headerlink" title="【amd架构】Docker运行"></a>【amd架构】Docker运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 58080:80 --restart always --name subweb careywong/subweb:latest<br></code></pre></td></tr></table></figure><p>若需要对代码进行修改，你需要在本地构建镜像并运行。<br>注：每次修改代码，你都需要重新执行 <code>docker build</code> 来执行打包操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker build -t subweb-local:latest .<br><br>docker run -d -p 58080:80 --restart always --name subweb subweb-local:latest<br></code></pre></td></tr></table></figure><h3 id="【arm架构】利用GitHub-Actions自行build镜像并push到DockerHub"><a href="#【arm架构】利用GitHub-Actions自行build镜像并push到DockerHub" class="headerlink" title="【arm架构】利用GitHub Actions自行build镜像并push到DockerHub"></a>【arm架构】利用GitHub Actions自行build镜像并push到DockerHub</h3><p>因为笔者用的是<code>arm</code>架构的服务器，而作者的 <code>careywong/subweb:latest</code> 并不支持。因此可以自己编译镜像【推荐】。</p><p><em>也可以用笔者的镜像：</em></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker run -d -<span class="hljs-selector-tag">p</span> <span class="hljs-number">58080</span>:<span class="hljs-number">80</span> <span class="hljs-attr">--restart</span> always <span class="hljs-attr">--name</span> subweb techfever/sub-web:latest<br></code></pre></td></tr></table></figure><p>下面讲解如何自行编译镜像：</p><h3 id="自行编译镜像"><a href="#自行编译镜像" class="headerlink" title="自行编译镜像"></a>自行编译镜像</h3><h4 id="注册DockerHub"><a href="#注册DockerHub" class="headerlink" title="注册DockerHub"></a>注册DockerHub</h4><p>先注册<a href="https://hub.docker.com/signup" target="_blank" rel="noopener external nofollow noreferrer">DockerHub</a>，记住账号密码。</p><h4 id="添加Secrets"><a href="#添加Secrets" class="headerlink" title="添加Secrets"></a>添加Secrets</h4><p>先登录自己的账号 <code>fork</code> 项目<a href="https://github.com/CareyWang/sub-web" target="_blank" rel="noopener external nofollow noreferrer">sub-web</a>，然后打开<code>Settings</code>，在<code>Secrets-Actions</code>下添加两个Secret，分别是 <code>DOCKER_USERNAME</code> 和 <code>DOCKER_PASSWORD</code>。请注意 <code>DOCKER_USERNAME</code> 需要<strong>全部小写</strong>。<br><img src="/posts/4014/actions.PNG"></p><p>打开项目，点击<code>Actions</code>，选择<code>New workflow</code>，选择 <code>set up a workflow yourself</code> ，然后将下面的代码复制进去，你也可以选择复制<a href="https://github.com/tech-fever/sub-web/blob/master/.github/workflows/docker-image.yml" target="_blank" rel="noopener external nofollow noreferrer">我的yml文件</a>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Docker</span> <span class="hljs-string">Image</span> <span class="hljs-string">CI</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [ <span class="hljs-string">master</span> ]<br><br><span class="hljs-attr">jobs:</span><br><br>  <span class="hljs-attr">Docker:</span><br><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">out</span> <span class="hljs-string">the</span> <span class="hljs-string">repo</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>        <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">docker/setup-qemu-action@v1</span><br>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">docker/setup-buildx-action@v1</span><br>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">docker/login-action@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">username:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.DOCKER_USERNAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">password:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.DOCKER_PASSWORD</span> <span class="hljs-string">&#125;&#125;</span><br>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">and</span> <span class="hljs-string">push</span> <span class="hljs-string">Docker</span> <span class="hljs-string">images</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">docker/build-push-action@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">context:</span> <span class="hljs-string">.</span><br>          <span class="hljs-attr">platforms:</span> <span class="hljs-string">linux/amd64,linux/arm64</span><br>          <span class="hljs-attr">push:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">tags:</span> <span class="hljs-string">你的DockerHub用户名/sub-web:latest</span><br></code></pre></td></tr></table></figure><p><strong>记得写入你的DockerHub用户名</strong></p><p>保存以后，会自动运行actions（如果没有运行的话需要进入actions选择&#96;&#96;enable workflow&#96;），然后你的DockerHub就会出现新的镜像。</p><h4 id="修改镜像"><a href="#修改镜像" class="headerlink" title="修改镜像"></a>修改镜像</h4><ol><li>如果你是上一小节说的方法自行编译镜像，那么每次对镜像进行任何修改，都只需要将改变提交到GitHub，然后GitHub actions就会自动编译新的镜像并且推送到DockerHub，你只需要pull新镜像即可。</li><li>如果你是使用别人的镜像，那么你需要先进入容器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it subweb bash<br></code></pre></td></tr></table></figure>之后在容器里进行修改。</li></ol><h4 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h4><p>运行自己的镜像：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -d -p 58080<span class="hljs-function">:80</span> <span class="hljs-params">--restart</span> always <span class="hljs-params">--name</span> subweb 你的dockerhub名字<span class="hljs-string">/sub-web</span><span class="hljs-function">:latest</span><br></code></pre></td></tr></table></figure><h3 id="预览前端"><a href="#预览前端" class="headerlink" title="预览前端"></a>预览前端</h3><p>到目前为止，浏览器访问 http:&#x2F;&#x2F;服务器ip:58080&#x2F; 应该可以进行前端 sub-web 的预览了。</p><p>如果需要用域名来访问，而不是ip:端口的形式来访问，那我们就需要反代前端，该内容在后面小节有提到。</p><h3 id="前端修改"><a href="#前端修改" class="headerlink" title="前端修改"></a>前端修改</h3><p>前端默认的后端地址是<code>https://api.wcc.best</code>，可以用，但我们的目的是为了数据安全，要自建后端，当然需要修改。</p><blockquote><p>本节进行了修改以后，都需要删除原来的容器，并用修改后的镜像来运行。</p></blockquote><ul><li>【推荐】如果你是通过 <code>GitHub Actions</code> 进行构建，那么直接修改以后push到GitHub，之后把Actions构建并推送到Docker Hub的最新镜像pull下来即可。  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker stop subweb &amp;&amp; docker <span class="hljs-built_in">rm</span> subweb<br>docker rmi techfever/sub-web:latest &amp;&amp; docker pull techfever/sub-web:latest<br>docker run -d -p 127.0.0.1:58080:80 --restart always --name subweb techfever/sub-web:latest<br></code></pre></td></tr></table></figure></li><li>如果你是在本地构建镜像并运行。每次修改代码，你都需要重新执行 <code>docker build</code> 来执行打包操作。</li></ul><h4 id="修改默认后端地址"><a href="#修改默认后端地址" class="headerlink" title="修改默认后端地址"></a>修改默认后端地址</h4><p>如果你是使用自己构建Docker镜像的方式，首先打开<code>sub-web/.env</code>文件修改下面这项，把<code>https://api.wcc.best</code>改成你自己的后端地址（后面会配置，比如笔者的是<a href="https://suc.pawswrite.xyz）：">https://suc.pawswrite.xyz）：</a></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># API 后端</span><br><span class="hljs-attr">VUE_APP_SUBCONVERTER_DEFAULT_BACKEND</span> = <span class="hljs-string">&quot;https://api.wcc.best&quot;</span><br><br><span class="hljs-comment"># 文本托管后端</span><br><span class="hljs-attr">VUE_APP_CONFIG_UPLOAD_BACKEND</span> = <span class="hljs-string">&quot;https://api.wcc.best&quot;</span><br></code></pre></td></tr></table></figure><h4 id="增加远程配置【可选】"><a href="#增加远程配置【可选】" class="headerlink" title="增加远程配置【可选】"></a>增加远程配置【可选】</h4><p>找到 <code>sub-web/src/views/Subconverter.vue</code> 文件，找到 259 行 <code>remoteConfig: [</code>（写博客的时候是这行），敲下回车，插入下面内容。有不清楚的就参照我的<a href="https://github.com/tech-fever/sub-web/blob/master/src/views/Subconverter.vue" target="_blank" rel="noopener external nofollow noreferrer">Subconverter.vue</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>            label: <span class="hljs-string">&quot;ACL4SSR&quot;</span>,<br>            options: [<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online 默认版 分组比较全 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_AdblockPlus 更多去广告 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_AdblockPlus.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_NoAuto 无自动测速 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_NoReject 无广告拦截规则 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_NoReject.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini 精简版 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini_AdblockPlus.ini 精简版 更多去广告 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_AdblockPlus.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini_NoAuto.ini 精简版 不带自动测速 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini_Fallback.ini 精简版 带故障转移 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_Fallback.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini_MultiMode.ini 精简版 自动测速、故障转移、负载均衡 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_MultiMode.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Full 全分组 重度用户使用 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Full_NoAuto.ini 全分组 无自动测速 重度用户使用 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Full_AdblockPlus 全分组 重度用户使用 更多去广告 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_AdblockPlus.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Full_Netflix 全分组 重度用户使用 奈飞全量 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_Netflix.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR 本地 默认版 分组比较全&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Mini 本地 精简版&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_Mini.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Mini_NoAuto.ini 本地 精简版+无自动测速&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_Mini_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Mini_Fallback.ini 本地 精简版+fallback&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_Mini_Fallback.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_BackCN 本地 回国&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_BackCN.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_NoApple 本地 无苹果分流&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_NoApple.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_NoAuto 本地 无自动测速 &quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_NoAuto_NoApple 本地 无自动测速&amp;无苹果分流&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_NoAuto_NoApple.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_NoMicrosoft 本地 无微软分流&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_NoMicrosoft.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_WithGFW 本地 GFW列表&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_WithGFW.ini&quot;</span><br>              &#125;<br>            ]<br>          &#125;,<br></code></pre></td></tr></table></figure><h3 id="nginx反代前端"><a href="#nginx反代前端" class="headerlink" title="nginx反代前端"></a>nginx反代前端</h3><p>为了之后再用nginx进行反代，可以停止之前的容器，再重新启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker stop subweb &amp;&amp; docker <span class="hljs-built_in">rm</span> subweb<br>docker run -d -p 127.0.0.1:58080:80 --restart always --name subweb techfever/sub-web:latest<br></code></pre></td></tr></table></figure><p>创建新的nginx配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/subconverter.conf<br></code></pre></td></tr></table></figure><p>输入下列配置，将其中 <code>sub.pawswrite.xyz</code> 部分改成你的域名：：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">sub.pawswrite.xyz;</span><br><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$host$request_uri;</span><br>&#125;<br><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-comment"># Replace bark.app.dev with your real domain name.</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">sub.pawswrite.xyz;</span><br><br>    <span class="hljs-comment"># ssl_certificate /path/to/signed_cert_plus_intermediates;</span><br>    <span class="hljs-comment"># ssl_certificate_key /path/to/private_key;</span><br>    <span class="hljs-string">ssl_session_timeout</span> <span class="hljs-string">1d;</span><br>    <span class="hljs-string">ssl_session_cache</span> <span class="hljs-string">shared:MozSSL:10m;</span>  <span class="hljs-comment"># about 40000 sessions</span><br>    <span class="hljs-string">ssl_session_tickets</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># modern configuration</span><br>    <span class="hljs-string">ssl_protocols</span> <span class="hljs-string">TLSv1.3;</span><br>    <span class="hljs-string">ssl_prefer_server_ciphers</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># HSTS (ngx_http_headers_module is required) (63072000 seconds)</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Strict-Transport-Security</span> <span class="hljs-string">&quot;max-age=63072000&quot;</span> <span class="hljs-string">always;</span><br><br>    <span class="hljs-comment"># OCSP stapling</span><br>    <span class="hljs-string">ssl_stapling</span> <span class="hljs-string">on;</span><br>    <span class="hljs-string">ssl_stapling_verify</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-comment"># verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br>    <span class="hljs-comment"># ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><br>    <span class="hljs-comment"># replace with the IP address of your resolver</span><br>    <span class="hljs-comment">#resolver 127.0.0.1;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br><br>        <span class="hljs-string">log_not_found</span> <span class="hljs-string">on;</span><br>        <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://127.0.0.1:58080;</span><br><br>        <span class="hljs-string">proxy_read_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_connect_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_redirect</span> <span class="hljs-string">off;</span><br><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span>              <span class="hljs-string">$host;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$scheme;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Real-IP</span>         <span class="hljs-string">$remote_addr;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>之后就可以用域名来访问前端面板了。</p><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>先在GitHub上找到最新的<a href="https://github.com/tindy2013/subconverter/releases" target="_blank" rel="noopener external nofollow noreferrer">后端发布版本</a>，选择适配你服务器架构的压缩文件，如果不知道你服务器的架构，采用命令 <code>uname -m</code> 来查看，比如笔者就是 <code>aarch64</code> 。然后复制你对应的压缩文件链接：</p><p><img src="/posts/4014/url.PNG"></p><p>在服务器上下载并解压后端程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /root<br>wget https://github.com/tindy2013/subconverter/releases/download/v0.7.2/subconverter_aarch64.tar.gz<br>tar -zxvf subconverter_aarch64.tar.gz<br></code></pre></td></tr></table></figure><h3 id="修改配置文件参数"><a href="#修改配置文件参数" class="headerlink" title="修改配置文件参数"></a>修改配置文件参数</h3><p>现在我们需要修改后端配置文件中的一些参数。</p><p>复制一份配置文件到本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span>  /root/subconverter/pref.example.ini /root/subconverter/pref.ini<br></code></pre></td></tr></table></figure><p>找到如下参数进行修改：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">api_access_token</span>=<span class="hljs-number">123123</span>dfsdsdfsdfsdf            <span class="hljs-comment">#随意设置自己知道就行</span><br><span class="hljs-attr">managed_config_prefix</span>=https://suc.v2rayssr.com  <span class="hljs-comment">#设置成我们刚刚解析的后端域名</span><br><span class="hljs-attr">listen</span>=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>                                <span class="hljs-comment">#这里改成 127.0.0.1 进行反代</span><br></code></pre></td></tr></table></figure><p>创建服务进程并启动<br>接下来我们需要创建一个服务，让VPS每次重启或是开机自动运行后端程序</p><p>找到VPS目录 &#x2F;etc&#x2F;systemd&#x2F;system，创建一个名为 sub.service 的文件</p><p>打开文件，贴入以下内容，保存。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=A API For Subscription Convert<br><span class="hljs-attr">After</span>=network.target<br> <br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">ExecStart</span>=/root/subconverter/subconverter<br><span class="hljs-attr">WorkingDirectory</span>=/root/subconverter<br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">10</span><br> <br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>检查运行状态以及设置开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br>systemctl start sub<br>systemctl <span class="hljs-built_in">enable</span> sub<br>systemctl status sub<br></code></pre></td></tr></table></figure><p>到这里，后端也就搭建完毕了，我们现在可以在浏览器里面访问我们的后端了 <a href="https://suc.pawswrite.xyz/" target="_blank" rel="noopener external nofollow noreferrer">https://suc.pawswrite.xyz</a> （正常的话，会返回下面的图例）</p><p><img src="/posts/4014/suc.PNG"></p><h3 id="nginx反代后端"><a href="#nginx反代后端" class="headerlink" title="nginx反代后端"></a>nginx反代后端</h3><p>创建新的nginx配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/subconverter2.conf<br></code></pre></td></tr></table></figure><p>输入下列配置，将其中 <code>suc.pawswrite.xyz</code> 部分改成你的域名：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">suc.pawswrite.xyz;</span><br><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$host$request_uri;</span><br>&#125;<br><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-comment"># Replace bark.app.dev with your real domain name.</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">suc.pawswrite.xyz;</span><br><br>    <span class="hljs-comment"># ssl_certificate /path/to/signed_cert_plus_intermediates;</span><br>    <span class="hljs-comment"># ssl_certificate_key /path/to/private_key;</span><br>    <span class="hljs-string">ssl_session_timeout</span> <span class="hljs-string">1d;</span><br>    <span class="hljs-string">ssl_session_cache</span> <span class="hljs-string">shared:MozSSL:10m;</span>  <span class="hljs-comment"># about 40000 sessions</span><br>    <span class="hljs-string">ssl_session_tickets</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># modern configuration</span><br>    <span class="hljs-string">ssl_protocols</span> <span class="hljs-string">TLSv1.3;</span><br>    <span class="hljs-string">ssl_prefer_server_ciphers</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># HSTS (ngx_http_headers_module is required) (63072000 seconds)</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Strict-Transport-Security</span> <span class="hljs-string">&quot;max-age=63072000&quot;</span> <span class="hljs-string">always;</span><br><br>    <span class="hljs-comment"># OCSP stapling</span><br>    <span class="hljs-string">ssl_stapling</span> <span class="hljs-string">on;</span><br>    <span class="hljs-string">ssl_stapling_verify</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-comment"># verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br>    <span class="hljs-comment"># ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><br>    <span class="hljs-comment"># replace with the IP address of your resolver</span><br>    <span class="hljs-comment">#resolver 127.0.0.1;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br><br>        <span class="hljs-string">log_not_found</span> <span class="hljs-string">on;</span><br>        <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://127.0.0.1:58080;</span><br><br>        <span class="hljs-string">proxy_read_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_connect_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_redirect</span> <span class="hljs-string">off;</span><br><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span>              <span class="hljs-string">$host;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$scheme;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Real-IP</span>         <span class="hljs-string">$remote_addr;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="安装cerbot申请证书"><a href="#安装cerbot申请证书" class="headerlink" title="安装cerbot申请证书"></a>安装cerbot申请证书</h2><p>安装certbot的步骤参照：<a href="https://certbot.eff.org/" target="_blank" rel="noopener external nofollow noreferrer">https://certbot.eff.org</a></p><p>申请证书使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">certbot --nginx<br></code></pre></td></tr></table></figure><p>按照步骤来即可</p>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>订阅转换</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Clash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多出口ip检测</title>
    <link href="/posts/34934.html"/>
    <url>/posts/34934.html</url>
    
    <content type="html"><![CDATA[<p>多出口ip检测。</p><span id="more"></span><iframe src="https://ip.skk.moe/simple" style="width: 100%; border: 0"></iframe><iframe src="https://debug.skk.moe/" style="width: 100%; border: 0"></iframe>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IP</tag>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Conda: python 虚拟环境</title>
    <link href="/posts/10199.html"/>
    <url>/posts/10199.html</url>
    
    <content type="html"><![CDATA[<h2 id="为什么要用虚拟环境？"><a href="#为什么要用虚拟环境？" class="headerlink" title="为什么要用虚拟环境？"></a>为什么要用虚拟环境？</h2><p>在开发Python应用程序的时候，系统安装的Python3只有一个版本：3.4。所有第三方的包都会被pip安装到Python3的site-packages目录下。这就会造成，在Linux上直接用 <code>pip install</code> 来安装包的时候常常会遇到警告，可能会造成系统包管理器的冲突，如果你是root用户还会警告你可能导致权限问题。</p><p>如果今天我们需要某个包的2.3版本，但是明天需要这个包的2.4版本，该怎么办？</p><p>这种情况下，每个应用可能需要各自拥有一套“<strong>独立</strong>”的“<strong>隔离</strong>”的Python运行环境。一般推荐的解决办法是安装<strong>虚拟环境</strong>。</p><h2 id="为什么要用conda"><a href="#为什么要用conda" class="headerlink" title="为什么要用conda"></a>为什么要用conda</h2><p>Python3.3 之后，自带了 <code>venv</code> 指令可以创建虚拟环境，但我一般喜欢用 <code>anaconda</code> 或者 <code>miniconda</code>，更方便。他封装了建立python下各种各样的依赖包。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>对于Linux，<a href="https://www.anaconda.com/products/distribution" target="_blank" rel="noopener external nofollow noreferrer">官网</a>提供多种不同架构下的的安装方式：</p><ul><li>64-Bit (x86) Installer (659 MB)</li><li>64-Bit (Power8 and Power9) Installer (367 MB)</li><li>64-Bit (AWS Graviton2 &#x2F; ARM64) Installer (568 MB)</li><li>64-bit (Linux on IBM Z &amp; LinuxONE) Installer (280 MB)</li></ul><p>先下载<a href="https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html" target="_blank" rel="noopener external nofollow noreferrer">miniconda</a>。点击👉<a href="https://docs.conda.io/en/latest/miniconda.html#linux-installers" target="_blank" rel="noopener external nofollow noreferrer">Linux installers</a>此网站找到对应内核版本，比如我的是<code>aarch64</code>，想安装<code>python3.9</code>版本，那就是<a href="https://repo.anaconda.com/miniconda/Miniconda3-py39_4.11.0-Linux-aarch64.sh%E3%80%82" target="_blank" rel="noopener external nofollow noreferrer">https://repo.anaconda.com/miniconda/Miniconda3-py39_4.11.0-Linux-aarch64.sh。</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://repo.anaconda.com/miniconda/Miniconda3-py39_4.11.0-Linux-aarch64.sh<br>bash Miniconda3-py39_4.11.0-Linux-aarch64.sh<br></code></pre></td></tr></table></figure><p>之后按Enter继续安装，Miniconda 会显示很长一段使用许可说明，按Enter不断翻页。输入yes来接受license terms。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs s">Do you accept the license terms? [yes|no]<br>[no] &gt;&gt;&gt; <br>Please answer &#x27;yes&#x27; or &#x27;no&#x27;:&#x27;<br>&gt;&gt;&gt; yes<br></code></pre></td></tr></table></figure><p>选择是否运行 conda init 来初始化，我选了 yes 。</p><p>出现错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CommandNotFoundError: Your shell has not been properly configured to use <span class="hljs-string">&#x27;conda activate&#x27;</span><br></code></pre></td></tr></table></figure><p>这是<code>conda init</code>出错，激活环境即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 激活环境</span><br><span class="hljs-built_in">source</span> activate<br><span class="hljs-comment"># 退出环境</span><br><span class="hljs-built_in">source</span> deactivate<br></code></pre></td></tr></table></figure><p>然后创建新环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n <span class="hljs-built_in">test</span> <span class="hljs-comment"># 创建一个叫test的版本的虚拟环境</span><br>conda activate <span class="hljs-built_in">test</span> <span class="hljs-comment"># 激活环境</span><br>python -m pip install 包名 <span class="hljs-comment"># 在环境中安装需要的包</span><br>conda install 包名 <span class="hljs-comment"># 也可以用conda来安装</span><br>conda deactivate <span class="hljs-comment"># 退出环境</span><br></code></pre></td></tr></table></figure><p>conda支持指定python版本和安装的包版本。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CloudFlare CNAME接入</title>
    <link href="/posts/32413.html"/>
    <url>/posts/32413.html</url>
    
    <content type="html"><![CDATA[<p>CloudFlare默认的NS接入因各种原因（面向国内速度慢 无法自定义解析 不能分流）遭到诟病。但 <code>CloudFlare</code> CNAME接入就大不一样。它可以：</p><ul><li>自选IP，针对国内三大运营商优化</li><li>可以用你喜欢的DNS服务商管理，不局限在CloudFlare<span id="more"></span></li></ul><p>传统CNAME接入CloudFlare从2021年11月开始被通过API禁用。</p><h2 id="CloudFlare-SaaS-CNAME接入"><a href="#CloudFlare-SaaS-CNAME接入" class="headerlink" title="CloudFlare SaaS CNAME接入"></a>CloudFlare SaaS CNAME接入</h2><p>但这需要用户信用卡绑定，并且默认只能回源一个ip或域名，回源多个需要在服务器上做相应的配置。</p><blockquote><p>教程：<br><a href="https://luotianyi.vc/6185.html" target="_blank" rel="noopener external nofollow noreferrer">https://luotianyi.vc/6185.html</a></p></blockquote><h2 id="pages-function实现cname接入"><a href="#pages-function实现cname接入" class="headerlink" title="pages function实现cname接入"></a>pages function实现cname接入</h2><p>其原理和CFworker相同，都是通过js来控制出入站流量。使用CFPage时绑定域名<strong>无需信用卡</strong>，也<strong>可以自选域名</strong>，只要做好TXT和海外CNAME记录即可，并且可以回源多个站点。CloudFlarePage是无流量限制的，唯一的弊端是一天只允许<strong>10万次</strong>请求，超出会直接中断。</p><blockquote><p><a href="https://hostloc.com/thread-1017748-1-1.html" target="_blank" rel="noopener external nofollow noreferrer">https://hostloc.com/thread-1017748-1-1.html</a></p></blockquote><p>请注意，使用Page接入将无法使用WAF防火墙，面对攻击时防护能力较弱。此外，无论是SaaS还是Page，都无法使用ArgoTunnel功能。</p><p>fork 仓库：<a href="https://github.com/ChenYFan/PageFunctionTest" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/ChenYFan/PageFunctionTest</a></p><p>修改&#x2F;functions&#x2F;_middleware.js中的样例域名即可，之后直接Fork导入Page，不需要额外配置。</p><p>回源节点和CloudFlareFree相同，即按照访客命中的节点数据中心回源，效果不如ArgoTunnel佳。</p><h2 id="自选IP"><a href="#自选IP" class="headerlink" title="自选IP"></a>自选IP</h2><p>CloudFlare自定义CDN节点IP可以在一定程度上解决免费套餐线路拥堵的问题，不过随之而来的风险也有不少，例如可能自定义的IP会失效，出现一些莫名其妙的错误。自定义CloudFlare的节点IP，有可能被CloudFlare封掉，解决的办法也很简单，利用DNS智能解析，将国外访问按照正常的CloudFlare给的CNAME记录解析。</p><p><a href="https://github.com/ddgth/cf2dns" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/ddgth/cf2dns</a></p>]]></content>
    
    
    <categories>
      
      <category>长毛象运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>CloudFlare</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>marks</title>
    <link href="/posts/64380.html"/>
    <url>/posts/64380.html</url>
    
    <content type="html"><![CDATA[<p>收藏一些奇怪的文章</p><span id="more"></span><p>grafana+prometheus+node_exporter  监控 在prometheus上面还可以添加alertmanage微信报警<br><a href="https://i4t.com/4741.html" target="_blank" rel="noopener external nofollow noreferrer">https://i4t.com/4741.html</a><br>示例: grafana.frps.cn<br>来自 <a href="https://hostloc.com/space-uid-18261.html" target="_blank" rel="noopener external nofollow noreferrer">https://hostloc.com/space-uid-18261.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --zone=public --add-port=22/tcp<br>systemctl <span class="hljs-built_in">enable</span> --now cockpit.socket<br>nmap -T4 -A -v -Pn IP<br></code></pre></td></tr></table></figure><p>ipv6 无法自动获取ip netplan配置脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(wget -qO- https://github.com/Aniverse/aBox/raw/master/scripts/ipv6)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>awscli version 2学习笔记</title>
    <link href="/posts/40965.html"/>
    <url>/posts/40965.html</url>
    
    <content type="html"><![CDATA[<p>AWS Command Line Interface (AWS CLI) 是一种开源工具，让您能够在命令行 Shell 中使用命令与 AWS 服务进行交互。搜了一下感觉相关中文资料不太多？特别是 <code>version 2</code> 的几乎没找到。就看官方自己学了学。写一点<code>awscli s3 version2</code>的学习笔记，一些命令的简单介绍。</p><span id="more"></span><p>参考资料：</p><ol><li>官方文档<a href="https://docs.aws.amazon.com/cli/latest/index.html" target="_blank" rel="noopener external nofollow noreferrer">AWS CLI Command Reference</a>  </li><li>官方文档<a href="https://awscli.amazonaws.com/v2/documentation/api/latest/index.html" target="_blank" rel="noopener external nofollow noreferrer">AWS CLI Command Reference version 2</a></li><li>GitHub 项目 <a href="https://github.com/aws/aws-cli" target="_blank" rel="noopener external nofollow noreferrer">aws-cli</a></li><li><a href="https://docs.aws.amazon.com/cli/latest/userguide/aws-cli.pdf#cli-chap-using" target="_blank" rel="noopener external nofollow noreferrer">User Guide for Version 2 pdf</a></li><li><a href="http://download.iteablue.com/21%E4%B8%AA%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E5%B7%A5%E5%85%B7%E8%B5%84%E6%96%99%E5%8C%85/AWS%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/AWS%20Command%20Line%20Interface%20%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97.pdf" target="_blank" rel="noopener external nofollow noreferrer">AWS Command Line Interface中文用户指南</a></li><li>【推荐】<a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/aws-cli.pdf#cli-chap-welcome" target="_blank" rel="noopener external nofollow noreferrer">AWS Command Line Interface 版本 2 的用户指南</a></li></ol><h2 id="安装-version-1"><a href="#安装-version-1" class="headerlink" title="安装 version 1"></a>安装 version 1</h2><p>AWS CLI有三种安装方式。</p><ol><li><p>pip<br> AWS CLI 在 Linux、Windows 和 macOS 上的主要分发方式是 pip，这是一个用于 Python 的程序包管理<br>器，可提供方便的方式来安装、升级和删除 Python 程序包及其相关组件。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install awscli --upgrade --user<br></code></pre></td></tr></table></figure></li><li><p>在虚拟环境中安装【推荐】<br> 用root用户使用pip可能会出现问题，一般建议使用虚拟环境（*我个人喜欢用<code>anaconda</code>或者<code>miniconda</code>*）。  </p><ul><li>pip安装virtualenv  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install --user virtualenv<br></code></pre></td></tr></table></figure></li><li>创建虚拟环境并为其命名  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">virtualenv ~/cli-ve<br></code></pre></td></tr></table></figure></li><li>激活新虚拟环境<br> Linux, macOS, or Unix  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/cli-ve/bin/activate<br></code></pre></td></tr></table></figure>  Windows  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-variable">%USERPROFILE%</span>\cli-ve\Scripts\activate<br></code></pre></td></tr></table></figure></li><li>将 AWS CLI 安装到虚拟环境中 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(cli-ve)~$ pip install --upgrade awscli<br></code></pre></td></tr></table></figure></li></ul><p> 您可以使用 deactivate 命令退出虚拟环境。不管何时启动新会话，都必须重新激活环境。</p></li></ol><p>要升级到最新版本，请重新运行安装命令：<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(cli-ve)~$ pip install --upgrade awscli<br></code></pre></td></tr></table></figure><br>3. 捆绑安装程序</p><p>验证 AWS CLI 是否已正确安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws --version<br></code></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><p>pip 卸载，或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">rm</span> -rf /usr/local/aws<br>sudo <span class="hljs-built_in">rm</span> /usr/local/bin/aws<br></code></pre></td></tr></table></figure><h2 id="安装version2"><a href="#安装version2" class="headerlink" title="安装version2"></a>安装version2</h2><p>AWS CLI 版本 2 是 AWS CLI 的最新主版本，支持所有最新功能。版本 2 中引入的某些功能无法向后兼容版<br>本 1，您必须升级才能访问这些功能。AWS CLI 版本 2 仅可作为捆绑安装程序安装。虽然您可能会在软件包管理器中找到它，但这些软件包是不受支持的非官方软件包，并非由生产或管理AWS 我们建议您仅从本指南中记载的官方 AWS CLI 发行点安装<br>AWS。  </p><h3 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h3><p>Linux x86 (64-bit)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl <span class="hljs-string">&quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot;</span> -o <span class="hljs-string">&quot;awscliv2.zip&quot;</span><br>unzip awscliv2.zip<br>sudo ./aws/install<br></code></pre></td></tr></table></figure><p>Linux ARM</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl <span class="hljs-string">&quot;https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip&quot;</span> -o <span class="hljs-string">&quot;awscliv2.zip&quot;</span><br>unzip awscliv2.zip<br>sudo ./aws/install<br></code></pre></td></tr></table></figure><p>验证 AWS CLI 是否已正确安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws --version<br></code></pre></td></tr></table></figure><h3 id="Docker官方镜像安装"><a href="#Docker官方镜像安装" class="headerlink" title="Docker官方镜像安装"></a>Docker官方镜像安装</h3><p>官方 AWS CLI 版本 2 <code>Docker</code> 镜像托管在 <code>amazon/aws-cli</code> 存储库中的 <code>DockerHub</code> 上。首次使用 <code>docker run</code> 命令时，最新的 <code>Docker</code> 镜像将下载到您的电脑。<code>docker run</code> 命令的每次后续使用都会从本地副本运行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -it amazon/aws-cli <span class="hljs-built_in">command</span><br></code></pre></td></tr></table></figure><p><em><strong>command</strong></em> 替换成你需要的 <code>aws-cli</code> 命令</p><p>比如说，验证 AWS CLI 是否已正确安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -it amazon/aws-cli --version<br></code></pre></td></tr></table></figure><blockquote><p> <code>--rm</code>   – 指定在命令退出后清理容器。<br> <code>-it</code>    – 指定要使用 打开伪 <code>TTY</code>。stdin这允许您在容器中运行 <code>AWS CLI 版本 2</code> 时向其提供输入，例如，<br>通过使用 aws configure 和 aws help 命令。当选择是否省略 <code>-it</code> 时，请考虑以下事项：<br> • 如果您正在运行脚本，则不需要 <code>-it</code>。<br> • 如果您的脚本遇到错误，则从 <code>Docker</code> 调用中省略 <code>-it</code> 也许能解决此问题。<br> • 如果您正在尝试通过管道发送输出，-it 可能会导致错误，从 Docker 调用中省略 <code>-it</code> 也许能解决此问题。如果希望保留 -it 标志，但仍想通过管道发送输出，请禁用 <code>AWS CLI</code> 默认使用的客户端分页程序 (p. 109)，应该能解决此问题。</p></blockquote><p>可以使用 -e 标志调用特定系统的环境变量。要使用环境变量，请按名称调用它。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker run --<span class="hljs-built_in">rm</span> -it -v ~/.aws:/root/.aws -e ENVVAR_NAME amazon/aws-cli s3 <span class="hljs-built_in">ls</span></span><br>2020-03-25 00:30:48 aws-cli-docker-demo<br></code></pre></td></tr></table></figure><p>您可以使用 -e 标志调用特定系统的环境变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker run --<span class="hljs-built_in">rm</span> -it -v ~/.aws:/root/.aws -e AWS_PROFILE amazon/aws-cli s3 <span class="hljs-built_in">ls</span><br>2020-03-25 00:30:48 aws-cli-docker-demo<br></code></pre></td></tr></table></figure><p>用别名缩短 Docker 命令：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">alias</span> aws=&#x27;docker <span class="hljs-built_in">run</span> <span class="hljs-comment">--rm -it amazon/aws-cli&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="快速配置"><a href="#快速配置" class="headerlink" title="快速配置"></a>快速配置</h2><p><code>aws configure</code> 命令是设置 <code>AWS CLI</code> 安装的最快方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ aws configure<br>AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE<br>AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY<br>Default region name [None]: us-west-2<br>Default output format [None]: json<br></code></pre></td></tr></table></figure><p>• 访问密钥 ID (p. 32)<br>• 秘密访问密钥 (p. 32)<br>• AWS 区域 (p. 33)<br>• 输出格式 (p. 33)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">```<br><span class="hljs-comment">## AWS CLI 的命名配置文件</span><br>配置文件默认保存在 `~/.aws` 文件夹中，有两个 `~/.aws/config` 和 `~/.aws/credentials`。<br>每个中括号的一部分 `[]` 就是一个命名配置文件，可将多个命名配置文件，存储在 `config` 和 `credentials` 文件中。<br><br>config 文件的内容类似如下：<br>```conf<br>[default]<br>region=us-west-2<br>output=json<br>[profile user1]<br>region=us-east-1<br>output=text<br></code></pre></td></tr></table></figure><blockquote><p>在 config 文件中命名配置文件时，请包括前缀词“profile”。</p></blockquote><p>credentials 文件格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs conf">[default]<br>aws_access_key_id=AKIAIOSFODNN7EXAMPLE<br>aws_secret_access_key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY<br>[user1]<br>aws_access_key_id=AKIAI44QH8DHBEXAMPLE<br>aws_secret_access_key=je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY<br></code></pre></td></tr></table></figure><blockquote><p>在 credentials 文件中创建条目时，<strong>请勿</strong>使用单词 profile<br>[default] 配置文件，以在没有显式引用配置文件时使用</p></blockquote><p>可以通过在 aws configure (p. 36) 中使用 –profile 选项或手动通过向 <code>config</code> 和 <code>credentials</code> 文件中添加条目来配置其他配置文件。例如</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">aws <span class="hljs-built_in">config</span> <span class="hljs-comment">--profile profile-name</span><br></code></pre></td></tr></table></figure><p>就会往 <code>config</code> 文件中写入 <code>[profile profile-name]</code> 的配置文件，在 <code>credentials</code> 文件中写入 <code>[profile-name]</code> 的配置文件。</p><p>用别的命令的时候，只需要使用 <code>--profile profile-name</code>  指定配置文件名称就可以使用这个配置文件。</p><h2 id="aws-s3"><a href="#aws-s3" class="headerlink" title="aws s3"></a>aws s3</h2><p>Amazon S3 就是 Amazon Simple Storage Service (Amazon S3)。AWS CLI 提供两个命令来访问 Amazon S3：<br>• s3 – 用于简化常见任务（如创建、操作和删除对象及存储桶）的执行的高级命令。<br>• s3api – 提供对所有 Amazon S3 API 操作的直接访问，使您能够执行高级操作。</p><h3 id="mb-创建存储桶"><a href="#mb-创建存储桶" class="headerlink" title="mb 创建存储桶"></a>mb 创建存储桶</h3><p>使用 s3 mb 命令创建存储桶。存储桶名称必须是全局 唯一的（在所有 Amazon S3 存储桶中都是唯一的）。存储桶名称可以包含<em>小写字母、数字、连字符和点号</em>。存储桶名称只能<em>以字母或数字开头和结尾</em>，连字符或点号后不能跟点号。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 mb &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 mb s3://bucket-name<br></code></pre></td></tr></table></figure><h3 id="ls-列出存储桶和对象"><a href="#ls-列出存储桶和对象" class="headerlink" title="ls 列出存储桶和对象"></a>ls 列出存储桶和对象</h3><p>要列出存储桶、文件夹或对象。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>这个命令默认 <code>endpoint</code> 是 <code>amazon</code> 的，所以用Scaleway的时候要加上 <code>--endpoint-url=https://s3.你的地区.scw.cloud</code> 。</p><p>示例：<br>列出所有存储桶</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> --endpoint-url=https://s3.你的地区.scw.cloud<br></code></pre></td></tr></table></figure><p>命令列出一个存储桶中的所有对象和前缀。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> s3://桶名 --endpoint-url=https://s3.你的地区.scw.cloud<br></code></pre></td></tr></table></figure><p>命令列出一个存储桶中某文件夹中的所有对象（即 <code>桶名</code> 中按前缀 <code>文件夹名/</code> 筛选出的对象）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> s3://桶名/文件夹名 --endpoint-url=https://s3.你的地区.scw.cloud<br></code></pre></td></tr></table></figure><h3 id="rb-删除存储桶"><a href="#rb-删除存储桶" class="headerlink" title="rb 删除存储桶"></a>rb 删除存储桶</h3><p>语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 rb &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>以下示例删除 s3:&#x2F;&#x2F;bucket-name 存储桶。(如果你的桶不是aws的话，记得加上 <code>endpoint</code> )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 rb s3://bucket-name --endpoint-url=https://s3.你的地区.scw.cloud<br></code></pre></td></tr></table></figure><p>默认情况下，存储桶必须为空，此操作才能成功。要删除不为空的存储桶，您必须包含 <code>--force</code> 选项。如<br>果您使用的是受版本控制的存储桶，即其中包含以前删除“但仍保留”的对象，则此命令 不 允许您删除该存储<br>桶。您必须先删除所有内容。</p><h3 id="rm-删除对象"><a href="#rm-删除对象" class="headerlink" title="rm 删除对象"></a>rm 删除对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">rm</span> &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>将从 <code>s3://bucket-name/example</code> 删除 <code>filename.txt</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">rm</span> s3://bucket-name/example/filename.txt --recursive<br></code></pre></td></tr></table></figure><h3 id="mv-移动对象"><a href="#mv-移动对象" class="headerlink" title="mv 移动对象"></a>mv 移动对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">mv</span> &lt;<span class="hljs-built_in">source</span>&gt; &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>将所有对象从 s3:&#x2F;&#x2F;bucket-name&#x2F;example 移动到 s3:&#x2F;&#x2F;my-bucket&#x2F;。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">mv</span> s3://bucket-name/example s3://my-bucket/<br></code></pre></td></tr></table></figure><p>将本地文件从当前工作目录移动到 Amazon S3 存储桶</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">mv</span> filename.txt s3://bucket-name<br></code></pre></td></tr></table></figure><h3 id="cp-复制对象"><a href="#cp-复制对象" class="headerlink" title="cp 复制对象"></a>cp 复制对象</h3><p>将所有对象从 s3:&#x2F;&#x2F;bucket-name&#x2F;example 复制到 s3:&#x2F;&#x2F;my-bucket&#x2F;。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">cp</span> s3://bucket-name/example s3://my-bucket/<br></code></pre></td></tr></table></figure><p>例使用 s3 cp 命令，将本地文件从当前工作目录复制到 Amazon S3 存储桶。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">cp</span> filename.txt s3://bucket-name<br></code></pre></td></tr></table></figure><p>将文件从 Amazon S3 存储桶复制到当前工作目录，其中 .&#x2F; 指定当前的工作目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">cp</span> s3://bucket-name/filename.txt ./<br></code></pre></td></tr></table></figure><p>使用 echo 将文本“hello world”流式传输到 s3:&#x2F;&#x2F;bucket-name&#x2F;filename.txt 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello world&quot;</span> | aws s3 <span class="hljs-built_in">cp</span> - s3://bucket-name/filename.txt<br></code></pre></td></tr></table></figure><p>将 s3:&#x2F;&#x2F;bucket-name&#x2F;filename.txt 文件流式传输到 stdout，并将内容输出到控制台。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">cp</span> s3://bucket-name/filename.txt -<br></code></pre></td></tr></table></figure><h3 id="sync-同步对象"><a href="#sync-同步对象" class="headerlink" title="sync 同步对象"></a>sync 同步对象</h3><p>同步一个存储桶与一个目录中的内容，或者同步两个存储桶中的内容。通常，<code>s3 sync</code> 在源<br>和目标之间<strong>复制缺失或过时的文件或对象</strong>。不过，您还可以提供 <code>--delete</code> 选项来从目标中删除源中不存在<br>的文件或对象。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">sync</span> &lt;<span class="hljs-built_in">source</span>&gt; &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>更新与目标位置中同名文件的大小或修改时间不同的任何文件。输出显示在同步期间执行的操作。(注意，子文件夹也会被同步)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">sync</span> . s3://my-bucket/path<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">// Delete local file<br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">rm</span> ./MyFile1.txt</span><br>// Attempt sync without --delete option - nothing happens<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">sync</span> . s3://my-bucket/path</span><br>// Sync with deletion - object is deleted from bucket<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">sync</span> . s3://my-bucket/path --delete</span><br>delete: s3://my-bucket/path/MyFile1.txt<br>// Delete object from bucket<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">rm</span> s3://my-bucket/path/MySubdirectory/MyFile3.txt</span><br>delete: s3://my-bucket/path/MySubdirectory/MyFile3.txt<br>// Sync with deletion - local file is deleted<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">sync</span> s3://my-bucket/path . --delete</span><br>delete: MySubdirectory\MyFile3.txt<br>// Sync with Infrequent Access storage class<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">sync</span> . s3://my-bucket/path --storage-class STANDARD_IA</span><br></code></pre></td></tr></table></figure><h3 id="–options-选项"><a href="#–options-选项" class="headerlink" title="[–options]选项"></a>[–options]选项</h3><h4 id="recursive"><a href="#recursive" class="headerlink" title="recursive"></a>recursive</h4><p>使用此选项时，系统针对所指定目录或前缀下的所有文件或对象执行该命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">rm</span> s3://my-bucket/path --recursive<br></code></pre></td></tr></table></figure><h4 id="acl"><a href="#acl" class="headerlink" title="acl"></a>acl</h4><p><code>sync</code> 和 <code>cp</code> 为复制到 Amazon S3 的文件设置访问权限。<code>--acl</code> 选项接受 <code>private</code>、<code>public-read</code> 和 <code>public-read-write</code> 值。</p><h4 id="exclude-include"><a href="#exclude-include" class="headerlink" title="exclude include"></a>exclude include</h4><p>使用 <code>s3 cp</code>、<code>s3 mv</code>、<code>s3 sync</code> 或 <code>s3 rm</code> 命令时，可以使用 <code>--exclude</code> 或 <code>--include</code> 选项筛选结<br>果。</p><p><code>--exclude</code> 选项将规则设置为仅从命令中排除对象，并且系统将按照指定的顺序应用这些选项。</p><p><code>--include</code> 选项将规则设置为仅包括为命令指定的对象，并且系统将按照指定的顺序应用这些选<br>项。</p><h4 id="–grants"><a href="#–grants" class="headerlink" title="–grants"></a>–grants</h4><p><code>s3 cp</code>、<code>s3 mv</code> 和 <code>s3 sync</code> 命令包括一个 <code>--grants</code> 选项，可用来向指定的用户或组授予对对<br>象的权限。使用以下语法对权限列表设置 <code>--grants</code> 选项。将 <code>Permission</code>、<code>Grantee_Type</code> 和<br><code>Grantee_ID</code> 替换为您自己的值。<br>语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">--grants Permission=Grantee_Type=Grantee_ID<br> [Permission=Grantee_Type=Grantee_ID ...]<br></code></pre></td></tr></table></figure><p>每个值都包含以下元素：<br>• 可可 – 指定授予的权限。可以设置为 read、readacl、writeacl 或 full。<br>• Grantee_Type – 指定如何标识被授权者。可以设置为 uri、emailaddress 或 id。<br>• Grantee_ID – 根据 Grantee_Type.指定被授权者。<br>• uri – 组 URI。有关更多信息，请参阅 谁是授权者？<br>• emailaddress – 账户的电子邮件地址。<br>• id – 账户的规范 ID。</p><h2 id="awscli-plugin-endpoint-插件"><a href="#awscli-plugin-endpoint-插件" class="headerlink" title="awscli-plugin-endpoint 插件"></a>awscli-plugin-endpoint 插件</h2><blockquote><p>Scaleway:<br><a href="https://www.scaleway.com/en/docs/storage/object/api-cli/object-storage-aws-cli/" target="_blank" rel="noopener external nofollow noreferrer">https://www.scaleway.com/en/docs/storage/object/api-cli/object-storage-aws-cli/</a><br>为了更方便地使用第三方的S3服务商，可以安装插件 <code>awscli-plugin-endpoint</code>。在使用 <code>aws</code> 命令的时候就不需要再指定endpoint。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install awscli-plugin-endpoint<br></code></pre></td></tr></table></figure><p>之后运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws configure <span class="hljs-built_in">set</span> plugins.endpoint awscli_plugin_endpoint<br></code></pre></td></tr></table></figure><p>修改<code>~/.aws/config</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[plugins]<br>endpoint = awscli_plugin_endpoint<br><br>[default]<br>region = nl-ams<br>s3 =<br>  endpoint_url = https://s3.nl-ams.scw.cloud<br>s3api =<br>  endpoint_url = https://s3.nl-ams.scw.cloud<br></code></pre></td></tr></table></figure><h2 id="s3api"><a href="#s3api" class="headerlink" title="s3api"></a>s3api</h2><p>AWS CLI 参考：<br>• aws s3api<br>• aws s3api put-bucket-acl<br>• aws s3api put-bucket-logging</p><p>• aws s3api<br>• aws s3api create-bucket<br>• aws s3api copy-object<br>• aws s3api delete-bucket<br>• aws s3api delete-object<br>• aws s3api head-bucket<br>• aws s3api list-objects<br>• aws s3api put-object</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>aws</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>定时获取Scaleway的存储桶大小，并通过Bark每日推送到iPhone</title>
    <link href="/posts/26855.html"/>
    <url>/posts/26855.html</url>
    
    <content type="html"><![CDATA[<p>定时获取Scaleway的存储桶大小，并通过Bark每日推送到iPhone端。<del>在存储桶过大的时候报警</del></p><span id="more"></span><blockquote><p>现学的sh，能用就行。<br>获取存储桶大小，并进行每日通知。</p></blockquote><h3 id="通过awscli"><a href="#通过awscli" class="headerlink" title="通过awscli"></a>通过awscli</h3><h4 id="获取存储桶大小"><a href="#获取存储桶大小" class="headerlink" title="获取存储桶大小"></a>获取存储桶大小</h4><blockquote><p>awscli 安装和配置见另一篇文章：<a href="https://pawswrite.xyz/posts/40965.html">https://pawswrite.xyz/posts/40965.html</a></p></blockquote><p>用 <code>awscli</code> 有条简单的命令是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> s3://桶名 --endpoint-url=https://s3.桶的地区如nl-ams.scw.cloud --recursive --human-readable --summarize | <span class="hljs-built_in">tail</span> -2<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">Total Objects:</span> <span class="hljs-number">107355</span><br>   <span class="hljs-attr">Total Size:</span> <span class="hljs-number">19.5</span> <span class="hljs-string">GiB</span><br></code></pre></td></tr></table></figure><p>这将遍历存储桶中的每个项目，并在最后打印项目总数和总大小，但我们其实只需要知道总大小就行，所以加上 <code>tail -2</code> 只打印最后两行。但有个缺点是这样很慢，会遍历所有的项目。</p><p>我自己大概 <code>20GB</code> ，十万个文件，大概<strong>耗时4分钟</strong>。</p><h4 id="脚本监控并用Bark通知"><a href="#脚本监控并用Bark通知" class="headerlink" title="脚本监控并用Bark通知"></a>脚本监控并用Bark通知</h4><p>可以自己搭建bark-server，确保了数据的安全。也可以使用Bark作者提供的服务端，<code>https://api.day.app</code>，但数据会保留在服务器端的数据库。所以怎么取舍可以看自己。</p><p>创建脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim Scaleway.sh<br></code></pre></td></tr></table></figure><p>复制以下内容，对相应的地方进行更改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span><br><br>media_size=$(aws s3 <span class="hljs-built_in">ls</span> s3://你的桶名 --endpoint-url=https://s3.桶的地区如nl-ams.scw.cloud --recursive --human-readable --summarize | <span class="hljs-built_in">tail</span> -2)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Size calculation done&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$media_size</span><br><br>bark_server=<span class="hljs-string">&quot;你的bark server&quot;</span><br>device_key=<span class="hljs-string">&quot;你的bark客户端的device key&quot;</span><br>bark_url=<span class="hljs-variable">$bark_server</span><span class="hljs-string">&quot;/push&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$bark_url</span><br><br>curl -X <span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-variable">$bark_url</span> \<br>     -H <span class="hljs-string">&#x27;Content-Type: application/json; charset=utf-8&#x27;</span> \<br>     -d <span class="hljs-string">&quot;&#123;</span><br><span class="hljs-string">  \&quot;body\&quot;: \&quot;<span class="hljs-variable">$media_size</span>\&quot;,</span><br><span class="hljs-string">  \&quot;device_key\&quot;: \&quot;<span class="hljs-variable">$device_key</span>\&quot;,</span><br><span class="hljs-string">  \&quot;title\&quot;: \&quot;Scaleway Object Storage Size\&quot;,</span><br><span class="hljs-string">  \&quot;badge\&quot;: 1,</span><br><span class="hljs-string">  \&quot;isArchive\&quot;: 1,</span><br><span class="hljs-string">  \&quot;category\&quot;: \&quot;Scaleway\&quot;,</span><br><span class="hljs-string">  \&quot;sound\&quot;: \&quot;minuet.caf\&quot;,</span><br><span class="hljs-string">  \&quot;icon\&quot;: \&quot;https://avatars.githubusercontent.com/u/5185491?s=200&amp;v=4\&quot;,</span><br><span class="hljs-string">  \&quot;group\&quot;: \&quot;Scaleway\&quot;,</span><br><span class="hljs-string">  \&quot;url\&quot;: \&quot;https://console.scaleway.com/object-storage/buckets\&quot;</span><br><span class="hljs-string">&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>一共需要更改四处，你的桶名，桶的地区（三个，分别是Amsterdam The Netherlands就是nl-ams，Paris就是 fr-pa，Warsaw, Poland就是 pl-waw）<br>然后是 <code>你的bark server</code> 和 <code>你的bark客户端的device key</code> 。这个打开自己iPhone的Bark App看一下首页都有。</p><blockquote><p>Device Key:<br>打开bark，在界面点击☁云朵图案。<br>然后点击要用的服务器，点击 <code>Copy address and key</code>。即可。  </p></blockquote><p>对脚本赋权。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x Scaleway.sh<br></code></pre></td></tr></table></figure><h4 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h4><p>设置定时任务，命令行输入 <code>crontab -e</code>，之后在文件中输入下面命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">00 22 * * * /home/mastodon/scripts/Scaleway.sh &gt;&gt; /home/mastodon/log/Scaleway.<span class="hljs-built_in">log</span> 2&gt;&amp;1<br></code></pre></td></tr></table></figure><p>每天22点执行。记得把脚本路径和日志文件路径改成你自己的。</p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>效果如下：</p><p><img src="/posts/26855/res1.jpg"></p><p><img src="/posts/26855/res2.jpg"></p><!-- blank line --><h3 id="通过s3cmd【推荐】"><a href="#通过s3cmd【推荐】" class="headerlink" title="通过s3cmd【推荐】"></a>通过s3cmd【推荐】</h3><blockquote><p>github:<br><a href="https://github.com/s3tools/s3cmd" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/s3tools/s3cmd</a><br>文档<br><a href="https://s3tools.org/s3_about" target="_blank" rel="noopener external nofollow noreferrer">https://s3tools.org/s3_about</a></p></blockquote><p>更简单的方法是安装 <code>s3cmd</code> ，它不是  <code>awscli</code> 的所以要另外安装。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install s3cmd<br></code></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>安装以后要配置密钥，就是 <code>Access Key</code> 和 <code>Secret Key</code>。<br>回到根目录，创建配置文件.s3cfg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span><br><span class="hljs-built_in">touch</span> .s3cfg<br></code></pre></td></tr></table></figure><p>输入以下内容吗，记得修改 <code>host_base</code> <code>host_bucket</code> <code>bucket_location</code> <code>access_key</code> <code>secret_key</code> :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs conf">[default]<br># Object Storage Region NL-AMS<br><br>host_base = s3.nl-ams.scw.cloud<br>host_bucket = %(bucket)s.s3.nl-ams.scw.cloud<br>bucket_location = nl-ams<br>use_https = True<br><br># Login credentials<br><br>access_key = &lt;ACCESS_KEY&gt;<br>secret_key = &lt;SECRET_KEY&gt;<br></code></pre></td></tr></table></figure><p>之后就可以使用下面的命令来列举出所有的桶的大小了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">s3cmd <span class="hljs-built_in">du</span> -H<br></code></pre></td></tr></table></figure><p>这将比文件大小的递归总和更快地显示大存储区的大小。因为它会获取实际使用的磁盘空间。<code>-H</code> 可以把桶的大小转换成MB GB这种人类易读的单位。<br>列举桶名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">s3cmd <span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><h4 id="脚本监控并用Bark通知-1"><a href="#脚本监控并用Bark通知-1" class="headerlink" title="脚本监控并用Bark通知"></a>脚本监控并用Bark通知</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S Starting monitering&quot;</span><br><br>media_size=$(s3cmd <span class="hljs-built_in">du</span> -H)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Size calculation done&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$media_size</span><br><br>bark_server=<span class="hljs-string">&quot;你的bark server&quot;</span><br>device_key=<span class="hljs-string">&quot;你的bark客户端的device key&quot;</span><br>bark_url=<span class="hljs-variable">$bark_server</span><span class="hljs-string">&quot;/push&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$bark_url</span><br><br>curl -X <span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-variable">$bark_url</span> \<br>     -H <span class="hljs-string">&#x27;Content-Type: application/json; charset=utf-8&#x27;</span> \<br>     -d <span class="hljs-string">&quot;&#123;</span><br><span class="hljs-string">  \&quot;body\&quot;: \&quot;<span class="hljs-variable">$media_size</span>\&quot;,</span><br><span class="hljs-string">  \&quot;device_key\&quot;: \&quot;<span class="hljs-variable">$device_key</span>\&quot;,</span><br><span class="hljs-string">  \&quot;title\&quot;: \&quot;Scaleway Object Storage Size\&quot;,</span><br><span class="hljs-string">  \&quot;badge\&quot;: 1,</span><br><span class="hljs-string">  \&quot;isArchive\&quot;: 1,</span><br><span class="hljs-string">  \&quot;category\&quot;: \&quot;Scaleway\&quot;,</span><br><span class="hljs-string">  \&quot;sound\&quot;: \&quot;minuet.caf\&quot;,</span><br><span class="hljs-string">  \&quot;icon\&quot;: \&quot;https://avatars.githubusercontent.com/u/5185491?s=200&amp;v=4\&quot;,</span><br><span class="hljs-string">  \&quot;group\&quot;: \&quot;Scaleway\&quot;,</span><br><span class="hljs-string">  \&quot;url\&quot;: \&quot;https://console.scaleway.com/object-storage/buckets\&quot;</span><br><span class="hljs-string">&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>如果你的s3cmd安装在虚拟环境里， media_size 改成下面这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">media_size=$(<span class="hljs-built_in">source</span> ~/miniconda3/bin/activate 你的虚拟环境名;s3cmd <span class="hljs-built_in">du</span> -H)<br></code></pre></td></tr></table></figure><h3 id="通过boto3-调用-s3-列举所有【失败】"><a href="#通过boto3-调用-s3-列举所有【失败】" class="headerlink" title="通过boto3 调用 s3 列举所有【失败】"></a>通过boto3 调用 s3 列举所有【失败】</h3><p>居然有 <code>Maxkeys</code> 的限制啊。默认 <code>Maxkeys</code> 是1000，但是对于动辄六位数的媒体文件，太少了。超过这个数字就贼慢，数字稍微大一点就会报错412 Precondition Failed。没救了，重点是很慢。</p><p>存一下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 获取区域内所有桶名称</span><br>client = boto3.client(<span class="hljs-string">&#x27;s3&#x27;</span>, aws_access_key_id=aws_access_key_id,<br>                      aws_secret_access_key=aws_secret_access_key,<br>                      region_name=region_name, endpoint_url=ENDPOINT, )<br>response = client.list_buckets()<br><span class="hljs-keyword">for</span> bucket <span class="hljs-keyword">in</span> response[<span class="hljs-string">&#x27;Buckets&#x27;</span>]:<br>    bucket_name = bucket[<span class="hljs-string">&#x27;Name&#x27;</span>]<br>    bucket_content = client.list_objects(Bucket=bucket_name, MaxKeys=<span class="hljs-number">10000</span>, )[<span class="hljs-string">&#x27;Contents&#x27;</span>]<br>    bucket_size = <span class="hljs-built_in">sum</span>(obj[<span class="hljs-string">&#x27;Size&#x27;</span>] <span class="hljs-keyword">for</span> obj <span class="hljs-keyword">in</span> bucket_content)<br>    <span class="hljs-built_in">print</span>(bucket_name, bucket_size)<br></code></pre></td></tr></table></figure><h3 id="通过boto3-调用-CloudWatch【失败】"><a href="#通过boto3-调用-CloudWatch【失败】" class="headerlink" title="通过boto3 调用 CloudWatch【失败】"></a>通过boto3 调用 CloudWatch【失败】</h3><p>尝试了一下，Scaleway不支持CLoudwatch，哭哭。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws cloudwatch list-dashboards<br></code></pre></td></tr></table></figure><p>报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs s">An error occurred (Unknown) when calling the ListDashboards operation: Unknown<br></code></pre></td></tr></table></figure><p>python代码也是报一样的错误，去看了Scaleway的文档也是没提到支持CloudWatch，是我太天真。<br>但还是放一下python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-keyword">import</span> boto3<br><br><span class="hljs-comment"># key填写账户生成的，可以去用户账户里面生成</span><br>aws_access_key_id = <span class="hljs-string">&#x27;&#x27;</span><br>aws_secret_access_key = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment"># 桶所在区域</span><br>region_name = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment"># endpoint</span><br>ENDPOINT = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment"># 获取区域内所有桶名称</span><br>client = boto3.client(<span class="hljs-string">&#x27;s3&#x27;</span>, aws_access_key_id=aws_access_key_id,<br>                      aws_secret_access_key=aws_secret_access_key,<br>                      region_name=region_name, endpoint_url=ENDPOINT,)<br>response = client.list_buckets()<br><span class="hljs-comment"># 查看桶的大小要调CloudWatch的接口</span><br>client = boto3.client(<span class="hljs-string">&#x27;cloudwatch&#x27;</span>,<br>                      aws_access_key_id=aws_access_key_id,<br>                      aws_secret_access_key=aws_secret_access_key,<br>                      region_name=region_name, endpoint_url=ENDPOINT,<br>                      )<br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> response[<span class="hljs-string">&#x27;Buckets&#x27;</span>]:<br>    bucketname = name[<span class="hljs-string">&#x27;Name&#x27;</span>]<br><br>    <span class="hljs-comment"># 看了下监控CloudWatch监控的是2天前的数据，这里可以取大点时间范围</span><br>    td = datetime.timedelta(days=<span class="hljs-number">4</span>, seconds=<span class="hljs-number">0</span>, microseconds=<span class="hljs-number">0</span>)<br>    response = client.get_metric_statistics(<br>        Namespace=<span class="hljs-string">&#x27;AWS/S3&#x27;</span>,<br>        MetricName=<span class="hljs-string">&#x27;BucketSizeBytes&#x27;</span>,<br>        <span class="hljs-comment"># 文档参考https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/cloudwatch-monitoring-accessing.html</span><br>        <span class="hljs-comment"># 接口格式参考https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cloudwatch.html#CloudWatch.Client.get_metric_statistics</span><br>        Dimensions=[<br>            &#123;<br>                <span class="hljs-string">&#x27;Name&#x27;</span>: <span class="hljs-string">&#x27;BucketName&#x27;</span>,<br>                <span class="hljs-string">&#x27;Value&#x27;</span>: bucketname<br>            &#125;,<br>            &#123;<br>                <span class="hljs-string">&#x27;Name&#x27;</span>: <span class="hljs-string">&#x27;StorageType&#x27;</span>,<br>                <span class="hljs-string">&#x27;Value&#x27;</span>: <span class="hljs-string">&#x27;StandardStorage&#x27;</span><br>            &#125;,<br>        ],<br>        StartTime=(datetime.datetime.utcnow() - td).isoformat(),<br>        EndTime=datetime.datetime.utcnow().isoformat(),<br>        <span class="hljs-comment"># 这个是间隔时间 默认单位是S 86400是取1天</span><br>        Period=<span class="hljs-number">86400</span>,<br>        Statistics=[<br>            <span class="hljs-string">&#x27;Average&#x27;</span>,<br>        ],<br>        Unit=<span class="hljs-string">&#x27;Bytes&#x27;</span>,<br>    )<br>    <span class="hljs-comment"># bytes换成GB TB查看 有的桶太小了就直接过滤了懒的看了</span><br>    <span class="hljs-keyword">try</span>:<br>        standardstorage_size = response[<span class="hljs-string">&#x27;Datapoints&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;Average&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-comment"># print(bucketname,&#x27;%.2fTB&#x27;%(standardstorage_size/1024/1024/1024/1024))</span><br>    <span class="hljs-built_in">print</span>(bucketname, <span class="hljs-string">&#x27;%.2fGB&#x27;</span> % (standardstorage_size / <span class="hljs-number">1024</span> / <span class="hljs-number">1024</span> / <span class="hljs-number">1024</span>))<br></code></pre></td></tr></table></figure><blockquote><p>参考文章：<br><a href="https://www.howtogeek.com/devops/how-to-get-the-size-of-an-amazon-s3-bucket/" target="_blank" rel="noopener external nofollow noreferrer">https://www.howtogeek.com/devops/how-to-get-the-size-of-an-amazon-s3-bucket/</a></p></blockquote><!-- ```bash``` -->]]></content>
    
    
    <categories>
      
      <category>长毛象运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>Object Storage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>部署自己的Bark服务端</title>
    <link href="/posts/12936.html"/>
    <url>/posts/12936.html</url>
    
    <content type="html"><![CDATA[<p>Bark是一款开源的消息推送服务，用于给 iPhone 发送自定义的内容，支持文字和链接。我们可以使用Bark作者Fin提供的服务端来发送通知，也可以使用别人的。但通知过程所有数据都会保存在服务器，这样并<strong>不安全</strong>。通过部署自己的 Bark 服务端，我们可以安全地推送一些敏感信息。部署自己的 <code>bark-server</code>，来进行消息提醒。Bark 分为客户端和服务端。其中，客户端用于接收消息；服务端用于推送消息。</p><span id="more"></span><p>官方项目地址：</p><blockquote><p><a href="https://github.com/Finb/bark-server" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/Finb/bark-server</a><br><a href="https://github.com/Finb/Bark" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/Finb/Bark</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>最简单的，docker部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -dt --name bark -p 8080:8080 -v `<span class="hljs-built_in">pwd</span>`/bark-data:/data finab/bark-server<br></code></pre></td></tr></table></figure><p>或者docker-compose启动，方便之后修改参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> bark-server &amp;&amp; <span class="hljs-built_in">cd</span> bark-server<br>curl -sL https://git.io/JvSRl &gt; docker-compose.yaml<br>docker-compose up -d<br></code></pre></td></tr></table></figure><h3 id="【可选】健康检查"><a href="#【可选】健康检查" class="headerlink" title="【可选】健康检查"></a>【可选】健康检查</h3><p>为了监控，增加了一个健康检查，先修改<code>docker-compose.yml</code>文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.8&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">bark-server:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">finab/bark-server</span><br>    <span class="hljs-attr">build:</span><br>      <span class="hljs-attr">context:</span> <span class="hljs-string">./</span><br>      <span class="hljs-attr">dockerfile:</span> <span class="hljs-string">Dockerfile</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">bark-server</span><br>    <span class="hljs-attr">healthcheck:</span><br>      <span class="hljs-attr">test:</span> <span class="hljs-string">curl</span> <span class="hljs-string">http://127.0.0.1:8080/healthz</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./data:/data</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8080:8080&quot;</span><br></code></pre></td></tr></table></figure><p>但是原镜像是没有curl这个命令的，我们需要加上，所以创建Dockerfile文件，写入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">FROM finab/bark-server<br>RUN apk --update --no-cache add curl<br></code></pre></td></tr></table></figure><p>然后启动即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d --build<br></code></pre></td></tr></table></figure><p>用<code>docker ps</code>查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">CONTAINER ID   IMAGE               COMMAND         CREATED         STATUS                   PORTS                                       NAMES<br>3dba0f99f5ea   finab/bark-server   &quot;bark-server&quot;   4 minutes ago   Up 4 minutes (healthy)   0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp   bark-server<br></code></pre></td></tr></table></figure><h2 id="打开防火墙"><a href="#打开防火墙" class="headerlink" title="打开防火墙"></a>打开防火墙</h2><p>如果你装了防火墙的话，不要忘记放开端口，否则不能外网访问：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --zone=public --add-port=8080/tcp<br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><p>iptables是另外的方法。</p><h2 id="检查可用性"><a href="#检查可用性" class="headerlink" title="检查可用性"></a>检查可用性</h2><p>用 <code>safari</code> ，在网址一栏输入 <code>http://你的ip:8080/ping</code> 打开，看是否返回类似下面的信息：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">200</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;success&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;timestamp&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1652768076</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/posts/12936/1.jpg"></p><p>或者输入 <code>http://你的ip:8080/healthz</code> ，看网页是否返回 <code>ok</code> 。</p><p><img src="/posts/12936/2.jpg"></p><h2 id="添加nginx反代"><a href="#添加nginx反代" class="headerlink" title="添加nginx反代"></a>添加nginx反代</h2><p>用IP访问确实难看，换成域名访问还需要用nginx反代，这里准备一个域名，解析到你的服务器IP。<br>创建nginx配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/bark.conf<br></code></pre></td></tr></table></figure><p>填入一下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs conf">server &#123;<br>    listen 80;<br>    listen [::]:80;<br>    # Replace bark.app.dev with your real domain name.<br>    server_name bark.app.dev;<br><br>    return 301 https://$host$request_uri;<br>&#125;<br><br>server &#123;<br>    listen 443 ssl http2;<br>    listen [::]:443 ssl http2;<br>    # Replace bark.app.dev with your real domain name.<br>    server_name bark.app.dev;<br><br>    # ssl_certificate /path/to/signed_cert_plus_intermediates;<br>    # ssl_certificate_key /path/to/private_key;<br>    ssl_session_timeout 1d;<br>    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions<br>    ssl_session_tickets off;<br><br>    # modern configuration<br>    ssl_protocols TLSv1.3;<br>    ssl_prefer_server_ciphers off;<br><br>    # HSTS (ngx_http_headers_module is required) (63072000 seconds)<br>    add_header Strict-Transport-Security &quot;max-age=63072000&quot; always;<br><br>    # OCSP stapling<br>    ssl_stapling on;<br>    ssl_stapling_verify on;<br><br>    # verify chain of trust of OCSP response using Root CA and Intermediate certs<br>    # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;<br><br>    # replace with the IP address of your resolver<br>    #resolver 127.0.0.1;<br><br>    location / &#123;<br><br>        log_not_found on;<br>        # Replace http://192.168.1.123:8080 with the listening address of the bark server.<br>        proxy_pass http://192.168.1.123:8080;<br><br>        proxy_read_timeout 300;<br>        proxy_connect_timeout 300;<br>        proxy_redirect off;<br><br>        proxy_set_header Host              $host;<br>        proxy_set_header X-Forwarded-Proto $scheme;<br>        proxy_set_header X-Real-IP         $remote_addr;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>用 <code>nginx -t</code> 验证一下是否有问题。</p><h2 id="申请SSL证书"><a href="#申请SSL证书" class="headerlink" title="申请SSL证书"></a>申请SSL证书</h2><p>用<a href="https://certbot.eff.org/" target="_blank" rel="noopener external nofollow noreferrer">certbot</a>申请SSL证书，具体安装看官网👉<a href="https://certbot.eff.org/" target="_blank" rel="noopener external nofollow noreferrer">certbot</a></p><p>我的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install certbot<br>certbot --nginx<br></code></pre></td></tr></table></figure><p>按照指示来就好。</p><h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><p>下载bark app，打开，点击右上角的 <code>+</code> 号，添加刚刚的域名或者ip</p><p><img src="/posts/12936/4.jpg"></p><p>域名格式： <code>https://你的域名</code> ，比如说 <code>https://api2.day.app</code> 。</p><p>ip格式： <code>http://你的ip:你的端口</code> ，比如说 <code>https://123.45.67.89:8080</code> 。</p><p>之后回到首页，点击 <code>注册设备</code> 获取你的 <code>Device Key</code></p><p><img src="/posts/12936/3.png"></p><h2 id="获取key"><a href="#获取key" class="headerlink" title="获取key"></a>获取key</h2><p>打开bark，在界面点击☁云朵图案。</p><p><img src="/posts/12936/server.jpg"></p><p>然后点击要用的服务器，点击 <code>Copy address and key</code>。即可。</p><p><img src="/posts/12936/key.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>自建项目</category>
      
      <category>Bark</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【个人笔记】将媒体文件同步到Scaleway存储桶（Docker部署长毛象）</title>
    <link href="/posts/8799.html"/>
    <url>/posts/8799.html</url>
    
    <content type="html"><![CDATA[<p>用<strong>docker</strong>部署站点的情况下，将媒体文件同步到Scaleway存储桶。本文仅作个人笔记与备忘用，非原创。</p><span id="more"></span><p>参考了以下文章，表示感谢：</p><blockquote><p><a href="https://pullopen.github.io/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/2020/07/22/Move-mastodon-media-to-Scaleway.html" target="_blank" rel="noopener external nofollow noreferrer">https://pullopen.github.io/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/2020/07/22/Move-mastodon-media-to-Scaleway.html</a><br><a href="https://www.notion.so/3f645c4a2ab14f34aef37703ee286d3a" target="_blank" rel="noopener external nofollow noreferrer">https://www.notion.so/3f645c4a2ab14f34aef37703ee286d3a</a></p></blockquote><!-- ## 创建储存库注册Scaleway。注册完毕后，在控制面板右上角点击Create，选择 `Create an OS Bucket`，开始创建。命名，选择地区，公开性选择Public，创建。 --><h3 id="关于地区"><a href="#关于地区" class="headerlink" title="关于地区"></a>关于地区</h3><p>Scaleway ，该服务商提供如下位置的节点：</p><ul><li>Amsterdam, The Netherlands:<ul><li>Region: <code>nl-ams</code></li><li>Endpoint: <code>https://s3.nl-ams.scw.cloud</code></li></ul></li><li>Paris, France:<ul><li>Region: <code>fr-par</code></li><li>Endpoint: <code>https://s3.fr-par.scw.cloud</code></li></ul></li><li>Warsaw, Poland:<ul><li>Region: <code>pl-waw</code></li><li>Endpoint: <code>https://s3.pl-waw.scw.cloud/</code></li></ul></li></ul><p>我们可以登录长毛象服务器的 SSH，利用 Ping 命令来测试从长毛象服务器到外部存储节点的延迟，Ping 的结果数值越低则延迟越小。</p><p>例如你想要测试到 <code>[s3.nl-ams.scw.cloud](http://s3.nl-ams.scw.cloud)</code> 的延迟，则输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping s3.nl-ams.scw.cloud<br></code></pre></td></tr></table></figure><p>使用 Ctrl + C 停止发送 Ping 请求。</p><p>比如说 <code>mstdn.homes</code> 到 <code>s3.nl-ams.scw.cloud</code> 的延迟最低。(我尽力了)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ping s3.nl-ams.scw.cloud</span><br>PING s3.nl-ams.scw.cloud (163.172.208.8) 56(84) bytes of data.<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=1 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=2 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=3 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=4 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=5 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=6 ttl=51 time=231 ms<br></code></pre></td></tr></table></figure><h2 id="创建-Bucket"><a href="#创建-Bucket" class="headerlink" title="创建 Bucket"></a>创建 Bucket</h2><p>注册 Scaleway 账户后，点击右上角的 <code>Create</code> 按钮，创建一个 Bucket：</p><ul><li>Name your bucket<ul><li>如果使用自定义域名绑定储存桶，<strong>储存桶的名称务必填写媒体服务的子域名</strong>，如  <strong>[i.mstdn.homes]</strong> 或 <strong>media.mstdn.homes</strong> 等，便于 <code>Cloudflare</code> 的绑定。</li><li>本教程中，因为我们要绑定 media.mstdn.homes 作为媒体域名，我们将储存桶命名为 media.mstdn.homes。</li></ul></li><li>Choose a Region<ul><li>选择一个距离你的长毛象服务器位置最近的地点（见上方如何选择节点）</li></ul></li><li>Visibility<ul><li>设置为 Private。请不要设置为 Public，否则任何人都可以看到媒体文件列表。</li></ul></li></ul><p><img src="/posts/8799/create.png"></p><h2 id="获取API-key"><a href="#获取API-key" class="headerlink" title="获取API key"></a>获取API key</h2><p>创建 Bucket 成功后，点击右上角账户名 &gt; Credentials 获取 API Key。  </p><p><img src="/posts/8799/API.png">  </p><p>你会得到一组密钥，只会显示一次，请立即记录下来。</p><h2 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h2><p>回到长毛象服务器的 SSH，编辑长毛象配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /home/mastodon/mastodon/.env.production<br></code></pre></td></tr></table></figure><p>添加以下内容，注意替换为你的 Bucket 密钥信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">S3_ENABLED=<span class="hljs-literal">true</span><br>S3_BUCKET=你的储存桶名字<br>AWS_ACCESS_KEY_ID=你的_ACCESS_KEY<br>AWS_SECRET_ACCESS_KEY=你的_SECRET_ACCESS<br>S3_REGION=你的储存桶地区<br>S3_PROTOCOL=https<br>S3_HOSTNAME=你的储存桶地区地址<br>S3_ENDPOINT=https://你的储存桶地区地址/<br>S3_ALIAS_HOST=你的Cloudflare储存桶域名（可选）<br></code></pre></td></tr></table></figure><p>不填写<code>S3_ALIAS_HOST</code>的话，会直接从Scaleway的endpoint拉取媒体文件，但是这样从国内访问非常非常慢。用了<code>S3_ALIAS_HOST</code>可以加上Cloudflare的CDN，会快一些。</p><!-- > 如果填写S3_ALIAS_HOST出现S3_ALIAS_HOST `NET::ERR_CERT_COMMON_NAME_INVALID`的问题还没搞懂为什么。> 相关文章：https://www.h3xed.com/web-development/using-https-with-amazon-s3-and-your-domain --><p>在本例中，我们填写的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">S3_ENABLED=<span class="hljs-literal">true</span><br>S3_BUCKET=media.mstdn.homes<br>AWS_ACCESS_KEY_ID=xxxxxxxxxxxxx<br>AWS_SECRET_ACCESS_KEY=yyyyyyyyyyyyyyyyy<br>S3_REGION=nl-ams<br>S3_PROTOCOL=https<br>S3_HOSTNAME=s3.nl-ams.scw.cloud<br>S3_ENDPOINT=https://s3.nl-ams.scw.cloud<br>S3_ALIAS_HOST=media.mstdn.homes<br></code></pre></td></tr></table></figure><ul><li><p>S3_BUCKET</p><ul><li>填写的是我们创建的桶名称</li><li>如果使用 Cloudflare，需要以绑定 Cloudflare 的存储桶域名一致</li></ul></li><li><p>AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY</p><ul><li>XXXXXXXXXX 和 YYYYYYYYYY 分别是我们刚刚在 Credential 页面获取的 Key 和 Secret。</li></ul></li><li><p>S3_REGION</p><p>  按地区，以 Scaleway 为例：</p><ul><li><p>Amsterdam, The Netherlands 节点:</p><ul><li>S3_REGION 填写: <code>nl-ams</code></li><li>S3_HOSTNAME 填写: <code>s3.nl-ams.scw.cloud</code></li></ul></li><li><p>Paris, France 节点:</p><ul><li>S3_REGION 填写: <code>fr-par</code></li><li>S3_HOSTNAME 填写: <code>s3.fr-par.scw.cloud</code></li></ul></li><li><p>Warsaw, Poland 节点:</p><ul><li>S3_REGION 填写: <code>pl-waw</code></li><li>S3_HOSTNAME 填写: <code>s3.pl-waw.scw.cloud</code></li></ul></li><li><p>S3_ALIAS_HOST:</p><ul><li>填写了我们绑定 Cloudflare 的存储桶域名</li></ul></li></ul></li></ul><p>编辑完成后，使用 ctrl + X 退出，按 Y 、回车保存。</p><p>保存后，重启 Mastodon：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">【不适用】<br>systemctl restart mastodon-web mastodon-sidekiq mastodon-streaming<br></code></pre></td></tr></table></figure><p>【docker适用】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home/mastodon/mastodon<br>docker-compose down<br>docker-compose up -d<br><br>docker-compose run --<span class="hljs-built_in">rm</span> web bin/tootctl search deploy<br></code></pre></td></tr></table></figure><h2 id="绑定-Cloudflare"><a href="#绑定-Cloudflare" class="headerlink" title="绑定 Cloudflare"></a>绑定 Cloudflare</h2><p>添加一条 CNAME 记录指向我们刚创建的存储桶：</p><p>目标为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Bucket名称.s3.地区.scw.cloud <br></code></pre></td></tr></table></figure><p>你也可以在 Scaleway 面板的 Bucket Settings 标签页中找到目标地址：</p><p><img src="/posts/8799/url.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/cb8fd59b-3b61-4b9d-a7b0-eefe63d8b0b9/Untitled.png"></p><p>Cloudflare 面板 &gt; DNS &gt; 添加记录 &gt; CNAME，填入名称和目标，点亮代理状态：<br><img src="/posts/8799/dns.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6a718d17-3461-4247-b771-d9ff9bb082c1/Untitled.png"></p><h2 id="Cloudflare-页面规则"><a href="#Cloudflare-页面规则" class="headerlink" title="Cloudflare 页面规则"></a>Cloudflare 页面规则</h2><p>添加 DNS 记录后，可以创建页面规则，加大力度缓存媒体文件。特别是对于流量收费的存储服务，可以大大降低成本。</p><p><img src="/posts/8799/rules.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/eca960ce-780e-446f-a2da-633aa926037c/Untitled.png"></p><p>发一张图片，确保图片可以正常上传、显示。</p><!-- ![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/051578f3-18df-4ab7-9fa2-49608b812570/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/051578f3-18df-4ab7-9fa2-49608b812570/Untitled.png) --><p>Enjoy ~</p><h2 id="迁移已有媒体文件"><a href="#迁移已有媒体文件" class="headerlink" title="迁移已有媒体文件"></a>迁移已有媒体文件</h2><h3 id="安装并调试Aws-Cli"><a href="#安装并调试Aws-Cli" class="headerlink" title="安装并调试Aws-Cli"></a>安装并调试Aws-Cli</h3><p>打开服务器，进入root用户。安装 <code>awscli</code>。</p><p>aws官方文档如下：<br><a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html" target="_blank" rel="noopener external nofollow noreferrer">https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl <span class="hljs-string">&quot;https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip&quot;</span> -o <span class="hljs-string">&quot;awscliv2.zip&quot;</span><br>unzip awscliv2.zip<br>sudo ./aws/install<br></code></pre></td></tr></table></figure><p>安装完会显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">You can now run: /usr/local/bin/aws --version<br></code></pre></td></tr></table></figure><p>每次要<code>/usr/local/bin/aws</code>来使用<code>aws</code>很麻烦。为了方便我们创建软链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /usr/local/bin/aws /usr/bin/aws<br></code></pre></td></tr></table></figure><p>就可以直接使用aws了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws configure<br></code></pre></td></tr></table></figure><p>按指示依次输入Access Key和Secret Key。Region部分，如果你创建时选择的是巴黎则填写fr-par，阿姆斯特丹则填写nl-ams。Default output format直接回车即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs conf">AWS Access Key ID [None]: <br>AWS Secret Access Key [None]: <br>Default region name [None]: nl-ams<br>Default output format [None]: <br></code></pre></td></tr></table></figure><h3 id="迁移原来的文件！"><a href="#迁移原来的文件！" class="headerlink" title="迁移原来的文件！"></a>迁移原来的文件！</h3><p>进入<code>mastodon</code>文件夹，先清理一下文件，运行同步命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">sync</span> public/system s3://media.mstdn.homes --endpoint-url=https://s3.nl-ams.scw.cloud --acl public-read<br></code></pre></td></tr></table></figure><p>因为运行时间可能比较长，可以挂在后台运行，将日志文件输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">sync</span> public/system s3://mediafiles.mstdn.homes --endpoint-url=https://s3.nl-ams.scw.cloud --acl public-read &gt;&gt; /home/mastodon/log/sync.log &amp;<br></code></pre></td></tr></table></figure><blockquote><p>如果迁移了原来的文件却发现以前的媒体文件打不开，很可能是 <code>--acl public-read</code> 参数没有加~</p></blockquote><p>如果一切正常，就可以删除<code>public/system</code>文件夹了~</p>]]></content>
    
    
    <categories>
      
      <category>长毛象</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>长毛象</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>rclone自动备份数据库</title>
    <link href="/posts/38031.html"/>
    <url>/posts/38031.html</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="cfa490a9f793e255a653c2f10e7c947753c85a4cdea78e9cb4ed068099ea20bb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>长毛象运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>笔记</tag>
      
      <tag>Notes</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022最新最全GitHub学生包分析</title>
    <link href="/posts/35579.html"/>
    <url>/posts/35579.html</url>
    
    <content type="html"><![CDATA[<p>GitHub 学生包有很多福利。最近薅了一个，记录一下包里的内容~</p><span id="more"></span><h2 id="GitHub学生包简介"><a href="#GitHub学生包简介" class="headerlink" title="GitHub学生包简介"></a><code>GitHub</code>学生包简介<img src="https://assets-global.website-files.com/5c7036349b5477bf13f828cf/5d25a8e546c1e328549f9e9b_GitHub%20icon.svg"></h2><p><a href="https://education.github.com/pack" target="_blank" rel="noopener external nofollow noreferrer">GitHub 学生包</a>，也就是 <code>GitHub Student Developer Pack</code>是面向海内外高校学生的一项福利，一些公司免费提供给学生资源一段时间，或一定量。。不过因为被薅羊毛太过，现在审核很严格，原本白名单学校只需要edu邮箱验证即可，但现在基本都要学生证验证了。所以在校大学生珍惜这个机会，去尝试尝试吧。</p><h2 id="学生包内容简介"><a href="#学生包内容简介" class="headerlink" title="学生包内容简介"></a>学生包内容简介</h2><p>这个包主要由两部分组成，Web 开发简介和虚拟化套件。除此之外还有其他的福利。这里对两个包简要介绍如下。<br><strong>微注</strong>：有用的会在下一部分详细介绍</p><h3 id="Web-开发简介-Intro-to-Web-Dev"><a href="#Web-开发简介-Intro-to-Web-Dev" class="headerlink" title="Web 开发简介 Intro to Web Dev"></a>Web 开发简介 Intro to Web Dev</h3><img alt="Intro to Web Dev logo - purple computer monitor with yellow post-it featuring invertocat logo" class="width-fit experience__header__logo mb-4 mb-sm-0 ml-0 ml-sm-4" width="200" src="https://education.github.com/assets/experience/02/github-web-development-kit-logo-7b7457f9366e7e245815871a994d0e2ebacdbd84549a53182b308d795b46d88d.png" /><p>官方介绍：构建下一个网站所需的一切。 在学习 Web 开发基础知识的同时，了解如何设计和构建自己的网站。 无论您目前拥有多少经验或技术知识，Web 开发体验简介都为学生提供了让您走上正轨的工具。</p><p>包内优惠：</p><blockquote><p>🎒表示学生认证期间可享受福利</p></blockquote><table><thead><tr><th align="left">名字</th><th align="left">简介</th><th align="center">时长</th></tr></thead><tbody><tr><td align="left">bootstrap studio</td><td align="left">用于使用 Bootstrap 框架创建响应式网站的桌面应用程序</td><td align="center">🎒</td></tr><tr><td align="left">🔥DigitalOcean</td><td align="left">🖥️云托管商，但注册需信用卡</td><td align="center">$100试用</td></tr><tr><td align="left">🔥JetBrains</td><td align="left">专业桌面 IDE，码农神器</td><td align="center">1年</td></tr><tr><td align="left">👩‍🏫🔥Microsoft Azure</td><td align="left">微软Azure云服务和学习资源</td><td align="center">$100试用</td></tr><tr><td align="left">👩‍🏫educative</td><td align="left">基于文本的交互式课程</td><td align="center">6个月</td></tr><tr><td align="left">Polypane</td><td align="left">从头开始构建的浏览器，用于创建和测试网站和应用</td><td align="center">1年</td></tr><tr><td align="left">Twilio</td><td align="left">将语音、视频和消息传递等功能添加到app的开发者平台</td><td align="center">$50</td></tr><tr><td align="left">Microsoft Visual Studio</td><td align="left">桌面 IDE，码农神器，Visual Studio 社区访问权限</td><td align="center">1 年 Azure 服务</td></tr><tr><td align="left">GitHub Pages</td><td align="left">通过GitHub Pages可以部署静态网站</td><td align="center">本就免费</td></tr><tr><td align="left">👩‍🏫开源课程</td><td align="left"><a href="https://github.com/microsoft/Web-Dev-For-Beginners" target="_blank" rel="noopener external nofollow noreferrer">JavaScript, CSS, and HTML 基础课程</a></td><td align="center">本就免费</td></tr></tbody></table><h3 id="虚拟化套件-Virtual-Event-Kit"><a href="#虚拟化套件-Virtual-Event-Kit" class="headerlink" title="虚拟化套件 Virtual Event Kit"></a>虚拟化套件 Virtual Event Kit</h3><img alt="Education laptop invertocat" class="width-fit experience__header__logo mb-4 mb-sm-0 ml-0 ml-sm-4" width="288" src="https://education.github.com/assets/experience/01/virtual-event-kit-icon-37a665f41a85865fe51a9db5c9b050f4bdc684d42b379e80688ec078e11a6114.png" /><p>官方介绍：虚拟活动所需的一切。 为参与而设计，我们将负责这些工具。 虚拟活动工具包为学生提供了使在线活动变得简单且易于访问的资源。</p><blockquote><p>🎒表示学生认证期间可享受福利</p></blockquote><table><thead><tr><th align="left">名字</th><th align="left">简介</th><th align="center">时长</th></tr></thead><tbody><tr><td align="left">🔥Namecheap</td><td align="left">经济实惠的注册、托管和域管理</td><td align="center">1年的 <code>.me</code> 域名和SSL证书</td></tr><tr><td align="left">🔥Name.com</td><td align="left">域、电子邮件和托管。提供域名注册和高级安全。</td><td align="center">一年</td></tr><tr><td align="left">StreamYard</td><td align="left">专业直播串流平台，提供Essential Plan</td><td align="center">🎒</td></tr><tr><td align="left">Canva</td><td align="left">专业外观的图形和设计编辑器</td><td align="center">12个月</td></tr><tr><td align="left">Discord</td><td align="left"><a href="https://discord.com/template/UqzZCTj2zfwy" target="_blank" rel="noopener external nofollow noreferrer">黑客马拉松服务器模板</a></td><td align="center">本就免费</td></tr></tbody></table><h3 id="其他福利"><a href="#其他福利" class="headerlink" title="其他福利"></a>其他福利</h3><blockquote><p>🎒表示学生认证期间可享受福利</p></blockquote><table><thead><tr><th align="left">名字</th><th align="left">简介</th><th align="center">时长</th></tr></thead><tbody><tr><td align="left">👩‍🏫<a href="https://frontendmasters.com/welcome/github-student-developers/" target="_blank" rel="noopener external nofollow noreferrer">FrontendMasters</a></td><td align="left">JavaScript、Node.js 和前端工程课程</td><td align="center">6个月</td></tr><tr><td align="left">👩‍🏫DataCamp</td><td align="left">专业数据科学课程</td><td align="center">3个月</td></tr><tr><td align="left">🔥<a href="#githubpro">GitHub Pro</a></td><td align="left">Pro用户资格</td><td align="center">🎒</td></tr><tr><td align="left">🔥.TECH</td><td align="left"><code>.tech</code>域名注册</td><td align="center">1年 <code>.tech</code>域名，2个免费邮箱</td></tr><tr><td align="left"><a href="#gitlens">GitLens</a></td><td align="left">VS Code 的 Git 扩展</td><td align="center">🎒</td></tr><tr><td align="left"><a href="#gitlens">GitKraken </a></td><td align="left">Git 客户端，提供 GUI 和终端界面。</td><td align="center">🎒</td></tr><tr><td align="left">Polypane</td><td align="left">功能强大的浏览器和开发工具</td><td align="center">1年</td></tr><tr><td align="left">PomoDone</td><td align="left">跨平台番茄钟应用</td><td align="center">Lite plan 2年</td></tr><tr><td align="left">Iconscout</td><td align="left">设计资源市场，可获取高质量的图标、插图和图像</td><td align="center">1年</td></tr><tr><td align="left">Icons8</td><td align="left">提供图标、UI 插图、照片和软件的设计资源</td><td align="center">3个月</td></tr><tr><td align="left">🔥Termius</td><td align="left">界面好看，适用于桌面和移动设备的 SSH 客户端</td><td align="center">🎒</td></tr><tr><td align="left">👩‍🏫OneMonth</td><td align="left">HTML, CSS, JavaScript and Python的30天课程</td><td align="center">30天</td></tr><tr><td align="left">MongoDB</td><td align="left">通用、基于文档的分布式数据库</td><td align="center">$50试用</td></tr><tr><td align="left">📧Testmail</td><td align="left">使用自动化API和无限的邮箱地址来邮件测试</td><td align="center">🎒</td></tr><tr><td align="left">📧Mailgun</td><td align="left">电子邮件服务商</td><td align="center">12个月</td></tr><tr><td align="left">DeepSource</td><td align="left">静态分析Python和Go代码的各种风险的平台</td><td align="center">🎒</td></tr><tr><td align="left">Atom</td><td align="left">GitHub上的开源编辑器</td><td align="center">开源免费</td></tr><tr><td align="left">🔥Netwise</td><td align="left">英国的云服务商，提供免费服务器托管</td><td align="center">12个月</td></tr><tr><td align="left">Replit</td><td align="left">超过 50 种语言代码的在线 IDE</td><td align="center">3个月</td></tr><tr><td align="left">👩‍🏫Covalence</td><td align="left">全栈 Web 开发的独家开发者课程</td><td align="center">前端课程</td></tr><tr><td align="left">👩‍🏫InterviewCake</td><td align="left">练习题、数据结构和算法题等使编码面试课程</td><td align="center">3 周</td></tr><tr><td align="left">Typeform</td><td align="left">交互式表格、调查和测验工具</td><td align="center">1年</td></tr><tr><td align="left">🔥Strip</td><td align="left">网上支付平台，帮你匿名收钱</td><td align="center">前1000 美元免手续费</td></tr><tr><td align="left"><a href="https://newrelic.com/" target="_blank" rel="noopener external nofollow noreferrer">New Relic</a></td><td align="left">提供服务器的性能监控功能</td><td align="center">🎒</td></tr><tr><td align="left">Pageclip</td><td align="left">用于静态网站和 HTML 表单的服务器</td><td align="center">🎒</td></tr><tr><td align="left">HazeOver</td><td align="left">Mac平台的多窗口管理工具，提高专注力</td><td align="center">免费程序许可证</td></tr><tr><td align="left">👩‍🏫GoRails</td><td align="left">Ruby、Rails、Javascript、Turbolinks、Stimulus.js、Vue.js 等的教程</td><td align="center">12个月</td></tr><tr><td align="left">Arduino</td><td align="left">单片机入门神器，提供Create Maker plan 和硬件折扣</td><td align="center">6个月</td></tr><tr><td align="left">👩‍🏫Thinkful</td><td align="left">网站开发基础教程</td><td align="center">1个月</td></tr><tr><td align="left">Tower</td><td align="left">Mac和Windows平台的Git客户端</td><td align="center">🎒</td></tr><tr><td align="left">🔥Datadog</td><td align="left">云平台监控市场的老大，基于SaaS的数据分析平台</td><td align="center">2年</td></tr><tr><td align="left">Kodika</td><td align="left">通过拖拽来打造iOS应用</td><td align="center">6个月</td></tr><tr><td align="left">PopSQL</td><td align="left">SQL 语句编辑器，支持团队合作，可视化编程结果</td><td align="center">🎒</td></tr><tr><td align="left">🔥Imgbot</td><td align="left">为GitHub的公开和私有仓库无损压缩优化图片</td><td align="center">🎒</td></tr><tr><td align="left">Dashlane</td><td align="left">云端密码管理</td><td align="center">6个月</td></tr><tr><td align="left">Sentry</td><td align="left">代码优化，错误检查</td><td align="center">🎒</td></tr><tr><td align="left">BrowserStack</td><td align="left">App多设备、多浏览器测试</td><td align="center">1年</td></tr><tr><td align="left">Zyte</td><td align="left">爬虫平台，代理、管理和自动化爬虫</td><td align="center">永久免费</td></tr><tr><td align="left">Blackfire</td><td align="left">代码性能测量工具</td><td align="center">🎒</td></tr><tr><td align="left">🔥Travis CI</td><td align="left">类似GitHub Actions的自动化部署平台</td><td align="center">🎒</td></tr><tr><td align="left">Gitpod</td><td align="left">在线版Git客户端</td><td align="center">6个月</td></tr><tr><td align="left">Cryptolens</td><td align="left">安全地许可和销售您的软件</td><td align="center">10个许可证</td></tr><tr><td align="left">Adafruit</td><td align="left">开源硬件和开源教育电子公司</td><td align="center">1年硬件折扣</td></tr><tr><td align="left">Xojo</td><td align="left">原生应用程序的跨平台开发工具</td><td align="center">🎒</td></tr><tr><td align="left">Freshpaint</td><td align="left">营销和分析工具</td><td align="center">🎒</td></tr><tr><td align="left">Lingohub</td><td align="left">翻译神器，翻译管理服务</td><td align="center">🎒</td></tr><tr><td align="left">Blockchair</td><td align="left">区块链相关</td><td align="center">10万个请求</td></tr><tr><td align="left">👩‍🏫SymfonyCast</td><td align="left">Symfony 和 PHP在线课程</td><td align="center">3 个月</td></tr><tr><td align="left">LambdaTest</td><td align="left">在线对2000多个真实浏览器和操作系统执行自动化和交互式跨浏览器测试</td><td align="center">1年</td></tr><tr><td align="left">Honeybadger</td><td align="left">网站监控，uptime和cron监控</td><td align="center">1年</td></tr><tr><td align="left"></td><td align="left"></td><td align="center"></td></tr></tbody></table><h2 id="云服务器"><a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h2><h3 id="DigitalOcean"><a href="#DigitalOcean" class="headerlink" title="DigitalOcean"></a>DigitalOcean</h3><p>Digital Ocean （简称为 DO）成立于 2012 年，是一家从 TechStars 孵化出来的<strong>大型</strong>云托管服务提供商。其特色服务是提供快速的固态硬盘服务器，宣称可在 55 秒钟搭建好一台云服务器。所有的服务器均拥有 1G 的网络接口，每月基础套餐为 1TB 流量，超出部分按每 GB2 美分计算。公司还提供了灵活的 API 供客户控制其私有虚拟服务器。控制面板也相当直观易用。</p><p>Github 学生包一个比较吸引人的地方就是 DigitalOcean 的代金券。注册后使用offer code可拿到100美金，期限为一年。不过DigitalOcean 注册需要信用卡或者PayPal，且不允许一个 PayPal、信用卡 注册多个账户，否则会有封停的危险。</p><h3 id="MicroSoft-Azure"><a href="#MicroSoft-Azure" class="headerlink" title="MicroSoft Azure"></a>MicroSoft Azure</h3><p>大名鼎鼎的Azure，本来需要信用卡注册，但学生包可以免信用卡，免费试用25+项云服务，并且获得100美金的试用。 Azure 的线路到国内非常优秀。拿来当梯子或者中转或者建站都是上上之选。</p><h2 id="网站托管"><a href="#网站托管" class="headerlink" title="网站托管"></a>网站托管</h2><h3 id="PageClip"><a href="#PageClip" class="headerlink" title="PageClip"></a>PageClip</h3><p>PageClip是静态网站托管服务，可以托管类似本站Hexo博客之类的静态网站。用于 HTML 表单的灵活服务器 &#x2F; 后端. 在实时 Web 界面中查看数据，或使用 API获取 CSV 和 JSON 输出。</p><p>虽然GItHub Pages也满足这个功能，但毕竟全开源。</p><p>在学生期间一直可享受basic plan。</p><blockquote><p>静态网站：<a href="https://asmcn.icopy.site/awesome/awesome-static-website-services/" target="_blank" rel="noopener external nofollow noreferrer">https://asmcn.icopy.site/awesome/awesome-static-website-services/</a></p></blockquote><h2 id="SSH软件"><a href="#SSH软件" class="headerlink" title="SSH软件"></a>SSH软件</h2><h3 id="termius"><a href="#termius" class="headerlink" title="termius"></a>termius</h3><p>可用于桌面及移动端的SSH平台。<strong>当你为学生时，可以一直访问Premium计划（价值9.99美元&#x2F;月）。</strong></p><p>进入<a href="https://termius.com/education?utm_source=github+termius" target="_blank" rel="noopener external nofollow noreferrer">termius</a>即可关联 <code>GitHub</code> 学生账号来解锁，link your account to unlock <strong>premium features</strong>!</p><p>之后会要求你用 <code>GitHub</code> 的邮箱来创建termius账号，会发一封邮件给你，然后你登录，会记录你登录用的<strong>IP</strong>，记住要用<strong>同样的IP</strong>去验证此次登录。</p><p><img src="https://assets-global.website-files.com/5c7036349b5477bf13f828cf/5ee98fcc9bc7df9d4b8f99d2_desktop_preview.png"></p><p><img src="/posts/35579/termius.PNG"></p><h2 id="设计制作"><a href="#设计制作" class="headerlink" title="设计制作"></a>设计制作</h2><h3 id="Bootstrap-Studio"><a href="#Bootstrap-Studio" class="headerlink" title="Bootstrap Studio"></a>Bootstrap Studio</h3><p>Bootstrap Studio是一款非常方便的网页编辑工具，可支持用户通过该软件创建多种样式的网站页面，提供多种网页样式模板，这些模板全部都可以免费使用</p><h2 id="邮件服务📧"><a href="#邮件服务📧" class="headerlink" title="邮件服务📧"></a>邮件服务📧</h2><h3 id="MailGun"><a href="#MailGun" class="headerlink" title="MailGun"></a>MailGun</h3><p>MailGun是依托AWS的邮件发送服务，提供US和EU两个区域，支持SMTP和API，可以使用自己的域名邮箱。建站非常需要相应的服务。<br>每月 20,000 封免费电子邮件和 100 封免费电子邮件验证，最长持续 12 个月。  </p><blockquote><p>邮件测试得分：</p><blockquote><p>mail tester: 9.2<br>TestMail:X-Spam-Status: No, score&#x3D;0.8 required&#x3D;5.0<br><img src="/posts/35579/MailGun.PNG"><br>利用 <code>API</code> 发件代码如下</p></blockquote></blockquote><!-- tab bash --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -s --user <span class="hljs-string">&#x27;api:YOUR_API_KEY&#x27;</span> \<br>https://api.mailgun.net/v3/YOUR_DOMAIN_NAME/messages \<br>-F from=<span class="hljs-string">&#x27;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&#x27;</span> \<br>-F to=YOU@YOUR_DOMAIN_NAME \<br>-F to=bar@example.com \<br>-F subject=<span class="hljs-string">&#x27;Hello&#x27;</span> \<br>-F text=<span class="hljs-string">&#x27;Testing some Mailgun awesomeness!&#x27;</span><br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab python --><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_simple_message</span>():<br><span class="hljs-keyword">return</span> requests.post(<br><span class="hljs-string">&quot;https://api.mailgun.net/v3/YOUR_DOMAIN_NAME/messages&quot;</span>,<br>auth=(<span class="hljs-string">&quot;api&quot;</span>, <span class="hljs-string">&quot;YOUR_API_KEY&quot;</span>),<br>data=&#123;<span class="hljs-string">&quot;from&quot;</span>: <span class="hljs-string">&quot;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&quot;</span>,<br><span class="hljs-string">&quot;to&quot;</span>: [<span class="hljs-string">&quot;bar@example.com&quot;</span>, <span class="hljs-string">&quot;YOU@YOUR_DOMAIN_NAME&quot;</span>],<br><span class="hljs-string">&quot;subject&quot;</span>: <span class="hljs-string">&quot;Hello&quot;</span>,<br><span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;Testing some Mailgun awesomness!&quot;</span>&#125;)<br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab java --><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> com.mashape.unirest.http.HttpResponse;<br><span class="hljs-keyword">import</span> com.mashape.unirest.http.JsonNode;<br><span class="hljs-keyword">import</span> com.mashape.unirest.http.Unirest;<br><span class="hljs-keyword">import</span> com.mashape.unirest.http.exceptions.UnirestException;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MGSample</span> &#123;<br> <span class="hljs-comment">// ...</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> JsonNode <span class="hljs-title function_">sendSimpleMessage</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> UnirestException &#123;<br>HttpResponse&lt;JsonNode&gt; request = Unirest.post(<span class="hljs-string">&quot;https://api.mailgun.net/v3/&quot;</span> + YOUR_DOMAIN_NAME + <span class="hljs-string">&quot;/messages&quot;</span>),<br>.basicAuth(<span class="hljs-string">&quot;api&quot;</span>, API_KEY)<br>.queryString(<span class="hljs-string">&quot;from&quot;</span>, <span class="hljs-string">&quot;Excited User &lt;USER@YOURDOMAIN.COM&gt;&quot;</span>)<br>.queryString(<span class="hljs-string">&quot;to&quot;</span>, <span class="hljs-string">&quot;artemis@example.com&quot;</span>)<br>.queryString(<span class="hljs-string">&quot;subject&quot;</span>, <span class="hljs-string">&quot;hello&quot;</span>)<br>.queryString(<span class="hljs-string">&quot;text&quot;</span>, <span class="hljs-string">&quot;testing&quot;</span>)<br>.asJson();<br><span class="hljs-keyword">return</span> request.getBody();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab go --><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">SendSimpleMessage</span><span class="hljs-params">(domain, apiKey <span class="hljs-type">string</span>)</span></span> (<span class="hljs-type">string</span>, <span class="hljs-type">error</span>) &#123;<br>mg := mailgun.NewMailgun(domain, apiKey, publicApiKey)<br>m := mg.NewMessage(<br><span class="hljs-string">&quot;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&quot;</span>,<br><span class="hljs-string">&quot;Hello&quot;</span>,<br><span class="hljs-string">&quot;Testing some Mailgun awesomeness!&quot;</span>,<br><span class="hljs-string">&quot;YOU@YOUR_DOMAIN_NAME&quot;</span>,<br>)<br>_, id, err := mg.Send(m)<br><span class="hljs-keyword">return</span> id, err<br>&#125;<br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab RUBY --><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs RUBY"><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_simple_message</span><br>RestClient.post <span class="hljs-string">&quot;https://api:YOUR_API_KEY&quot;</span>\<br><span class="hljs-string">&quot;@api.mailgun.net/v3/YOUR_DOMAIN_NAME/messages&quot;</span>,<br><span class="hljs-symbol">:from</span> =&gt; <span class="hljs-string">&quot;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&quot;</span><br><span class="hljs-symbol">:to</span> =&gt; <span class="hljs-string">&quot;bar@example.com, YOU@YOUR_DOMAIN_NAME&quot;</span>,<br><span class="hljs-symbol">:subject</span> =&gt; <span class="hljs-string">&quot;Hello&quot;</span>,<br><span class="hljs-symbol">:text</span> =&gt; <span class="hljs-string">&quot;Testing some Mailgun awesomness!&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab PHP --><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-comment"># Include the Autoloader (see &quot;Libraries&quot; for install instructions)</span><br><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;vendor/autoload.php&#x27;</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Mailgun</span>\<span class="hljs-title">Mailgun</span>;<br><span class="hljs-comment"># Instantiate the client.</span><br><span class="hljs-variable">$mgClient</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mailgun</span>(<span class="hljs-string">&#x27;YOUR_API_KEY&#x27;</span>);<br><span class="hljs-variable">$domain</span> = <span class="hljs-string">&quot;YOUR_DOMAIN_NAME&quot;</span>;<br><span class="hljs-comment"># Make the call to the client.</span><br><span class="hljs-variable">$result</span> = <span class="hljs-variable">$mgClient</span>-&gt;<span class="hljs-title function_ invoke__">sendMessage</span>(<span class="hljs-variable">$domain</span>, <span class="hljs-keyword">array</span>(<br><span class="hljs-string">&#x27;from&#x27;</span>=&gt; <span class="hljs-string">&#x27;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&#x27;</span>,<br><span class="hljs-string">&#x27;to&#x27;</span>=&gt; <span class="hljs-string">&#x27;Baz &lt;YOU@YOUR_DOMAIN_NAME&gt;&#x27;</span>,<br><span class="hljs-string">&#x27;subject&#x27;</span> =&gt; <span class="hljs-string">&#x27;Hello&#x27;</span>,<br><span class="hljs-string">&#x27;text&#x27;</span>=&gt; <span class="hljs-string">&#x27;Testing some Mailgun awesomness!&#x27;</span><br>));<br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab C# --><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.IO;<br><span class="hljs-keyword">using</span> RestSharp;<br><span class="hljs-keyword">using</span> RestSharp.Authenticators;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SendSimpleMessageChunk</span><br>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span> (<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>Console.WriteLine (SendSimpleMessage ().Content.ToString ())<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IRestResponse <span class="hljs-title">SendSimpleMessage</span> ()</span><br>&#123;<br>RestClient client = <span class="hljs-keyword">new</span> RestClient ();<br>client.BaseUrl = <span class="hljs-keyword">new</span> Uri (<span class="hljs-string">&quot;https://api.mailgun.net/v3&quot;</span>);<span class="hljs-string">&quot;</span><br><span class="hljs-string">client.Authenticator =&#x27;</span><br><span class="hljs-string">new HttpBasicAuthenticator (&quot;</span>api<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>YOUR_API_KEY<span class="hljs-string">&quot;);</span><br><span class="hljs-string">RestRequest request = new RestRequest ();</span><br><span class="hljs-string">request.AddParameter (&quot;</span>domain<span class="hljs-string">&quot;, &quot;</span>YOUR_DOMAIN_NAME<span class="hljs-string">&quot;, ParameterType.UrlSegment);</span><br><span class="hljs-string">request.Resource = &quot;</span>&#123;domain&#125;/messages<span class="hljs-string">&quot;;</span><br><span class="hljs-string">request.AddParameter (&quot;</span><span class="hljs-keyword">from</span><span class="hljs-string">&quot;, &quot;</span>Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.AddParameter (&quot;</span>to<span class="hljs-string">&quot;, &quot;</span>bar@example.com<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.AddParameter (&quot;</span>to<span class="hljs-string">&quot;, &quot;</span>YOU@YOUR_DOMAIN_NAME<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.AddParameter (&quot;</span>subject<span class="hljs-string">&quot;, &quot;</span>Hello<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.AddParameter (&quot;</span>text<span class="hljs-string">&quot;, &quot;</span>Testing some Mailgun awesomness!<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.Method = Method.POST;</span><br><span class="hljs-string">return client.Execute (request);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab javascript --><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mailgun = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mailgun-js&quot;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DOMAIN</span> = <span class="hljs-string">&#x27;YOUR_DOMAIN_NAME&#x27;</span>;<br><span class="hljs-keyword">const</span> mg = <span class="hljs-title function_">mailgun</span>(&#123;<span class="hljs-attr">apiKey</span>: api_key, <span class="hljs-attr">domain</span>: <span class="hljs-variable constant_">DOMAIN</span>&#125;);<br><span class="hljs-keyword">const</span> data = &#123;<br><span class="hljs-attr">from</span>: <span class="hljs-string">&#x27;Excited User &lt;me@samples.mailgun.org&gt;&#x27;</span>,<br><span class="hljs-attr">to</span>: <span class="hljs-string">&#x27;bar@example.com, YOU@YOUR_DOMAIN_NAME&#x27;</span>,<br><span class="hljs-attr">subject</span>: <span class="hljs-string">&#x27;Hello&#x27;</span>,<br><span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Testing some Mailgun awesomness!&#x27;</span><br>&#125;;<br>mg.<span class="hljs-title function_">messages</span>().<span class="hljs-title function_">send</span>(data, <span class="hljs-keyword">function</span> (<span class="hljs-params">error, body</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(body);<br>&#125;);<br></code></pre></td></tr></table></figure><!-- endtab --><h3 id="TestMail"><a href="#TestMail" class="headerlink" title="TestMail"></a>TestMail</h3><p>TestMail顾名思义就是用来测试你的邮件服务的，使用无限的邮箱和 GraphQL API 自动执行端到端的电子邮件测试。可以用来测试新用户注册，交易邮件和广告邮件的发送等等。邮件发多了可能会被识别为垃圾邮件，不含DKIM认证的邮件域名可能会被标记为冒充，等等，因此需要进行邮箱测试。</p><blockquote><p>与之对应的还有DebugMail和Mailosaur，都可以使用虚拟 SMTP 服务器进行电子邮件测试，而不会真正发出邮件。前者免费，后者还可以进行 SMS 和垃圾邮件测试，以用于企业级用途。  </p></blockquote><p>TestMail就是通过API 获取无限的电子邮件地址和邮箱，以自动进行电子邮件测试。测试你的邮件质量如何。  </p><ul><li>10,000 * emails&#x2F;month</li><li>Unlimited users, email addresses, and mailboxes</li><li>1-3 days retention</li><li>One random namespace</li><li>Full API access</li></ul><p>我使用MailGun托管的邮件服务的测试结果是：<br><code>X-Spam-Status: No, score=0.8 required=5.0</code>  </p><p>在学生认证期间，testmail.app将一直提供Essential计划。</p><blockquote><p>其他免费邮件测试服务还有：</p><blockquote><p><a href="https://www.mail-tester.com/" target="_blank" rel="noopener external nofollow noreferrer">https://www.mail-tester.com/</a><br><a href="https://senderscore.org/" target="_blank" rel="noopener external nofollow noreferrer">https://senderscore.org/</a> （测试IP）<br><a href="https://mxtoolbox.com/" target="_blank" rel="noopener external nofollow noreferrer">https://mxtoolbox.com/</a>    (查找邮件域名提供商和提供简单的问题解决方案)</p></blockquote></blockquote><!-- >> http://bin.mailgun.net/  （暂时下线） --><p><img src="/posts/35579/mailtester.PNG"></p><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><h3 id="DataDog"><a href="#DataDog" class="headerlink" title="DataDog"></a>DataDog</h3><p>Datadog是云平台监控市场的老大，基于SaaS的数据分析平台，实现对服务器、数据库、工具和服务的监控，同时提供日志记录、应用性能管理、基础设施监测、 <code>serverless</code> 云函数和安全服务等等。<br><img src="/posts/35579/datadog.PNG"><br><img src="/posts/35579/product-features-network.avif"><br>美中不足是没有免费计划。但是GitHub学生包提供了2年的 <code>Pro Account</code> ( $15 每月)，包括免费的10台服务器监控 （datadog的服务器监控是按服务器数量计费）。相当划算。<br><img src="/posts/35579/datadog2.PNG"></p><h3 id="New-Relic"><a href="#New-Relic" class="headerlink" title="New Relic"></a>New Relic</h3><p><a href="https://developer.newrelic.com/students/" target="_blank" rel="noopener external nofollow noreferrer">New Relic</a> 也是依托于AWS，和Datadog功能比较重叠，选一个用就行。</p><p>它目前专注于SaaS和App性能管理业务，它支持支持agent和API传送数据，能够对部署在本地或在云中的web应用程序进行监控、故障修复、诊断、线程分析以及容量计划。</p><p>笔者现在用的就是这款。</p><h4 id="New-Relic-认证流程"><a href="#New-Relic-认证流程" class="headerlink" title="New Relic 认证流程"></a>New Relic 认证流程</h4><p>New Relic认证很坑，点击 <a href="https://education.github.com/pack/redeem/newrelic-student" target="_blank" rel="noopener external nofollow noreferrer">Get access by connecting your GitHub account on New Relic</a>后，会让你创建新账户（但其实旧帐户也可以），创建完账户就是免费计划，之后进入的是创建新监控的引导流程，而不是GitHub学生认证的流程。我找了老半天才找到学生认证的<a href="https://one.newrelic.com/nr1-core/students-edition" target="_blank" rel="noopener external nofollow noreferrer">入口</a>。如下图：<br><img src="/posts/35579/NewRelicAuth.PNG"></p><blockquote><p>参考：<a href="https://discuss.newrelic.com/t/how-can-i-connect-my-github-account-with-existing-new-relic-account-for-student-pack/153617" target="_blank" rel="noopener external nofollow noreferrer">https://discuss.newrelic.com/t/how-can-i-connect-my-github-account-with-existing-new-relic-account-for-student-pack/153617</a>  </p></blockquote><p>跟GitHub认证完，还要再次提交学校名、邮箱认证，真的很烦了。<br><img src="/posts/35579/product-features-network.avif"></p><h4 id="New-Relic-学生包福利"><a href="#New-Relic-学生包福利" class="headerlink" title="New Relic 学生包福利"></a>New Relic 学生包福利</h4><ul><li>3 个标准的全栈可观察性用户</li><li>每月 500GB 的数据储存 （这个网站一向以储存数据量定价,但是要提交500GB的数据也不是几个机器就能做到的）</li></ul><h3 id="Raygun"><a href="#Raygun" class="headerlink" title="Raygun"></a>Raygun</h3><p>Web 和移动应用程序的错误、崩溃和性能监控。Startup Platform plan免费一年。</p><h2 id="开发和设计"><a href="#开发和设计" class="headerlink" title="开发和设计"></a>开发和设计</h2><h3 id="zyte爬虫平台"><a href="#zyte爬虫平台" class="headerlink" title="zyte爬虫平台"></a>zyte爬虫平台</h3><p>zyte 就是之前的Scrapinghub，爬虫费时费力费IP，自己买服务器的话，很多VPS提供商不允许爬虫的存在，对IP有负面影响。但是zyte就可以解决这个问题。</p><p>之前是提供免费套餐的Scrapy Cloud的，现在要9美元一个月了。好在学生包福利还在。提供一个永久免费的Scrapy Cloud单元，无限团队成员、项目、请求、抓取时间，数据保留时间120天。</p><p>1个Scrapy Cloud单元 &#x3D; 1 GB的RAM + 2.5GB磁盘空间 + 1个CPU + 1个运行中任务</p><h2 id="GitHub相关"><a href="#GitHub相关" class="headerlink" title="GitHub相关"></a>GitHub相关</h2><h3 id="GitHub-Pro"><a href="#GitHub-Pro" class="headerlink" title="GitHub Pro"></a><span id="githubpro">GitHub Pro</span></h3><p>♾️ Unlimited public&#x2F;private repos<br>♾️ Unlimited collaborators<br>✔️ 3,000 Actions minutes&#x2F;month<br>✔️ 2GB of Packages storage<br>✔️ Code owners, required reviewers, GitHub Pages, and more <a href="https://docs.github.com/en/free-pro-team@latest/github/getting-started-with-github/githubs-products#github-team" target="_blank" rel="noopener external nofollow noreferrer">advanced tools</a>.</p><h3 id="GitLens-和-GitKraken"><a href="#GitLens-和-GitKraken" class="headerlink" title="GitLens 和 GitKraken"></a><span id="gitlens">GitLens 和 GitKraken</span></h3><p><img class="auth-logo ease-in-shared" src="https://www.gitkraken.com/img/logos/github.svg" style="height:5.1rem;" />&lt;span style&#x3D;”color:#D0D0D2;font-family:”font-size:17px;background-color:#141422;”&gt;&amp;nbsp;</span><img class="auth-logo ease-in-shared" src="https://www.gitkraken.com/img/happy-kraken.svg" style="height:5.1rem;" /></p><p><code>GitLens</code> 是一个开源的 <code>VS Code</code> 的插件，功能丰富。注册免费账号后可以在公开 repo 使用高级功能，私有 repo 才需要付费使用追加的高级功能。<br><code>GitKraken</code> 适用于 Windows、Mac 和 Linux 的最流行的 Git 客户端，提供 GUI 和终端界面。 与 GitHub 存储库和问题的深度集成支持直接在客户端中进行交互式拉取请求管理和问题管理。<br><img src="/posts/35579/gk-gui-tab-example.png">   <img src="/posts/35579/gk-terminal-tab-example.png"></p><p>进入<a href="https://www.gitkraken.com/github-student-developer-pack" target="_blank" rel="noopener external nofollow noreferrer">GitKraken</a>，点击<a href="https://app.gitkraken.com/" target="_blank" rel="noopener external nofollow noreferrer"><strong>create a GitKraken account</strong></a>，创建账号，再用GitHub学生包账号认证就好。<br><img src="/posts/35579/GitLen.PNG"></p><h2 id="课程学习"><a href="#课程学习" class="headerlink" title="课程学习"></a>课程学习</h2><h3 id="GoRails"><a href="#GoRails" class="headerlink" title="GoRails"></a>GoRails</h3><p><a href="https://gorails.com/" target="_blank" rel="noopener external nofollow noreferrer">GoRails</a>是一个在线课程平台，提供面向 Web 开发人员的 Ruby、Rails、Javascript、Turbolinks、Stimulus.js、Vue.js 等课程。学生包在 <strong>12 个月</strong>内免费访问所有视频和课程。</p><h2 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h2><h3 id="HazeOver"><a href="#HazeOver" class="headerlink" title="HazeOver"></a>HazeOver</h3><p><a href="https://hazeover.com/" target="_blank" rel="noopener external nofollow noreferrer">HazeOver</a> 是 Mac OS X 上的一款小工具,它可以在激活的窗口区域以外显示阴影,这可以让你很方便聚焦在当前的任务上,再也不用担心所有窗口叠在一起了。通过强调活跃的窗口，淡出不活跃的窗口来帮助你集中注意力。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="软件加密"><a href="#软件加密" class="headerlink" title="软件加密"></a>软件加密</h3><p>Cryptolens<br>NetLicensing</p><h3 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h3><ol><li>Blackfire 代码性能测量工具</li><li>Codecov</li><li>BetterCodeHub</li><li>DeepScan</li></ol><h3 id="多语言翻译"><a href="#多语言翻译" class="headerlink" title="多语言翻译"></a>多语言翻译</h3><ol><li>Lingohub 翻译管理服务</li><li>POEditor</li><li>Transifex</li><li>Crowdin</li><li>Phrase</li></ol><h3 id="应用测试"><a href="#应用测试" class="headerlink" title="应用测试"></a>应用测试</h3><ol><li>LambdaTest</li><li>AccessLint</li><li>SOFY</li><li>Coveralls</li></ol>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>GitHub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>web开发</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【华硕路由器】虚拟内存读取写入速度不符合要求的解决办法</title>
    <link href="/posts/27900.html"/>
    <url>/posts/27900.html</url>
    
    <content type="html"><![CDATA[<p>ax56u使用软件中心虚拟内存插件来挂载虚拟内存，U盘读写速度不够的解决办法。</p><p><font color='orange'>【此方法仅在没有合适U盘的时候用，读写速度限制是为了保证性能！】</font></p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li><p>路由器型号：ax56u</p></li><li><p>固件版本：梅林官改</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>使用软件中心虚拟内存插件来挂载虚拟内存，总是提示读写速度不够，新固件的读取速度要求 <code>20M/s</code>，写入速度要求 <code>30M/s</code>。</p></li></ul><p>日志内容如下：</p><blockquote><p>USB磁盘[&#x2F;dev&#x2F;sda1]的三次平均顺序读取速度大约为：40.87 MB&#x2F;s。<br>USB磁盘[&#x2F;dev&#x2F;sda1]的三次平均顺序写入速度大约为：9.74 MB&#x2F;s</p></blockquote><p>我另一个U盘：</p><blockquote><p>USB磁盘[&#x2F;dev&#x2F;sda1]的三次平均顺序读取速度大约为：16.85 MB&#x2F;s<br>USB磁盘[&#x2F;dev&#x2F;sda1]的三次平均顺序写入速度大约为：7.02 MB&#x2F;s</p></blockquote><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>修改参数限制</p><p>ssh 登录到路由器，执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改写入速度限制，30替换为10</span><br>sed -i <span class="hljs-string">&#x27;s/^W_LIMIT=30/W_LIMIT=10/&#x27;</span> /koolshare/scripts/swap_make.sh<br><br><span class="hljs-comment"># 修改读取速度限制，20替换为10</span><br>sed -i <span class="hljs-string">&#x27;s/^R_LIMIT=20/R_LIMIT=10/&#x27;</span> /koolshare/scripts/swap_make.sh<br></code></pre></td></tr></table></figure><p>解释一下，就是把创建 <code>swap</code> 分区的U盘速度限制调整至可用值，值可设置成自己想设置的值（保证外设能达到的水准，不行就往低了调）。以上参数可以根据自己的实际情况进行调整，完成后重新进入管理界面，再次进入软件中心，即可正常创建虚拟内存。</p>]]></content>
    
    
    <categories>
      
      <category>华硕路由器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>华硕路由器</tag>
      
      <tag>梅林固件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>笔记</title>
    <link href="/posts/8022.html"/>
    <url>/posts/8022.html</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3231db589db6e375014c50d45e74abd6e18c26f03bb2826f7a90af92aa31fa71"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>长毛象运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Notes</tag>
      
      <tag>fediverse</tag>
      
      <tag>长毛象运维</tag>
      
      <tag>Mastodon</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【华硕路由器】签到狗自定义脚本签到</title>
    <link href="/posts/4335.html"/>
    <url>/posts/4335.html</url>
    
    <content type="html"><![CDATA[<p>签到狗自定义脚本签到手把手教学使用。</p><span id="more"></span><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul><li>拥有刷过梅林固件&#x2F;官改固件的华硕路由器</li><li>路由器有USB口</li><li>有多余的U盘</li><li>一台能够连接到路由器网络的电脑&#x2F;手机</li></ul><h2 id="软件中心安装插件"><a href="#软件中心安装插件" class="headerlink" title="软件中心安装插件"></a>软件中心安装插件</h2><p>使用设备连接到路由器，登录路由器后台，默认域名：<code>http://router.asus.com</code>，也可以用默认IP：<code>192.168.50.1</code></p><p>点开软件中心或者koolshare center，下载下列三个插件：</p><ol><li>签到狗3.0</li><li>Entware</li><li>虚拟内存</li></ol><h2 id="创建虚拟内存"><a href="#创建虚拟内存" class="headerlink" title="创建虚拟内存"></a>创建虚拟内存</h2><p>将U盘插入路由器，在网络地图中查看U盘状态，如果是未挂载，请参照另一篇文章<a href="https://pawswrite.xyz/posts/6617.html">《【华硕路由器】插入U盘显示未挂载的解决方法》</a>。</p><p>如果是挂载状态，打开刚刚安装的虚拟内存插件，选择磁盘，选择虚拟内存大小（建议1G），点击创建虚拟内存。如果遇到读取写入速度太低的情况，请参考<a href="https://pawswrite.xyz/posts/27900.html">《【华硕路由器】虚拟内存读取写入速度不符合要求的解决办法》</a>。</p><p>当日志显示<code>创建完毕并成功挂载！</code>，也就是成功创建虚拟内存后，进行下一步。</p><h2 id="安装Entware环境"><a href="#安装Entware环境" class="headerlink" title="安装Entware环境"></a>安装Entware环境</h2><p>打开Entware，点击<code>安装</code>，等待安装完成。</p><p>（Entware也就是给你安装了opkg包管理器）</p><h2 id="安装脚本运行环境"><a href="#安装脚本运行环境" class="headerlink" title="安装脚本运行环境"></a>安装脚本运行环境</h2><p>脚本运行环境共有4项。</p><ul><li>nodejs</li><li>npm</li><li>axios</li><li>git</li></ul><p>其中，如果不需要clone仓库到本地进行签到的话，应该是不需要git的。</p><h3 id="安装nodejs-npm"><a href="#安装nodejs-npm" class="headerlink" title="安装nodejs npm"></a>安装nodejs npm</h3><p>有两种安装方法，这里推荐使用软件中心或者koolshare center，直接安装Node.js插件。</p><ol><li><p>方法一：【推荐】<br>插件显示下列内容即可：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">【<span class="hljs-number">2022</span>年<span class="hljs-number">05</span>月<span class="hljs-number">03</span>日 <span class="hljs-number">00</span>:<span class="hljs-number">18</span>:<span class="hljs-number">50</span>】: 检测到Node.js环境组件：<span class="hljs-keyword">node</span> <span class="hljs-title">node-npm</span>已经正常安装！<br>【<span class="hljs-number">2022</span>年<span class="hljs-number">05</span>月<span class="hljs-number">03</span>日 <span class="hljs-number">00</span>:<span class="hljs-number">18</span>:<span class="hljs-number">50</span>】: <span class="hljs-keyword">node</span><span class="hljs-title">版本号：v14</span>.<span class="hljs-number">18.1</span><br>【<span class="hljs-number">2022</span>年<span class="hljs-number">05</span>月<span class="hljs-number">03</span>日 <span class="hljs-number">00</span>:<span class="hljs-number">18</span>:<span class="hljs-number">52</span>】: npm版本号：<span class="hljs-number">6.14</span>.<span class="hljs-number">15</span><br></code></pre></td></tr></table></figure></li><li><p>方法二：opkg 安装 nodejs npm<br> ssh进入路由器后台：</p><ol><li>安装 nodejs 、 npm<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">opkg install node<br>opkg install node-npm<br></code></pre></td></tr></table></figure></li><li>执行命令<code>node -v</code>，查看 nodejs 版本号。成功即可</li></ol></li></ol><h3 id="安装axios和git"><a href="#安装axios和git" class="headerlink" title="安装axios和git"></a>安装axios和git</h3><p>axios是一个网络请求库，作用于node.js 和浏览器中。可以使用npm方便地安装。而git则使用opkg来进行安装。</p><p>使用ssh连接路由器，执行下列命令（记得加上参数-g来全局安装）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g axios<br>opkg install git<br></code></pre></td></tr></table></figure><h2 id="签到狗页面配置"><a href="#签到狗页面配置" class="headerlink" title="签到狗页面配置"></a>签到狗页面配置</h2><p>打开签到狗，打开<code>开关</code>，点击<code>提交</code>。点击<code>签到狗3.0控制台</code>。点击<code>自定义脚本</code>，点击<code>检测环境</code>，确认输出类似下列的版本信息：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">正在检测是否安装 nodejs v14.<span class="hljs-number">18.1</span><br><br>正在检测是否安装 npm <span class="hljs-number">6.14</span>.<span class="hljs-number">15</span><br><br>正在检测是否安装 axios <span class="hljs-regexp">/tmp/m</span>nt<span class="hljs-regexp">/sda1/</span>entware/lib<br>`-- axios@<span class="hljs-number">0.27</span>.<span class="hljs-number">2</span> <br><br>正在检测是否安装 git git version <span class="hljs-number">2.33</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>然后上传签到文件即可，这里给出一些签到脚本文件的例子：<br>GLaDOS签到脚本：<a href="https://github.com/tech-fever/GLaDOS_Checkin" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/tech-fever/GLaDOS_Checkin</a></p><h2 id="Q-amp-A："><a href="#Q-amp-A：" class="headerlink" title="Q&amp;A："></a>Q&amp;A：</h2><ol><li>为什么需要 U盘？</li></ol><div class="note info"><p>答：Merlin固件 存储很小 一般为 64-512MB，而 nodejs的npm库 通常需要数 G 存储</p></div><ol start="2"><li>为什么要 npm 全局安装包？</li></ol><div class="note info"><p>答: merlin固件 路由的存储都很小。比如要使用 U盘 来安装插件。 nodejs的依赖包会比较大。</p></div><ol start="3"><li>安装了 nodejs 后为什么需要使用 npm 安装包？</li></ol><div class="note info"><p>答：  大部分 nodejs 项目都需要依赖 npm包。比如 请求库的 axios request 等等，每个项目都应该执行 node XXX项目.js 来确认需要安装的依赖</p></div>]]></content>
    
    
    <categories>
      
      <category>华硕路由器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>华硕路由器</tag>
      
      <tag>自动签到</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【华硕路由器】插入U盘显示未挂载的解决方法</title>
    <link href="/posts/6617.html"/>
    <url>/posts/6617.html</url>
    
    <content type="html"><![CDATA[<p>华硕路由器插入USB后在<code>网络地图部分</code>显示未挂载，在<code>无线网络-专业设置</code>中可开启<code>蓝牙共存</code>依然无法解决。无奈只能手动挂载。</p><span id="more"></span><blockquote><p>笔者使用的是ax56u满血版。<br>参考文章：<a href="https://www.iteait.com/archives/243" target="_blank" rel="noopener external nofollow noreferrer">https://www.iteait.com/archives/243</a></p></blockquote><p>华硕路由器插入USB后在<code>网络地图部分</code>显示未挂载，在<code>无线网络-专业设置</code>中可开启<code>蓝牙共存</code>依然无法解决。无奈只能手动挂载。</p><p>在虚拟内存插件中看到的：</p><table><thead><tr><th>端口</th><th>名称</th><th>大小</th><th>已用</th><th>权限</th><th>格式</th><th>挂载点</th><th>路径</th></tr></thead><tbody><tr><td>1</td><td>Kingston DataTraveler 3.0</td><td>30.72 GB</td><td>0.00 GB (0.00 %)</td><td>unmounted</td><td>unknown</td><td>sda1</td><td>&#x2F;tmp&#x2F;mnt&#x2F;sda1</td></tr></tbody></table><ol><li><p>使用ssh工具登陆路由器。局域网内一般路由器地址为192.168.50.1，用户名和密码为设定的路由器管理账号名和密码。</p></li><li><p>输入<code>fdisk -l</code> 查看U盘的信息，比如我的U盘，就显示为 &#x2F;dev&#x2F;sda1</p></li><li><p>把U盘格式化成ext2格式（数据会被全部抹除），使用mkfs.ext2命令。<code>mkfs.ext2 /dev/sda1</code>。等了大约一会，就显示格式化完成。</p></li><li><p>在&#x2F;mnt那边创建一个U盘的目录，比如USB。<code>mkdir /mnt/usb</code></p></li><li><p>使用mount命令进行挂载。<code>mount -t ext2 /dev/sda1 /mnt/usb</code></p></li><li><p>挂载成功。在路由器的web管理界面就能看到U盘成功挂载了。</p></li><li><p>取消挂载可以用：<code>umount -v /mnt/usb</code></p></li></ol><p>在虚拟内存插件中:</p><table><thead><tr><th>端口</th><th>名称</th><th>大小</th><th>已用</th><th>权限</th><th>格式</th><th>挂载点</th><th>路径</th></tr></thead><tbody><tr><td>1</td><td>Kingston DataTraveler 3.0</td><td>30.72 GB</td><td>0.04 GB (0.13 %)</td><td>rw</td><td>ext2</td><td>sda1</td><td>&#x2F;tmp&#x2F;mnt&#x2F;usb</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>华硕路由器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>华硕路由器</tag>
      
      <tag>梅林固件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Steam++ a useful tool for Steam</title>
    <link href="/posts/45319.html"/>
    <url>/posts/45319.html</url>
    
    <content type="html"><![CDATA[<p><a href="https://steampp.net/" target="_blank" rel="noopener external nofollow noreferrer">Steam++</a>是b站“软妹币玩家”开发的开源项目。支持Windows 、macOS 、iOS 和 Android 平台。可以加速访问Steam社区，多账号一键切换，还有内置插件，比如可以用来显示某款游戏历史价格等。对于挂刀挂卡的玩家，这个软件也相当好用。</p><span id="more"></span><p>我个人在Windows端用了有一段时间了所以才拿出来推荐，但说实话这个软件本地运行偶尔出点bug，时不时会崩溃一下，不响应。虽然一般来说重启软件就好了。</p><blockquote><p>官方网站：<a href="https://steampp.net/" target="_blank" rel="noopener external nofollow noreferrer">https://steampp.net/</a><br>GitHub项目地址：<a href="https://github.com/SteamTools-Team/SteamTools" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/SteamTools-Team/SteamTools</a></p></blockquote><p><img src="/posts/45319/1.JPG"></p><h1 id="加速访问"><a href="#加速访问" class="headerlink" title="加速访问"></a>加速访问</h1><p>(这个功能我个人没有验证过到底好不好用，如果有朋友用了可以反馈一下，谢谢)<br>该功能能够使 Steam 社区、 Github 、谷歌验证码等国内难以访问的网页正常访问。功能类似 steamcommunit302 ，使用 Titanium-Web-Proxy 开源项目进行本地反代。顺便支持了Pixiv、Discord、Twitch等网站。<br><img src="/posts/45319/speed.png" alt="加速"></p><h1 id="【推荐】内置插件"><a href="#【推荐】内置插件" class="headerlink" title="【推荐】内置插件"></a>【推荐】内置插件</h1><p>该功能我觉得是这个软件最好用的地方！内置了大量的游戏相关油猴脚本： Steam 显示史低价格、一键出售 Steam 库存物品、跨区汇率换算、批量激活 CdKey 。脚本可以直接植入 Steam 客户端，体验比原先的脚本更为优秀。用户也可以制作自己的脚本导入软件进行使用。<br><img src="/posts/45319/js.png" alt="脚本"><br>这里给大家看一个效果，历史价格脚本会在steam内直接显示，不用再<a href="https://www.xiaoheihe.cn/home" target="_blank" rel="noopener external nofollow noreferrer">小黑盒</a>或者<a href="https://steamdb.info/" target="_blank" rel="noopener external nofollow noreferrer">steamdb</a>查。<br><img src="/posts/45319/2.jpg"><br>插件的玩法很多，我用的少。大家可以自己研究。</p><h1 id="库存管理"><a href="#库存管理" class="headerlink" title="库存管理"></a>库存管理</h1><p>该功能能够让您直接管理到 Steam 游戏库存，不仅能够下载老版本的 Steam 游戏，也能够对 Steam 游戏成就进行直接管理，支持解锁成就以及反解锁成就。<br>但是一键解锁成就有风险喔（请勿对带有vac保护的游戏进行一键解锁）。能查看所有游戏隐藏成就的成就信息。<br><img src="/posts/45319/kc.png" alt="库存"></p><h1 id="令牌管理"><a href="#令牌管理" class="headerlink" title="令牌管理"></a>令牌管理</h1><p>（其实我没用过）该功能能够让您的手机令牌统一保存在电脑中，并且支持云备份，支持的令牌有 Steam 令牌、暴雪令牌、 Uplay 令牌、 Epic 令牌、 R 星令牌等常规 6 位、 8 位令牌。</p><h1 id="【推荐】账号切换"><a href="#【推荐】账号切换" class="headerlink" title="【推荐】账号切换"></a>【推荐】账号切换</h1><p>快速切换当前设备已记住登陆的 Steam 账号。本cyber阿根廷俄罗斯土耳其中国大陆人狂喜。<br>安装steam++以后，在steam上登录过，steam++就会记住账号名密码。之后可以一键切换。软件用的本体steam目录的数据，本地操作、无服务器、没盗号的问题。<br><img src="/posts/45319/lp.png"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>科学上网</tag>
      
      <tag>游戏</tag>
      
      <tag>Steam</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【教程】科学上网：分流简介</title>
    <link href="/posts/22669.html"/>
    <url>/posts/22669.html</url>
    
    <content type="html"><![CDATA[<p>本篇简单介绍什么是分流。</p><span id="more"></span><p>首先走代理就是挂梯子。<br>一般我们有2种连接方式，一种是Global，全局都走代理，一种是rules，也叫分流规则，一种是direct，就是全部直连，最后是Script，脚本，这个比较复杂先不讨论。</p><h1 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h1><p>clash里面叫Global，在shadowrocket里是proxy，quantumult里叫All proxy（就是全部走代理）。<br>其实这个就是不分流的意思，不管我上国内网站还是国外网站，一律走代理，也就是用梯子。<br>当然这样会导致，上国内的一些本来很快的网站，反而使用梯子之后，导致你的流量到国外转了一圈回来，加上国内运营商针对国外服务器的连接都没有优化甚至是负优化，反而变慢。</p><h1 id="分流"><a href="#分流" class="headerlink" title="分流"></a>分流</h1><p>在Clash里叫Rules，或者代理规则，在shadowrocket里是Config。<br>分流就是设定某些网站走某个代理节点，某些网站走另一个代理节点，某些网站直连，某些网站不连接。<br>比如说最常用的分流规则是：国外的网站通过梯子，国内的网站比如QQ等，直接连接，检测到某些广告页面，比如说一些app的弹出广告开屏广告，就直接Reject。<br>我们也可以设定，上Netflix的时候使用美国的代理节点A，上steam的时候使用阿根廷的代理节点B<br>分流的意义，初期是为了解决国内 &#x2F; 国外使用同一网络模式访问缓慢的问题，** 如挂全局访问国内视频网站，会导致本来正常打开很快的网站反而变慢**，视频网站以为你在国外，然后不给你看视频。后来，由于不同的客户端提供了多种多样的分流方法，网上也出现了很多人基于相应制作的规则集。现如今很多人所说的分流已经不仅仅是国内直连，国外代理了某种意义上，折腾分流俨然成了技术活和一部分人的技术象征，他们乐此不疲。</p>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
      <tag>机场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通信与技术</title>
    <link href="/posts/47554.html"/>
    <url>/posts/47554.html</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4bf187643496920e9d95cd947e03dfe13dbb2442927bc04dc2d32e33fee29951"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>Notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS笔记：一些主机提供商</title>
    <link href="/posts/6340.html"/>
    <url>/posts/6340.html</url>
    
    <content type="html"><![CDATA[<p>这是个笔记。主要记录VPS主机商家相关</p><span id="more"></span><h1 id="便宜级别"><a href="#便宜级别" class="headerlink" title="便宜级别"></a>便宜级别</h1><h2 id="dedipath"><a href="#dedipath" class="headerlink" title="dedipath"></a><a href="https://dedipath.com/" target="_blank" rel="noopener external nofollow noreferrer">dedipath</a></h2><p>dedipath机房都在美国。hostloc论坛看到的优惠，6美元一年。dedi的ovz是kvm基础上再使用openvz虚拟的，所以不能dd系统。而且bbr加速也很麻烦。</p><blockquote><p>bbr加速可以参考:<a href="https://www.xlovett.com/412.html" target="_blank" rel="noopener external nofollow noreferrer">https://www.xlovett.com/412.html</a><br>6刀一年的VPS，ipv4和ipv6，但是都<strong>不能解锁Netflix</strong>，平时延迟大概300ms，带宽120Mbps，高峰时期带宽14Mbps。大约。</p></blockquote><h3 id="信息记录"><a href="#信息记录" class="headerlink" title="信息记录"></a>信息记录</h3><blockquote><p>Tuesday, June 29th, 2021<br>First Payment Amount<br>$6.00 USD<br>Recurring Amount<br>$12.00 USD<br>Billing Cycle<br>Annually<br>Next Due Date<br>Wednesday, June 29th, 2022</p></blockquote><h3 id="线路"><a href="#线路" class="headerlink" title="线路"></a>线路</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">目标:北京电信[219.141.136.10]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:北京联通[202.106.196.115]</span>  <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:北京移动[211.136.28.231]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:上海电信[202.96.199.132]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:上海联通[211.95.72.1]</span>      <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:上海移动[211.136.112.50]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:广州电信[61.144.56.100]</span>    <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:广州联通[211.95.193.97]</span>    <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:广州移动[120.196.122.69]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br></code></pre></td></tr></table></figure><h3 id="脚本测试结果"><a href="#脚本测试结果" class="headerlink" title="脚本测试结果"></a>脚本测试结果</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">Superbench.sh</span> <span class="hljs-string">--</span> <span class="hljs-string">https://www.oldking.net/350.html</span><br> <span class="hljs-attr">Mode  : Standard    Version :</span> <span class="hljs-number">1.1</span><span class="hljs-number">.7</span><br> <span class="hljs-attr">Usage :</span> <span class="hljs-string">wget</span> <span class="hljs-string">-qO-</span> <span class="hljs-string">sb.oldking.net</span> <span class="hljs-string">|</span> <span class="hljs-string">bash</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">CPU Model            :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2660</span> <span class="hljs-number">0</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">20GHz</span><br> <span class="hljs-attr">CPU Cores            :</span> <span class="hljs-number">1</span> <span class="hljs-string">Cores</span> <span class="hljs-number">2699.914 </span><span class="hljs-string">MHz</span> <span class="hljs-string">x86_64</span><br> <span class="hljs-attr">CPU Cache            :</span> <span class="hljs-number">20480</span> <span class="hljs-string">KB</span> <br> <span class="hljs-attr">OS                   :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">10</span> <span class="hljs-string">(64</span> <span class="hljs-string">Bit)</span> <span class="hljs-string">OpenVZ</span><br> <span class="hljs-attr">Kernel               :</span> <span class="hljs-number">4.19</span><span class="hljs-number">.0</span><br> <span class="hljs-attr">Total Space          :</span> <span class="hljs-number">1.5</span> <span class="hljs-string">GB</span> <span class="hljs-string">/</span> <span class="hljs-number">9.8</span> <span class="hljs-string">GB</span> <br> <span class="hljs-attr">Total RAM            :</span> <span class="hljs-number">69</span> <span class="hljs-string">MB</span> <span class="hljs-string">/</span> <span class="hljs-number">512</span> <span class="hljs-string">MB</span> <span class="hljs-string">(273</span> <span class="hljs-string">MB</span> <span class="hljs-string">Buff)</span><br> <span class="hljs-attr">Total SWAP           :</span> <span class="hljs-number">0</span> <span class="hljs-string">MB</span> <span class="hljs-string">/</span> <span class="hljs-number">0</span> <span class="hljs-string">MB</span><br> <span class="hljs-attr">Uptime               :</span> <span class="hljs-number">0</span> <span class="hljs-string">days</span> <span class="hljs-number">0</span> <span class="hljs-string">hour</span> <span class="hljs-number">7</span> <span class="hljs-string">min</span><br> <span class="hljs-attr">Load Average         :</span> <span class="hljs-number">0.28</span><span class="hljs-string">,</span> <span class="hljs-number">0.16</span><span class="hljs-string">,</span> <span class="hljs-number">0.08</span><br> <span class="hljs-attr">TCP CC               :</span> <br> <span class="hljs-string">ASN</span> <span class="hljs-string">&amp;</span> <span class="hljs-attr">ISP            :</span> <span class="hljs-string">AS35913,</span> <span class="hljs-string">DediPath</span><br> <span class="hljs-attr">Organization         :</span> <span class="hljs-string">Dedipath</span><br> <span class="hljs-attr">Location             :</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">United</span> <span class="hljs-string">States</span> <span class="hljs-string">/</span> <span class="hljs-string">US</span><br> <span class="hljs-attr">Region               :</span> <span class="hljs-string">California</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">135</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">175</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">136</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-attr">Average I/O Speed    :</span> <span class="hljs-number">148.7</span> <span class="hljs-string">MB/s</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">Node</span> <span class="hljs-string">Name</span>        <span class="hljs-string">Upload</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">Download</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">Latency</span>     <br> <span class="hljs-string">Speedtest.net</span>    <span class="hljs-number">534.12</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">892.77</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-string">(*)61.08</span> <span class="hljs-string">ms</span> <br> <span class="hljs-string">Fast.com</span>         <span class="hljs-number">0.00</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">130.2</span> <span class="hljs-string">Mbit/s</span>        <span class="hljs-bullet">-</span>           <br> <span class="hljs-string">Nanjing</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CT</span>  <span class="hljs-number">553.92</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">433.83</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">153.04</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Hefei</span> <span class="hljs-string">5G</span>     <span class="hljs-string">CT</span>  <span class="hljs-number">539.53</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">503.64</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">161.60</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Guangzhou</span> <span class="hljs-string">5G</span> <span class="hljs-string">CT</span>  <span class="hljs-number">6.07</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">290.55</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">164.50</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">TianJin</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CU</span>  <span class="hljs-number">436.51</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">452.64</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">198.70</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Shanghai</span> <span class="hljs-string">5G</span>  <span class="hljs-string">CU</span>  <span class="hljs-number">598.78</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">609.56</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">176.54</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Tianjin</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CM</span>  <span class="hljs-number">429.95</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">793.57</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">199.44</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Nanjing</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CM</span>  <span class="hljs-number">599.43</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">140.46</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">204.27</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Hefei</span> <span class="hljs-string">5G</span>     <span class="hljs-string">CM</span>  <span class="hljs-number">410.27</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">836.49</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">208.16</span> <span class="hljs-string">ms</span>   <br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">Finished in  :</span> <span class="hljs-number">5</span> <span class="hljs-string">min</span> <span class="hljs-number">43</span> <span class="hljs-string">sec</span><br> <span class="hljs-attr">Timestamp    :</span> <span class="hljs-number">2021-06-30 02:50:17 </span><span class="hljs-string">GMT+8</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">Share result:</span><br> <span class="hljs-string">·</span> <span class="hljs-string">https://www.speedtest.net/result/c/972e3ab7-984b-476c-bf19-4053d93d7418</span><br> <span class="hljs-string">·</span> <span class="hljs-string">https://paste.ubuntu.com/p/BzqXdZ6RDM/</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br></code></pre></td></tr></table></figure><p>2022.5.12测试（居然把硬盘读写速度降低了，无语）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">00</span><span class="hljs-string">:38:36</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">194</span> <span class="hljs-string">days,</span> <span class="hljs-number">6</span> <span class="hljs-string">hours,</span> <span class="hljs-number">41</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2660</span> <span class="hljs-number">0</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">20GHz</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-number">2699.914 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">512.0</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">0.0</span> <span class="hljs-string">KiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">9.7</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">CentOS</span> <span class="hljs-string">Linux</span> <span class="hljs-number">8</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">4.18</span><span class="hljs-number">.0</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">3.34</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(835)</span> <span class="hljs-string">|</span> <span class="hljs-number">6.77</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(105)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">3.36</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(841)</span> <span class="hljs-string">|</span> <span class="hljs-number">7.13</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(111)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">6.70</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(1.6k)</span> <span class="hljs-string">|</span> <span class="hljs-number">13.90</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(216)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">3.23</span> <span class="hljs-string">MB/s</span>        <span class="hljs-string">(6)</span> <span class="hljs-string">|</span> <span class="hljs-number">14.61</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(14)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">3.55</span> <span class="hljs-string">MB/s</span>        <span class="hljs-string">(6)</span> <span class="hljs-string">|</span> <span class="hljs-number">16.39</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(16)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">6.79</span> <span class="hljs-string">MB/s</span>       <span class="hljs-string">(12)</span> <span class="hljs-string">|</span> <span class="hljs-number">31.00</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(30)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">475</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">15.0</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">588</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">37.1</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">545</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">406</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">594</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">82.2</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">609</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">68.0</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">628</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">576</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv6):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">561</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">90.5</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-number">62.9</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">524</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">435</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">583</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">136</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">630</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">553</span> <span class="hljs-string">Mbits/sec</span><br><br></code></pre></td></tr></table></figure><h3 id="解锁情况"><a href="#解锁情况" class="headerlink" title="解锁情况"></a>解锁情况</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <span class="hljs-string">**</span> <span class="hljs-string">测试时间:</span> <span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">01</span><span class="hljs-string">:12:51</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv4解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">DediPath</span> <span class="hljs-string">(..*.*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">US</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">San</span> <span class="hljs-string">Francisco,</span> <span class="hljs-string">CA</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">-&gt;/dev/fd/63:</span> <span class="hljs-attr">line 1909: nslookup:</span> <span class="hljs-string">command</span> <span class="hljs-string">not</span> <span class="hljs-string">found</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Failed</span> <span class="hljs-string">(CDN</span> <span class="hljs-string">IP</span> <span class="hljs-string">Not</span> <span class="hljs-string">Found)</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">USD</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">===========[</span> <span class="hljs-string">North</span> <span class="hljs-string">America</span> <span class="hljs-string">]===========</span><br> <span class="hljs-attr">FOX:</span>                                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Hulu:</span>                                  <span class="hljs-string">Failed</span><br> <span class="hljs-string">ESPN+:[Sponsored</span> <span class="hljs-string">by</span> <span class="hljs-string">Jam]</span>               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Epix:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Starz:</span>                                 <span class="hljs-literal">No</span><br> <span class="hljs-attr">HBO Now:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">HBO Max:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">BritBox:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">NBA TV:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Fubo TV:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Sling TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Pluto TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Acorn TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">SHOWTIME:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-string">AT&amp;T</span> <span class="hljs-attr">NOW:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">encoreTVB:</span>                             <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">CineMax Go:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Funimation:</span>                            <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">Discovery+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">Paramount+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Peacock TV:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">---CA---</span><br> <span class="hljs-attr">CBC Gem:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Crave:</span>                                 <span class="hljs-literal">No</span><br><span class="hljs-string">=======================================</span><br><br><br> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv6解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">DediPath</span> <span class="hljs-string">(:::*:*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-string">Unsupported</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">Failed</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-string">Failed</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Failed</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">===========[</span> <span class="hljs-string">North</span> <span class="hljs-string">America</span> <span class="hljs-string">]===========</span><br> <span class="hljs-attr">FOX:</span>                                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Hulu:</span>                                  <span class="hljs-string">Failed</span><br> <span class="hljs-string">ESPN+:[Sponsored</span> <span class="hljs-string">by</span> <span class="hljs-string">Jam]</span>               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Epix:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Starz:</span>                                 <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">HBO Now:</span>                               <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br><br> <span class="hljs-attr">HBO Max:</span>                               <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">BritBox:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">NBA TV:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Fubo TV:</span>                               <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">Sling TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Pluto TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Acorn TV:</span>                              <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">SHOWTIME:</span>                              <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">encoreTVB:</span>                             <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span>             <span class="hljs-string">-&gt;</span><br> <span class="hljs-attr">CineMax Go:</span>                            <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">Funimation:</span>                            <span class="hljs-string">IPv6</span> <span class="hljs-string">Not</span> <span class="hljs-string">Support</span><br> <span class="hljs-string">Discovery+:</span>                            <span class="hljs-string">IPv6</span> <span class="hljs-string">Not</span> <span class="hljs-string">Support</span><br> <span class="hljs-string">Paramount+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Peacock TV:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">---CA---</span><br> <span class="hljs-attr">CBC Gem:</span>                               <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">Crave:</span>                                 <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">本次测试已结束，感谢使用此脚本</span><br><br></code></pre></td></tr></table></figure><h2 id="ruvds"><a href="#ruvds" class="headerlink" title="ruvds"></a>ruvds</h2><p>俄罗斯机房，还有荷兰，英国，德国的机子。最便宜的624卢布一年。也就是下面这个。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">Superbench.sh</span> <span class="hljs-string">--</span> <span class="hljs-string">https://www.oldking.net/350.html</span><br> <span class="hljs-attr">Mode  : Standard    Version :</span> <span class="hljs-number">1.1</span><span class="hljs-number">.7</span><br> <span class="hljs-attr">Usage :</span> <span class="hljs-string">wget</span> <span class="hljs-string">-qO-</span> <span class="hljs-string">sb.oldking.net</span> <span class="hljs-string">|</span> <span class="hljs-string">bash</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">CPU Model            :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2658</span> <span class="hljs-string">v4</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">30GHz</span><br> <span class="hljs-attr">CPU Cores            :</span> <span class="hljs-number">1</span> <span class="hljs-string">Cores</span> <span class="hljs-number">2294.674 </span><span class="hljs-string">MHz</span> <span class="hljs-string">x86_64</span><br> <span class="hljs-attr">CPU Cache            :</span> <span class="hljs-number">35840</span> <span class="hljs-string">KB</span> <br> <span class="hljs-attr">OS                   :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">9</span> <span class="hljs-string">(64</span> <span class="hljs-string">Bit)</span> <span class="hljs-string">Hyper-V</span><br> <span class="hljs-attr">Kernel               :</span> <span class="hljs-number">4.11</span><span class="hljs-number">.8</span><span class="hljs-number">-041108</span><span class="hljs-string">-generic</span><br> <span class="hljs-attr">Total Space          :</span> <span class="hljs-number">1.8</span> <span class="hljs-string">GB</span> <span class="hljs-string">/</span> <span class="hljs-number">9.3</span> <span class="hljs-string">GB</span> <br> <span class="hljs-attr">Total RAM            :</span> <span class="hljs-number">172</span> <span class="hljs-string">MB</span> <span class="hljs-string">/</span> <span class="hljs-number">476</span> <span class="hljs-string">MB</span> <span class="hljs-string">(294</span> <span class="hljs-string">MB</span> <span class="hljs-string">Buff)</span><br> <span class="hljs-attr">Total SWAP           :</span> <span class="hljs-number">1</span> <span class="hljs-string">MB</span> <span class="hljs-string">/</span> <span class="hljs-number">509</span> <span class="hljs-string">MB</span><br> <span class="hljs-attr">Uptime               :</span> <span class="hljs-number">3</span> <span class="hljs-string">days</span> <span class="hljs-number">3</span> <span class="hljs-string">hour</span> <span class="hljs-number">42</span> <span class="hljs-string">min</span><br> <span class="hljs-attr">Load Average         :</span> <span class="hljs-number">0.36</span><span class="hljs-string">,</span> <span class="hljs-number">0.11</span><span class="hljs-string">,</span> <span class="hljs-number">0.03</span><br> <span class="hljs-attr">TCP CC               :</span> <span class="hljs-string">bbr</span><br> <span class="hljs-string">ASN</span> <span class="hljs-string">&amp;</span> <span class="hljs-attr">ISP            :</span> <span class="hljs-string">AS48347,</span> <span class="hljs-string">JSC</span> <span class="hljs-string">Mediasoft</span> <span class="hljs-string">ekspert</span><br> <span class="hljs-attr">Organization         :</span> <span class="hljs-string">MT</span> <span class="hljs-string">FINANCE</span> <span class="hljs-string">LLC</span><br> <span class="hljs-attr">Location             :</span> <span class="hljs-string">Moscow,</span> <span class="hljs-string">Russia</span> <span class="hljs-string">/</span> <span class="hljs-string">RU</span><br> <span class="hljs-attr">Region               :</span> <span class="hljs-string">Moscow</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">120</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">153</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">168</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-attr">Average I/O Speed    :</span> <span class="hljs-number">147.0</span> <span class="hljs-string">MB/s</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">Node</span> <span class="hljs-string">Name</span>        <span class="hljs-string">Upload</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">Download</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">Latency</span>     <br> <span class="hljs-string">Speedtest.net</span>    <span class="hljs-number">95.53</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">333.25</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">3.36</span> <span class="hljs-string">ms</span>     <br> <span class="hljs-string">Fast.com</span>         <span class="hljs-number">0.00</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">111.2</span> <span class="hljs-string">Mbit/s</span>        <span class="hljs-bullet">-</span>           <br> <span class="hljs-string">Nanjing</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CT</span>  <span class="hljs-number">92.45</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">225.07</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">239.95</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Hefei</span> <span class="hljs-string">5G</span>     <span class="hljs-string">CT</span>  <span class="hljs-number">93.67</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">213.42</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">248.65</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">TianJin</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CU</span>  <span class="hljs-number">87.28</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">239.79</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">240.29</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Shanghai</span> <span class="hljs-string">5G</span>  <span class="hljs-string">CU</span>  <span class="hljs-number">95.61</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">359.95</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">140.77</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Tianjin</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CM</span>  <span class="hljs-number">93.75</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">310.42</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">242.08</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Nanjing</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CM</span>  <span class="hljs-number">91.57</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">5.66</span> <span class="hljs-string">Mbit/s</span>         <span class="hljs-number">248.95</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Hefei</span> <span class="hljs-string">5G</span>     <span class="hljs-string">CM</span>  <span class="hljs-number">88.72</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">376.69</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">316.22</span> <span class="hljs-string">ms</span>   <br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">Finished in  :</span> <span class="hljs-number">4</span> <span class="hljs-string">min</span> <span class="hljs-number">53</span> <span class="hljs-string">sec</span><br> <span class="hljs-attr">Timestamp    :</span> <span class="hljs-number">2021-07-01 18:28:00 </span><span class="hljs-string">GMT+8</span><br> <span class="hljs-attr">Results      :</span> <span class="hljs-string">./superbench.log</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">Share result:</span><br> <span class="hljs-string">·</span> <span class="hljs-string">https://www.speedtest.net/result/c/cf22ece8-3cfa-4751-bee1-ef83790f6870</span><br> <span class="hljs-string">·</span> <span class="hljs-string">https://paste.ubuntu.com/p/gsdgQHYXM4/</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br></code></pre></td></tr></table></figure><h1 id="中等"><a href="#中等" class="headerlink" title="中等"></a>中等</h1><h2 id="HostHatch"><a href="#HostHatch" class="headerlink" title="HostHatch"></a>HostHatch</h2><p>对移动线路很友好，其他都不行。下面这台机子20刀一年。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">1</span> <span class="hljs-string">CPU</span> <span class="hljs-string">core</span> <span class="hljs-string">(12.5%</span> <span class="hljs-string">dedicated,</span> <span class="hljs-string">burstable</span> <span class="hljs-string">up</span> <span class="hljs-string">to</span> <span class="hljs-number">100</span><span class="hljs-string">%)</span><br><span class="hljs-string">1GB</span> <span class="hljs-string">RAM</span><br><span class="hljs-number">10</span> <span class="hljs-string">GB</span> <span class="hljs-string">RAIND-10</span> <span class="hljs-string">NVME</span><br><span class="hljs-number">500</span> <span class="hljs-string">GB</span> <span class="hljs-string">bandwidth</span><br></code></pre></td></tr></table></figure><h3 id="线路-1"><a href="#线路-1" class="headerlink" title="线路"></a>线路</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">目标:北京电信[219.141.136.10]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:北京联通[202.106.196.115]</span>  <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:北京移动[211.136.28.231]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:上海电信[202.96.199.132]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:上海联通[211.95.72.1]</span>      <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:上海移动[211.136.112.50]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:广州电信[61.144.56.100]</span>    <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:广州联通[211.95.193.97]</span>    <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:广州移动[120.196.122.69]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br></code></pre></td></tr></table></figure><h3 id="脚本跑分"><a href="#脚本跑分" class="headerlink" title="脚本跑分"></a>脚本跑分</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Wed</span> <span class="hljs-number">11</span> <span class="hljs-string">May</span> <span class="hljs-number">2022 12:40:08 </span><span class="hljs-string">PM</span> <span class="hljs-string">EDT</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">4</span> <span class="hljs-string">days,</span> <span class="hljs-number">8</span> <span class="hljs-string">hours,</span> <span class="hljs-number">44</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2690</span> <span class="hljs-string">v2</span> <span class="hljs-string">@</span> <span class="hljs-number">3.</span><span class="hljs-string">00GHz</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-number">2999.998 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">987.2</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">975.0</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">8.8</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">10</span> <span class="hljs-string">(buster)</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">4.19</span><span class="hljs-number">.0</span><span class="hljs-number">-20</span><span class="hljs-string">-amd64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">103.37</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(25.8k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.16</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(18.2k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">103.64</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(25.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.17</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(18.3k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">207.01</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(51.7k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.34</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(36.6k)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">2.02</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(3.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.73</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.6k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">2.13</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(4.1k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.92</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.8k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">4.16</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(8.1k)</span> <span class="hljs-string">|</span> <span class="hljs-number">5.66</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(5.5k)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">181</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">283</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">194</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">455</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-number">407</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">353</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">385</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">271</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">245</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">275</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">490</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">481</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">502</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14845638</span><br><br></code></pre></td></tr></table></figure><h3 id="解锁情况-1"><a href="#解锁情况-1" class="headerlink" title="解锁情况"></a>解锁情况</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv4解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">HostHatch</span> <span class="hljs-string">(*.*.*.*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">HK)</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">HK)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">No</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">HK</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">HK)</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Hong</span> <span class="hljs-string">Kong</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Hong</span> <span class="hljs-string">Kong</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">HKD</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">=============[</span> <span class="hljs-string">Hong</span> <span class="hljs-string">Kong</span> <span class="hljs-string">]=============</span><br> <span class="hljs-attr">Now E:</span>                                 <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Viu.TV:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">MyTVSuper:</span>                             <span class="hljs-literal">No</span><br> <span class="hljs-attr">HBO GO Asia:</span>                           <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">HK)</span><br> <span class="hljs-attr">BiliBili Hongkong/Macau/Taiwan:</span>        <span class="hljs-literal">Yes</span><br><span class="hljs-string">=======================================</span><br><br></code></pre></td></tr></table></figure><h2 id="RackNerd"><a href="#RackNerd" class="headerlink" title="RackNerd"></a>RackNerd</h2><p>国人商家。下面这台机子10.69 USD一年，配置<code>768MB RAM - LA-DC02</code> 。支持ipv6，什么都不解锁。线路很差，三网延迟都高于500ms。性价比高。随时可能跑路。</p><h3 id="线路-2"><a href="#线路-2" class="headerlink" title="线路"></a>线路</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">目标:北京电信[219.141.136.10]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:北京联通[202.106.196.115]</span>  <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:北京移动[211.136.28.231]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:上海电信[202.96.199.132]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:上海联通[211.95.72.1]</span>      <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:上海移动[211.136.112.50]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:广州电信[61.144.56.100]</span>    <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:广州联通[211.95.193.97]</span>    <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:广州移动[120.196.122.69]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br></code></pre></td></tr></table></figure><h3 id="脚本跑分-1"><a href="#脚本跑分-1" class="headerlink" title="脚本跑分"></a>脚本跑分</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Wed</span> <span class="hljs-number">11</span> <span class="hljs-string">May</span> <span class="hljs-number">2022 12:45:43 </span><span class="hljs-string">PM</span> <span class="hljs-string">EDT</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">43</span> <span class="hljs-string">days,</span> <span class="hljs-number">8</span> <span class="hljs-string">hours,</span> <span class="hljs-number">21</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2690</span> <span class="hljs-number">0</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">90GHz</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-number">2899.996 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">734.8</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">765.0</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">14.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">10</span> <span class="hljs-string">(buster)</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">4.19</span><span class="hljs-number">.0</span><span class="hljs-number">-20</span><span class="hljs-string">-amd64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">54.31</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(13.5k)</span> <span class="hljs-string">|</span> <span class="hljs-number">649.58</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(10.1k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">54.43</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(13.6k)</span> <span class="hljs-string">|</span> <span class="hljs-number">652.99</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(10.2k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">108.75</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(27.1k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.30</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(20.3k)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">1.23</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.4k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.20</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(1.1k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">1.30</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.5k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.28</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(1.2k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">2.54</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(4.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.49</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.4k)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">617</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">83.9</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">665</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">40.2</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">616</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">471</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">770</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">101</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">790</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">101</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">825</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">602</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">380</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">367</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14845716</span><br><br></code></pre></td></tr></table></figure><h3 id="解锁情况-2"><a href="#解锁情况-2" class="headerlink" title="解锁情况"></a>解锁情况</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv4解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">Multacom</span> <span class="hljs-string">Corporation</span> <span class="hljs-string">(..*.*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">US</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">USD</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">===========[</span> <span class="hljs-string">North</span> <span class="hljs-string">America</span> <span class="hljs-string">]===========</span><br> <span class="hljs-attr">FOX:</span>                                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Hulu:</span>                                  <span class="hljs-string">Failed</span><br> <span class="hljs-string">ESPN+:[Sponsored</span> <span class="hljs-string">by</span> <span class="hljs-string">Jam]</span>               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Epix:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Starz:</span>                                 <span class="hljs-literal">No</span><br> <span class="hljs-attr">HBO Now:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">HBO Max:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">BritBox:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">NBA TV:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Fubo TV:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Sling TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Pluto TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Acorn TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">SHOWTIME:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-string">AT&amp;T</span> <span class="hljs-attr">NOW:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">encoreTVB:</span>                             <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">CineMax Go:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Funimation:</span>                            <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">Discovery+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">Paramount+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Peacock TV:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">---CA---</span><br> <span class="hljs-attr">CBC Gem:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Crave:</span>                                 <span class="hljs-literal">No</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">当前主机不支持IPv6,跳过...</span><br><br></code></pre></td></tr></table></figure><h1 id="大厂机子"><a href="#大厂机子" class="headerlink" title="大厂机子"></a>大厂机子</h1><h2 id="甲骨文"><a href="#甲骨文" class="headerlink" title="甲骨文"></a>甲骨文</h2><p>免费账号，可以开amd也可以开arm。arm实例配置最高可达4核24GB。单核跑分约800。良心得很。缺点是不能重装系统。硬盘读写速度太低。</p><h3 id="脚本跑分-2"><a href="#脚本跑分-2" class="headerlink" title="脚本跑分"></a>脚本跑分</h3><h3 id="arm跑分结果"><a href="#arm跑分结果" class="headerlink" title="arm跑分结果"></a>arm跑分结果</h3><p>3核19GB，75GB 硬盘。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">00</span><span class="hljs-string">:38:49</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-string">ARM</span> <span class="hljs-string">compatibility</span> <span class="hljs-string">is</span> <span class="hljs-string">considered</span> <span class="hljs-string">*experimental*</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">7</span> <span class="hljs-string">days,</span> <span class="hljs-number">23</span> <span class="hljs-string">hours,</span> <span class="hljs-number">31</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Neoverse-N1</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">3</span> <span class="hljs-string">@</span> <span class="hljs-string">???</span> <span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">17.7</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">8.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">75.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Oracle</span> <span class="hljs-string">Linux</span> <span class="hljs-string">Server</span> <span class="hljs-number">8.5</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">5.4</span><span class="hljs-number">.17</span><span class="hljs-number">-2136.306</span><span class="hljs-number">.1</span><span class="hljs-number">.3</span><span class="hljs-string">.el8uek.aarch64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">11.79</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(2.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">23.63</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(369)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">11.79</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(2.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">24.33</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(380)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">23.59</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(5.8k)</span> <span class="hljs-string">|</span> <span class="hljs-number">47.97</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(749)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">21.69</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(42)</span> <span class="hljs-string">|</span> <span class="hljs-number">21.38</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(20)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">23.55</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(45)</span> <span class="hljs-string">|</span> <span class="hljs-number">23.86</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(23)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">45.24</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(87)</span> <span class="hljs-string">|</span> <span class="hljs-number">45.25</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(43)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">713</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">465</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">2.27</span> <span class="hljs-string">Gbits/sec</span>  <span class="hljs-string">|</span> <span class="hljs-number">524</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">663</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">711</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">908</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">480</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.49</span> <span class="hljs-string">Gbits/sec</span>  <span class="hljs-string">|</span> <span class="hljs-number">768</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.33</span> <span class="hljs-string">Gbits/sec</span>  <span class="hljs-string">|</span> <span class="hljs-number">659</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">875</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">2276</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14845601</span><br></code></pre></td></tr></table></figure><p>1核5GB，47 GB硬盘。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">00</span><span class="hljs-string">:38:53</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-string">ARM</span> <span class="hljs-string">compatibility</span> <span class="hljs-string">is</span> <span class="hljs-string">considered</span> <span class="hljs-string">*experimental*</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">3</span> <span class="hljs-string">days,</span> <span class="hljs-number">19</span> <span class="hljs-string">hours,</span> <span class="hljs-number">30</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Neoverse-N1</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-string">???</span> <span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">4.6</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">4.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">46.5</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Oracle</span> <span class="hljs-string">Linux</span> <span class="hljs-string">Server</span> <span class="hljs-number">8.5</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">5.4</span><span class="hljs-number">.17</span><span class="hljs-number">-2136.306</span><span class="hljs-number">.1</span><span class="hljs-number">.3</span><span class="hljs-string">.el8uek.aarch64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">6.27</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(1.5k)</span> <span class="hljs-string">|</span> <span class="hljs-number">27.23</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(425)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">6.27</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(1.5k)</span> <span class="hljs-string">|</span> <span class="hljs-number">28.03</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(438)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">12.54</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(3.1k)</span> <span class="hljs-string">|</span> <span class="hljs-number">55.26</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(863)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">24.17</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(47)</span> <span class="hljs-string">|</span> <span class="hljs-number">23.84</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(23)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">26.24</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(51)</span> <span class="hljs-string">|</span> <span class="hljs-number">26.60</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(25)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">50.42</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(98)</span> <span class="hljs-string">|</span> <span class="hljs-number">50.45</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(48)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">571</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">467</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">360</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">592</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">556</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">662</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">803</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">529</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">863</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">713</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">915</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">678</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">807</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">824</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14845611</span><br></code></pre></td></tr></table></figure><h3 id="amd-跑分结果"><a href="#amd-跑分结果" class="headerlink" title="amd 跑分结果"></a>amd 跑分结果</h3><h3 id="解锁情况-3"><a href="#解锁情况-3" class="headerlink" title="解锁情况"></a>解锁情况</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <span class="hljs-string">**</span> <span class="hljs-string">测试时间:</span> <span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">01</span><span class="hljs-string">:15:08</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv4解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">Oracle</span> <span class="hljs-string">Cloud</span> <span class="hljs-string">(*.*.*.*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SE)</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">JP)</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">JP)</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">JP)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">JP</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Tokyo</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Tokyo</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">JPY</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">===============[</span> <span class="hljs-string">Japan</span> <span class="hljs-string">]===============</span><br> <span class="hljs-attr">DMM:</span>                                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Abema.TV:</span>                              <span class="hljs-literal">No</span><br> <span class="hljs-attr">Niconico:</span>                              <span class="hljs-literal">No</span><br> <span class="hljs-attr">Telasa:</span>                                <span class="hljs-literal">No</span><br> <span class="hljs-attr">Paravi:</span>                                <span class="hljs-literal">No</span><br> <span class="hljs-attr">U-NEXT:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Hulu Japan:</span>                            <span class="hljs-literal">No</span><br> <span class="hljs-attr">TVer:</span>                                  <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">WOWOW:</span>                                 <span class="hljs-literal">No</span><br> <span class="hljs-string">FOD(Fuji</span> <span class="hljs-string">TV):</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Radiko:</span>                                <span class="hljs-literal">Yes</span> <span class="hljs-string">(City:</span> <span class="hljs-string">TOKYO)</span><br> <span class="hljs-string">Karaoke@DAM:</span>                           <span class="hljs-literal">Yes</span><br> <span class="hljs-string">---Game---</span><br> <span class="hljs-attr">Kancolle Japan:</span>                        <span class="hljs-literal">No</span><br> <span class="hljs-attr">Pretty Derby Japan:</span>                    <span class="hljs-literal">No</span><br> <span class="hljs-attr">Konosuba Fantastic Days:</span>               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Princess Connect Re:Dive Japan:</span>        <span class="hljs-literal">No</span><br> <span class="hljs-attr">World Flipper Japan:</span>                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Project Sekai: Colorful Stage:</span>         <span class="hljs-literal">Yes</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">当前主机不支持IPv6,跳过...</span><br><br></code></pre></td></tr></table></figure><h2 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h2><p>良心云不必多说</p><h3 id="脚本跑分-3"><a href="#脚本跑分-3" class="headerlink" title="脚本跑分"></a>脚本跑分</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">01</span><span class="hljs-string">:11:47</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">300</span> <span class="hljs-string">days,</span> <span class="hljs-number">2</span> <span class="hljs-string">hours,</span> <span class="hljs-number">19</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">AMD</span> <span class="hljs-string">EPYC</span> <span class="hljs-string">7K62</span> <span class="hljs-number">48</span><span class="hljs-string">-Core</span> <span class="hljs-string">Processor</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-number">2595.124 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">1.9</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">2.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">56.8</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">9</span> <span class="hljs-string">(stretch)</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">4.9</span><span class="hljs-number">.0</span><span class="hljs-number">-13</span><span class="hljs-string">-amd64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">71.95</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(17.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">285.15</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(4.4k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">72.14</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(18.0k)</span> <span class="hljs-string">|</span> <span class="hljs-number">286.66</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(4.4k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">144.09</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(36.0k)</span> <span class="hljs-string">|</span> <span class="hljs-number">571.81</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(8.9k)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">260.63</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(509)</span> <span class="hljs-string">|</span> <span class="hljs-number">257.59</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(251)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">274.48</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(536)</span> <span class="hljs-string">|</span> <span class="hljs-number">274.74</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(268)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">535.12</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(1.0k)</span> <span class="hljs-string">|</span> <span class="hljs-number">532.33</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(519)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-number">459</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-number">791</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">732</span> <span class="hljs-string">Kbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">839</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">721</span> <span class="hljs-string">Kbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">662</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">629</span> <span class="hljs-string">Kbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">825</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">902</span> <span class="hljs-string">Kbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">1.38</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14846851</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：一键脚本检测VPS是否支持ipv4\ipv6解锁流媒体</title>
    <link href="/posts/30740.html"/>
    <url>/posts/30740.html</url>
    
    <content type="html"><![CDATA[<p>流媒体NetFlix解锁检测脚本，使用Go语言编写。在VPS网络正常的情况下，哪怕是双栈网络也可在几秒内快速完成IPv4&#x2F;IPv6的NF解锁情况判断。</p><span id="more"></span><h1 id="NETFLIX-VERIFY"><a href="#NETFLIX-VERIFY" class="headerlink" title="NETFLIX-VERIFY"></a>NETFLIX-VERIFY</h1><blockquote><p>项目地址：<a href="https://github.com/sjlleo/netflix-verify" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/sjlleo/netflix-verify</a></p></blockquote><h2 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h2><ul><li><input checked="" disabled="" type="checkbox"> 解锁情况判断</li><li><input checked="" disabled="" type="checkbox"> 地域信息显示</li><li><input checked="" disabled="" type="checkbox"> 双栈网络测试</li><li><input disabled="" type="checkbox"> 半解锁检测（待实现）<br>首先使用<code>arch</code>检测CPU类型<h2 id="相关名词解释"><a href="#相关名词解释" class="headerlink" title="相关名词解释"></a>相关名词解释</h2></li></ul><ol><li><p><strong>不提供服务</strong> - 所在的地区NF没开通，连自制剧也看不了</p></li><li><p><strong>宽松版权</strong> - 有些NF拍摄的影片不是特别注重版权，所以限制放的很开</p></li><li><p><strong>解锁自制剧</strong> - 代表可以看由NF自己拍摄的影片</p></li><li><p><strong>解锁非自制剧</strong> - 代表可以看NF买下的第三方版权影片</p></li><li><p><strong>地域解锁</strong> - NF在不同的地区可以看的片源都是不同的，有些影片只能在特定区观看<br>一般来说，需要能看非自制剧才算真正意义上的NF解锁</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2></li><li><p>部署 <code>golang</code> 环境，执行 <code>go run nf.go</code> 运行本小应用</p></li><li><p>懒人一键运行包（使用编译好的二进制文件执行本小程序）</p><ul><li>Github主站下载链接（适用于IPv4网络的机器）:</li></ul></li></ol><p>我这里是<strong>X86_64</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.6/nf_2.6_linux_amd64 &amp;&amp; <span class="hljs-built_in">chmod</span> +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>记录下结果，难过的说</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">** NetFlix 解锁检测小工具 v2.6 By @sjlleo **<br>模式：简洁信息模式<br>[IPv4测试]<br>您的出口IP不能解锁Netflix，仅支持自制剧的观看<br><br>[IPv6测试]<br>您的出口IP不能解锁Netflix，仅支持自制剧的观看<br></code></pre></td></tr></table></figure><ul><li>CDN下载链接（通用选项，既适用于有IPv4网络的机器也适用于仅有IPv6网络的机器）:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O nf https://cdn.jsdelivr.net/gh/sjlleo/netflix-verify/CDNRelease/nf_2.60_linux_amd64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><ul><li><strong>ARM64</strong>：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.6/nf_2.6_linux_arm64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure></li></ul><h2 id="效果演示图"><a href="#效果演示图" class="headerlink" title="效果演示图"></a>效果演示图</h2><h3 id="简约模式"><a href="#简约模式" class="headerlink" title="简约模式"></a>简约模式</h3><img width="430" alt="Lite Method" src="https://user-images.githubusercontent.com/13616352/110296950-e479c000-802d-11eb-9837-e23392860b07.png"><h2 id="其他实用脚本链接"><a href="#其他实用脚本链接" class="headerlink" title="其他实用脚本链接"></a>其他实用脚本链接</h2><p>DisneyPlus 解锁检测： <a href="https://github.com/sjlleo/VerifyDisneyPlus" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/sjlleo/VerifyDisneyPlus</a></p><p>Youtube 缓存节点、地域信息检测：<a href="https://github.com/sjlleo/TubeCheck" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/sjlleo/TubeCheck</a></p><p>Cloudflare Warp 一键脚本（<a href="https://github.com/YG-tsj" target="_blank" rel="noopener external nofollow noreferrer">@YG-tsj</a>）：<a href="https://github.com/YG-tsj/Oracle-warp" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/YG-tsj/Oracle-warp</a></p><ul><li><strong>特色：非常全面的功能，用户全程无需值守的自动化安装脚本，更是高级玩家的最爱</strong></li></ul><p>Cloudflare Warp 一键脚本（<a href="https://github.com/missuo" target="_blank" rel="noopener external nofollow noreferrer">@missuo</a>）：<a href="https://github.com/missuo/CloudflareWarp" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/missuo/CloudflareWarp</a></p><ul><li><strong>特色：简洁轻量，更为适合那些不想折腾的轻度用户使用</strong></li></ul><h1 id="RegionRestrictionCheck"><a href="#RegionRestrictionCheck" class="headerlink" title="RegionRestrictionCheck"></a>RegionRestrictionCheck</h1><blockquote><p>项目地址：<a href="https://github.com/lmc999/RegionRestrictionCheck" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/lmc999/RegionRestrictionCheck</a></p></blockquote><h2 id="检测各类流媒体是否被解锁"><a href="#检测各类流媒体是否被解锁" class="headerlink" title="检测各类流媒体是否被解锁"></a>检测各类流媒体是否被解锁</h2><ul><li>Netflix</li><li>HBO</li><li>Channel 4</li><li>Peakcock</li><li>Amazon Prime Video区域</li><li>Disneyplus</li><li>Fox</li><li>MyTVSuper</li><li>Hulu</li><li>赛马娘 舰娘</li><li>TikTok区域</li><li>爱奇艺国际版区域<br>等等</li></ul><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>使用脚本前请确认curl已安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)<br></code></pre></td></tr></table></figure><h5 id="只检测IPv4结果："><a href="#只检测IPv4结果：" class="headerlink" title="只检测IPv4结果："></a>只检测IPv4结果：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh) 4<br></code></pre></td></tr></table></figure><h5 id="只检测IPv6结果："><a href="#只检测IPv6结果：" class="headerlink" title="只检测IPv6结果："></a>只检测IPv6结果：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh) 6<br></code></pre></td></tr></table></figure><p><strong>或者直接运行以下Docker命令</strong> (兼容ARM架构)</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs docker">docker <span class="hljs-keyword">run</span><span class="language-bash"> --<span class="hljs-built_in">rm</span> -ti --net=host lmc999/regioncheck &amp;&amp; docker rmi lmc999/regioncheck</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：性能测试</title>
    <link href="/posts/44877.html"/>
    <url>/posts/44877.html</url>
    
    <content type="html"><![CDATA[<p>VPS一键测试脚本 &#x2F; 自带结果导出</p><span id="more"></span><p>我就随便试了下SuperBench脚本<br>特点：第一个测速节点使用Speedtest.net，Fast.com，再是联通移动电信。对系统的测试也更加全面，包括拥堵阻塞、运营商等。三次I&#x2F;O分别使用大中小文件，再取平均值。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash<br><span class="hljs-comment">#或者</span><br>curl -Lso- -no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash<br></code></pre></td></tr></table></figure><p>记录一下腾讯云轻量应用服务器的结果：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs AppleScript"> ========================================================= <br> \                 Superbench.sh  Script                 / <br> \       Basic <span class="hljs-built_in">system info</span>, I/O test <span class="hljs-keyword">and</span> speedtest       / <br> \                   v1<span class="hljs-number">.1</span><span class="hljs-number">.7</span> (<span class="hljs-number">7</span> Apr <span class="hljs-number">2020</span>)                 / <br> \                   Created <span class="hljs-keyword">by</span> Oldking                  / <br> ========================================================= <br><br> Intro: https://www.oldking.net/<span class="hljs-number">350.</span>html<br> Copyright (C) <span class="hljs-number">2020</span> Oldking oooldking@gmail.com<br><br> Installing Speedtest-cli ...<br> Installing tools.py ...<br> Installing Fast.com-cli ...<br><span class="hljs-comment">----------------------------------------------------------------------</span><br> Superbench.sh <span class="hljs-comment">-- https://www.oldking.net/350.html</span><br> Mode  : Standard    Version : <span class="hljs-number">1.1</span><span class="hljs-number">.7</span><br> Usage : wget -qO- sb.oldking.net | bash<br><span class="hljs-comment">----------------------------------------------------------------------</span><br> CPU Model            : AMD EPYC <span class="hljs-number">7</span>K62 <span class="hljs-number">48</span>-Core Processor<br> CPU Cores            : <span class="hljs-number">1</span> Cores <span class="hljs-number">2595.124</span> MHz x86_64<br> CPU Cache            : <span class="hljs-number">512</span> KB <br> OS                   : Debian GNU/Linux <span class="hljs-number">9</span> (<span class="hljs-number">64</span> Bit) KVM<br> Kernel               : <span class="hljs-number">4.11</span><span class="hljs-number">.8</span><span class="hljs-number">-041108</span>-generic<br> Total Space          : <span class="hljs-number">1.9</span> GB / <span class="hljs-number">57.0</span> GB <br> Total RAM            : <span class="hljs-number">150</span> MB / <span class="hljs-number">1997</span> MB (<span class="hljs-number">1378</span> MB Buff)<br> Total SWAP           : <span class="hljs-number">0</span> MB / <span class="hljs-number">2044</span> MB<br> Uptime               : <span class="hljs-number">6</span> days <span class="hljs-number">7</span> hour <span class="hljs-number">34</span> min<br> Load Average         : <span class="hljs-number">0.00</span>, <span class="hljs-number">0.00</span>, <span class="hljs-number">0.00</span><br> TCP CC               : bbr<br> ASN &amp; ISP            : AS45090, Shenzhen Tencent Computer Systems Company Limited<br> Organization         : Tencent cloud computing (Beijing) Co., Ltd.<br> Location             : Shenzhen, China / CN<br> Region               : Guangdong<br><span class="hljs-comment">----------------------------------------------------------------------</span><br> I/O Speed( <span class="hljs-number">1.0</span>GB )   : <span class="hljs-number">156</span> MB/s<br> I/O Speed( <span class="hljs-number">1.0</span>GB )   : <span class="hljs-number">140</span> MB/s<br> I/O Speed( <span class="hljs-number">1.0</span>GB )   : <span class="hljs-number">139</span> MB/s<br> Average I/O Speed    : <span class="hljs-number">145.0</span> MB/s<br><span class="hljs-comment">----------------------------------------------------------------------</span><br> Node Name        Upload Speed      Download Speed      Latency     <br> Speedtest.net    <span class="hljs-number">5.38</span> Mbit/s       <span class="hljs-number">104.54</span> Mbit/s       <span class="hljs-number">50.37</span> ms    <br> Fast.com         <span class="hljs-number">0.00</span> Mbit/s       <span class="hljs-number">0</span> Mbit/s            -           <br> Hefei <span class="hljs-number">5</span>G     CT  <span class="hljs-number">5.19</span> Mbit/s       <span class="hljs-number">123.19</span> Mbit/s       <span class="hljs-number">24.66</span> ms    <br> Guangzhou <span class="hljs-number">5</span>G CT  <span class="hljs-number">5.02</span> Mbit/s       <span class="hljs-number">96.80</span> Mbit/s        <span class="hljs-number">35.63</span> ms    <br> Shanghai <span class="hljs-number">5</span>G  CU  <span class="hljs-number">5.24</span> Mbit/s       <span class="hljs-number">102.22</span> Mbit/s       <span class="hljs-number">29.68</span> ms    <br> Tianjin <span class="hljs-number">5</span>G   CM  <span class="hljs-number">5.27</span> Mbit/s       <span class="hljs-number">111.59</span> Mbit/s       <span class="hljs-number">41.47</span> ms    <br> Hefei <span class="hljs-number">5</span>G     CM  <span class="hljs-number">5.34</span> Mbit/s       <span class="hljs-number">95.15</span> Mbit/s        <span class="hljs-number">23.22</span> ms    <br><span class="hljs-comment">----------------------------------------------------------------------</span><br> Finished <span class="hljs-keyword">in</span>  : <span class="hljs-number">4</span> min <span class="hljs-number">29</span> sec<br> Timestamp    : <span class="hljs-number">2021</span><span class="hljs-number">-06</span><span class="hljs-number">-28</span> <span class="hljs-number">03</span>:<span class="hljs-number">00</span>:<span class="hljs-number">38</span> GMT+<span class="hljs-number">8</span><br> Results      : ./superbench.<span class="hljs-built_in">log</span><br><span class="hljs-comment">----------------------------------------------------------------------</span><br> Share <span class="hljs-literal">result</span>:<br> · https://www.speedtest.net/<span class="hljs-literal">result</span>/c/<span class="hljs-number">53</span>d38b89<span class="hljs-number">-03</span>cc<span class="hljs-number">-45</span>aa<span class="hljs-number">-9</span>a62-fd6f16d38fe7<br> · https://paste.ubuntu.com/p/StVm2G4fQR/<br><span class="hljs-comment">----------------------------------------------------------------------</span><br><br></code></pre></td></tr></table></figure><blockquote><p>参考链接：<br>SuperBench.sh <a href="https://www.oldking.net/350.html" target="_blank" rel="noopener external nofollow noreferrer">https://www.oldking.net/350.html</a><br><a href="https://www.huaweicloud.com/articles/8c4213ad9af771ddc6b7a385a4dc4dd6.html" target="_blank" rel="noopener external nofollow noreferrer">https://www.huaweicloud.com/articles/8c4213ad9af771ddc6b7a385a4dc4dd6.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【教程】Steam控制台使用教学：在G胖眼里，你到底在哪个地区？</title>
    <link href="/posts/65318.html"/>
    <url>/posts/65318.html</url>
    
    <content type="html"><![CDATA[<p>最近很多uu的阿根廷号被遣返到国内。用电脑可以查看自己的当前ip的地区，也就是IPCountry这个就是G胖眼里你在哪个地区。大家平时可能没有注意过，但其实非常重要。</p><span id="more"></span><p>比如说这一次批量遣返阿根廷人，应该也是根据你的IPCountry来决定你会被遣返到哪里。</p><p>再比如说你领取礼物，就算挂了梯子，也可能会出现在当前地区不可用。新号第一次领取礼品卡，就会转换成IPCountry对应的地区货币，而不是你新号的地区。</p><p>锁区的游戏，能不能玩儿，也是看你的IPCountry是在哪里，跟游戏是不是符合。</p><p>这个IPCountry不是挂一次两次梯子就可以改变的，具体我也不是很清楚。大概可能要清除其他设备的令牌认证，清除登陆cookies，你要挂梯子多登陆注销登陆几次，并且保证网页端+客户端全都是在这个梯子下登陆。如果只挂一次，G胖不认的。比较麻烦。</p><h1 id="首先登陆Steam帐号"><a href="#首先登陆Steam帐号" class="headerlink" title="首先登陆Steam帐号"></a>首先登陆Steam帐号</h1><p>打开客户端登陆，这个很简单啦</p><h1 id="打开Steam控制台"><a href="#打开Steam控制台" class="headerlink" title="打开Steam控制台"></a>打开Steam控制台</h1><p>在浏览器网址部分或者cmd输入下面命令然后回车：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">steam://nav/console</span><br></code></pre></td></tr></table></figure><p>示例如下：<br><img src="/posts/65318/1.jpg"></p><p>弹出窗口点击Yes<br><img src="/posts/65318/2.jpg"></p><p>之后会自动跳转到Steam界面，但跟平常不同的是多一个控制台选项卡。<br><img src="/posts/65318/3.jpg"></p><h1 id="查看ip地区"><a href="#查看ip地区" class="headerlink" title="查看ip地区"></a>查看ip地区</h1><p>首先在控制台输入<code>user_info</code><br>可查看IP_country，能不能领礼物就看这个了.有时候就算在国内，加速器开多了也会导致ipcountry变成其他地方。<br><img src="/posts/65318/4.jpg"><br>其实还可以看很多 SteamID等一些基本信息 。这个大家自己探索。</p><h1 id="控制台其他使用方法"><a href="#控制台其他使用方法" class="headerlink" title="控制台其他使用方法"></a>控制台其他使用方法</h1><p>另一个我觉得好用的，可以查看游戏许可证的许可区域、付款来源等 ：<code>licenses_print</code>。<br>还有一些命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sh">batterypercent <span class="hljs-comment"># 查看剩余电量百分比</span><br>batterytime <span class="hljs-comment"># 查看剩余电池使用时间</span><br>ClientStatsUploadRateSeconds <span class="hljs-comment"># 客户端状态上传时间间隔</span><br>config_refresh <span class="hljs-comment"># 刷新设置</span><br>clear_console <span class="hljs-comment"># 清空控制台内容记录</span><br>cloud_sync_up <span class="hljs-comment"># 指定上传游戏的云存储数据，命令后跟游戏数字ID</span><br>cloud_sync_down <span class="hljs-comment"># 指定下载游戏的云存储数据，命令后跟游戏数字ID</span><br>license_for_app <span class="hljs-comment"># 查看指定游戏的注册信息，命令后跟游戏数字ID</span><br>licenses_print <span class="hljs-comment"># 查看登记在Steam下的游戏注册信息，包括购买时间，所属区域，授权状态等</span><br>licenses_print3 <span class="hljs-comment"># 显示内容和licenses_print类似</span><br>p2p_connecttimeout <span class="hljs-comment"># 查看P2P连接超时时间</span><br>p2p_unusedtimeout <span class="hljs-comment"># 查看P2P未使用超时时间</span><br>quit <span class="hljs-comment"># 退出Steam程序</span><br>service_repair <span class="hljs-comment"># 修复Steam客户端服务</span><br>service_test <span class="hljs-comment"># 测试Steam客户端服务</span><br>service_restart <span class="hljs-comment"># 重新启动Steam客户端服务</span><br>user_friends <span class="hljs-comment"># 查看用户好友</span><br>user_info <span class="hljs-comment"># 查看用户信息</span><br>windows_info <span class="hljs-comment"># 查看主板，BIOS等信息。</span><br></code></pre></td></tr></table></figure><h1 id="【扩展】steam启动参数"><a href="#【扩展】steam启动参数" class="headerlink" title="【扩展】steam启动参数"></a>【扩展】steam启动参数</h1><blockquote><p>此条适合喜欢折腾或有代码基础的姐妹，不熟悉的话请勿尝试</p></blockquote><p>每次要在浏览器或者cmd输入steam:&#x2F;&#x2F;nav&#x2F;console来打开控制台比较麻烦，有个办法是增加启动参数，让steam软件每次启动的时候都默认打开控制台。</p><p>在Steam快捷方式上右键，属性。然后添加-console参数。<br><img src="/posts/65318/5.jpg"></p><p>点击确定， 之后启动Steam就可以看到CONSOLE选项卡了。 </p><p>除了-console以外，还有别的启动参数可以使用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c">-applaunch 游戏数字ID 游戏启动参数<br>    <span class="hljs-comment">//直接通过命令行启动游戏，需要加入游戏的数字ID和对应游戏启动参数。</span><br>-cafeapplaunch<br>    <span class="hljs-comment">//以网吧模式启动游戏，强制启动前验证游戏数据。</span><br>-clearbeta<br>    <span class="hljs-comment">//如果参加了Steam的Beta活动，可以加入此参数清除。</span><br>-complete_install_via_http<br>    <span class="hljs-comment">//默认按照HTTP协议方式完成安装。</span><br>-console<br>    <span class="hljs-comment">//除错模式，在Steam中增加控制台，可以查看Steam活动信息。</span><br>    <span class="hljs-comment">//主要是Steam程序自身的活动，比如打开游戏，注册游戏等记录。</span><br>-dev或者-developer<br>    <span class="hljs-comment">//开发者模式，在Steam中增加控制台，可通过指令操作查看各种信息。</span><br>    <span class="hljs-comment">//在底部命令行输入栏可以输入任何字母得到相关字母开头的命令提示进行选择。</span><br>    <span class="hljs-comment">//按F6或者F7可以进行界面皮肤参数设置。</span><br>-forceservice<br>    <span class="hljs-comment">//强制以服务方式启动Steam，需要管理员权限。</span><br>-install 安装路径<br>    <span class="hljs-comment">//从指定安装路径安装游戏。</span><br>-language 语言<br>    <span class="hljs-comment">//指定Steam程序界面语言，例如：english。</span><br>-login 用户名 密码<br>    <span class="hljs-comment">//直接登录Steam，而不需要手动输入账号密码。</span><br>    <span class="hljs-comment">//通过此法可以创建多个账号登录的快捷方式而无需每次切换用户。</span><br>    <span class="hljs-comment">//公用电脑不要选择此种方式，会泄漏帐号密码资料。</span><br>-silent<br>    <span class="hljs-comment">//静默启动Steam程序并在系统通知区域显示图标。</span><br>    <span class="hljs-comment">//点击右下角图标后才会显示程序主界面。</span><br>    <span class="hljs-comment">//如果没有选择保存密码，那么依然会显示登录窗口。</span><br>-single_core<br>    <span class="hljs-comment">//强制Steam运行于首选CPU。</span><br>-tcp<br>    <span class="hljs-comment">//强制指定Steam程序使用TCP协议而不是默认的UDP协议。</span><br>-voice_quality 数字<br>    <span class="hljs-comment">//设置语音通话质量，范围从1至3。全部参数请参照官方文档：Command Line Options</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>Steam</tag>
      
      <tag>Steam阿根廷区</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：安装使用caddy</title>
    <link href="/posts/16707.html"/>
    <url>/posts/16707.html</url>
    
    <content type="html"><![CDATA[<p>其实这篇文章是紧接着流量监控那一篇</p><span id="more"></span><p>发现使用自动脚本部署流量监控的网页的时候，caddy总是无法启动，所以干脆自己部署网站。要注意的是网站路径是<code>/usr/local/ServerStatus/web</code><br><img src="/posts/16707/status.png"></p><h3 id="安装caddy"><a href="#安装caddy" class="headerlink" title="安装caddy"></a>安装caddy</h3><blockquote><p><a href="https://caddyserver.com/docs/install" target="_blank" rel="noopener external nofollow noreferrer">caddy官方安装教程</a><br>对于debian系统</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https<br>curl -1sLf <span class="hljs-string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#x27;</span> | sudo apt-key add -<br>curl -1sLf <span class="hljs-string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#x27;</span> | sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/caddy-stable.list<br>sudo apt update<br>sudo apt install caddy<br></code></pre></td></tr></table></figure><p>如果在root下运行，删除sudo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install -y debian-keyring debian-archive-keyring apt-transport-https<br>curl -1sLf <span class="hljs-string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#x27;</span> | apt-key add -<br>curl -1sLf <span class="hljs-string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#x27;</span> | <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/caddy-stable.list<br>apt update<br>apt install caddy<br></code></pre></td></tr></table></figure><p>使用<code>caddy version</code>来查看是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@debian:~<span class="hljs-comment"># caddy version</span><br>v2.4.3 h1:Y1FaV2N4WO3rBqxSYA8UZsZTQdN+PwcoOcAiZTM8C0I=<br></code></pre></td></tr></table></figure><h3 id="配置caddy"><a href="#配置caddy" class="headerlink" title="配置caddy"></a>配置caddy</h3><p>安装好caddy后，在路径<code>/etc/caddy</code>下会自动生成配置文件<code>Caddyfile</code>，我们可以进入该目录然后对文件进行编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/caddy<br>vim Caddyfile<br></code></pre></td></tr></table></figure><p>也可以新建文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> caddy<br><span class="hljs-built_in">cd</span> caddy<br>vim Caddyfile<br></code></pre></td></tr></table></figure><p>修改配置文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">:8888 &#123;<br><span class="hljs-comment"># Set this path to your site&#x27;s directory.</span><br>root * /usr/local/ServerStatus/web<br><br><span class="hljs-comment"># Enable the static file server.</span><br>file_server<br><br><span class="hljs-comment"># Another common task is to set up a reverse proxy:</span><br><span class="hljs-comment"># reverse_proxy localhost:8080</span><br><br><span class="hljs-comment"># Or serve a PHP site through php-fpm:</span><br><span class="hljs-comment"># php_fastcgi localhost:900</span><br>encode gzip<br>&#125;<br></code></pre></td></tr></table></figure><p>之后在Caddyfile同文件夹目录下运行<code>caddy start</code></p><p>其他命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">caddy <span class="hljs-built_in">help</span><br>caddy reload <span class="hljs-comment">#更新Caddyfile之后重新加载配置文件</span><br>caddy stop   <span class="hljs-comment">#停止运行caddy</span><br>caddy run    <span class="hljs-comment">#在前台运行caddy</span><br>caddy start  <span class="hljs-comment">#在后台运行caddy</span><br></code></pre></td></tr></table></figure><blockquote><p>官方文档：<a href="https://caddyserver.com/docs/command-line" target="_blank" rel="noopener external nofollow noreferrer">https://caddyserver.com/docs/command-line</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：流量监控</title>
    <link href="/posts/16203.html"/>
    <url>/posts/16203.html</url>
    
    <content type="html"><![CDATA[<p>由于大部分VPS服务器都会限制流量，所以流量监控就非常重要了</p><span id="more"></span><h2 id="ServerStatus网页监控流量"><a href="#ServerStatus网页监控流量" class="headerlink" title="ServerStatus网页监控流量"></a>ServerStatus网页监控流量</h2><p>ServerStatus是一款适合监控多台服务器的探针程序，自带web前端界面；本篇教程采用的是 ServerStatus 的修改美化版，基于逗比大佬的一键脚本安装，可以让我们很方便上手，对于手上有很多台VPS服务器的MJJ们来说是个不错的监控工具。</p><h4 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h4><p>脚本分服务端和客户端，即一个主要提供web前段界面的VPS服务端，其它均为客户端，通过SSH工具连接上服务器，运行下列命令下载脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate https://raw.githubusercontent.com/CokeMine/ServerStatus-Hotaru/master/status.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x status.sh<br></code></pre></td></tr></table></figure><p>下载后根据自己的实际情况分别输入下列命令进行安装服务端和客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 客户端管理菜单</span><br>bash status.sh c<br> <br><span class="hljs-comment"># 服务端管理菜单</span><br>bash status.sh s <br></code></pre></td></tr></table></figure><h4 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h4><p>所谓服务端就是用来挂载网页的服务器，运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 服务端管理菜单</span><br>bash status.sh s <br></code></pre></td></tr></table></figure><p>首先我们这里示例安装服务端，输入数字1开始安装<br>！<a href="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-8.webp" target="_blank" rel="noopener external nofollow noreferrer"></a><br>然后输入服务端的监听端口，这个端口设置建议10000-60000之间即可，后面客户端连接需要用到，然后回车，安装过程中会提示是否配置HTTP服务，输入Y回车即可<br><img src="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-9.webp"><br>安装后进入服务端管理菜单选择7设置服务器配置，然后选择1添加节点，每次增加客户端都需要在这里添加一条节点<br><img src="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-10.webp"><br>接着输入节点的信息，也就是要监控的服务器名称等，后面客户端连接需要用到<br><img src="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-11.webp">  </p><p>如果caddy自动安装配置有问题，这里我们推荐自行配置网页。具体可参见后文<a href="https://docwho22.github.io/DocWho22/2021/06/21/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8caddy/" target="_blank" rel="noopener external nofollow noreferrer">VPS指南：安装使用caddy</a></p><p><img src="/posts/16203/status.png"></p><h4 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h4><p>在需要监控的服务器上安装上面的脚本，然后输入命令进入客户端管理界面，选择安装，接着配置下服务端的IP&#x2F;域名以及前面设置的监听端口，节点信息等等，如下图：<br><img src="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-12.webp"> </p><p>值得一提的是，该脚本已经集合了vnstat的流量统计功能，可以自动进行安装</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">对于流量计算是否使用Vnstat每月自动清零？ [y/<span class="hljs-built_in">N</span>]<br>(默认<span class="hljs-symbol">:</span> <span class="hljs-built_in">N</span>)<span class="hljs-symbol">:y</span><br></code></pre></td></tr></table></figure><p>其它说明：</p><blockquote><p>安装目录：&#x2F;usr&#x2F;local&#x2F;ServerStatus<br>网页文件：&#x2F;usr&#x2F;local&#x2F;ServerStatus&#x2F;web<br>配置文件：&#x2F;usr&#x2F;local&#x2F;ServerStatus&#x2F;server&#x2F;config.json<br>增加多个服务器节点，先在服务端添加节点，然后再到其它服务器上面部署连接客户端<br>修改网页标题或者网页顶部公告内容，打开服务端&#x2F;usr&#x2F;local&#x2F;ServerStatus&#x2F;web&#x2F;index.html文件修改即可</p></blockquote><h2 id="使用vnStat详细流量监控"><a href="#使用vnStat详细流量监控" class="headerlink" title="使用vnStat详细流量监控"></a>使用vnStat详细流量监控</h2><p>（如果已经安装了ServerStatus客户端，就不要用这个办法安装vnstat了，会导致冲突）<br>vnStat是一款非常好的Linux系统服务器下面的流量监控开源工具，可以很直观的统计监控每小时、每天、每月的流量详细使用情况；由于大部分VPS服务器都会限制流量，而服务商又没有提供一个详细的流量表，所以对于我们个人来说vnStat这款工具非常实用，这里给大家介绍下它的安装使用教程。</p><blockquote><p>vnStat项目github地址：<a href="https://github.com/vergoh/vnstat" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/vergoh/vnstat</a></p></blockquote><h4 id="首先连接上服务器后，需要进行安装vnStat，执行下列命令"><a href="#首先连接上服务器后，需要进行安装vnStat，执行下列命令" class="headerlink" title="首先连接上服务器后，需要进行安装vnStat，执行下列命令"></a>首先连接上服务器后，需要进行安装vnStat，执行下列命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##centos系统要先安装 epel 源后才能用yum安装</span><br>yum install epel-release -y &amp;&amp; yum install -y vnstat<br> <br><span class="hljs-comment">##ubuntu/debian系统直接apt-get命令安装即可</span><br>apt-get install vnstat<br></code></pre></td></tr></table></figure><h4 id="安装后我们可以使用ifconfig命令查看下网卡名称，如果系统提示无此命令，则需要安装，执行下列命令："><a href="#安装后我们可以使用ifconfig命令查看下网卡名称，如果系统提示无此命令，则需要安装，执行下列命令：" class="headerlink" title="安装后我们可以使用ifconfig命令查看下网卡名称，如果系统提示无此命令，则需要安装，执行下列命令："></a>安装后我们可以使用ifconfig命令查看下网卡名称，如果系统提示无此命令，则需要安装，执行下列命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 安装net工具箱，包含ifconfig等网络命令</span><br>yum install net-tools <span class="hljs-comment"># CentOS</span><br>apt-get install net-tools <span class="hljs-comment"># Debian or ubuntu</span><br><br><span class="hljs-comment">## 查看网卡信息</span><br>ifconfig<br></code></pre></td></tr></table></figure><h4 id="获得网卡名称后，创建监控数据库，eth0为需要监控的网卡名称"><a href="#获得网卡名称后，创建监控数据库，eth0为需要监控的网卡名称" class="headerlink" title="获得网卡名称后，创建监控数据库，eth0为需要监控的网卡名称"></a>获得网卡名称后，创建监控数据库，eth0为需要监控的网卡名称</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vnstat -u -i eth0<br></code></pre></td></tr></table></figure><h4 id="最后启动服务并且设置为开机启动"><a href="#最后启动服务并且设置为开机启动" class="headerlink" title="最后启动服务并且设置为开机启动"></a>最后启动服务并且设置为开机启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#启动服务</span><br>service vnstat start<br></code></pre></td></tr></table></figure><p>CentOS系统采用下列命令开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chkconfig vnstat on<br></code></pre></td></tr></table></figure><p>debian或ubuntu则用这个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> vnstat<br></code></pre></td></tr></table></figure><h4 id="上述操作完成后不要着急，等个十几分钟直接输入vnstat命令或下列命令查看流量统计情况"><a href="#上述操作完成后不要着急，等个十几分钟直接输入vnstat命令或下列命令查看流量统计情况" class="headerlink" title="上述操作完成后不要着急，等个十几分钟直接输入vnstat命令或下列命令查看流量统计情况"></a>上述操作完成后不要着急，等个十几分钟直接输入vnstat命令或下列命令查看流量统计情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">vnstat -l  <span class="hljs-comment"># 或者 `--live` 实时流量</span><br>vnstat -h  <span class="hljs-comment"># 显示小时流量</span><br>vnstat -d  <span class="hljs-comment"># 显示日流量信息</span><br>vnstat -w  <span class="hljs-comment"># 显示周流量信息</span><br>vnstat -m  <span class="hljs-comment"># 显示月流量信息</span><br>vnstat -t  <span class="hljs-comment"># 显示流量最高top10天</span><br>/etc/vnstat.conf <span class="hljs-comment"># 配置文件</span><br></code></pre></td></tr></table></figure><h3 id="如果出错"><a href="#如果出错" class="headerlink" title="如果出错"></a>如果出错</h3><p>但我测试发现它会一直使用默认网卡名，也就是eth0<br>所以如果发现后面用不了的话，使用vim修改<code>/etc/vnstat.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/vnstat.conf<br></code></pre></td></tr></table></figure><p>修改<code># default interface</code>下面的<code>Interface</code>后面的字符串为你自己的网卡<br>我的是ens5</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">head</span> /etc/vnstat.conf <br><span class="hljs-comment"># vnStat 1.13 config file</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-comment"># default interface</span><br>Interface <span class="hljs-string">&quot;eth0&quot;</span><br><br><span class="hljs-comment"># location of the database directory</span><br>DatabaseDir <span class="hljs-string">&quot;/var/lib/vnstat&quot;</span><br><br><span class="hljs-comment"># locale (LC_ALL) (&quot;-&quot; = use system locale)</span><br></code></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://askubuntu.com/questions/1031052/error-unable-to-read-database-var-lib-vnstat-eth0-no-such-file-or-directory" target="_blank" rel="noopener external nofollow noreferrer">https://askubuntu.com/questions/1031052/error-unable-to-read-database-var-lib-vnstat-eth0-no-such-file-or-directory</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：【旧版】解锁网易云灰色歌曲之服务器端搭建</title>
    <link href="/posts/55183.html"/>
    <url>/posts/55183.html</url>
    
    <content type="html"><![CDATA[<p>UnblockNeteaseMusic是一款可以让网易云曲库里的灰色歌曲能够正常播放的神器。</p><span id="more"></span><p>项目地址：<a href="https://github.com/nondanee/UnblockNeteaseMusic" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/nondanee/UnblockNeteaseMusic</a></p><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>其中16为版本。可以替换成12 14 16.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Using Ubuntu</span><br>curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -<br>sudo apt-get install -y nodejs<br><br><span class="hljs-comment"># Using Debian, as root</span><br>curl -fsSL https://deb.nodesource.com/setup_16.x | bash -<br>apt-get install -y nodejs<br></code></pre></td></tr></table></figure><p>使用<code>node -v</code>命令查看是否安装成功。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@debian</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># node -v</span><br>v16.<span class="hljs-number">3.0</span><br></code></pre></td></tr></table></figure><h2 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h2><p>使用 Git 克隆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/nondanee/UnblockNeteaseMusic.git <span class="hljs-comment">#克隆项目仓库</span><br><span class="hljs-built_in">cd</span> UnblockNeteaseMusic <span class="hljs-comment">#进入项目根目录</span><br></code></pre></td></tr></table></figure><p>没有安装git的，使用下面命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># CentoS</span><br>yum install git<br><br><span class="hljs-comment"># debian or ubuntu</span><br>apt-get install git<br></code></pre></td></tr></table></figure><h2 id="【可选】使用node启动"><a href="#【可选】使用node启动" class="headerlink" title="【可选】使用node启动"></a>【可选】使用node启动</h2><p>使用nodejs就可以启动项目，nodejs但退出窗口就会停止。</p><h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><p>直接启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> UnblockNeteaseMusic <span class="hljs-comment">#进入项目根目录</span><br>node app.js<br></code></pre></td></tr></table></figure><p>我使用的启动命令如下，其中-e是iOS端网易云升级后听灰色歌曲所必须的,且必须要https而不是http</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -s -e https://music.163.com<br></code></pre></td></tr></table></figure><h3 id="【可选】其他配置"><a href="#【可选】其他配置" class="headerlink" title="【可选】其他配置"></a>【可选】其他配置</h3><h4 id="开启严格模式"><a href="#开启严格模式" class="headerlink" title="开启严格模式"></a>开启严格模式</h4><blockquote><p>仅接受网易云音乐的流量，不接受其他的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -s<br></code></pre></td></tr></table></figure><h4 id="设置搜索的音源-有序"><a href="#设置搜索的音源-有序" class="headerlink" title="设置搜索的音源 (有序)"></a>设置搜索的音源 (有序)</h4><blockquote><p>默认为 qq kuwo migu，排在越前优先级越高，启用越多网络开销越大</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -o joox qq<br></code></pre></td></tr></table></figure><h4 id="使用自定义端口"><a href="#使用自定义端口" class="headerlink" title="使用自定义端口"></a>使用自定义端口</h4><p>默认为8080</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -p 5000<br></code></pre></td></tr></table></figure><h4 id="我也不太懂的一些"><a href="#我也不太懂的一些" class="headerlink" title="我也不太懂的一些"></a>我也不太懂的一些</h4><p>使用 jixun 的反代服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -f 79.137.38.20<br></code></pre></td></tr></table></figure><p>使用上游 http &#x2F; https 代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -u http://127.0.0.1:1080<br></code></pre></td></tr></table></figure><h2 id="【推荐】使用pm2启动项目"><a href="#【推荐】使用pm2启动项目" class="headerlink" title="【推荐】使用pm2启动项目"></a>【推荐】使用pm2启动项目</h2><p>用nodejs不能一直在后台运行，关闭窗口就会中断进程。所以我喜欢用pm2来挂着运行。也可以使用supervisor和docker，但我尝试了，这样部署以后都不能在iOS端运行，暂时不明白为什么。</p><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题.由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入 “npm -v” 来测试是否成功安装。命令如下，出现版本提示表示安装成功.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 全局安装pm2</span><br>npm install -g pm2<br><span class="hljs-comment"># 启动项目</span><br>pm2 start node -- app.js -e https://music.163.com -s<br><span class="hljs-comment"># 保存当前列表</span><br>pm2 save<br><span class="hljs-comment"># 开机启动</span><br>pm2 startup<br></code></pre></td></tr></table></figure><p>之后的一些命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 list                <span class="hljs-comment"># 列出当前应用</span><br>pm2 stop app.js         <span class="hljs-comment"># 停止 可以先通过pm2 list获取应用的名字（--name指定的）或者进程id</span><br>pm2 stop all            <span class="hljs-comment"># 停止所有</span><br>pm2 restart app.js      <span class="hljs-comment"># 重启</span><br>pm2 restart all         <span class="hljs-comment"># 重启所有</span><br>pm2 delete  app.js      <span class="hljs-comment"># 关闭</span><br></code></pre></td></tr></table></figure><h2 id="【另一方法】使用docker启动项目"><a href="#【另一方法】使用docker启动项目" class="headerlink" title="【另一方法】使用docker启动项目"></a>【另一方法】使用docker启动项目</h2><p>尝试了此方法，但无法在iOS使用，不明白为什么<br>直接使用此命令，省掉了git那一步下载：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">docker run -d -p <span class="hljs-number">8080</span>:<span class="hljs-number">8080</span> nondanee/unblockneteasemusic -s -e https://music<span class="hljs-number">.163</span>.com<br></code></pre></td></tr></table></figure><p>之后使用<code>docker ps</code>查看进程，使用<code>docker kill 进程数</code>来杀死进程。<br>没有安装docker的，用下面命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 官方脚本</span><br>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun<br><br><span class="hljs-comment"># 也可以使用国内 daocloud 一键安装命令：</span><br>curl -sSL https://get.daocloud.io/docker | sh<br></code></pre></td></tr></table></figure><p>测试 Docker 是否安装成功，输入以下指令，打印出以下信息则安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run hello-world<br></code></pre></td></tr></table></figure><p>打印信息：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Unable <span class="hljs-built_in">to</span> find image <span class="hljs-string">&#x27;hello-world:latest&#x27;</span> locally<br>latest: Pulling <span class="hljs-built_in">from</span> library/hello-world<br><span class="hljs-number">1</span>b930d010525: Pull complete                                                                                                                                  Digest: sha256:c3b4ada4687bbaa170745b3e4dd8ac3f194ca95b2d0518b417fb47e5879d9b5f<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hello-world:latest<br><br><br>Hello <span class="hljs-built_in">from</span> Docker!<br>This message shows that your installation appears <span class="hljs-built_in">to</span> be working correctly.<br><br><br>To generate this message, Docker took <span class="hljs-keyword">the</span> following steps:<br> <span class="hljs-number">1.</span> The Docker client contacted <span class="hljs-keyword">the</span> Docker daemon.<br> <span class="hljs-number">2.</span> The Docker daemon pulled <span class="hljs-keyword">the</span> <span class="hljs-string">&quot;hello-world&quot;</span> image <span class="hljs-built_in">from</span> <span class="hljs-keyword">the</span> Docker Hub.<br>    (amd64)<br> <span class="hljs-number">3.</span> The Docker daemon created <span class="hljs-keyword">a</span> <span class="hljs-built_in">new</span> container <span class="hljs-built_in">from</span> that image which runs <span class="hljs-keyword">the</span><br>    executable that produces <span class="hljs-keyword">the</span> output you are currently reading.<br> <span class="hljs-number">4.</span> The Docker daemon streamed that output <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> Docker client, which sent <span class="hljs-keyword">it</span><br>    <span class="hljs-built_in">to</span> your terminal.<br><br><br>To <span class="hljs-keyword">try</span> something more ambitious, you can run <span class="hljs-keyword">an</span> Ubuntu container <span class="hljs-keyword">with</span>:<br> $ docker run -<span class="hljs-keyword">it</span> ubuntu bash<br><br><br>Share images, automate workflows, <span class="hljs-keyword">and</span> more <span class="hljs-keyword">with</span> <span class="hljs-keyword">a</span> free Docker ID:<br> <span class="hljs-keyword">https</span>://hub.docker.com/<br><br><br>For more examples <span class="hljs-keyword">and</span> ideas, visit:<br> <span class="hljs-keyword">https</span>://docs.docker.com/<span class="hljs-built_in">get</span>-started/<br></code></pre></td></tr></table></figure><h2 id="iOS端配置"><a href="#iOS端配置" class="headerlink" title="iOS端配置"></a>iOS端配置</h2><p>QuantumultX配置，本地节点[server_local]下面加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Javascript"># ip和端口改成你自己的，格式<span class="hljs-attr">ip</span>:port<br>http=你的<span class="hljs-attr">ip</span>:你的端口, fast-open=<span class="hljs-literal">false</span>, udp-relay=<span class="hljs-literal">false</span>, tag=解锁网易云音乐<br></code></pre></td></tr></table></figure><blockquote><p>其他客户端写法可参考：<a href="https://merlinblog.xyz/wiki/neteasemusic.html" target="_blank" rel="noopener external nofollow noreferrer">https://merlinblog.xyz/wiki/neteasemusic.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>解锁网易云音乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：国内VPS修改hosts解决github被DNS污染问题</title>
    <link href="/posts/46536.html"/>
    <url>/posts/46536.html</url>
    
    <content type="html"><![CDATA[<p>国内服务器连github常常缓慢，甚至连不上。这个问题可以通过修改hosts来解决</p><span id="more"></span><p>安装vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># debian或者ubuntu</span><br>apt-get install vim<br><br><span class="hljs-comment"># CentOS</span><br>yum install vim<br></code></pre></td></tr></table></figure><p>修改hosts文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/hosts<br></code></pre></td></tr></table></figure><p>按i切换到输入模式，在文件末尾加入三条记录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#github</span><br>140.82.112.3 github.com<br>185.199.110.153 assets-cdn.github.com<br>151.101.1.194 github.global.ssl.fastly.net<br></code></pre></td></tr></table></figure><p>ip地址可以根据你自己VPS响应速度来定。<br>在 <a href="http://ping.chinaz.com/github.com" target="_blank" rel="noopener external nofollow noreferrer">http://ping.chinaz.com/github.com</a> ，查找以下域名的ip，挑选响应时间短的ip地址。</p><p>github.com</p><p>assets-cdn.github.com</p><p>github.global.ssl.fastly.net </p><p>raw.githubusercontent.com(这个域名我测试了下，腾讯云华为云都没有被DNS污染，很正常，选用)</p><p>备用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">13.250.177.223 github.com<br>185.199.109.133 raw.githubusercontent.com<br>185.199.110.133 raw.githubusercontent.com<br>185.199.111.133 raw.githubusercontent.com<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：bbr加速</title>
    <link href="/posts/63153.html"/>
    <url>/posts/63153.html</url>
    
    <content type="html"><![CDATA[<p>Google 开源了其 TCP BBR 拥塞控制算法，并提交到了 Linux 内核，从 4.9 开始，Linux 内核已经用上了该算法。部署最新版内核，开启TCP BBR 加速的 VPS，网速可以提升几个数量级。OpenVZ虚拟化的话，就不能弄bbr了。</p><span id="more"></span><p>VPS加速是每一个玩VPS服务器的朋友都要涉及的话题，毕竟速度快是每个人都喜欢的一个现象，常用的加速策略包括Google BBR TCP加速，以及在其基础上发展而来的BBR魔改版、暴力BBR、BBRplus，以及锐速加速等。本文就给大家分享一个VPS加速脚本，可以一键安装并开启这些加速策略。</p><h1 id="简单版VPS加速脚本下载与使用"><a href="#简单版VPS加速脚本下载与使用" class="headerlink" title="简单版VPS加速脚本下载与使用"></a>简单版VPS加速脚本下载与使用</h1><p>连上VPS云服务器后直接复制下面的命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N --no-check-certificate <span class="hljs-string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span><br><span class="hljs-built_in">chmod</span> +x tcp.sh<br>./tcp.sh<br></code></pre></td></tr></table></figure><p>这是脚本的面板，最下面一行是VPS当前的加速内核和加速策略，所以如果我们需要开启某种加速，需要先安装对应的内核，再开启对应的管理，最后看看加速是否开启成功。这类以BBR加速为例，先输入1安装BBR&#x2F;BBR魔改版内核，之后再次使用脚本输入4即可开启BBR加速：<br><img src="/posts/63153/bbr.jpg"><br>如果会出现这个界面，选择yes，应该是卸载内核的时候出现了问题，要重新运行脚本<br><img src="/posts/63153/bbr1.png"><br>最后需要重启才能开启加速。一般两分钟就好了<br><img src="/posts/63153/bbr2.png"></p><p>重新连接服务器，验证是否成功安装最新内核并开启 BBR 加速，执行命令<code>uname -r</code>，内核版本显示为最新版就表示 BBR 内核安装完成了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@debian:~<span class="hljs-comment"># uname -r</span><br>4.11.8-041108-generic<br></code></pre></td></tr></table></figure><p>可以运行<code>./tcp.sh</code>来看是否安装启动成功<br><img src="/posts/63153/bbr3.png"></p><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsmod | grep bbr<br></code></pre></td></tr></table></figure><p>如果有返回就是成功了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@debian:~# lsmod | grep bbr<br>tcp_bbr                20480  86<br></code></pre></td></tr></table></figure><h1 id="全面版VPS加速脚本下载与使用"><a href="#全面版VPS加速脚本下载与使用" class="headerlink" title="全面版VPS加速脚本下载与使用"></a>全面版VPS加速脚本下载与使用</h1><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget uone.one/tcpx.sh &amp;&amp; bash tcpx.sh<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>自建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：dd系统</title>
    <link href="/posts/4775.html"/>
    <url>/posts/4775.html</url>
    
    <content type="html"><![CDATA[<p>使用服务器前常常需要安装纯净系统。尤其是国内腾讯云、阿里云等。但注意一下OpenVZ是没法dd的，会出现grub not found</p><span id="more"></span><h1 id="ruvds亲测可用"><a href="#ruvds亲测可用" class="headerlink" title="ruvds亲测可用"></a>ruvds亲测可用</h1><p>ruvds不能直接傻瓜式使用萌咖大佬的脚本<br><img src="https://i.niupic.com/images/2019/10/10/_196.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install net-tools  <br>（安装网络工具包）<br><br>ifconfig -a<br>(查看本机公网IP地址)<br><br>route -n<br>(查看网关地址)<br></code></pre></td></tr></table></figure><p>4:用萌新的DD包和脚本，举例的是Debian9:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(wget --no-check-certificate -qO- <span class="hljs-string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span>) -d 9 -v 64 -a --ip-addr 194.87.xxx.xxx(改成ifconfig获取到的) --ip-gate 194.87.xxx.xxx(改成route获取到的) --ip-mask 255.255.xxx.xxx(改成你获取到的)<br></code></pre></td></tr></table></figure><p>5:等20分钟左右，root用户登入，密码<code>MoeClub.org</code>，搞定</p><h1 id="推荐-腾讯云亲测可用"><a href="#推荐-腾讯云亲测可用" class="headerlink" title="[推荐]腾讯云亲测可用"></a>[推荐]腾讯云亲测可用</h1><p>运行下面的脚本，需要记住密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 国内服务器可以用这个</span><br>bash &lt;(wget --no-check-certificate -qO- https://cdn.jsdelivr.net/gh/hiCasper/Shell@master/AutoReinstall.sh)<br><br><span class="hljs-comment"># 国外服务器github较快，可用这个</span><br>wget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh<br></code></pre></td></tr></table></figure><blockquote><p>参考链接：<a href="https://github.com/hiCasper/Shell/issues" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/hiCasper/Shell/issues</a></p></blockquote><h1 id="萌咖大佬的一键DD脚本"><a href="#萌咖大佬的一键DD脚本" class="headerlink" title="萌咖大佬的一键DD脚本"></a>萌咖大佬的一键DD脚本</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h2><p>全自动安装默认root密码:<code>MoeClub.org</code>,安装完成后请立即更改密码.</p><p>能够全自动重装Debian&#x2F;Ubuntu&#x2F;CentOS等系统.</p><p>同时提供dd安装镜像功能,例如: 全自动无救援dd安装windows系统</p><p>全自动安装CentOS时默认提供VNC功能,可使用VNC Viewer查看进度,</p><p>VNC端口为<code> 1</code> 或者<code> 5901</code> ,可自行尝试连接.(成功后VNC功能会消失.)</p><p>目前CentOS系统只支持任意版本重装为 CentOS 6.x 及以下版本.</p><p>特别注意:OpenVZ构架不适用.</p><h2 id="傻瓜式一键脚本"><a href="#傻瓜式一键脚本" class="headerlink" title="傻瓜式一键脚本"></a>傻瓜式一键脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##镜像文件在OneDrive</span><br>wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/dd/master/dd-od.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x dd-od.sh &amp;&amp; ./dd-od.sh<br><br><span class="hljs-comment">##镜像文件在GoogleDrive</span><br>wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/dd/master/dd-gd.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x dd-gd.sh &amp;&amp; ./dd-gd.sh<br><br></code></pre></td></tr></table></figure><h2 id="关于debian8源报错"><a href="#关于debian8源报错" class="headerlink" title="关于debian8源报错"></a>关于debian8源报错</h2><p>在脚本中可以添加 –mirror 参数切换源。<br>目前可用的源:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">--mirror <span class="hljs-string">&#x27;http://cpgs.fdcservers.net/debian/&#x27;</span><br>--mirror <span class="hljs-string">&#x27;http://proyectos.uls.edu.sv/debian/&#x27;</span><br>--mirror <span class="hljs-string">&#x27;http://debian.cabletel.com.mk/debian/&#x27;</span><br>--mirror <span class="hljs-string">&#x27;http://komo.padinet.com/debian/&#x27;</span><br>--mirror <span class="hljs-string">&#x27;http://www.debian.uz/debian/&#x27;</span><br></code></pre></td></tr></table></figure><p>安装debian8 示例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash InstallNET.sh -d 8 -v 64 -a --mirror <span class="hljs-string">&#x27;http://komo.padinet.com/debian/&#x27;</span><br></code></pre></td></tr></table></figure><p>安装dd镜像 示例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash InstallNET.sh -<span class="hljs-built_in">dd</span> <span class="hljs-string">&quot;[URL]&quot;</span> --mirror <span class="hljs-string">&#x27;http://komo.padinet.com/debian/&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="确保安装了所需软件"><a href="#确保安装了所需软件" class="headerlink" title="确保安装了所需软件:"></a>确保安装了所需软件:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Debian/Ubuntu:</span><br>apt-get install -y xz-utils openssl gawk file<br> <br><span class="hljs-comment">#RedHat/CentOS:</span><br>yum install -y xz openssl gawk file<br></code></pre></td></tr></table></figure><h2 id="如果出现了错误-请运行"><a href="#如果出现了错误-请运行" class="headerlink" title="如果出现了错误,请运行:"></a>如果出现了错误,请运行:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Debian/Ubuntu:</span><br>apt-get update<br> <br><span class="hljs-comment">#RedHat/CentOS:</span><br>yum update<br></code></pre></td></tr></table></figure><h2 id="快速使用示例"><a href="#快速使用示例" class="headerlink" title="快速使用示例:"></a>快速使用示例:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(wget --no-check-certificate -qO- <span class="hljs-string">&#x27;https://raw.githubusercontent.com/veip007/dd/master/InstallNET.sh&#x27;</span>) -d 8 -v 64 -a<br></code></pre></td></tr></table></figure><h2 id="下载及说明"><a href="#下载及说明" class="headerlink" title="下载及说明:"></a>下载及说明:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate -qO InstallNET.sh <span class="hljs-string">&#x27;https://raw.githubusercontent.com/veip007/dd/master/InstallNET.sh&#x27;</span> &amp;&amp; <span class="hljs-built_in">chmod</span> +x InstallNET.sh<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">Usage:<br>        bash InstallNET.sh      -d/--debian [dist-name]<br>                                -u/--ubuntu [dist-name]<br>                                -c/--centos [dist-version]<br>                                -v/--ver [32/i386|64/amd64]<br>                                --ip-addr/--ip-gate/--ip-mask<br>                                -apt/-yum/--mirror<br>                                -<span class="hljs-built_in">dd</span>/--image<br>                                -a/-m<br> <br><span class="hljs-comment"># dist-name: 发行版本代号</span><br><span class="hljs-comment"># dist-version: 发行版本号</span><br><span class="hljs-comment"># -apt/-yum/--mirror : 使用定义镜像</span><br><span class="hljs-comment"># -a/-m : 询问是否能进入VNC自行操作. -a 为不提示(一般用于全自动安装), -m 为提示.</span><br></code></pre></td></tr></table></figure><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例:"></a>使用示例:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用默认镜像全自动安装</span><br>bash InstallNET.sh -d 8 -v 64 -a<br>bash InstallNET.sh -d 9 -v 64 -a<br>bash InstallNET.sh -d 10 -v 64 -a<br>分别表示自动安装Debian 8x64  9x64 10x64<br> <br><span class="hljs-comment">#使用自定义镜像全自动安装</span><br>bash InstallNET.sh -c 6.9 -v 64 -a --mirror <span class="hljs-string">&#x27;http://mirror.centos.org/centos&#x27;</span><br> <br> <br><span class="hljs-comment"># 以下示例中,将X.X.X.X替换为自己的网络参数.</span><br><span class="hljs-comment"># --ip-addr :IP Address/IP地址</span><br><span class="hljs-comment"># --ip-gate :Gateway   /网关</span><br><span class="hljs-comment"># --ip-mask :Netmask   /子网掩码</span><br> <br><span class="hljs-comment">#使用自定义镜像自定义网络参数全自动安装</span><br><span class="hljs-comment">#bash InstallNET.sh -u 16.04 -v 64 -a --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x --mirror &#x27;http://archive.ubuntu.com/ubuntu&#x27;</span><br> <br><span class="hljs-comment">#使用自定义网络参数全自动dd方式安装</span><br><span class="hljs-comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &#x27;https://moeclub.org/get-win7embx86-auto&#x27;</span><br> <br><span class="hljs-comment">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像(调用文件ID的方式)</span><br><span class="hljs-comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &#x27;https://moeclub.org/get-gdlink&#x27;))&quot;</span><br> <br><span class="hljs-comment">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像</span><br><span class="hljs-comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;https://drive.google.com/open?id=1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &#x27;https://moeclub.org/get-gdlink&#x27;))&quot;</span><br></code></pre></td></tr></table></figure><h2 id="一些可用镜像地址"><a href="#一些可用镜像地址" class="headerlink" title="一些可用镜像地址:"></a>一些可用镜像地址:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 推荐使用带有 /GoogleDrive/&lt;File_ID&gt; 链接, 速度更快.</span><br><span class="hljs-comment"># 当然也可以使用自己GoogleDrive中储存的镜像,使用方式:</span><br>  https://image.moeclub.org/GoogleDrive/&lt;File_ID&gt;<br> <br><span class="hljs-comment"># win7emb_x86.tar.gz:</span><br>  https://image.moeclub.org/GoogleDrive/1srhylymTjYS-Ky8uLw4R6LCWfAo1F3s7 <br>  https://image.moeclub.org/win7emb_x86.tar.gz<br> <br><span class="hljs-comment"># win8.1emb_x64.tar.gz:</span><br>  https://image.moeclub.org/GoogleDrive/1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J<br>  https://image.moeclub.org/win8.1emb_x64.tar.gz<br></code></pre></td></tr></table></figure><h2 id="一些提示"><a href="#一些提示" class="headerlink" title="一些提示:"></a>一些提示:</h2><p>特别注意:</p><p>萌咖提供的dd安装镜像</p><p>远程登陆账号为: <code>Administrator</code></p><p>远程登陆密码为: <code>Vicer</code></p><p>仅修改了主机名,可放心使用.(建议自己制作.)</p><p>在dd安装系统镜像时:</p><p>在你的机器上全新安装,如果你有VNC,可以看到全部过程.</p><p>在dd安装镜像的过程中,不会走进度条(进度条一直显示为0%).完成后将会自动重启.</p><p>分区界面标题一般显示为: “Starting up the partitioner“</p><p>使用谷歌网盘中储存的镜像: [无限制大小] 获取谷歌网盘文件临时直接下载链接</p><p>在全自动安装CentOS时:</p><p>如果看到 “Starting graphical installation” 或者类似表达,则表示正在安装.</p><p>正常情况下只需要耐心等待安装完成即可.</p><p>如果需要查看进度,使用VNC Viewer(或者其他VNC连接工具)</p><p>连接提示中的IP地址:端口进行连接.(端口一般为<code>1</code>或者<code>5901</code>)</p><h3 id="GD直连获取方法"><a href="#GD直连获取方法" class="headerlink" title="GD直连获取方法"></a>GD直连获取方法</h3><p>1.下载脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/DDWIN/master/gdlink.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x gdlink.sh &amp;&amp; ./gdlink.sh<br></code></pre></td></tr></table></figure><p>2.使用方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Work with share link/使用分享链接方式</span><br>gdlink <span class="hljs-string">&#x27;https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ&#x27;</span><br><br><span class="hljs-comment">#Work with file id/使用文件ID方式</span><br>gdlink <span class="hljs-string">&#x27;0B8SvBXZ3I5QMcUduTMJEanRkMzQ&#x27;</span><br> <br><span class="hljs-comment">#download with share link/使用分享链接方式直接使用wget下载链接</span><br><span class="hljs-comment">##可将其中./download改成自己需要的文件名或文件绝对路径</span><br>gdlink <span class="hljs-string">&#x27;https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ&#x27;</span> |xargs -n1 wget -c -O ./download<br></code></pre></td></tr></table></figure><blockquote><p>转载于萌咖<a href="https://moeclub.org/2018/04/03/603/" target="_blank" rel="noopener external nofollow noreferrer">https://moeclub.org/2018/04/03/603/</a></p></blockquote><h1 id="其他脚本："><a href="#其他脚本：" class="headerlink" title="其他脚本："></a>其他脚本：</h1><h2 id="源自于千影大佬的一键DD脚本"><a href="#源自于千影大佬的一键DD脚本" class="headerlink" title="源自于千影大佬的一键DD脚本"></a>源自于千影大佬的一键DD脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N --no-check-certificate <span class="hljs-string">&quot;https://raw.githubusercontent.com/chiakge/installNET/master/Install.sh&quot;</span> &amp;&amp; <span class="hljs-built_in">chmod</span> +x Install.sh &amp;&amp; ./Install.sh<br></code></pre></td></tr></table></figure><h2 id="cxthhhhh-魔改版-网络一键重装系统"><a href="#cxthhhhh-魔改版-网络一键重装系统" class="headerlink" title="cxthhhhh [魔改版]网络一键重装系统"></a>cxthhhhh [魔改版]网络一键重装系统</h2><p>注意：当前已安装任意由GRUB or GRUB2引导Linux系统(RedHat&#x2F;CentOS&#x2F;Debian&#x2F;Ubuntu&#x2F;Etc.) ，系统默认密码为：cxthhhhh.com<br>1、Linux安装重装系统的前提组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## RedHat/CentOS输入下方命令: </span><br>yum install -y xz openssl gawk file<br> <br><span class="hljs-comment">## Debian/Ubuntu输入下方命令: </span><br>apt-get install -y xz-utils openssl gawk file <br></code></pre></td></tr></table></figure><p>2、下载重装系统脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate https://shell.p1e.cn/reinstall/Network-Reinstall-System-Modify.sh &amp;&amp; <span class="hljs-built_in">chmod</span> a+x Network-Reinstall-System-Modify.sh<br></code></pre></td></tr></table></figure><p>3、安装Linux系统（任选其一）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 一键网络重装纯净CentOS 7（推荐）</span><br>bash Network-Reinstall-System-Modify.sh -CentOS_7<br> <br><span class="hljs-comment">## 一键网络重装纯净CentOS 6</span><br>bash Network-Reinstall-System-Modify.sh -CentOS_6<br> <br><span class="hljs-comment">## 一键网络重装纯净Debian 9（推荐）</span><br>bash Network-Reinstall-System-Modify.sh -Debian_9<br> <br><span class="hljs-comment">## 一键网络重装纯净Debian 8</span><br>bash Network-Reinstall-System-Modify.sh -Debian_8<br> <br><span class="hljs-comment">## 一键网络重装纯净Debian 7</span><br>bash Network-Reinstall-System-Modify.sh -Debian_7<br> <br><span class="hljs-comment">## 一键网络重装纯净Ubuntu 18.04（推荐）</span><br>bash Network-Reinstall-System-Modify.sh -Ubuntu_18.04<br> <br><span class="hljs-comment">## 一键网络重装纯净Ubuntu 16.04</span><br>bash Network-Reinstall-System-Modify.sh -Ubuntu_16.04<br> <br><span class="hljs-comment">## 一键网络重装纯净Ubuntu 14.04 </span><br>bash Network-Reinstall-System-Modify.sh -Ubuntu_14.04<br></code></pre></td></tr></table></figure><p>4、安装Windows系统（任选其一）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##注意：下方镜像为未授权Windows系统镜像，需购买授权或进入系统后破解</span><br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2019（推荐）</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2019<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2016</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2016<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2012 R2</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2012R2<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2008 R2</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2008R2<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows 7</span><br>bash Network-Reinstall-System-Modify.sh -Windows_7_Vienna<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2003</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2003<br></code></pre></td></tr></table></figure><p>5、自定义安装系统镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash Network-Reinstall-System-Modify.sh -DD <span class="hljs-string">&quot;你的系统镜像地址&quot;</span> <br></code></pre></td></tr></table></figure><h2 id="全自动DD脚本"><a href="#全自动DD脚本" class="headerlink" title="全自动DD脚本"></a>全自动DD脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate -qO AutoDD.sh <span class="hljs-string">&#x27;http://git.io/autodd.sh&#x27;</span> &amp;&amp; bash AutoDD.sh<br></code></pre></td></tr></table></figure><blockquote><p>来源：<a href="https://zhujiget.com/3358.html" target="_blank" rel="noopener external nofollow noreferrer">https://zhujiget.com/3358.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Steam阿根廷区低价好游戏不完全清单</title>
    <link href="/posts/38750.html"/>
    <url>/posts/38750.html</url>
    
    <content type="html"><![CDATA[<p>Steam阿根廷是著名低价区，此文介绍了部分低价好游戏。但部分游戏价格随着时间变化会有所改变。请注意甄别。</p><span id="more"></span><h2 id="2021年5月10日"><a href="#2021年5月10日" class="headerlink" title="2021年5月10日"></a>2021年5月10日</h2><p>生化危机8:村庄 171 （小黑盒和steamdb关于这个游戏本体阿根廷价格都有错误，实际上是ARS2499） 新出的知名恐怖游戏，没玩过。</p><p>双人成行 172 非常优秀的双人解谜动作游戏，比国区便宜十几块，操作难度低游戏性强。强烈推荐！！非常适合情侣\闺密。</p><p>迷走深空：碎舰师 48.1 废弃太空舱切割回收，画质非常好，不同舰船设计也不错，你需要把船体切割分类，又要小心造成大事故</p><p>生化奇兵合集 6.8  合集包含了1、2、3代的所有版本（1、2代还有重置版），叙事游戏的代表作，氛围略恐怖，1和2代重置版画质也不算好，虽说是叙事游戏，但射击玩法和魔法的融合玩法也还算有新意</p><p>carrion（红怪） 12  扮演一直逃出人类掌控的怪物，杀死遇到的人类，红怪后期整个造型真心cut</p><p>Getting over it with Bennett Foddy  3.6  和班尼特福迪一起攻克难关是前些年大火的独立游戏，极高的难度和蹩脚的操作让它成为节目效果极佳的游戏，你要是有一个好朋友，一定要拉她&#x2F;他来玩玩（笑）</p><p>挺进地牢 6.1 俯视角像素风肉鸽射击游戏，多角色，更多奇葩武器，更多弹幕，我是谁我在哪我怎么死了！？</p><p>漫漫长夜 7.5 画风偏卡通，但游戏环境却极其残酷的生存游戏，在极寒的加拿大与寒冷、饥饿和凶残的动物作斗争</p><h2 id="2021年4月19日"><a href="#2021年4月19日" class="headerlink" title="2021年4月19日"></a>2021年4月19日</h2><p>Sally face 2.8（2D恐怖游戏佳作）</p><p>王国：新大陆 2.5（像素风横版建造）</p><p>绣湖（eusty lake）、方块（cube）两个系列的每一款价格基本在1.8-5块之间，画风精致，叙事巧妙的解谜游戏，很有大卫林奇的风格</p><p>死神来了 2.6 （扮演死神收割凡人的生命，像素风）</p><p>洛克人11 21.2（横版闯关，经典）</p><p>孢子 15.8（从细胞进化成创世之神，孢子在游戏史上太独特了，没法归类，每个进化阶段都会有独特的玩法，例如小鱼吃大鱼、射击、rts等，大杂烩）</p><p>Spiritfarer 23.2（画风精致的横版建造游戏，剧情优秀，音乐治愈，有点肝，其实ns平台反而比这个价格更便宜）</p><p>英灵神殿 15.8 （从零开始的建造采集打怪，喜欢我的世界的话，那这款游戏说不定也会很喜欢，不过这游戏BOSS更为致命，画质不够看，内容足够丰富）</p><p>废品机械师 15.8（极度自由的建造游戏，可以通过各种部件和逻辑实现奇思妙想的车体或者飞行物，很有趣）</p><p>消逝的光芒 33（二代明后年才出，这一代也算是相当不错的，僵尸感染下的跑酷射击游戏，晕3D的话，先看看流程吧）</p><p>呼吸边缘 19.7（开头极其荒诞搞笑的太空生存游戏，不恐怖，剧情挺搞的）</p><p>war of rights  23.2（这游戏也算是与现在快节奏的射击游戏反其道而行之了，南北战争背景下的战术游戏，老旧火枪、排列对射，没有英雄主义，只能看有没有一个好指挥）</p><p>无名大鹅 15.8（恶人模拟器，笑死，扮演可爱的大鹅把坏事做尽吧，这游戏画风玩法都很上头）</p><p>kenshi 23.2（极度自由的末世生存游戏，背景独特，画风粗糙，你扮演的人物一开始在末日背景下是很脆弱的，但也不要担心，因为游戏本身的高自由度，可以让你的玩法极度多样，甚至于当囚犯都能练出一个盗圣来）</p><p>坎巴拉太空计划豪华版 58.8 （二代明年才有，这依然是最好的太空探索游戏，自己制作火箭探索太空，规划轨道，着陆、插旗、返回，还是比较硬核的，但有自动发射MOD，还算比较好上手）</p><p>逆转裁判123合集 42.5（非常不错的侦探加律师视觉小说类游戏，一代玩过，非常过瘾）</p><p>face rig 12.6（面部追踪软件，有多个自带形象可以使用）</p><p>firewatch  15.8（优秀的走路模拟器，其实是一款优秀的第一人称剧情游戏了，扮演看火员，用对讲机展开一段治愈的故事）</p><p>Teardown 15.8（看上去很像我的世界的像素风游戏，却可以支持光追和有着极其强大的物理破坏系统，物理系统强大到真的可以玩一年，主要玩法也是围绕这个物理系统的大盗模拟器）</p><h2 id="2021年4月17日"><a href="#2021年4月17日" class="headerlink" title="2021年4月17日"></a>2021年4月17日</h2><p>生化危机7  12.1</p><p>生化危机2重制版  23</p><p>生化危机3重制版 57.9（这个价格直接不考虑，流程太短）</p><p>鬼泣五  28.9</p><p>勿忘我 4.6（剧情虎头蛇尾，赛博朋克设定很棒）</p><p>龙之信条 6.95（打击感好，开放世界空旷，优缺点都明显的ARPG）</p><p>森林 6.3（合作生存或者是单人生存，有点小恐怖）</p><p>泰坦陨落2 24.5 （剧情强，设计棒，神作）</p><p>生化危机村庄和生化危机7合集包 245.9</p><p>往日不再 245.9</p><p>raft（木筏求生）15.8 （多人合作好玩，单人可能稍显无趣）</p><p>泰拉瑞亚 9.1</p><p>among us  4.77（太空狼人杀）</p><p>历历在目 9.1（一款非常新颖的独立游戏，需要用到摄像头，手机摄像头好像也可以，一定要试试）</p><p>极乐迪斯科 30.9 （这个价格买爆）</p><p>factorio（异星工厂）23.1（幸福工厂、戴森球计划的同类游戏，一玩几百小时的建造游戏）</p><p>大神hd 17.1（神作）</p><p>无间冥寺 56.2（哈迪斯同类型刷刷刷，质量很不错）</p><p>神界原罪2 34.4（这个也算神作）</p><p>环世界 27.4（模拟经营建造，相当好玩，这个价格也是可以买爆的）</p><p>辐射：新维加斯 22（神作，多线选择剧情多样，但画质太老，先观望）</p><p>空洞骑士 12.6（买爆！然后吃灰）</p><p>女神异闻录4g 73 （羊羊推荐过，日式rpg）</p><p>节奏医生 31 （致敬节奏天国的音游，这个音游不是考验反应力而是真正的乐理，所以好玩又有趣）</p><p>星际拓荒 19.6（神作，有深刻恐惧症的话还是算了，有些场景真心有点窒息感，比如进入黑洞）</p><p>尼尔机械纪元 45.6（神作，剧情强，音乐强，战斗手感也强）</p><p>赛博朋克酒保行动 8.4 （神作，主要就是调酒看剧情，赛博朋克背景下的人生百态）</p><p>幸福工厂 56.2（又是模拟建造自动化游戏，杀时间利器，画质好，有各种交通工具可以坐着玩）</p><p>红弦俱乐部 4.1</p><p>暴雨 28（底特律变人工作室的早起作品，剧情强，有点恐怖，依然是交互式电影游戏，画质比较老）</p><p>townscaper 4.98 （即时城镇建造，画风棒，玩法休闲，建造小城镇）</p><p>人类 168.6（世嘉发行的策略游戏，对标文明6，目前预购，质量还不错，可以去看一下B站试玩，有中华文明）</p><p>漫长等待 10（游戏会给你一个真实400的天时间，剧情不错，前期玩，中期等，四百天后等待剧情解开）</p><p>雨中冒险2 31.6（上头的3D射击肉鸽游戏，打击感棒）</p><p>幽灵行者 10.5（这游戏晕3D的话还是算了）</p><p>帝国时代123决定版合集包 47.2（今年已经确定2和3代决定版有新更新，有情怀可以入）</p><p>恐惧之间 7.3（最近大火的狼人杀游戏）</p><p>小骨：英雄 15.8（优秀的肉鸽游戏）</p><p>枪火重生 20.3（优秀的射击肉鸽游戏）</p><p>群星 7.7（p社游戏要买dlc才算完整，dlc这游戏我不太了解，只能推荐本体价格了，不过本体就已经够好玩的了）</p><p>真人快打11  25.2（血腥暴力格斗，画质好）</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>Steam</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【教程】0成本自行注册阿/俄/土等低价区steam帐号</title>
    <link href="/posts/55006.html"/>
    <url>/posts/55006.html</url>
    
    <content type="html"><![CDATA[<hr><p>首先讲一个低成本方法：去闲鱼搜索关键字“steam 代注册”，可以找人帮忙注册，<strong>自定义账户名密码</strong>，大概两块钱。但请记得一定要用你的邮箱作为<strong>创建的初始邮箱</strong>喔。</p><hr><span id="more"></span><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>讲一个自行注册安全快捷，且0成本的方法，自己注册。<br>简单来说就是，<a href="https://store.steampowered.com/join/" target="_blank" rel="noopener external nofollow noreferrer">注册</a>的时候先输入邮箱，翻墙（此时不需要翻到低价区）来通过谷歌人机验证。然后收验证邮件，之后打开VPN翻墙到低价区（比如阿根廷），来进行注册。学会了以后大家都能去闲鱼赚钱代注册啦。</p><!-- more --><p>保姆级详细版：</p><ul><li>翻墙到低价区</li><li><ul><li>使用谷歌浏览器插件翻墙（免费）</li></ul></li><li><ul><li>使用机场翻墙（付费）</li></ul></li><li>注册Steam帐号</li><li>使用帐号</li><li>✨Magic✨</li></ul><h2 id="2-翻墙到低价区"><a href="#2-翻墙到低价区" class="headerlink" title="2. 翻墙到低价区"></a>2. 翻墙到低价区</h2><h3 id="2-1-使用谷歌浏览器Hide-My-Ip-VPN插件翻墙（免费）"><a href="#2-1-使用谷歌浏览器Hide-My-Ip-VPN插件翻墙（免费）" class="headerlink" title="2.1 使用谷歌浏览器Hide My Ip VPN插件翻墙（免费）"></a>2.1 使用谷歌浏览器Hide My Ip VPN插件翻墙（免费）</h3><p>首先说明此插件<strong>只能在电脑端使用</strong>。移动端例如手机平板的谷歌浏览器Chrome无法使用插件功能</p><p>首先安装<a href="https://www.google.cn/intl/zh-CN/chrome/" target="_blank" rel="noopener external nofollow noreferrer">谷歌浏览器Chrome</a>，进入<a href="https://www.google.cn/intl/zh-CN/chrome/" target="_blank" rel="noopener external nofollow noreferrer">官网</a>后按照提示下载安装。接下来就是安装[Hide My IP VPN]插件</p><blockquote><p>Chrome 是一个免费的跨平台浏览器，由 Google 开发，Chrome对于前端开发来说（尤其是调试代码）非常方便，并且有丰富的插件市场，包括很多前端框架的调试插件。</p></blockquote><h5 id="a-（有梯子）插件在线安装方法"><a href="#a-（有梯子）插件在线安装方法" class="headerlink" title="a. （有梯子）插件在线安装方法"></a>a. （有梯子）插件在线安装方法</h5><p>已经有梯子的可以直接通过Chrome的应用商店下载安装。<br>👉<a href="https://chrome.google.com/webstore/detail/hide-my-ip-vpn/keodbianoliadkoelloecbhllnpiocoi?utm_source=chrome-ntp-icon" target="_blank" rel="noopener external nofollow noreferrer">Hide My IP VPN插件</a>（需要梯子）<br><img src="/posts/55006/image1.PNG" alt="this is an image"><br>点击【添加至Chrome】即可<br><img src="/posts/55006/image2.PNG" alt="this is an image"><br>点击【新增扩充功能】即可</p><h5 id="b-（无梯子）插件离线安装方法"><a href="#b-（无梯子）插件离线安装方法" class="headerlink" title="b. （无梯子）插件离线安装方法"></a>b. （无梯子）插件离线安装方法</h5><p>由于某些原因，Chrome应用商店是无法在大陆直接访问的，但我们可以通过一些其他网站下载好插件安装包，再离线安装。</p><!-- [>_<]: --><p><a href="https://www.crx4chrome.com/" target="_blank" rel="noopener external nofollow noreferrer">Crx4Chrome</a>，该网站相当于一个Chrome扩展资料库，里面收集了几乎全部Chrome扩展，并且做了分类和介绍，还有历史版可供下载。</p><p>我做了本地下载链接，由于crx文件会被某些杀毒软件直接删除，所以我还提供了zip文件的下载：</p><p>👉 <a href="55006/11.4.0_0.zip"> 点击下载zip文件 </a></p><p>👉 <a href="55006/11.4.0_0.crx"> 点击下载crx文件 </a></p><p>下载好 CRX 文件，将后缀名 .crx 修改为 .zip（如果下载的是zip文件那直接解压即可），然后解压到一个文件夹中。<br><img src="/posts/55006/image1.jpg" alt="this is an image"><br>进入 Chrome 扩展程序管理页面（选项 - 更多工具 - 扩展程序）。打开 “开发者模式” -&gt; 加载已解压的扩展程序 -&gt; 选择刚才解压的文件夹，完成。<br><img src="/posts/55006/image2.gif" alt="this is a gif"></p><blockquote><p>参考：<a href="https://zhuanlan.zhihu.com/p/80305764" target="_blank" rel="noopener external nofollow noreferrer">国内离线安装 Chrome 扩展程序的方法总结-知乎</a></p></blockquote><h3 id="2-2-Hide-My-Ip-VPN-插件的使用"><a href="#2-2-Hide-My-Ip-VPN-插件的使用" class="headerlink" title="2.2 Hide My Ip VPN 插件的使用"></a>2.2 Hide My Ip VPN 插件的使用</h3><p>安装好后浏览器右上角会出现该插件图标，也就是那个黄色的盾牌状图标。<br><img src="/posts/55006/image3.PNG" alt="this is an image3"><br>点开以后如图，点击注册，随便输入一个<strong>假邮箱地址</strong>即可注册使用3天。（它不会发验证邮件）<br><img src="/posts/55006/image4.PNG" alt="this is an image4"><br>使用的时候搜索自己需要的国家英文名，之后点击红框处开关，打开VPN，即可。<br><img src="/posts/55006/image5.PNG" alt="this is an image5"><br>此插件有俄罗斯、土耳其、阿根廷节点，还有一些小众节点。对于我们注册steam来说完全够用了。</p><h3 id="2-3-使用机场翻墙（付费）"><a href="#2-3-使用机场翻墙（付费）" class="headerlink" title="2.3 使用机场翻墙（付费）"></a>2.3 使用机场翻墙（付费）</h3><p>(2021年06月19日更新：我跟组内几个姐妹想自己租个阿根廷服务器搭建梯子来使用，有意者私信我，谢谢。)<br>免费的插件固然好，但速度不快而且只能在浏览器使用，而且开启后，会发现比较难过人机验证。当然，仅仅为了注册是绝对够用的。<br>对于愿意花点小钱，并且愿意<strong>折腾和研究</strong>的朋友，我推荐使用<strong>机场</strong>，全平台可用，搭配软路由使用有奇效。但是使用起来需要学习一些知识，需要做功课。<br>(2021年06月19日更新：由于7.1敏感日期，最近开始反向墙，该机场节点纷纷失效，虽然技术人员一直在抢修。为了安全，敏感时期请勿翻墙。)<br>🧱我找的steam注册用的一个机场是<a href="https://maoxiong.pages.dev/" target="_blank" rel="noopener external nofollow noreferrer">猫熊https://maoxiong.pages.dev</a>,8块钱一个月有阿根廷、巴西、土耳其、菲律宾、沙特、波兰、印尼节点，可以当加速器用（但是加速效果肯定没网易uu那种好），平时当梯子也很好用。<br>但是这里不建议大家包年购买喔，因为机场缺乏监管，小机场可能随时跑路，大机场又有被抓风险。<br>下图是机场节点示意，一般机场节点都七八十甚至上百，但是机场节点质量也很重要，节点质量很重要的参数是延迟和带宽，延迟低的节点可以打游戏加速用，带宽大的速度快，可以看4k视频，另外能不能解锁流媒体比如Netflix也是一个参考点。可以搜索<a href="https://duyaoss.com/" target="_blank" rel="noopener external nofollow noreferrer">毒药测评</a>，看看有没有你需要的机场。</p><p><img src="/posts/55006/airport.PNG" alt="this is an image"></p><blockquote><p>机场实质上是指S节点提供商。每个节点就是一台服务器VPS，使用VPN&#x2F;SS&#x2F;SSR&#x2F;V2ray&#x2F;Trojan（后面兴起的新型协议或改良协议）等一切技术手段搭建科学上网服务。“机场”，其实是一种形象化的说法，因为最开始使用的ss客户端图标是飞机（小火箭），所以流行起了这个说法，，不过这个较为原始的软件已经很少用了。现在较为流行的，是Clash&#x2F;Quantumultx&#x2F;Surge之类的软件，非常个性化。<br>大家把机场想象成可以让网络世界的我们到达别的国家的工具，每个节点就是飞机，打开阿根廷节点可以坐飞机去阿根廷成为网络阿根廷人。我觉得从这个角度理解“机场”这个称呼就特别有意思。</p></blockquote><blockquote><p>参考：<a href="https://limbopro.xyz/archives/7696.html#%E6%9C%BA%E5%9C%BA%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noopener external nofollow noreferrer">机场是什么</a></p></blockquote><h2 id="3-注册steam低价区帐号"><a href="#3-注册steam低价区帐号" class="headerlink" title="3. 注册steam低价区帐号"></a>3. 注册steam低价区帐号</h2><p>这个跟普通注册流程差不多一样的，但是<strong>开梯子的时机</strong>很重要！<br>首先是要过人机验证这一关。<strong>此时不需要对应低价区节点</strong>，决定你帐号最终地区的步骤是验证邮件以后。<br>下图这个界面可以不开阿区（或你需要的低价区）梯子，只要能过人机验证就行，不管你ip在哪，亲测没有影响。有时候开梯子反而过不了人机验证。另外提醒一下不建议大家用别的steam帐号已经绑定过的邮箱注册，因为存在非常小的邮箱连坐概率。<br><img src="/posts/55006/steam1.PNG" alt="this is an image"><br>如果你是使用<strong>免费插件</strong>的话，如果没过的话会出现红框提醒。所以请<strong>多尝试几个不同的节点</strong>，一般过不了大概率是节点的原因，Hide My IP VPN插件被非常多人使用，所以阿根廷节点是完全过不了人机验证的。当某个ip请求太多次人机验证，就会出现问题。我上次尝试了不同节点大概三次，最终成功了。<br><img src="/posts/55006/steam2.PNG" alt="this is an image"><br>如果自己在海外\有梯子\使用机场翻墙，过人机验证都是比较简单的，毕竟使用的人不多。</p><p>点击继续以后就会收到电子邮件，直接点击【验证我的电子邮件地址】就好。<br><img src="/posts/55006/steam4.jpg" alt="this is an image"></p><p>(如果你的邮箱绑定过其他steam帐号，他会询问你是恢复原有帐号还是创建新帐号，这里当然是创建新帐号)</p><p>之后输入账户名密码，这里注意名称不能重复，不分大小写，密码不能太简单。<br>在这个界面，这一步<strong>必须打开阿根廷节点</strong>或者其他低价区的节点。这个时候你使用插件还是别的梯子节点，都无所谓，只要它是阿根廷（或其他你想要的低价区）ip就好了。在<strong>点击【完成】按钮的那一瞬间</strong>，你的ip在哪里，最后帐号就会在哪个区域。<br><img src="/posts/55006/steam3.PNG" alt="this is an image"></p><p>当然有时候梯子打开了也不一定稳定翻墙，比如Hide My IP VPN一般是比较稳定的，但有时候clash for windows就不太稳定。<br>所以我的习惯是在点击【完成】按钮的前一秒钟，去<a href="https://whatismyipaddress.com/" target="_blank" rel="noopener external nofollow noreferrer">where is my ip</a>网站检查下ip是不是在阿根廷，以防万一。<br><img src="/posts/55006/IP.PNG" alt="this is an image"></p><p>注册完以后查看自己商店页面的货币单位是不是ARS：<br><img src="/posts/55006/ARS.jpg" alt="this is an image"><br>进入账户明细查看商店地区：<br><img src="/posts/55006/wallet.PNG" alt="this is an image"></p><h2 id="4-使用帐号"><a href="#4-使用帐号" class="headerlink" title="4. 使用帐号"></a>4. 使用帐号</h2><hr><p>（2021年06月29日更新）阿根廷锁了其他货币充值码，也就是说只能买比索卡进行充值，这也导致比索卡价格水涨船高，淘宝更是少之又少。Steam遣返了众多fake阿根廷帐号，大多数是转区阿根廷的，少数是在阿根廷注册的，目前我也不清楚具体机制，是否被遣送有点看人品。大家且用且珍惜。</p><hr><p>详细教程请看此：<br><a href="https://www.douban.com/group/topic/224767707/" target="_blank" rel="noopener external nofollow noreferrer">【教程】蒸汽平台来了，如何安全降落—阿区注册教程</a></p><p><strong>定区方法：</strong>新号可以去淘宝购买等额为5美元的钱包充值码进行充值并且<strong>消费</strong>，之后steam等级将从0变成1。（2021-06-25更新）最近新政策，之前淘宝充值码可以用别的货币的充值卡然后转成等额比索，但现在锁了，只能比索充比索。目测以后定区会越来越麻烦。<br><strong>定区以后最安全推荐的方法：</strong>用大号加小号好友，满3天后可以赠送礼品卡。这个方法没有中间商（除了G胖）赚差价。方便无风险。</p><p>一般店家标DLC 5 就是5美元的意思，但是淘宝价格一般比较贵。你需要消费5美元，之后到达等级1就可以解锁主动加好友跟加入组功能，记得去加Her Ninth Art小组喔。跟自己国区大号加好友，三天后可以用大号给小号充值。不再需要上淘宝买充值卡。<br><img src="/posts/55006/key.jpg" alt="this is an image"><br>另外你也可以去<a href="https://www.steampy.com/" target="_blank" rel="noopener external nofollow noreferrer">steampy</a>购买<strong>新西兰充值卡</strong>，面值是NZ50和NZ100，NZ50大概等于ARS$ 3.400,00左右，steampy折扣大概为88折。<br>但只有新西兰卡是全区可用，可以直接充值到阿根廷等低价区的。其他的充值卡，比如法郎、美元，都需要先转区再用，这也是G胖出的充值卡锁区政策。如果你去淘宝买，可能会帮你转区充值，再转回来，转区会有<strong>红信风险</strong>。<br>另外余额充值也是有风险的，一定要保证来源可信。</p><table><thead><tr><th>其他教程</th><th>内容</th></tr></thead><tbody><tr><td>豆瓣</td><td><a href="https://www.douban.com/group/topic/224767707/" target="_blank" rel="noopener external nofollow noreferrer">【教程】蒸汽平台来了，如何安全降落—阿区注册教程</a></td></tr><tr><td>豆瓣</td><td><a href="https://www.douban.com/group/topic/224838817/" target="_blank" rel="noopener external nofollow noreferrer">【安利】推荐一个了解steam资讯的利器—steamdb.info</a></td></tr><tr><td>知乎</td><td><a href="https://zhuanlan.zhihu.com/p/354419249" target="_blank" rel="noopener external nofollow noreferrer">Steam低价区游戏购买攻略（阿根廷、俄罗斯）</a></td></tr><tr><td>知乎</td><td><a href="https://zhuanlan.zhihu.com/p/80305764" target="_blank" rel="noopener external nofollow noreferrer">国内离线安装 Chrome 扩展程序的方法总结</a></td></tr><tr><td>个人博客</td><td><a href="https://limbopro.xyz/archives/7696.html#%E6%9C%BA%E5%9C%BA%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noopener external nofollow noreferrer">机场是什么</a></td></tr><tr><td>个人网站</td><td><a href="https://duyaoss.com/" target="_blank" rel="noopener external nofollow noreferrer">毒药测评</a></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>Steam</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/16107.html"/>
    <url>/posts/16107.html</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5d480c80d8a7f4d13f2cc4cbe91fde60ced2a3c8ba4823296daf35149a1846b0">6d05a0a7f8f5f26ac1a0f788610c8c39797597b66666d8165558c2e4d28df8f35b6ee4d9b33a3b1bb930ca2e048b3b2ff41fcd512bc7ea602236f4990c916bacda98eb4ff118a21df04ecd7be6a2b1f672258f5df699314423b6a0f4617f3e71a18d7e9f2f58281c70a56f6b3fcf0b8491d08e4db209298dd6864b1264525d27bf8a0721106f27871d88453d853b6be40cc8966062d5c54eb74312170fb6b0d06d9b24fd29d98547b9c29b2833ce1b9928ebb1a07d4f65d286407dedf640206f1ca666f5fd7e45a7708f1684e14973a8223a8dd9b4cc6b16ca37cdf790ee5c3ce0ac0d833017a723e4624d2e4e6c1cfcdff0e57d00e014b06596a5116b5fd8c3dfa48c9a40fedf8be79c3cb3840a793c48ab95170d75ebbf3ce61c17e31cb7e8c62423fa192d44cd84e3630e6e3ca2ae55e9f8b230a0154a902ef59d0abf8de1837554e4059fec7df2b3660d1c55f4199bbda0e2c3d8372e2cab2f5aa4aa562b8f7638f1f1d85e58618bb611be715b01a5cfd0fca9d9a8ab0dfdbebb47b809e824715210312c033ddbbec15c4399461208c0e61b475ca3bd35125b4b5fc29264bd618e4585acc97a33f456002b7abeb2ca74453db7c05fdd4cb4967c0412ddb58c8f62d873c10d7f0afe11bb8c217d154d75e8ac5147520a7072fe2c153db9bf5d128871b54bcb2bf88fb697d606fe523c5a9ae605a010535d7e64bc41e2bfdbf8baec767dc23923fbb5100a9e13fd5f913c0579d57b9d0c2ba8dcdfe6b570ba2659db46cea62c1b3f6c297cd6245963632238b7a7fd8723cc13160e594e474a1278e58f91ea7d61d40704a4da2faadbcebec74d7cb1b094a6626445e7d0135ef4d34a32240ada609306d3d03d2c0ab9b9aa9b9a2e9214c461253106fb822bafc644f1e8bdb49b5aa4b097c8aa387d5e116eae0ded8dad7175a1fbbee4585d2427205fe34c0dc75f2064a0a3a44fd8736ad836e8698359f5ade1fbbd8e960645f81433b293ad3f70be1e6d0ffc5e38881f0e93a77430278da913a81a0669bc3a31bf7f0ed87c9d8d2cf1ecc876511c54ec257f1da9de8e0a91319b2a1f8768755407d0edd8139c25e941415827f7ddb177a87b8b5b64a43e92b4d238b408d7bec54f24b6bc3bb44cc24ddd5436b13b5fe7ee5df07c74c7ff1000cb661e4b2db018f6010be5e6fe863500bf949c4cf676010fecb038307b3df16b64a70a8a28a02f5a8a19cbaaea1bcba666afc687656d432f154811b83e4262e7c828202f3d72bc0542e8735482ebf8c99a5071e78b4305185b486012d169b450f0e64643f47b5820c89b25f472947b7cabe06777c192f20c72478ec395dd6f3f6711b6ba3fbf2e976a7c9b71f15e665c789344eeef9936d7504b0cdbad348163a2f00ce9dade4d95e084860bc3a7115f7f758b59b1ca2e037c445c3c386c95e10e98e56b880be7e8ab71a171e2bca5bd21906ab1a6fcaf76d06b9a21d91e6e213b8b619a4921b129f1703a78f5e6fa295f9a296fa6bc7b3988894a7842b61104efeb340bc90dcfa47c50cd836559af9027a6d4333f3be90c76fcd5c7488bae7b25f9bca64482da754687019f3ae0526f79430782629432012c0ec5c20f1188a65ab7542f01de2ef5a6312485e93a14e8bcbf920f1439c3acc1cf90ac0e5ff339402ec114c00c8b0f9610252533e67a2bdfdf5fc2182cf5602e88ebfb45ed13a9573f37fdc8bffa9a49864162059c862f493622592e192d5bb2108f75e870cf5a58a978487b6a0966453d1515b34b6bdec15f37fcbf4ff3164bc245dd300634d2f2e359f2a97fe828f37cf09888e30dfdc49300c9cd8425c269c67ac187b6a1db95dc14e093bacb7041496cfb64fe219d09e75f652af7c541abf23681fc499aa6590898e776a043f570a8bea935a499da04d7e14a50befdfaa94c5cb965b8b39842d2c3431fa9fcc61b1eac30dd399129e0ed848bbc191c9c5584c53db3ac063b3a83577c566d217f63b9a8a6fe0aa299b762829fd26deb2c3d042a4e1f20e7c5ad4fc5a3336b39b32fbfef63a4b6fbf7a2dba6cdceca1170ee9e5a034e46e2431f6a42273bd5c0241ae9e8afd69a4c1f797447f25aa8440e4d3359e165162d2b2444dd5dce9092e43d43818266f93cb707431061be1aa429f244f7f70a3bbbfe2a272eacb2d03c61fb4dafc1a46d9aaeeb83df0584db26105442baa8332f5d16e1455cc1e0a9c6ddadf244e257a5335fe356ff0748d6558fa5667e330bedc7bc1d54b22ab7d882df78f82f4687a893c67b0f7f8c5a95eebfad809c30253cbf748577fb9b1a3d543c5378d397cb5d8a5fbf6f21039407f97fb2dd296297f290a64397e2c012579ea9cf8d27868d35ca7821e18a17ba0304183022362a0fe1914db5f6d317fc79077e82c7cb87fc4a327f4d547efc8be7c508afd46175510b586e4d1c96581adeb5617e33b0a6723b91e96a8af86c2f3f3f0230b06c208d1acc6f19cc882f3ea13f82afbc6e65ec669fc7c69c3de3bae3b21707528a5dd7df4a2bfcc39f97783f2440dc16db78e2e5984c50ddde86d3691d544c4199376de8e9b8dc5a1bfa8bf203964815215020a02d36e5530e60914a50976838a6a1c1ae7b539b3d65af8414d217c9fadc03251f3a5f567621ae8d3a7713b4aae0aff39d32427ca7335fcd2e65666a9623a83f88f89bcea8d1c3c112e8a3ffdb21e427174b794ac3dd2fef51957855427ea32aa486653edaf8b3355729952acfb00c9b5647de3bc1a5a6415654dc34323136ae5259348f0c2008f56565fa6e1d28111bbb195a6d039bba82f0d3b5dc9eeeae2aa5cb7890dfa056cc00d06a2c8c17e7aa851bd76f5148b9d29b2d0741a41333abef1c1f0b71c29effb874bd7b4192e2c4a5df4a25af03a804565b50dba8d866dc353ebc6de3bae1966a9d356fdc71307a82bde070b8de64c8e3441df5bb4bd48744d47e79512868a129e7e5d92e7018b9f0e3ad50864cd239f10d48d4885ee311e2af77f2e64cbe312f759250ead3646a2e573b19f5bb1f2e699b6f786e68106dbaad6e53e05425f767016784b7806e863ec047a66f4e40fac65cdf86d4b860d7a94fe3a315a039a7b3cb3c3d364db562196e9c4b4612e885b75ab74711668c93cb71c23e6cdd9080661f78a014ead46a30f54884da7f2e68f1189b380ed2ba279e40a53605a663ea97f172d1d87ee554120bfe6141cc02c22c58dde83b055f963a8b8fe053741412193b31598dfdea1f3ebe3a67e614257a6596f903cd07b7a9a3f5cd0948d66074d8f65dd1f2e2a4c4ea2b8516aff923554e0d1800ee89a18162f70c5577b54634f2bc2e993701f7fecaea97f5bb96b68bafa96a9af03ff4d28d6fc7ac2a0af19e0aef6f49acbd4931702e0338abc61d6271497a6d08cece19b4b8887eb11a34a0d3761eedee60753e8bbf27c95b8baeb13340c07e9707001d3c71dcc7244a605228d492dfe4ed2dce46cb7329fe9590d561112b665c3a21409d43b12ac51d0ffd2e5456e6982df7dbbb9cdaca6bd00826bbf87b916a0f2b814589f853be894965bb59e91845d799f929afc7c8eb84d85e38cf3d09d2bda2a718648b835f718e2ad20c5055192f0cc6612a6e8c7a499cffa8774ddc66e61c4d69acb5855a81d01403e60a94e5bbecd5cd46efa7aba25ad6c8a6a3f958f42ad8d64954af8d4d6f0c16cdd83a2257db3fe9623c5368d8ae00ffd7e9ce0219b1dbdab9b6f4d67e2445ec18ceee7d65307af93893598f7517f7f8a52309795a59a8f61a54c33db1c06374072a3db365cd71e125f565dc9407a8e69a73704271cfacbb36cf8a35acd3778727d522bc7f0e17e0e20e4abed963834e7fd0c8999453134dae716a359018812e8577c7f977c5a1be72bd38f71970ccef</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Notes</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
