<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>机场推荐</title>
    <link href="/2022/09/25/aff/"/>
    <url>/2022/09/25/aff/</url>
    
    <content type="html"><![CDATA[<p>全年稳定高速解锁Netflix的机场很少，大部分都很贵。推荐一个我自用了挺久的高性价比机场。</p><p>注册GLaDOS(<a href="https://glados.rocks/register">注册地址</a>), 并输入邀请码激活:</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-symbol">N3</span>CMR<span class="hljs-number">-9</span>H<span class="hljs-number">4</span>SV-RE<span class="hljs-number">0</span>Z<span class="hljs-number">6</span>-<span class="hljs-keyword">LE</span><span class="hljs-number">1</span>RZ<br></code></pre></td></tr></table></figure><span id="more"></span><div class="note note-info">            <p>机场：简单理解就是全平台可用的梯子。</p>          </div><h1 id="测速结果"><a href="#测速结果" class="headerlink" title="测速结果"></a>测速结果</h1><p>Speedtest stair高峰期测速结果（多线程测速），我本地带宽在500Mbps：<br><img src="/2022/09/25/aff/speedtest-stair.png"></p><p>Youtube 高峰期（下午六点多）测速，能稳定在十万左右：<br><img src="/2022/09/25/aff/youtube.png"></p><h1 id="节点价格"><a href="#节点价格" class="headerlink" title="节点价格"></a>节点价格</h1><p>他家有三个套餐，写着限速但实际我使用并没发现限速。<br><img src="/2022/09/25/aff/price.png"></p><p>用 <code>PORTALGUN</code> 优惠码可以满100-20：<br><img src="/2022/09/25/aff/pricing.png"></p><p>支持Paypal、Visa&#x2F;MasterCard信用卡和支付宝三种支付方式，其中Paypal和信用卡可以9折，7天内可退款（通过 PayPal 支付的需要支付每笔 5 美元手续费）。<br><img src="/2022/09/25/aff/payment.png"></p><p>也就是说200天套餐仅需 (119 - 20) * 0.9 &#x3D; 88 ，大概13一月。</p><p>但我说这个机场性价比极高的原因在于，他家可以<strong>无限签到</strong>，付费用户每次签到100%延长一天（免费用户好像不能无限延长）。</p><p>而签到呢，又是可以用脚本自动的。所以。。。一次付费，<del>理论上无限使用，只要机场不改变政策</del>。</p><p>脚本自动签到看我的</p><h1 id="注册流程"><a href="#注册流程" class="headerlink" title="注册流程"></a>注册流程</h1><ul><li>官网：<a href="https://glados.rocks/">https://glados.rocks</a></li><li>注册：<a href="https://glados.rocks/register">https://glados.rocks/register</a></li></ul><p>首先进入 <a href="https://glados.rocks/register">GLaDOS 注册 </a>：<br><img src="/2022/09/25/aff/register.png"></p><p>输入自己的邮箱，点击send passcode to email，再进入邮箱查看收到的验证码，将验证码填入 Passcode 输入框。最后点击 <strong>Register</strong> 按钮：<br><img src="/2022/09/25/aff/CD-KEY.PNG"></p><p>在这里输入笔者的邀请码，点击Next，即可获得<strong>三天免费</strong>，</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-symbol">N3</span>CMR<span class="hljs-number">-9</span>H<span class="hljs-number">4</span>SV-RE<span class="hljs-number">0</span>Z<span class="hljs-number">6</span>-<span class="hljs-keyword">LE</span><span class="hljs-number">1</span>RZ<br></code></pre></td></tr></table></figure><p>之后就等待账号设置完成：<br><img src="/2022/09/25/aff/setup.png"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>机场不仅有工作日工作时间在线的客服，还有详尽的教程。照着使用就好啦。</p><h1 id="Netflix解锁"><a href="#Netflix解锁" class="headerlink" title="Netflix解锁"></a>Netflix解锁</h1><p>机场提供 Netflix 美国、台湾解锁节点，平均速度大于40MB&#x2F;s，看4k毫无压力。<br><img src="/2022/09/25/aff/netflix.png"></p>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>笔记：Django时区问题【非原创】</title>
    <link href="/2022/09/25/django-timezone/"/>
    <url>/2022/09/25/django-timezone/</url>
    
    <content type="html"><![CDATA[<p>Python的时区问题一直很烦，找到篇讲Django时区讲的很好的文章，存档一下。</p><p>《<a href="https://www.leavesongs.com/PYTHON/django-timezone-detail.html">Django中与时区相关的安全问题</a>》</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
      <category>Django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Django</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【git实战入门】2. 小白的第一次提交</title>
    <link href="/2022/09/24/%E3%80%90git%E5%AE%9E%E6%88%98%E5%85%A5%E9%97%A8%E3%80%912-%E5%B0%8F%E7%99%BD%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4/"/>
    <url>/2022/09/24/%E3%80%90git%E5%AE%9E%E6%88%98%E5%85%A5%E9%97%A8%E3%80%912-%E5%B0%8F%E7%99%BD%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4/</url>
    
    <content type="html"><![CDATA[<p>上一篇教程已经将远程的repository clone到了本地并进行了配置，我们来进行第一次提交和修改。</p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要成功将修改提交到仓库，前提是要证明你对仓库有修改的权力，毕竟不是什么阿猫阿狗都能随便改的。</p><p>一般验证的方式有三种：<br>验证你是你（对你所有的仓库都可以进行修改）：</p><ul><li><a href="https://github.com/settings/tokens">Personal access tokens</a></li><li><a href="https://github.com/settings/keys">SSH keys</a></li><li>账号密码（已经弃用）</li></ul><p>验证你可以修改这个仓库（仅针对这一个仓库）</p><ul><li>Deploy keys</li></ul><p>本文先讲如何优雅地配置SSH keys</p><h1 id="通过SSH-keys连接到GitHub"><a href="#通过SSH-keys连接到GitHub" class="headerlink" title="通过SSH keys连接到GitHub"></a>通过SSH keys连接到GitHub</h1><p>官方文档：《<a href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh">通过 SSH 连接到 GitHub</a>》</p><h2 id="检查SSH-keys"><a href="#检查SSH-keys" class="headerlink" title="检查SSH keys"></a>检查SSH keys</h2><p>打开终端或者 git bash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -al ~/.ssh<br></code></pre></td></tr></table></figure><p>检查有没有 id_dsa 和 id_dsa.pub 文件。免得之后将其覆盖。</p><p>如果有的话，你可以跳过下一步。</p><h2 id="生成密钥对"><a href="#生成密钥对" class="headerlink" title="生成密钥对"></a>生成密钥对</h2><p>打开终端输入以下命令（修改你的邮箱）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>会出现下面的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/c/Users/user/.ssh/id_rsa): 回车<br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): 回车<br></code></pre></td></tr></table></figure><p>这里你可以重新命名密钥名字，也可以用<code>id_rsa</code>默认的密钥名，所以直接回车两次就好。</p><p>然后如果输出下面内容，表示key创建成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Your identification has been saved <span class="hljs-keyword">in</span> /home/you/.ssh/id_rsa<br></code></pre></td></tr></table></figure><h2 id="添加ssh-agent"><a href="#添加ssh-agent" class="headerlink" title="添加ssh-agent"></a>添加ssh-agent</h2><p>Windows上，如果生成的是默认的id-rsa，那么无需执行此步。</p><p>首先我们要把密钥添加到后台的ssh-agent代理，让他帮我们在需要的时候完成授权任务，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(ssh-agent -s)</span>&quot;</span><br>ssh-add ~/.ssh/id_rsa<br></code></pre></td></tr></table></figure><h2 id="SSH公钥加入Github账号"><a href="#SSH公钥加入Github账号" class="headerlink" title="SSH公钥加入Github账号"></a>SSH公钥加入Github账号</h2><p>最后一步，我们需要把公钥信息加入到Github的SSH管理中，使用如入命令查看ssh公钥信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>复制公钥信息后，点此<a href="https://github.com/settings/ssh/new">添加SSH密钥</a>：<br><img src="/2022/09/24/%E3%80%90git%E5%AE%9E%E6%88%98%E5%85%A5%E9%97%A8%E3%80%912-%E5%B0%8F%E7%99%BD%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4/pub-key.png"></p><p>粘贴公钥到此处即可。</p><p>随后测试下有没有授权成功，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>出现以下信息则算成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Hi 你的用户名! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure><h1 id="修改并提交"><a href="#修改并提交" class="headerlink" title="修改并提交"></a>修改并提交</h1><p>clone下来仓库，用 vscode 进行编辑 README 文件。</p><p>提交的方式太多了，VSCode可以就可以提交并push，GitHub Desktop也可以。但既然是教程，那还是先讲命令行方式。</p><div class="note note-info">            <p>vscode 有很多有意思的插件，比如说 Git Lens ，让你快速使用 git blame，也就是找到每一行代码最后编辑的人是谁。<br>GitHub desktop可以让你直观看到有哪些文件进行了修改，以前的commit记录，等等。</p>          </div><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><h3 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h3><p>所谓commit，就是我某个功能改完啦，暂时不需要改了。那么我先把这个修改提交到暂存区，也就是commit。</p><p>修改后，在项目目录下打开Git Bash，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -m [message]<br></code></pre></td></tr></table></figure><p>[message] 可以是一些备注信息。</p><p>那如果我改了三个文件，但只有两个想提交，第三个还妹改完咋整，可以提交暂存区的指定文件到仓库区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit [file1] [file2] ... -m [message]<br></code></pre></td></tr></table></figure><p>如果你没有设置 -m 选项，Git 会尝试为你打开一个编辑器以填写提交信息。 如果 Git 在你对它的配置中找不到相关信息，默认会打开 vim。屏幕会像这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Please enter the commit message for your changes. Lines starting</span><br><span class="hljs-comment"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span><br><span class="hljs-comment"># On branch master</span><br><span class="hljs-comment"># Changes to be committed:</span><br><span class="hljs-comment">#   (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># modified:   hello.php</span><br><span class="hljs-comment">#</span><br>~<br>~<br><span class="hljs-string">&quot;.git/COMMIT_EDITMSG&quot;</span> 9L, 257C<br></code></pre></td></tr></table></figure><p>这时就使用vim来编辑这里的提交信息就好了，先按i来编辑，编辑好后按esc，然后输入 :wq 按回车退出。</p><p>如果我的修改是新增文件，怎么办？需要先将文件加入git仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add 文件名<br></code></pre></td></tr></table></figure><p>你觉得 git add 提交缓存的流程太过繁琐，Git 也允许你用 -a 选项跳过这一步。命令格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -a<br></code></pre></td></tr></table></figure><p>比如说</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -am <span class="hljs-string">&#x27;小白的第一次提交，修改README文件&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><p>所谓push，就是把之前用commit保存下来的改变，推送到远程仓库。可以多次commit，然后一次push上去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push<br></code></pre></td></tr></table></figure><p>查看远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote --verbose<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>防止GitHub邮箱泄露</title>
    <link href="/2022/09/24/avoid-github-email-leaking/"/>
    <url>/2022/09/24/avoid-github-email-leaking/</url>
    
    <content type="html"><![CDATA[<p>公开仓库的git commit都是可以被查询到用户名和邮箱的，那要如何避免自己邮箱泄露。</p><span id="more"></span><p>当然，在我们进行提交的时候，我们完全可以用一个伪造的邮箱，但这样，当别人查看GitHub上的commit的时候，就不能方便地知道commit是我们提交的。这credit怎能给别人。</p><h1 id="配置匿名邮箱"><a href="#配置匿名邮箱" class="headerlink" title="配置匿名邮箱"></a>配置匿名邮箱</h1><p>首先进入<a href="https://github.com/settings/emails">设置</a>，找到下面这项并勾选：</p><ul><li><input checked disabled type="checkbox"> Keep my email addresses private</li></ul><p>然后找到下面加粗的电子邮件地址，是一个七位数的 ID 号以及格式为 <code>ID+username@users.noreply.github.com</code> 格式的一串邮箱地址，这就是 GitHub 给你的匿名邮箱地址。</p><blockquote><p> 如果于 2017 年 7 月 18 日之前在 GitHub.com 上创建了帐户，则来自 GitHub 的 noreply 电子邮件地址是 <code>username@users.noreply.github.com</code></p></blockquote><p>根据<a href="https://docs.github.com/cn/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address"> GitHub 官方文档</a></p><blockquote><p>如果想将个人电子邮件地址设为私密，则可以使用 GitHub 的 noreply 电子邮件地址作为提交电子邮件地址。 要将 noreply 电子邮件地址用于从命令行推送的提交，请在 Git 中设置提交电子邮件地址时使用该电子邮件地址。 要将 noreply 地址用于基于 Web 的 Git 操作，请在 GitHub 上设置提交电子邮件地址并选择“对我的电子邮件地址保密”。</p></blockquote><p>也就是说，在用命令行提交时，请使用下面命令来全局更改邮箱地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email <span class="hljs-string">&quot;ID+username@users.noreply.github.com&quot;</span><br></code></pre></td></tr></table></figure><p>确认一下是不是改成功了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email<br></code></pre></td></tr></table></figure><h1 id="查找过往有没有泄露过信息"><a href="#查找过往有没有泄露过信息" class="headerlink" title="查找过往有没有泄露过信息"></a>查找过往有没有泄露过信息</h1><p>查看一些过往公开信息：<br><code>https://api.github.com/users/用户名</code><br><code>https://api.github.com/users/用户名/events/public</code></p><p>使用Github提供的GraphQL来查询所有提交过的commits来查询用户邮箱：<br>参考：《<a href="https://juejin.cn/post/6951642072935825439">怎么知道Github仓库所有者的联系方式</a>》</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【git实战入门】1. 本地配置git</title>
    <link href="/2022/09/24/%E3%80%90git%E5%AE%9E%E6%88%98%E5%85%A5%E9%97%A8%E3%80%911-%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AEgit/"/>
    <url>/2022/09/24/%E3%80%90git%E5%AE%9E%E6%88%98%E5%85%A5%E9%97%A8%E3%80%911-%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AEgit/</url>
    
    <content type="html"><![CDATA[<p>Git 是Linus用C语言写的分布式版本管理系统。本文简单讲了如何在windows上安装、配置git，从而进行第一次代码修改提交，并push到GitHub。</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>Windows 10</li><li>GitHub 账号</li></ul><h1 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h1><h2 id="Linux上安装-Git"><a href="#Linux上安装-Git" class="headerlink" title="Linux上安装 Git"></a>Linux上安装 Git</h2><p>大部分比较新的Linux发行版本都可以用包管理器直接下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Ubuntu or Debian</span><br>sudo apt install git<br><span class="hljs-comment"># Red Hat or CentOS</span><br>sudo yum install git<br></code></pre></td></tr></table></figure><h2 id="Windows上安装Git"><a href="#Windows上安装Git" class="headerlink" title="Windows上安装Git"></a>Windows上安装Git</h2><p>点此👉<a href="https://git-scm.com/downloads">Git官网下载</a></p><p>官网还可以下载 GitHub Desktop 这类挺好用的软件</p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p><p>也可以在项目文件夹空白处点击右键，来快捷打开Git Bash<br><img src="/2022/09/24/%E3%80%90git%E5%AE%9E%E6%88%98%E5%85%A5%E9%97%A8%E3%80%911-%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AEgit/git-installed.png"></p><h1 id="GitHub-新建-repository"><a href="#GitHub-新建-repository" class="headerlink" title="GitHub 新建 repository"></a>GitHub 新建 repository</h1><p>登录 <a href="https://github.com/login">GitHub</a>，输入账号密码，点此<a href="https://github.com/new">新建repository</a>，需要输入下列信息：</p><ul><li>Repository name - 仓库名</li><li>Description     - 仓库简要描述（可选）</li><li>Public&#x2F;Private  - 公开或私有仓库</li><li>Add a README file - 是否要添加README文件</li></ul><p><img src="/2022/09/24/%E3%80%90git%E5%AE%9E%E6%88%98%E5%85%A5%E9%97%A8%E3%80%911-%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AEgit/new-repo.png"></p><p>因为是教程，建议大家选择Public，并勾选README</p><ul><li><input checked disabled type="checkbox"> Add a README file</li></ul><h2 id="更多（可以不看）"><a href="#更多（可以不看）" class="headerlink" title="更多（可以不看）"></a>更多（可以不看）</h2><h3 id="gitinore-文件"><a href="#gitinore-文件" class="headerlink" title=".gitinore 文件"></a>.gitinore 文件</h3><p>gitignore 就是 git ignore 的意思，当我们写代码的时候，有一些文件是你想添加进仓库，来进行版本管理的，但常常也有一些文件是<strong>没必要加入版本管理</strong>的，比如说，配置文件，比如说代码的编译文件，比如说运行python代码时生成的pyc文件，这些完全没必要加入仓库里。</p><p>.gitinore 就可以帮助我们，忽略这些文件，并且在我们使用命令 <code>git add .</code> （把当前文件夹下所有都加入git）的时候，自动忽略某些文件。</p><h3 id="License"><a href="#License" class="headerlink" title="License"></a>License</h3><p>开源证书，可以自己搜搜不同开源证书的区别和限制。</p><h1 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h1><p>对于公开仓库，可以直接方便：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/用户名/仓库名.git<br></code></pre></td></tr></table></figure><h1 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h1><p>最基础的配置是，告诉git你的名字和邮箱，这里对应的，你可以写入你GitHub的用户名和邮箱。</p><div class="note note-warning">            <p>如果你在公开的repository进行了任何提交，那么你对应设置的邮箱也将被公开。可以查看另一篇文章来使用 GitHub 匿名邮箱。</p>          </div><h2 id="设置用户名和电子邮件地址"><a href="#设置用户名和电子邮件地址" class="headerlink" title="设置用户名和电子邮件地址"></a>设置用户名和电子邮件地址</h2><h3 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h3><p>对于没有设置用户名和电子邮件地址的仓库，将会默认使用全局配置，所以如果是第一次配置，可以直接全局配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>如果仅需要对某个本地仓库的配置进行修改，那么就在该仓库目录下打开Git bash:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config user.email <span class="hljs-string">&quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>install chrome in windows server using powershell</title>
    <link href="/2022/08/20/install-chrome-in-windows-server-using-powershell/"/>
    <url>/2022/08/20/install-chrome-in-windows-server-using-powershell/</url>
    
    <content type="html"><![CDATA[<p>PowerShell 安装 chrome</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">$LocalTempDir = $env:TEMP; $ChromeInstaller = &quot;ChromeInstaller.exe&quot;; (new-object    System.<span class="hljs-built_in">Net</span>.WebClient).DownloadFile(&#x27;http://dl.google.com/chrome/install/<span class="hljs-number">375</span>.<span class="hljs-number">126</span>/chrome_installer.exe&#x27;, &quot;$LocalTempDir\$ChromeInstaller&quot;); &amp; &quot;$LocalTempDir\$ChromeInstaller&quot; /silent /install; $Process2Monitor =  &quot;ChromeInstaller&quot;; <span class="hljs-keyword">Do</span> &#123; $ProcessesFound = Get-Process | ?&#123;$Process2Monitor -contains $_.Name&#125; | Select-Object -ExpandProperty Name; <span class="hljs-keyword">If</span> ($ProcessesFound) &#123; &quot;Still running: $($ProcessesFound -join &#x27;, &#x27;)&quot; | Write-Host; <span class="hljs-built_in">Start</span>-Sleep -Seconds <span class="hljs-number">2</span> &#125; <span class="hljs-keyword">else</span> &#123; rm &quot;$LocalTempDir\$ChromeInstaller&quot; -ErrorAction SilentlyContinue -Verbose &#125; &#125; Until (!$ProcessesFound)<br></code></pre></td></tr></table></figure><p>PowerShell 安装 python3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmdlet">Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://community.chocolatey.org/install.ps1&#x27;))<br>choco install -y python3<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>nginx 反向代理 cloudflare 网站出现 502 报错</title>
    <link href="/2022/08/16/nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-cloudflare-%E7%BD%91%E7%AB%99%E5%87%BA%E7%8E%B0-502-%E6%8A%A5%E9%94%99/"/>
    <url>/2022/08/16/nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86-cloudflare-%E7%BD%91%E7%AB%99%E5%87%BA%E7%8E%B0-502-%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<p><strong>【非原创，学习笔记】</strong><br>反代一个网站，一直502</p><span id="more"></span><p>error_log 输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs log">SSL_do_handshake() failed (SSL: error:14094410:SSL routines:ssl3_read_bytes:sslv3 ale                                 rt handshake failure:SSL alert number 40) while SSL handshaking to upstream, <br></code></pre></td></tr></table></figure><p>解决办法：nginx反代时启动SNI以避免反代CF时出现问题。在反向代理块增加一行<code>proxy_ssl_server_name on;</code>即可解决问题。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>nginx</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx regex rules</title>
    <link href="/2022/08/16/nginx-regex-rules/"/>
    <url>/2022/08/16/nginx-regex-rules/</url>
    
    <content type="html"><![CDATA[<p>非原创，学习笔记。出处👉<a href="https://blog.csdn.net/weixin_44299027/article/details/107286956">nginx location正则表达式写法</a></p><span id="more"></span><h1 id="常用规则"><a href="#常用规则" class="headerlink" title="常用规则"></a>常用规则</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">location</span>  <span class="hljs-string">=</span> <span class="hljs-string">/</span> &#123;<br>  <span class="hljs-comment"># 精确匹配 / ，主机名后面不能带任何字符串</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">A</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span>  <span class="hljs-string">/</span> &#123;<br>  <span class="hljs-comment"># 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求</span><br>  <span class="hljs-comment"># 但是正则和最长字符串会优先匹配</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">B</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">/documents/</span> &#123;<br>  <span class="hljs-comment"># 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索</span><br>  <span class="hljs-comment"># 只有后面的正则表达式没有匹配到时，这一条才会采用这一条</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">C</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">/documents/Abc</span> &#123;<br>  <span class="hljs-comment"># 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索</span><br>  <span class="hljs-comment"># 只有后面的正则表达式没有匹配到时，这一条才会采用这一条</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">CC</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">^~</span> <span class="hljs-string">/images/</span> &#123;<br>  <span class="hljs-comment"># 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">D</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">\.(gif|jpg|jpeg)$</span> &#123;<br>  <span class="hljs-comment"># 匹配所有以 gif,jpg或jpeg 结尾的请求</span><br>  <span class="hljs-comment"># 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">E</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">/images/</span> &#123;<br>  <span class="hljs-comment"># 字符匹配到 /images/，继续往下，会发现 ^~ 存在</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">F</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">/images/abc</span> &#123;<br>  <span class="hljs-comment"># 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在</span><br>  <span class="hljs-comment"># F与G的放置顺序是没有关系的</span><br>  [ <span class="hljs-string">configuration</span> <span class="hljs-string">G</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">/images/abc/</span> &#123;<br>  <span class="hljs-comment"># 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用</span><br>    [ <span class="hljs-string">configuration</span> <span class="hljs-string">H</span> ] <br>&#125;<br> <br><span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">/js/.*/\.js</span><br></code></pre></td></tr></table></figure><ul><li>已&#x3D;开头表示精确匹配</li><li>如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。</li><li>^~ 开头表示uri以某个常规字符串开头，不是正则匹配</li><li>~ 开头表示区分大小写的正则匹配;</li><li>~* 开头表示不区分大小写的正则匹配</li><li>&#x2F; 通用匹配, 如果没有其它匹配,任何请求都会匹配到</li></ul><p>顺序和优先级：<br><code>( location = ) &gt; ( location 完整路径 ) &gt; ( location ^~ 路径 ) &gt; ( location ~,~* 正则顺序 ) &gt; ( location 部分起始路径 ) &gt; ( / ) </code></p><p>上面的匹配结果<br>按照上面的location写法，以下的匹配示例成立：</p><ul><li>&#x2F; -&gt; config A<br>精确完全匹配，即使&#x2F;index.html也匹配不了</li><li>&#x2F;downloads&#x2F;download.html -&gt; config B<br>匹配B以后，往下没有任何匹配，采用B</li><li>&#x2F;images&#x2F;1.gif -&gt; configuration D<br>匹配到F，往下匹配到D，停止往下</li><li>&#x2F;images&#x2F;abc&#x2F;def -&gt; config D<br>最长匹配到G，往下匹配D，停止往下<br>你可以看到 任何以&#x2F;images&#x2F;开头的都会匹配到D并停止，FG写在这里是没有任何意义的，H是永远轮不到的，这里只是为了说明匹配顺序</li><li>&#x2F;documents&#x2F;document.html -&gt; config C<br>匹配到C，往下没有任何匹配，采用C</li><li>&#x2F;documents&#x2F;1.jpg -&gt; configuration E<br>匹配到C，往下正则匹配到E</li><li>&#x2F;documents&#x2F;Abc.jpg -&gt; config CC<br>最长匹配到C，往下正则顺序匹配到CC，不会往下到E</li></ul><h1 id="实际使用建议"><a href="#实际使用建议" class="headerlink" title="实际使用建议"></a>实际使用建议</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">所以实际使用中，通常建议至少有三个匹配规则定义，如下：</span><br><span class="hljs-comment">#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，比如说官网。</span><br><span class="hljs-comment">#这里是直接转发给后端应用服务器了，也可以是一个静态首页</span><br><span class="hljs-comment"># 第一个必选规则</span><br><span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/</span> &#123;<br>    <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://localhost:8080/index</span><br>&#125;<br><span class="hljs-comment"># 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项</span><br><span class="hljs-comment"># 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用</span><br><span class="hljs-string">location</span> <span class="hljs-string">^~</span> <span class="hljs-string">/static/</span> &#123;<br>    <span class="hljs-string">root</span> <span class="hljs-string">/webroot/static/;</span><br>&#125;<br><span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">\.(gif|jpg|jpeg|png|css|js|ico)$</span> &#123;<br>    <span class="hljs-string">root</span> <span class="hljs-string">/webroot/res/;</span><br>&#125;<br><span class="hljs-comment">#第三个规则就是通用规则，用来转发动态请求到后端应用服务器</span><br><span class="hljs-comment">#非静态文件请求就默认是动态请求，自己根据实际把握</span><br><span class="hljs-comment">#毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了</span><br><span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>    <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://localhost:8080/</span><br></code></pre></td></tr></table></figure><h1 id="Flag标志位"><a href="#Flag标志位" class="headerlink" title="Flag标志位"></a>Flag标志位</h1><ul><li>last : 相当于Apache的[L]标记，表示完成rewrite</li><li>break : 停止执行当前虚拟主机的后续rewrite指令集</li><li>redirect : 返回302临时重定向，地址栏会显示跳转后的地址</li><li>permanent : 返回301永久重定向，地址栏会显示跳转后的地址</li></ul><p>因为301和302不能简单的只返回状态码，还必须有重定向的URL，这就是return指令无法返回301,302的原因了。这里 last 和 break 区别有点难以理解：</p><ol><li>last一般写在server和if中，而break一般使用在location中</li><li>last不终止重写后的url匹配，即新的url会再从server走一遍匹配流程，而break终止重写后的匹配</li><li>break和last都能组织继续执行后面的rewrite指令</li></ol><h1 id="If-判断指令"><a href="#If-判断指令" class="headerlink" title="If 判断指令"></a>If 判断指令</h1><p>语法为if(condition){…}，对给定的条件condition进行判断。如果为真，大括号内的rewrite指令将被执行，if条件(conditon)可以是如下任何内容：</p><ul><li>当表达式只是一个变量时，如果值为空或任何以0开头的字符串都会当做false</li><li>直接比较变量和内容时，使用&#x3D;或!&#x3D;</li><li><del>正则表达式匹配，</del>*不区分大小写的匹配，!~区分大小写的不匹配</li></ul><p>-f和!-f用来判断是否存在文件<br>-d和!-d用来判断是否存在目录<br>-e和!-e用来判断是否存在文件或目录<br>-x和!-x用来判断文件是否可执行</p><p>比如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">if</span> <span class="hljs-string">($http_user_agent</span> <span class="hljs-string">~</span> <span class="hljs-string">MSIE)</span> &#123;<br>    <span class="hljs-string">rewrite</span> <span class="hljs-string">^(.*)$</span> <span class="hljs-string">/msie/$1</span> <span class="hljs-string">break;</span><br>&#125; <span class="hljs-string">//如果UA包含&quot;MSIE&quot;，rewrite请求到/msid/目录下</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">($http_cookie</span> <span class="hljs-string">~*</span> <span class="hljs-string">&quot;id=([^;]+)(?:;|$)&quot;</span><span class="hljs-string">)</span> &#123;<br>    <span class="hljs-string">set</span> <span class="hljs-string">$id</span> <span class="hljs-string">$1;</span><br> &#125; <span class="hljs-string">//如果cookie匹配正则，设置变量$id等于正则引用部分</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">($request_method</span> <span class="hljs-string">=</span> <span class="hljs-string">POST)</span> &#123;<br>    <span class="hljs-string">return</span> <span class="hljs-number">405</span><span class="hljs-string">;</span><br>&#125; <span class="hljs-string">//如果提交方法为POST，则返回状态405（Method</span> <span class="hljs-string">not</span> <span class="hljs-string">allowed）。return不能返回301,302</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">($slow)</span> &#123;<br>    <span class="hljs-string">limit_rate</span> <span class="hljs-string">10k;</span><br>&#125; <span class="hljs-string">//限速，$slow可以通过</span> <span class="hljs-string">set</span> <span class="hljs-string">指令设置</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">(!-f</span> <span class="hljs-string">$request_filename)&#123;</span><br>    <span class="hljs-string">break;</span><br>    <span class="hljs-string">proxy_pass</span>  <span class="hljs-string">http://127.0.0.1;</span> <br><span class="hljs-string">&#125;</span> <span class="hljs-string">//如果请求的文件名不存在，则反向代理到localhost</span> <span class="hljs-string">。这里的break也是停止rewrite检查</span><br> <br><span class="hljs-string">if</span> <span class="hljs-string">($args</span> <span class="hljs-string">~</span> <span class="hljs-string">post=140)&#123;</span><br>    <span class="hljs-string">rewrite</span> <span class="hljs-string">^</span> <span class="hljs-string">http://example.com/</span> <span class="hljs-string">permanent;</span><br><span class="hljs-string">&#125;</span> <span class="hljs-string">//如果query</span> <span class="hljs-string">string中包含&quot;post=140&quot;，永久重定向到example.com</span><br> <br><span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">\.(gif|jpg|png|swf|flv)$</span> &#123;<br>    <span class="hljs-string">valid_referers</span> <span class="hljs-string">none</span> <span class="hljs-string">blocked</span> <span class="hljs-string">www.jefflei.com</span> <span class="hljs-string">www.leizhenfang.com;</span><br>    <span class="hljs-string">if</span> <span class="hljs-string">($invalid_referer)</span> &#123;<br>        <span class="hljs-string">return</span> <span class="hljs-number">404</span><span class="hljs-string">;</span><br>    &#125; <span class="hljs-string">//防盗链</span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h1><p>下面是可以用作if判断的全局变量</p><ul><li>$args ： #这个变量等于请求行中的参数，同$query_string</li><li>$content_length ： 请求头中的Content-length字段。</li><li>$content_type ： 请求头中的Content-Type字段。</li><li>$document_root ： 当前请求在root指令中指定的值。</li><li>$host ： 请求主机头字段，否则为服务器名称。</li><li>$http_user_agent ： 客户端agent信息</li><li>$http_cookie ： 客户端cookie信息</li><li>$limit_rate ： 这个变量可以限制连接速率。</li><li>$request_method ： 客户端请求的动作，通常为GET或POST。</li><li>$remote_addr ： 客户端的IP地址。</li><li>$remote_port ： 客户端的端口。</li><li>$remote_user ： 已经经过Auth Basic Module验证的用户名。</li><li>$request_filename ： 当前请求的文件路径，由root或alias指令与URI请求生成。</li><li>$scheme ： HTTP方法（如http，https）。</li><li>$server_protocol ： 请求使用的协议，通常是HTTP&#x2F;1.0或HTTP&#x2F;1.1。</li><li>$server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值。</li><li>$server_name ： 服务器名称。</li><li>$server_port ： 请求到达服务器的端口号。</li><li>$request_uri ： 包含请求参数的原始URI，不包含主机名，如：”&#x2F;foo&#x2F;bar.php?arg&#x3D;baz”。</li><li>$uri ： 不带请求参数的当前URI，$uri不包含主机名，如”&#x2F;foo&#x2F;bar.html”。</li><li>$document_uri ： 与$uri相同。</li></ul><h1 id="常用正则"><a href="#常用正则" class="headerlink" title="常用正则"></a>常用正则</h1><p>常用正则<br>. ： 匹配除换行符以外的任意字符<br>? ： 重复0次或1次</p><ul><li>： 重复1次或更多次</li></ul><ul><li>： 重复0次或更多次<br>\d ：匹配数字<br>^ ： 匹配字符串的开始<br>$ ： 匹配字符串的介绍<br>{n} ： 重复n次<br>{n,} ： 重复n次或更多次<br>[c] ： 匹配单个字符c<br>[a-z] ： 匹配a-z小写字母的任意一个</li></ul><p>小括号()之间匹配的内容，可以在后面通过$1来引用，$2表示的是前面第二个()里的内容。正则里面容易让人困惑的是\转义特殊字符。</p><h1 id="Rewrite规则"><a href="#Rewrite规则" class="headerlink" title="Rewrite规则"></a>Rewrite规则</h1><p>rewrite功能就是，使用nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url重写以及重定向。rewrite只能放在server{},location{},if{}中，并且只能对域名后边的除去传递的参数外的字符串起作用，例如 <a href="http://seanlook.com/a/we/index.php?id=1&amp;u=str">http://seanlook.com/a/we/index.php?id=1&amp;u=str</a> 只对&#x2F;a&#x2F;we&#x2F;index.php重写。语法rewrite regex replacement [flag];</p><p>如果相对域名或参数字符串起作用，可以使用全局变量匹配，也可以使用proxy_pass反向代理。</p><p>表明看rewrite和location功能有点像，都能实现跳转，主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，可以proxy_pass到其他机器。很多情况下rewrite也会写在location里，它们的执行顺序是：</p><ol><li>执行server块的rewrite指令</li><li>执行location匹配</li><li>执行选定的location中的rewrite指令</li></ol><p>如果其中某步URI被重写，则重新循环执行1-3，直到找到真实存在的文件；循环超过10次，则返回500 Internal Server Error错误。</p><h1 id="Rewrite实例"><a href="#Rewrite实例" class="headerlink" title="Rewrite实例"></a>Rewrite实例</h1><p>以下先写两个例子，后续再补充</p><h2 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http</span> &#123;<br>    <span class="hljs-comment"># 定义image日志格式</span><br>    <span class="hljs-string">log_format</span> <span class="hljs-string">imagelog</span> <span class="hljs-string">&#x27;[$time_local] &#x27;</span> <span class="hljs-string">$image_file</span> <span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">$image_type</span> <span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">$body_bytes_sent</span> <span class="hljs-string">&#x27; &#x27;</span> <span class="hljs-string">$status;</span><br>    <span class="hljs-comment"># 开启重写日志</span><br>    <span class="hljs-string">rewrite_log</span> <span class="hljs-string">on;</span><br> <br>    <span class="hljs-string">server</span> &#123;<br>        <span class="hljs-string">root</span> <span class="hljs-string">/home/www;</span><br> <br>        <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>                <span class="hljs-comment"># 重写规则信息</span><br>                <span class="hljs-string">error_log</span> <span class="hljs-string">logs/rewrite.log</span> <span class="hljs-string">notice;</span> <br>                <span class="hljs-comment"># 注意这里要用‘’单引号引起来，避免&#123;&#125;</span><br>                <span class="hljs-string">rewrite</span> <span class="hljs-string">&#x27;^/images/([a-z]&#123;2&#125;)/([a-z0-9]&#123;5&#125;)/(.*)\.(png|jpg|gif)$&#x27;</span> <span class="hljs-string">/data?file=$3.$4;</span><br>                <span class="hljs-comment"># 注意不能在上面这条规则后面加上“last”参数，否则下面的set指令不会执行</span><br>                <span class="hljs-string">set</span> <span class="hljs-string">$image_file</span> <span class="hljs-string">$3;</span><br>                <span class="hljs-string">set</span> <span class="hljs-string">$image_type</span> <span class="hljs-string">$4;</span><br>        &#125;<br> <br>        <span class="hljs-string">location</span> <span class="hljs-string">/data</span> &#123;<br>                <span class="hljs-comment"># 指定针对图片的日志格式，来分析图片类型和大小</span><br>                <span class="hljs-string">access_log</span> <span class="hljs-string">logs/images.log</span> <span class="hljs-string">mian;</span><br>                <span class="hljs-string">root</span> <span class="hljs-string">/data/images;</span><br>                <span class="hljs-comment"># 应用前面定义的变量。判断首先文件在不在，不在再判断目录在不在，如果还不在就跳转到最后一个url里</span><br>                <span class="hljs-string">try_files</span> <span class="hljs-string">/$arg_file</span> <span class="hljs-string">/image404.html;</span><br>        &#125;<br>        <span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/image404.html</span> &#123;<br>                <span class="hljs-comment"># 图片不存在返回特定的信息</span><br>                <span class="hljs-string">return</span> <span class="hljs-number">404</span> <span class="hljs-string">&quot;image not found\n&quot;</span><span class="hljs-string">;</span><br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>对形如&#x2F;images&#x2F;ef&#x2F;uh7b3&#x2F;test.png的请求，重写到&#x2F;data?file&#x3D;test.png，于是匹配到location &#x2F;data，先看&#x2F;data&#x2F;images&#x2F;test.png文件存不存在，如果存在则正常响应，如果不存在则重写tryfiles到新的image404 location，直接返回404状态码。</p><h2 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">rewrite</span> <span class="hljs-string">^/images/(.*)_(\d+)x(\d+)\.(png|jpg|gif)$</span> <span class="hljs-string">/resizer/$1.$4?width=$2&amp;height=$3?</span> <span class="hljs-string">last;</span><br></code></pre></td></tr></table></figure><p>对形如&#x2F;images&#x2F;bla_500x400.jpg的文件请求，重写到&#x2F;resizer&#x2F;bla.jpg?width&#x3D;500&amp;height&#x3D;400地址，并会继续尝试匹配location。</p><h1 id="项目实例"><a href="#项目实例" class="headerlink" title="项目实例"></a>项目实例</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <br><span class="hljs-comment">#user  nobody;</span><br><span class="hljs-string">worker_processes</span>  <span class="hljs-number">1</span><span class="hljs-string">;</span><br> <br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br> <br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br> <br> <br><span class="hljs-string">events</span> &#123;<br>    <span class="hljs-string">worker_connections</span>  <span class="hljs-number">1024</span><span class="hljs-string">;</span><br>&#125;<br> <br><span class="hljs-string">http</span> &#123;<br>    <span class="hljs-string">include</span>       <span class="hljs-string">mime.types;</span><br>    <span class="hljs-string">default_type</span>  <span class="hljs-string">application/octet-stream;</span><br> <br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br> <br>    <span class="hljs-string">sendfile</span>        <span class="hljs-string">on;</span><br>    <span class="hljs-comment">#tcp_nopush     on;</span><br> <br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    <span class="hljs-string">keepalive_timeout</span>  <span class="hljs-number">65</span><span class="hljs-string">;</span><br> <br>    <span class="hljs-comment">#gzip  on;</span><br> <br>    <span class="hljs-string">server</span> &#123;<br>        <span class="hljs-string">listen</span>       <span class="hljs-number">9000</span><span class="hljs-string">;</span><br>        <span class="hljs-string">server_name</span>  <span class="hljs-string">*.unisiot.com;</span><br> <br>        <span class="hljs-comment">#charset koi8-r;</span><br> <br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br><span class="hljs-string">ssi</span> <span class="hljs-string">on;</span><br><span class="hljs-string">ssi_silent_errors</span> <span class="hljs-string">on;</span><br><span class="hljs-string">ssi_types</span> <span class="hljs-string">text/shtml;</span><br><span class="hljs-string">expires</span> <span class="hljs-string">30d;</span><br><br><span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>   <br>   <span class="hljs-string">if</span> <span class="hljs-string">($host</span> <span class="hljs-string">~</span> <span class="hljs-string">(^\S*?(?=\.\S*)))</span>&#123;<br><span class="hljs-string">set</span> <span class="hljs-string">$dns</span> <span class="hljs-string">$1;</span><br>   &#125;<br>   <span class="hljs-string">alias</span> <span class="hljs-string">F:/upload_file_root/subsite/$dns;</span><br>   <span class="hljs-string">index</span> <span class="hljs-string">index.html;</span><br>   <br>   <span class="hljs-comment">#判断终端</span><br>    <span class="hljs-string">if</span> <span class="hljs-string">($http_user_agent</span> <span class="hljs-string">~*</span> <span class="hljs-string">&#x27;(Android|webOS|iPhone|iPod|BlackBerry|iPad)&#x27;</span><span class="hljs-string">)</span> &#123;<br>               <span class="hljs-string">set</span> <span class="hljs-string">$mobile_request</span> <span class="hljs-string">&#x27;1&#x27;</span><span class="hljs-string">;</span><br>               <span class="hljs-comment">#如果访问UA为移动终端类型则判断为mobile_request=1</span><br>            &#125;<br>            <span class="hljs-string">if</span> <span class="hljs-string">($http_cookie</span> <span class="hljs-string">~</span> <span class="hljs-string">&#x27;mobile_request=full&#x27;</span><span class="hljs-string">)</span> &#123;<br>               <span class="hljs-string">set</span> <span class="hljs-string">$mobile_request</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">;</span><br>            &#125;<br>            <span class="hljs-string">if</span> <span class="hljs-string">($mobile_request</span> <span class="hljs-string">=</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">)</span> &#123;<br>               <span class="hljs-comment">#proxy_pass http://139.196.188.213;</span><br>   <span class="hljs-comment">#判断mobile_request等于空则为PC终端</span><br>   <span class="hljs-string">root</span>   <span class="hljs-string">F:/upload_file_root/subsite/$dns/web;</span><br>            &#125;<br>        <br>            <span class="hljs-comment">#break; </span><br><br><span class="hljs-string">if</span> <span class="hljs-string">($uri</span> <span class="hljs-string">~*</span> <span class="hljs-string">&#x27;(lobby|bedroom|livingroom|lavatory|kitchen|videoroom)&#x27;</span><span class="hljs-string">)</span> &#123;<br><span class="hljs-string">root</span>   <span class="hljs-string">F:/upload_file_root/subsite/$dns;</span><br>&#125;<br>&#125;<br><br><span class="hljs-string">location</span> <span class="hljs-string">/commonHtml</span> &#123;<br>            <span class="hljs-string">alias</span>   <span class="hljs-string">F:/upload_file_root/common/;</span>     <br>        &#125; <br><br><span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">^/(BJUI|ckeditor4.8|common|images|js|nice-validator|www|static)/</span> &#123;<br>            <span class="hljs-string">root</span>   <span class="hljs-string">F:/upload_file_root/static;</span> <br>            <span class="hljs-string">autoindex</span> <span class="hljs-string">on;</span><br>            <span class="hljs-string">access_log</span>  <span class="hljs-string">off;</span><br>            <span class="hljs-string">expires</span>     <span class="hljs-string">30d;</span>          <br>        &#125;<br><br><span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">^/(upload)/</span> &#123;<br>            <span class="hljs-string">root</span>   <span class="hljs-string">F:/upload_file_root/;</span> <br>            <span class="hljs-string">autoindex</span> <span class="hljs-string">on;</span><br>            <span class="hljs-string">access_log</span>  <span class="hljs-string">off;</span><br>            <span class="hljs-string">expires</span>     <span class="hljs-string">30d;</span>          <br>        &#125;<br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-string">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  <span class="hljs-string">/50x.html;</span><br>        <span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/50x.html</span> &#123;<br>            <span class="hljs-string">root</span>   <span class="hljs-string">html;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>原文：<a href="https://blog.csdn.net/weixin_44299027/article/details/107286956">【Nginx用法】nginx location正则表达式写法，详解Nginx location 匹配规则（很详细哦）</a></p><p>【参考资料】</p><p>1、nginx平台初探(100%)：<a href="http://tengine.taobao.org/book/chapter_02.html">nginx平台初探(100%) — Nginx开发从入门到精通</a></p><p>2、Module ngx_http_rewrite_module：<a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html">Module ngx_http_rewrite_module</a></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>nginx</tag>
      
      <tag>运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>selenium 模拟点击hcaptcha和recaptcha验证码</title>
    <link href="/2022/08/12/selenium-%E6%A8%A1%E6%8B%9F%E7%82%B9%E5%87%BBhcaptcha%E5%92%8Crecaptcha%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <url>/2022/08/12/selenium-%E6%A8%A1%E6%8B%9F%E7%82%B9%E5%87%BBhcaptcha%E5%92%8Crecaptcha%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.selenium.dev/">selenium</a> 是一个调用浏览器进行自动化控制的包，支持Java Python CSharp Ruby JavaScript Kotlin。用它可以模拟点击、输入，进行人类的操作。本篇文章以python模拟点击验证码为例来说明selenium的使用。</p><blockquote><p>本文非原创，而是作者的学习笔记</p></blockquote><span id="more"></span><h1 id="hcaptcha"><a href="#hcaptcha" class="headerlink" title="hcaptcha"></a>hcaptcha</h1><p>HCaptcha 的 <a href="https://democaptcha.com/demo-form-eng/hcaptcha.html">Demo 网站</a>如下，打开之后，我们可以看到如下的验证码入口页面：<br><a href="https://democaptcha.com/demo-form-eng/hcaptcha.html">https://democaptcha.com/demo-form-eng/hcaptcha.html</a></p><p><img src="/2022/08/12/selenium-%E6%A8%A1%E6%8B%9F%E7%82%B9%E5%87%BBhcaptcha%E5%92%8Crecaptcha%E9%AA%8C%E8%AF%81%E7%A0%81/hcaptcha_demo.png"></p><p>点击复选框时，验证码会先通过其风险分析引擎判断当前用户的风险，如果是低风险用户，便可以直接通过，反之，验证码会弹出对话框，让我们回答对话框中的问题。其实这个比 ReCaptcha 简单一些，它的验证码图片每次一定是 3x3 的，没有 4x4 的，而且点击一个图之后不会再出现一个新的小图让我们二次选择，所以其破解思路也相对简单一些。‘</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Python3WebSpider/HCaptchaResolver">https://github.com/Python3WebSpider/HCaptchaResolver</a> </p><h2 id="识别封装"><a href="#识别封装" class="headerlink" title="识别封装"></a>识别封装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.support.wait <span class="hljs-keyword">import</span> WebDriverWait<br><span class="hljs-keyword">from</span> selenium.webdriver.remote.webelement <span class="hljs-keyword">import</span> WebElement<br><span class="hljs-keyword">from</span> selenium.webdriver.common.action_chains <span class="hljs-keyword">import</span> ActionChains<br><span class="hljs-keyword">from</span> app.captcha_resolver <span class="hljs-keyword">import</span> CaptchaResolver<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, url</span>):<br>        self.browser = webdriver.Chrome()<br>        self.browser.get(url)<br>        self.wait = WebDriverWait(self.browser, <span class="hljs-number">10</span>)<br>        self.captcha_resolver = CaptchaResolver()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__del__</span>(<span class="hljs-params">self</span>):<br>        time.sleep(<span class="hljs-number">10</span>)<br>        self.browser.close()<br></code></pre></td></tr></table></figure><h2 id="iframe-切换支持"><a href="#iframe-切换支持" class="headerlink" title="iframe 切换支持"></a>iframe 切换支持</h2><p>这个验证码和 ReCaptcha 都是在 iframe 里面加载的，另外弹出的验证码图片又在另外一个 iframe 里面。所以需要切换 iframe</p><p><img src="/2022/08/12/selenium-%E6%A8%A1%E6%8B%9F%E7%82%B9%E5%87%BBhcaptcha%E5%92%8Crecaptcha%E9%AA%8C%E8%AF%81%E7%A0%81/hcaptcha_entry_iframe.png"></p><p>分别能够支持切换到入口对应的 iframe 和验证码本身对应的 iframe:</p><p><img src="/2022/08/12/selenium-%E6%A8%A1%E6%8B%9F%E7%82%B9%E5%87%BBhcaptcha%E5%92%8Crecaptcha%E9%AA%8C%E8%AF%81%E7%A0%81/hcaptcha_content_iframe.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_captcha_entry_iframe</span>(<span class="hljs-params">self</span>) -&gt; WebElement:<br>        self.browser.switch_to.default_content()<br>        captcha_entry_iframe = self.browser.find_element_by_css_selector(<br>            <span class="hljs-string">&#x27;.h-captcha &gt; iframe&#x27;</span>)<br>        <span class="hljs-keyword">return</span> captcha_entry_iframe<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">switch_to_captcha_entry_iframe</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-literal">None</span>:<br>        captcha_entry_iframe: WebElement = self.get_captcha_entry_iframe()<br>        self.browser.switch_to.frame(captcha_entry_iframe)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_captcha_content_iframe</span>(<span class="hljs-params">self</span>) -&gt; WebElement:<br>        self.browser.switch_to.default_content()<br>        captcha_content_iframe = self.browser.find_element_by_xpath(<br>            <span class="hljs-string">&#x27;//iframe[contains(@title, &quot;Main content&quot;)]&#x27;</span>)<br>        <span class="hljs-keyword">return</span> captcha_content_iframe<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">switch_to_captcha_content_iframe</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-literal">None</span>:<br>        captcha_content_iframe: WebElement = self.get_captcha_content_iframe()<br>        self.browser.switch_to.frame(captcha_content_iframe)<br><br></code></pre></td></tr></table></figure><h2 id="触发验证码"><a href="#触发验证码" class="headerlink" title="触发验证码"></a>触发验证码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">trigger_captcha</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-literal">None</span>:<br>        self.switch_to_captcha_entry_iframe()<br>        captcha_entry = self.wait.until(EC.presence_of_element_located(<br>            (By.CSS_SELECTOR, <span class="hljs-string">&#x27;#anchor #checkbox&#x27;</span>)))<br>        captcha_entry.click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        self.switch_to_captcha_content_iframe()<br>        captcha_element: WebElement = self.get_captcha_element()<br>        <span class="hljs-keyword">if</span> captcha_element.is_displayed:<br>            logger.debug(<span class="hljs-string">&#x27;trigged captcha successfully&#x27;</span>)<br></code></pre></td></tr></table></figure><p>首先调用 switch_to_captcha_entry_iframe 进行了 iframe 的切换，然后找到那个入口框对应的节点，然后点击一下。</p><p>点击完了之后我们再调用 switch_to_captcha_content_iframe 切换到验证码本身对应的 iframe 里面，查找验证码本身对应的节点是否加载出来了，如果加载出来了，那么就证明触发成功了。</p><p>怎么查找问题呢呢？用 Selenium 常规的节点搜索就好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">    def get_captcha_target_text(self) -&gt; WebElement:<br>        captcha_target_name_element: WebElement = self.wait.until(EC.presence_of_element_located(<br>            (By.CSS_SELECTOR, <span class="hljs-string">&#x27;.prompt-text&#x27;</span>)))<br>        <span class="hljs-built_in">return</span> captcha_target_name_element.text<br></code></pre></td></tr></table></figure><p>通过调用这个方法，我们就能得到上图中完整的问题文本了。</p><h2 id="验证码识别"><a href="#验证码识别" class="headerlink" title="验证码识别"></a>验证码识别</h2><p>每张图片进行下载并转成 Base64 编码了，我们观察下它的 HTML 结构</p><p><img src="/2022/08/12/selenium-%E6%A8%A1%E6%8B%9F%E7%82%B9%E5%87%BBhcaptcha%E5%92%8Crecaptcha%E9%AA%8C%E8%AF%81%E7%A0%81/image_html.png"></p><p>每个验证码其实都对应了一个 .task-image 的节点，然后里面有个 .image-wrapper 的节点，在里面有一个 .image 的节点，那图片怎么呈现的呢？这里它是设置了一个 style CSS 样式，通过 CSS 的 backgroud 来设置了验证码图片的地址。</p><p>所以，我们要想提取验证码图片也比较容易了，我们只需要找出 .image 节点的 style 属性的内容，然后提取其中的 url 就好了。</p><p>得到 URL 之后，转下 Base64 编码，利用 captcha_resolver 就可以对内容进行识别了。</p><p>所以代码可以写为如下内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python">    <span class="hljs-keyword">def</span> <span class="hljs-title function_">verify_captcha</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># get target text</span><br>        self.captcha_target_text = self.get_captcha_target_text()<br>        logger.debug(<br>            <span class="hljs-string">f&#x27;captcha_target_text <span class="hljs-subst">&#123;self.captcha_target_text&#125;</span>&#x27;</span><br>        )<br>        <span class="hljs-comment"># extract all images</span><br>        single_captcha_elements = self.wait.until(EC.visibility_of_all_elements_located(<br>            (By.CSS_SELECTOR, <span class="hljs-string">&#x27;.task-image .image-wrapper .image&#x27;</span>)))<br>        resized_single_captcha_base64_strings = []<br>        <span class="hljs-keyword">for</span> i, single_captcha_element <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(single_captcha_elements):<br>            single_captcha_element_style = single_captcha_element.get_attribute(<br>                <span class="hljs-string">&#x27;style&#x27;</span>)<br>            pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">&#x27;url\(&quot;(https.*?)&quot;\)&#x27;</span>)<br>            match_result = re.search(pattern, single_captcha_element_style)<br>            single_captcha_element_url = match_result.group(<br>                <span class="hljs-number">1</span>) <span class="hljs-keyword">if</span> match_result <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span><br>            logger.debug(<br>                <span class="hljs-string">f&#x27;single_captcha_element_url <span class="hljs-subst">&#123;single_captcha_element_url&#125;</span>&#x27;</span>)<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(CAPTCHA_SINGLE_IMAGE_FILE_PATH % (i,), <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                f.write(requests.get(single_captcha_element_url).content)<br>            resized_single_captcha_base64_string = resize_base64_image(<br>                CAPTCHA_SINGLE_IMAGE_FILE_PATH % (i,), (<span class="hljs-number">100</span>, <span class="hljs-number">100</span>))<br>            resized_single_captcha_base64_strings.append(<br>                resized_single_captcha_base64_string)<br><br>        logger.debug(<br>            <span class="hljs-string">f&#x27;length of single_captcha_element_urls <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(resized_single_captcha_base64_strings)&#125;</span>&#x27;</span>)<br></code></pre></td></tr></table></figure><p>用正则表达式提取出来了每张验证码图片的 url，提取出 url 之后，我们然后将其存入了 <code>resized_single_captcha_base64_strings</code> 列表里面。</p><p>这里的 Base64 编码我们单独定义了一个方法，传入了图片路径和调整大小，然后可以返回编码后的结果，定义如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> app.settings <span class="hljs-keyword">import</span> CAPTCHA_RESIZED_IMAGE_FILE_PATH<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">resize_base64_image</span>(<span class="hljs-params">filename, size</span>):<br>    width, height = size<br>    img = Image.<span class="hljs-built_in">open</span>(filename)<br>    new_img = img.resize((width, height))<br>    new_img.save(CAPTCHA_RESIZED_IMAGE_FILE_PATH)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(CAPTCHA_RESIZED_IMAGE_FILE_PATH, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        data = f.read()<br>        encoded_string = base64.b64encode(data)<br>        <span class="hljs-keyword">return</span> encoded_string.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="图像识别"><a href="#图像识别" class="headerlink" title="图像识别"></a>图像识别</h2><p>略</p><h2 id="模拟点击"><a href="#模拟点击" class="headerlink" title="模拟点击"></a>模拟点击</h2><p>得到 true false 列表了，我们只需要将结果是 true 的序号提取出来，然后对这些验证码小图点击就好了，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># click captchas</span><br>recognized_indices = [i <span class="hljs-keyword">for</span> i, x <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(recognized_results) <span class="hljs-keyword">if</span> x]<br>logger.debug(<span class="hljs-string">f&#x27;recognized_indices <span class="hljs-subst">&#123;recognized_indices&#125;</span>&#x27;</span>)<br>click_targets = self.wait.until(EC.visibility_of_all_elements_located(<br>    (By.CSS_SELECTOR, <span class="hljs-string">&#x27;.task-image&#x27;</span>)))<br><span class="hljs-keyword">for</span> recognized_index <span class="hljs-keyword">in</span> recognized_indices:<br>    click_target: WebElement = click_targets[recognized_index]<br>    click_target.click()<br>    time.sleep(random())<br></code></pre></td></tr></table></figure><p>这里我们用 for 循环将 true false 列表转成了一个列表，列表的每个元素代表 true 在列表中的位置，其实就是我们的点击目标了。</p><p>然后接着我们获取了所有的验证码小图对应的节点，然后依次调用 click 方法进行点击即可。</p><p>这样我们就可以实现验证码小图的逐个识别了。</p><h2 id="点击验证"><a href="#点击验证" class="headerlink" title="点击验证"></a>点击验证</h2><p>好，那么有了上面的逻辑，我们就能完成整个 HCaptcha 的识别和点选了。</p><p>最后，我们模拟点击验证按钮就好了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># after all captcha clicked</span><br>verify_button: WebElement = self.get_verify_button()<br><span class="hljs-keyword">if</span> verify_button.is_displayed:<br>    verify_button.click()<br>    time.sleep(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>而 verfiy_button 的提取也是用 Selenium 即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_verify_button</span>(<span class="hljs-params">self</span>) -&gt; WebElement:<br>    verify_button = self.wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, <span class="hljs-string">&#x27;.button-submit&#x27;</span>)))<br>    <span class="hljs-keyword">return</span> verify_button<br></code></pre></td></tr></table></figure><h2 id="校验结果"><a href="#校验结果" class="headerlink" title="校验结果"></a>校验结果</h2><p>验证成功的标志就是出现一个绿色小对勾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_is_successful</span>(<span class="hljs-params">self</span>):<br>    self.switch_to_captcha_entry_iframe()<br>    anchor: WebElement = self.wait.until(EC.visibility_of_element_located((<br>        By.CSS_SELECTOR, <span class="hljs-string">&#x27;#anchor #checkbox&#x27;</span><br>    )))<br>    checked = anchor.get_attribute(<span class="hljs-string">&#x27;aria-checked&#x27;</span>)<br>    logger.debug(<span class="hljs-string">f&#x27;checked <span class="hljs-subst">&#123;checked&#125;</span>&#x27;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(checked) == <span class="hljs-string">&#x27;true&#x27;</span><br></code></pre></td></tr></table></figure><p>这里我们先切换了 iframe，然后检查了对应的 class 是否是符合期望的。</p><p>最后如果 get_is_successful 返回结果是 True，那就代表识别成功了，那就整个完成了。</p><p>如果返回结果是 False，我们可以进一步递归调用上述逻辑进行二次识别，直到识别成功即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># check if succeed</span><br>is_succeed = self.get_is_successful()<br><span class="hljs-keyword">if</span> is_succeed:<br>    logger.debug(<span class="hljs-string">&#x27;verifed successfully&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    self.verify_captcha()<br></code></pre></td></tr></table></figure><h1 id="ReCaptcha"><a href="#ReCaptcha" class="headerlink" title="ReCaptcha"></a>ReCaptcha</h1><p>待续</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>python</tag>
      
      <tag>selenium</tag>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>selenium识别验证码是否通过</title>
    <link href="/2022/08/12/selenium%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81%E6%98%AF%E5%90%A6%E9%80%9A%E8%BF%87/"/>
    <url>/2022/08/12/selenium%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81%E6%98%AF%E5%90%A6%E9%80%9A%E8%BF%87/</url>
    
    <content type="html"><![CDATA[<p>其实就是识别验证码勾选框有没有打勾。</p><span id="more"></span><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>切换到验证码的iframe页anchor，获取元素recaptcha-anchor的属性aria-checked就可以了。<code>false</code> 和 <code>true</code> </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python3">import time<br>import requests<br>from selenium import webdriver<br><br>options = webdriver.ChromeOptions()<br>driver = webdriver.Chrome(&#x27;selenium/chromedriver.exe&#x27;, options=options)<br><br>driver.get(&quot;https://www.google.com/recaptcha/api2/demo&quot;)<br><br># 切换到勾选框<br>iframe = driver.find_element_by_css_selector(&#x27;iframe[src*=&quot;anchor&quot;]&#x27;)<br>driver.switch_to.frame(iframe)<br><br># 获取勾选框的打勾状态<br>for i in range(30):<br>    anchor = driver.find_element_by_id(&#x27;recaptcha-anchor&#x27;)<br>    is_checked = anchor.get_attribute(&quot;aria-checked&quot;)<br>    print(&#x27;当前识别状态：&#x27;, is_checked)<br>    time.sleep(3)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>python</tag>
      
      <tag>selenium</tag>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx反代Scaleway s3对象储存媒体文件配置</title>
    <link href="/2022/08/04/nginx%E5%8F%8D%E4%BB%A3s3%E5%AF%B9%E8%B1%A1%E5%82%A8%E5%AD%98%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/08/04/nginx%E5%8F%8D%E4%BB%A3s3%E5%AF%B9%E8%B1%A1%E5%82%A8%E5%AD%98%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>nginx反代Scaleway s3对象储存媒体文件的配置文件模板。</p><span id="more"></span><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://docs.joinmastodon.org/admin/optional/object-storage-proxy/">Proxying object storage through nginx</a></li><li><a href="https://pullopen.github.io/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/2020/07/22/Move-mastodon-media-to-Scaleway.html">如何将Mastodon媒体上传至Scaleway云储存</a></li></ul><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>例如 <code>s3.nl-ams.scw.cloud</code> 是你的 YOUR_S3_HOSTNAME：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">proxy_cache_path</span> <span class="hljs-string">/tmp/nginx_mstdn_media</span> <span class="hljs-string">levels=1:2</span> <span class="hljs-string">keys_zone=mastodon_media:100m</span> <span class="hljs-string">max_size=1g</span> <span class="hljs-string">inactive=24h;</span><br><br><span class="hljs-string">server</span> &#123;<br>  <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>  <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>  <span class="hljs-string">server_name</span> <span class="hljs-string">YOUR_BUCKET_NAME;</span><br>  <span class="hljs-string">root</span> <span class="hljs-string">/var/www/html;</span><br><br>  <span class="hljs-string">ssl_certificate</span> <span class="hljs-string">/etc/letsencrypt/live/YOUR_BUCKET_NAME/fullchain.pem;</span><br>  <span class="hljs-string">ssl_certificate_key</span> <span class="hljs-string">/etc/letsencrypt/live/YOUR_BUCKET_NAME/privkey.pem;</span><br><br>  <span class="hljs-string">keepalive_timeout</span> <span class="hljs-number">30</span><span class="hljs-string">;</span><br><br>  <span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/</span> &#123;<br>    <span class="hljs-string">index</span> <span class="hljs-string">index.html;</span><br>  &#125;<br><br>  <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>    <span class="hljs-string">try_files</span> <span class="hljs-string">$uri</span> <span class="hljs-string">@s3;</span><br>  &#125;<br><br>  <span class="hljs-string">set</span> <span class="hljs-string">$s3_backend</span> <span class="hljs-string">&#x27;https://YOUR_BUCKET_NAME.s3.nl-ams.scw.cloud&#x27;</span><span class="hljs-string">;</span><br><br>  <span class="hljs-string">location</span> <span class="hljs-string">@s3</span> &#123;<br>    <span class="hljs-string">limit_except</span> <span class="hljs-string">GET</span> &#123;<br>      <span class="hljs-string">deny</span> <span class="hljs-string">all;</span><br>    &#125;<br><br>    <span class="hljs-string">resolver</span> <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span> <span class="hljs-string">YOUR_BUCKET_NAME.s3.nl-ams.scw.cloud;</span><br>    <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Connection</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Authorization</span> <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">Set-Cookie;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Methods&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-id-2;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-request-id;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-meta-server-side-encryption;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-server-side-encryption;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amz-bucket-region;</span><br>    <span class="hljs-string">proxy_hide_header</span> <span class="hljs-string">x-amzn-requestid;</span><br>    <span class="hljs-string">proxy_ignore_headers</span> <span class="hljs-string">Set-Cookie;</span><br>    <span class="hljs-string">proxy_pass</span> <span class="hljs-string">$s3_backend$uri;</span><br>    <span class="hljs-string">proxy_intercept_errors</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-string">proxy_cache</span> <span class="hljs-string">mastodon_media;</span><br>    <span class="hljs-string">proxy_cache_valid</span> <span class="hljs-number">200</span> <span class="hljs-string">48h;</span><br>    <span class="hljs-string">proxy_cache_use_stale</span> <span class="hljs-string">error</span> <span class="hljs-string">timeout</span> <span class="hljs-string">updating</span> <span class="hljs-string">http_500</span> <span class="hljs-string">http_502</span> <span class="hljs-string">http_503</span> <span class="hljs-string">http_504;</span><br>    <span class="hljs-string">proxy_cache_lock</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-string">expires</span> <span class="hljs-string">1y;</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Cache-Control</span> <span class="hljs-string">public;</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="hljs-string">&#x27;*&#x27;</span><span class="hljs-string">;</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">X-Cache-Status</span> <span class="hljs-string">$upstream_cache_status;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决Skipping acquire of configured file &#39;main/binary-i386/Packages&#39; as repository &#39;xxx&#39; doesn&#39;t support architecture &#39;i386&#39;</title>
    <link href="/2022/08/04/%E8%A7%A3%E5%86%B3Skipping-acquire-of-configured-file-main-binary-i386-Packages-as-repository-xxx-doesn-t-support-architecture-i386/"/>
    <url>/2022/08/04/%E8%A7%A3%E5%86%B3Skipping-acquire-of-configured-file-main-binary-i386-Packages-as-repository-xxx-doesn-t-support-architecture-i386/</url>
    
    <content type="html"><![CDATA[<p>在<a href="https://www.linuxcapable.com/how-to-install-upgrade-latest-nginx-mainline-stable-on-ubuntu-20-04/#gsc.tab=0">安装1.22版nginx</a>的时候遇到了个问题。编辑 <code>/etc/apt/sources.list.d/nginx.list</code> 的时候加进去的库，在 <code>apt update</code> 的时候报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">N: Skipping acquire of configured file <span class="hljs-string">&#x27;nginx/binary-i386/Packages&#x27;</span> as repository <span class="hljs-string">&#x27;http://nginx.org/packages/ubuntu focal InRelease&#x27;</span> doesn<span class="hljs-string">&#x27;t support architecture &#x27;</span>i386<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><span id="more"></span><h1 id="解决办法1"><a href="#解决办法1" class="headerlink" title="解决办法1"></a>解决办法1</h1><p>首先找到的解决办法是在 <code>nginx.list</code> 指定arch为amd，也就是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb [arch=amd64] [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \</span><br><span class="hljs-string">http://nginx.org/packages/ubuntu `lsb_release -cs` nginx&quot;</span> \<br>    | sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/nginx.list<br></code></pre></td></tr></table></figure><p>但这样运行 <code>apt update</code> 依然会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">E: Malformed entry 1 <span class="hljs-keyword">in</span> list file /etc/apt/sources.list.d/nginx.list (URI parse)<br>E: The list of sources could not be <span class="hljs-built_in">read</span>.<br></code></pre></td></tr></table></figure><h1 id="根本解决办法"><a href="#根本解决办法" class="headerlink" title="根本解决办法"></a>根本解决办法</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://askubuntu.com/questions/741410/skipping-acquire-of-configured-file-main-binary-i386-packages-as-repository-x">Skipping acquire of configured file ‘main&#x2F;binary-i386&#x2F;Packages’ as repository ‘xxx’ doesn’t support architecture ‘i386’</a></li><li><a href="https://blog.csdn.net/Leo_whj/article/details/111639223">Ubuntu dpkg查看与修改architecture</a></li></ul><h2 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h2><p>先找到出问题的库，比如说 <code>repository &#39;xxx&#39; doesn&#39;t support architecture &#39;i386&#39;</code> ，那么我们就运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/apt/sources.list.d<br>grep -r xxx（出问题的库）  /etc/apt | grep -v amd64 <br><span class="hljs-comment"># 或者</span><br>grep xxx（出问题的库） * | grep -v amd64<br></code></pre></td></tr></table></figure><p>例如我这里可以用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/apt/sources.list.d<br>grep nginx * | grep -v amd64<br><span class="hljs-comment"># 或者</span><br>grep nginx * | grep -v amd64<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/apt/sources.list.d/nginx.list:deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu focal nginx<br></code></pre></td></tr></table></figure><p>那么我们就得到了.list文件名+路径 ： <code>/etc/apt/sources.list.d/nginx.list</code></p><p>这个就是出问题的。可以先试试在这个文件里面加上 <code>[arch=amd64]</code></p><p>例如我的例子，编辑 <code>/etc/apt/sources.list.d/nginx.list</code> 文件为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb [<span class="hljs-built_in">arch</span>=amd64] [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu focal nginx<br></code></pre></td></tr></table></figure><p>我这样失败了。因为这个语法会被判定为木马，那我们先取消这个解决办法，来找找根本原因</p><h2 id="根本原因"><a href="#根本原因" class="headerlink" title="根本原因"></a>根本原因</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看本机的架构内核</span><br>dpkg --print-architecture<br><span class="hljs-comment"># 查看多架构支持内核</span><br>dpkg --print-foreign-architectures<br></code></pre></td></tr></table></figure><p>第二条命令输出i386是让64位ubuntu运行32位程序，也就是多架构支持。也就是这个地方，导致了我们会出现这样的报错。</p><p>如果你不想要多架构支持，可以移除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg --remove-architecture i386<br></code></pre></td></tr></table></figure><p>之后再运行 <code>apt update</code> 即可。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>boring Bay clicker(linux 运行pyppeteer报错pyppeteer.errors.BrowserError Browser closed unexpectedly的解决办法)</title>
    <link href="/2022/08/02/boring-Bay-clicker/"/>
    <url>/2022/08/02/boring-Bay-clicker/</url>
    
    <content type="html"><![CDATA[<p>一个很无聊的项目~~ 使用 <code>pyppeteer</code> 模拟点击本博客的无聊湾链接，来刷点击量。</p><span id="more"></span><h1 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h1><p>仓库：<br><a href="https://github.com/tech-fever/boringBayClicker">https://github.com/tech-fever/boringBayClicker</a></p><h1 id="部署到VPS"><a href="#部署到VPS" class="headerlink" title="部署到VPS"></a>部署到VPS</h1><p>发现 <code>debian/ubuntu</code> 要运行的话缺少很多依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libcairo-gobject2 libxinerama1 libgtk2.0-0 libpangoft2-1.0-0 libthai0 libpixman-1-0 libxcb-render0 libharfbuzz0b libdatrie1 libgraphite2-3 libgbm1<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/tech-fever/boringBayClicker &amp;&amp; <span class="hljs-built_in">cd</span> boringBayClicker<br>pip install -r requirements.txt<br>python main<br></code></pre></td></tr></table></figure><h1 id="一些查看"><a href="#一些查看" class="headerlink" title="一些查看"></a>一些查看</h1><p>查看对应系统下的 <code>chromium</code> 安装路径和相关参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pyppeteer.launcher <span class="hljs-keyword">import</span> Launcher<br><span class="hljs-keyword">import</span> pyppeteer.chromium_downloader<br> <span class="hljs-string">&#x27; &#x27;</span>.join(Launcher().cmd)<br><span class="hljs-built_in">print</span>(pyppeteer.chromium_downloader.chromiumExecutable.get(<span class="hljs-string">&quot;linux&quot;</span>))<br><span class="hljs-built_in">print</span>(pyppeteer.chromium_downloader.chromiumExecutable.get(<span class="hljs-string">&quot;mac&quot;</span>))<br><span class="hljs-built_in">print</span>(pyppeteer.chromium_downloader.chromiumExecutable.get(<span class="hljs-string">&quot;win32&quot;</span>))<br><span class="hljs-built_in">print</span>(pyppeteer.chromium_downloader.chromiumExecutable.get(<span class="hljs-string">&quot;win64&quot;</span>))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to Extract Azure API</title>
    <link href="/2022/07/25/How-to-Extract-Azure-API/"/>
    <url>/2022/07/25/How-to-Extract-Azure-API/</url>
    
    <content type="html"><![CDATA[<p>本文是如何提取Azure API从而使用API面板的教学。</p><span id="more"></span><h1 id="登录Azure"><a href="#登录Azure" class="headerlink" title="登录Azure"></a>登录Azure</h1><p>点此登录 -&gt; <a href="https://portal.azure.com/">MicroSoft Azure</a></p><h1 id="登录-Azure-Cloud-Shell"><a href="#登录-Azure-Cloud-Shell" class="headerlink" title="登录 Azure Cloud Shell"></a>登录 Azure Cloud Shell</h1><p>进入主页后，如图，点击：<br><img src="/2022/07/25/How-to-Extract-Azure-API/cli.jpg"></p><p>在网页下方找到Azure Cloud Shell再点击 <code>bash</code> :<br><img src="/2022/07/25/How-to-Extract-Azure-API/bash.jpg"></p><p>如果是初次使用，需要先选择订阅，然后点击 <code>Create storage</code>:<br><img src="/2022/07/25/How-to-Extract-Azure-API/createStorage.jpg"></p><p>需要耗费一些时间，请耐心等待几分钟。</p><p>之后你会看到这样的界面：<br><img src="/2022/07/25/How-to-Extract-Azure-API/shell.jpg"></p><h1 id="生成API"><a href="#生成API" class="headerlink" title="生成API"></a>生成API</h1><p>输入下面命令并按回车即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">az ad sp create-for-rbac --role contributor --scopes /subscriptions/$(az account list --query [].<span class="hljs-built_in">id</span> -o tsv) <br></code></pre></td></tr></table></figure><p><img src="/2022/07/25/How-to-Extract-Azure-API/cmd.jpg"></p><p>对于生成的信息，我们只复制大括号和大括号中间的内容。也就是类似下面的json格式信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>  <span class="hljs-string">&quot;appId&quot;</span>: <span class="hljs-string">&quot;e84cae80-c647-424d-8934-0de6da2ede0d&quot;</span>,<br>  <span class="hljs-string">&quot;displayName&quot;</span>: <span class="hljs-string">&quot;azcli&quot;</span>,<br>  <span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-string">&quot;DzXHi!EwGn2pp0Wbtbx5px3RYFsMYT9yZD&quot;</span>,<br>  <span class="hljs-string">&quot;tenant&quot;</span>: <span class="hljs-string">&quot;7e0a6485-5a39-4e2f-a12b-13e6c4a5b053&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>保存即可。</p><h1 id="导入azpanel"><a href="#导入azpanel" class="headerlink" title="导入azpanel"></a>导入azpanel</h1><p>以azpanel为例，导入：<br><img src="/2022/07/25/How-to-Extract-Azure-API/azadd.jpg"></p><p>其余皆可留空，输入你的Azure登陆邮箱和刚刚得到的json信息（就是大括号那一坨）即可。<br><img src="/2022/07/25/How-to-Extract-Azure-API/azadd2.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>学习</tag>
      
      <tag>Azure</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>azpanel: 免费开源的azure api面板</title>
    <link href="/2022/07/24/azpanel-azure-api-panel/"/>
    <url>/2022/07/24/azpanel-azure-api-panel/</url>
    
    <content type="html"><![CDATA[<p>azpanel是一个免费开源的azure api面板。官方给的安装教程有用lnmp和bt面板的，这两种我都不太喜欢，所以写一下手动安装教程。</p><span id="more"></span><h1 id="项目信息"><a href="#项目信息" class="headerlink" title="项目信息"></a>项目信息</h1><ul><li>项目地址：<a href="https://github.com/azpanel/azpanel">https://github.com/azpanel/azpanel</a></li><li>演示站点：<a href="https://azpanel.net/">https://azpanel.net</a></li><li>telegram 频道：<a href="https://t.me/azpanel">https://t.me/azpanel</a></li><li>telegram 群聊：<a href="https://t.me/+w_DuAFGop4kzOGYx">https://t.me/+w_DuAFGop4kzOGYx</a></li></ul><h1 id="官方安装教程"><a href="#官方安装教程" class="headerlink" title="官方安装教程"></a>官方安装教程</h1><ul><li><p>lnmp.org<br><a href="https://github.com/azpanel/azpanel/wiki/lnmp.org">https://github.com/azpanel/azpanel/wiki/lnmp.org</a></p></li><li><p>bt.cn<br><a href="https://github.com/azpanel/azpanel/wiki/bt.cn">https://github.com/azpanel/azpanel/wiki/bt.cn</a></p></li></ul><h1 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h1><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><p>理论上配置不要太低的Linux服务器都可以。我是在Ubuntu 20.04 LTS上安装的，本文命令也是基于此。</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>我们需要安装的东西有：<br>☑️ Nginx 1.17<br>☑️ MySQL 5.6 (或者mariadb)<br>☑️ PHP 7.2.5+</p><h2 id="安装PHP和nginx"><a href="#安装PHP和nginx" class="headerlink" title="安装PHP和nginx"></a>安装PHP和nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update &amp;&amp; apt upgrade -y<br>apt install php-fpm php-mysql php-curl php-xml nginx -y<br></code></pre></td></tr></table></figure><p>验证是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -v<br>nginx -v<br></code></pre></td></tr></table></figure><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>这里我是采用docker安装，其实直接安装也很方便啦。</p><h3 id="安装docker和docker-compose"><a href="#安装docker和docker-compose" class="headerlink" title="安装docker和docker-compose"></a>安装docker和docker-compose</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://get.docker.com | bash<br>apt install docker-compose<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker -v<br>docker-compose -v<br></code></pre></td></tr></table></figure><h3 id="docker-compose启动mysql"><a href="#docker-compose启动mysql" class="headerlink" title="docker-compose启动mysql"></a>docker-compose启动mysql</h3><p>先新建文件夹：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /opt/azpanel &amp;&amp; <span class="hljs-built_in">cd</span> /opt/azpanel<br>vim /opt/azpanel/docker-compose.yml<br><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3&quot;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">db:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:oracle</span> <span class="hljs-comment"># 这是针对arm的镜像，amd请更改</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:3306:3306</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./db/mysql:/var/lib/mysql</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">写你的root密码</span><br>      <span class="hljs-attr">MYSQL_DATABASE:</span> <span class="hljs-string">azpanel</span><br>      <span class="hljs-attr">MYSQL_USER:</span> <span class="hljs-string">azpanel</span><br>      <span class="hljs-attr">MYSQL_PASSWORD:</span> <span class="hljs-string">写你的数据库密码</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br></code></pre></td></tr></table></figure><p>再运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><h2 id="下载azpanel"><a href="#下载azpanel" class="headerlink" title="下载azpanel"></a>下载azpanel</h2><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /www/wwwroot/azpanel &amp;&amp; <span class="hljs-built_in">mkdir</span> /www/wwwlogs/ &amp;&amp; <span class="hljs-built_in">cd</span> /www/wwwroot/azpanel<br>git <span class="hljs-built_in">clone</span> https://github.com/azpanel/azpanel.git ./<br></code></pre></td></tr></table></figure><p>修改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /www/wwwroot/azpanel<br><span class="hljs-built_in">chmod</span> 755 -R *<br><span class="hljs-built_in">chown</span> -R www-data *<br><span class="hljs-comment"># www-data 是php-fpm和nginx的用户</span><br><span class="hljs-comment"># 可以用下面命令查看：</span><br><span class="hljs-built_in">cat</span> /etc/php/7.4/fpm/pool.d/www.conf | grep <span class="hljs-string">&quot;user = &quot;</span><br><span class="hljs-built_in">cat</span> /etc/nginx/nginx.conf | grep <span class="hljs-string">&quot;user&quot;</span><br></code></pre></td></tr></table></figure><h2 id="安装Composer"><a href="#安装Composer" class="headerlink" title="安装Composer"></a>安装Composer</h2><p>Composer 是PHP的一个依赖管理工具。 它能管理你的PHP项目所需要的所有依赖关系。 也就是说，Composer 会将你的PHP项目需要的所有代码库、依赖项从网上全部拉取下来，放到一起进行管理。</p><blockquote><p>参考：How to Install Composer: A Step-By-Step Guide and Best Practices</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /www/wwwroot/azpanel<br>php -r <span class="hljs-string">&quot;copy(&#x27;https://getcomposer.org/installer&#x27;, &#x27;composer-setup.php&#x27;);&quot;</span><br>php composer-setup.php <span class="hljs-comment"># 也可以全局安装：php composer-setup.php --install-dir=/usr/local/bin --filename=composer</span><br>php -r <span class="hljs-string">&quot;unlink(&#x27;composer-setup.php&#x27;);&quot;</span> <span class="hljs-comment"># 移除installer</span><br>php composer.phar <span class="hljs-comment"># 测试</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php composer.phar install<br></code></pre></td></tr></table></figure><p>安装成功的输出请看附录：<a href="#jump1">点击跳转</a><br><span id="jump2">继续安装</span></p><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>导入数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/azpanel/<br><span class="hljs-built_in">cp</span> /www/wwwroot/azpanel/database/*.sql /opt/azpanel/db/mysql/azpanel/<br>docker-compose down &amp;&amp; docker-compose up -d<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入容器</span><br>docker <span class="hljs-built_in">exec</span> -it azpanel_db_1 sh<br></code></pre></td></tr></table></figure><p>这里输入你的<strong>root</strong>密码，登入数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh-4.4<span class="hljs-comment"># mysql -uroot -p</span><br>Enter password: (输入你的root密码)<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection <span class="hljs-built_in">id</span> is 8<br>Server version: 8.0.29 MySQL Community Server - GPL<br><br>Copyright (c) 2000, 2022, Oracle and/or its affiliates.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> or <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>mysql&gt;<br></code></pre></td></tr></table></figure><p>数据库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql&gt; use azpanel;<br>Database changed<br>mysql&gt; <span class="hljs-built_in">source</span> /var/lib/mysql/azpanel/azure.sql;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; <span class="hljs-built_in">source</span> /var/lib/mysql/azpanel/config.sql;<br>Query OK, 12 rows affected (0.01 sec)<br>Records: 12  Duplicates: 0  Warnings: 0<br><br>mysql&gt; show tables;<br>+----------------------+<br>| Tables_in_azpanel    |<br>+----------------------+<br>| ann                  |<br>| azure                |<br>| azure_server         |<br>| azure_server_traffic |<br>| config               |<br>| login_log            |<br>| task                 |<br>| user                 |<br>| verify               |<br>+----------------------+<br>9 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.01 sec)<br><br>mysql&gt; \q<br>Bye<br>sh-4.4<span class="hljs-comment"># exit</span><br><span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>复制配置文件模板并编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /www/wwwroot/azpanel/<br><span class="hljs-built_in">cp</span> .example.env .<span class="hljs-built_in">env</span><br>vim .<span class="hljs-built_in">env</span><br></code></pre></td></tr></table></figure><p>如下修改</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">APP_DEBUG</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-section">[APP]</span><br><span class="hljs-attr">DEFAULT_TIMEZONE</span> = Asia/Shanghai<br><span class="hljs-attr">APP_NAME</span> = Azure<br><br><span class="hljs-section">[DATABASE]</span><br><span class="hljs-attr">TYPE</span> = mysql<br><span class="hljs-attr">HOSTNAME</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">DATABASE</span> = azpanel<br><span class="hljs-attr">USERNAME</span> = azpanel<br><span class="hljs-attr">PASSWORD</span> = 你的azpanel密码<br><span class="hljs-attr">HOSTPORT</span> = <span class="hljs-number">3306</span><br><span class="hljs-attr">CHARSET</span> = utf8<br><span class="hljs-attr">DEBUG</span> = <span class="hljs-literal">true</span><br><br><span class="hljs-section">[THEME]</span><br><span class="hljs-attr">CARD_WIDTH</span> = <span class="hljs-number">10</span><br><span class="hljs-attr">CARD_RIGHT_OFFSET</span> = <span class="hljs-number">1</span><br><br><span class="hljs-section">[LANG]</span><br><span class="hljs-attr">default_lang</span> = zh-cn<br></code></pre></td></tr></table></figure><h2 id="创建管理员"><a href="#创建管理员" class="headerlink" title="创建管理员"></a>创建管理员</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">php think createAdmin --email admin@azpanel.net --passwd 你的登陆密码<br><span class="hljs-comment"># 输出：</span><br><span class="hljs-comment"># An administrator account has been created.</span><br></code></pre></td></tr></table></figure><p>如果数据库配置错误，会这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[think\db\exception\PDOException]                                                      <br>SQLSTATE[HY000] [1045] Access denied <span class="hljs-keyword">for</span> user <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> (using password: NO)<br></code></pre></td></tr></table></figure><h2 id="导入更多数据库"><a href="#导入更多数据库" class="headerlink" title="导入更多数据库"></a>导入更多数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php think migrate:run<br></code></pre></td></tr></table></figure><h2 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">crontab -e<br></code></pre></td></tr></table></figure><p>然后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 0 * * * php /www/wwwroot/azpanel/think tools --action statisticsTraffic<br>0 * * * * php /www/wwwroot/azpanel/think autoRefreshAccount<br>0 * * * * php /www/wwwroot/azpanel/think closeTimeoutTask<br>0 * * * * php /www/wwwroot/azpanel/think trafficControlStop<br>*/5 * * * * php /www/wwwroot/azpanel/think trafficControlStart<br></code></pre></td></tr></table></figure><h2 id="编辑-nginx-配置"><a href="#编辑-nginx-配置" class="headerlink" title="编辑 nginx 配置"></a>编辑 nginx 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> /etc/nginx/sites-available/azpanel.conf<br><br>vim /etc/nginx/sites-available/azpanel.conf<br></code></pre></td></tr></table></figure><p>输入下面模板（把azpanel.net）改成你的域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs bash">server<br>    &#123;<br>        listen 80;<br>        server_name azpanel.net ;<br>        <span class="hljs-built_in">return</span> 301 https://$server_name<span class="hljs-variable">$request_uri</span>;<br>    &#125;<br><br>server<br>    &#123;<br>        listen 443 ssl http2;<br>        <span class="hljs-comment">#listen [::]:443 ssl http2;</span><br>        server_name azpanel.net ;<br>        index index.html index.htm index.php default.html default.htm default.php;<br>        root  /www/wwwroot/azpanel/public;<br><br>        ssl_certificate /etc/letsencrypt/live/azpanel.net/fullchain.pem;<br>        ssl_certificate_key /etc/letsencrypt/live/azpanel.net/privkey.pem;<br>        ssl_session_timeout 5m;<br>        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;<br>        ssl_prefer_server_ciphers on;<br>        ssl_ciphers <span class="hljs-string">&quot;TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5&quot;</span>;<br>        ssl_session_cache <span class="hljs-built_in">builtin</span>:1000 shared:SSL:10m;<br>        <span class="hljs-comment"># openssl dhparam -out /usr/local/nginx/conf/ssl/dhparam.pem 2048</span><br>        <span class="hljs-comment"># ssl_dhparam /usr/local/nginx/conf/ssl/dhparam.pem;</span><br><br>        include conf.d/azpanel/thinkphp.conf;<br>        <span class="hljs-comment">#error_page   404   /404.html;</span><br><br>        <span class="hljs-comment"># Deny access to PHP files in specific directory</span><br>        <span class="hljs-comment">#location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><br>        <span class="hljs-comment">#include enable-php.conf;</span><br>        location ~ \.php$ &#123;<br>          fastcgi_pass unix:/var/run/php/php-fpm.sock;<br>          include      conf.d/azpanel/php_fastcgi.conf;<br>        &#125;<br><br>        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$<br>        &#123;<br>            expires      30d;<br>        &#125;<br><br>        location ~ .*\.(js|css)?$<br>        &#123;<br>            expires      12h;<br>        &#125;<br><br>        location ~ /.well-known &#123;<br>            allow all;<br>        &#125;<br><br>        location ~ /\.<br>        &#123;<br>            deny all;<br>        &#125;<br><br>        access_log  /www/wwwlogs/azpanel.net.log;<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /etc/nginx/conf.d/azpanel/ &amp;&amp; vim /etc/nginx/conf.d/azpanel/thinkphp.conf<br></code></pre></td></tr></table></figure><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">location / &#123;<br>  <span class="hljs-keyword">if</span> (!-e <span class="hljs-variable">$request_filename</span>)&#123;<br>    rewrite ^(.*)$ /index.php?s=<span class="hljs-variable">$1</span> last; <span class="hljs-built_in">break</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/azpanel/php_fastcgi.conf<br></code></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs conf"># 404<br>try_files                     $fastcgi_script_name =404;<br><br># default fastcgi_params<br>include                       fastcgi_params;<br><br># fastcgi settings<br>fastcgi_index                 index.php;<br>fastcgi_buffers               8 16k;<br>fastcgi_buffer_size           32k;<br><br># fastcgi params<br>fastcgi_param DOCUMENT_ROOT   $realpath_root;<br>fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;<br></code></pre></td></tr></table></figure><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><p>先把你的域名进行dns解析到正确的ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install certbot python3-certbot-nginx -y<br>certbot certonly --nginx -d 你的域名<br></code></pre></td></tr></table></figure><h2 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /etc/nginx/sites-available/azpanel.conf /etc/nginx/sites-enabled/azpanel.conf<br>systemctl restart nginx<br></code></pre></td></tr></table></figure><h2 id="完成！"><a href="#完成！" class="headerlink" title="完成！"></a>完成！</h2><p><img src="/2022/07/24/azpanel-azure-api-panel/azpanel.jpg"></p><p><img src="/2022/07/24/azpanel-azure-api-panel/azpanel2.jpg"></p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="安装成功输出"><a href="#安装成功输出" class="headerlink" title="安装成功输出"></a><span id="jump1">安装成功输出</span></h2><p>看完可跳转到继续安装 -&gt; <a href="#jump2">点击跳转</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@ashburn:/www/wwwroot/azpanel<span class="hljs-comment"># php composer.phar install</span><br>Do not run Composer as root/super user! See https://getcomposer.org/root <span class="hljs-keyword">for</span> details<br>Continue as root/super user [<span class="hljs-built_in">yes</span>]? <span class="hljs-built_in">yes</span><br>No composer.lock file present. Updating dependencies to latest instead of installing from lock file. See https://getcomposer.org/install <span class="hljs-keyword">for</span> more information.<br>Loading composer repositories with package information<br>Updating dependencies<br>Lock file operations: 39 installs, 0 updates, 0 removals<br>  - Locking adbario/php-dot-notation (2.3.0)<br>  - Locking alibabacloud/client (1.5.31)<br>  - Locking clagiordano/weblibs-configmanager (v1.2.0)<br>  - Locking danielstjules/stringy (3.1.0)<br>  - Locking guzzlehttp/guzzle (6.5.8)<br>  - Locking guzzlehttp/promises (1.5.1)<br>  - Locking guzzlehttp/psr7 (1.9.0)<br>  - Locking league/flysystem (1.1.9)<br>  - Locking league/flysystem-cached-adapter (1.1.0)<br>  - Locking league/mime-type-detection (1.11.0)<br>  - Locking mtdowling/jmespath.php (2.6.1)<br>  - Locking nesbot/carbon (2.59.1)<br>  - Locking paragonie/constant_time_encoding (v2.6.3)<br>  - Locking paragonie/random_compat (v9.99.100)<br>  - Locking phpmailer/phpmailer (v6.6.3)<br>  - Locking phpseclib/phpseclib (3.0.14)<br>  - Locking psr/cache (1.0.1)<br>  - Locking psr/container (1.1.2)<br>  - Locking psr/http-message (1.0.1)<br>  - Locking psr/log (1.1.4)<br>  - Locking psr/simple-cache (1.0.1)<br>  - Locking ralouphie/getallheaders (3.0.3)<br>  - Locking symfony/deprecation-contracts (v2.5.2)<br>  - Locking symfony/polyfill-intl-idn (v1.26.0)<br>  - Locking symfony/polyfill-intl-normalizer (v1.26.0)<br>  - Locking symfony/polyfill-mbstring (v1.26.0)<br>  - Locking symfony/polyfill-php72 (v1.26.0)<br>  - Locking symfony/polyfill-php80 (v1.26.0)<br>  - Locking symfony/translation (v5.4.9)<br>  - Locking symfony/translation-contracts (v2.5.2)<br>  - Locking symfony/var-dumper (v4.4.42)<br>  - Locking topthink/framework (v6.0.13)<br>  - Locking topthink/think-captcha (v3.0.7)<br>  - Locking topthink/think-helper (v3.1.6)<br>  - Locking topthink/think-migration (v3.0.3)<br>  - Locking topthink/think-orm (v2.0.54)<br>  - Locking topthink/think-template (v2.0.8)<br>  - Locking topthink/think-trace (v1.4)<br>  - Locking topthink/think-view (v1.0.14)<br>Writing lock file<br>Installing dependencies from lock file (including require-dev)<br>Package operations: 39 installs, 0 updates, 0 removals<br>  - Downloading symfony/polyfill-mbstring (v1.26.0)<br>  - Downloading mtdowling/jmespath.php (2.6.1)<br>  - Downloading symfony/polyfill-php72 (v1.26.0)<br>  - Downloading symfony/polyfill-intl-normalizer (v1.26.0)<br>  - Downloading symfony/polyfill-intl-idn (v1.26.0)<br>  - Downloading ralouphie/getallheaders (3.0.3)<br>  - Downloading psr/http-message (1.0.1)<br>  - Downloading guzzlehttp/psr7 (1.9.0)<br>  - Downloading guzzlehttp/promises (1.5.1)<br>  - Downloading guzzlehttp/guzzle (6.5.8)<br>  - Downloading danielstjules/stringy (3.1.0)<br>  - Downloading clagiordano/weblibs-configmanager (v1.2.0)<br>  - Downloading adbario/php-dot-notation (2.3.0)<br>  - Downloading alibabacloud/client (1.5.31)<br>  - Downloading psr/cache (1.0.1)<br>  - Downloading league/mime-type-detection (1.11.0)<br>  - Downloading league/flysystem (1.1.9)<br>  - Downloading league/flysystem-cached-adapter (1.1.0)<br>  - Downloading symfony/translation-contracts (v2.5.2)<br>  - Downloading symfony/polyfill-php80 (v1.26.0)<br>  - Downloading symfony/deprecation-contracts (v2.5.2)<br>  - Downloading symfony/translation (v5.4.9)<br>  - Downloading nesbot/carbon (2.59.1)<br>  - Downloading phpmailer/phpmailer (v6.6.3)<br>  - Downloading paragonie/random_compat (v9.99.100)<br>  - Downloading paragonie/constant_time_encoding (v2.6.3)<br>  - Downloading phpseclib/phpseclib (3.0.14)<br>  - Downloading psr/container (1.1.2)<br>  - Downloading symfony/var-dumper (v4.4.42)<br>  - Downloading topthink/think-helper (v3.1.6)<br>  - Downloading psr/simple-cache (1.0.1)<br>  - Downloading psr/log (1.1.4)<br>  - Downloading topthink/think-orm (v2.0.54)<br>  - Downloading topthink/framework (v6.0.13)<br>  - Downloading topthink/think-captcha (v3.0.7)<br>  - Downloading topthink/think-migration (v3.0.3)<br>  - Downloading topthink/think-trace (v1.4)<br>  - Downloading topthink/think-template (v2.0.8)<br>  - Downloading topthink/think-view (v1.0.14)<br>  - Installing symfony/polyfill-mbstring (v1.26.0): Extracting archive<br>  - Installing mtdowling/jmespath.php (2.6.1): Extracting archive<br>  - Installing symfony/polyfill-php72 (v1.26.0): Extracting archive<br>  - Installing symfony/polyfill-intl-normalizer (v1.26.0): Extracting archive<br>  - Installing symfony/polyfill-intl-idn (v1.26.0): Extracting archive<br>  - Installing ralouphie/getallheaders (3.0.3): Extracting archive<br>  - Installing psr/http-message (1.0.1): Extracting archive<br>  - Installing guzzlehttp/psr7 (1.9.0): Extracting archive<br>  - Installing guzzlehttp/promises (1.5.1): Extracting archive<br>  - Installing guzzlehttp/guzzle (6.5.8): Extracting archive<br>  - Installing danielstjules/stringy (3.1.0): Extracting archive<br>  - Installing clagiordano/weblibs-configmanager (v1.2.0): Extracting archive<br>  - Installing adbario/php-dot-notation (2.3.0): Extracting archive<br>  - Installing alibabacloud/client (1.5.31): Extracting archive<br>  - Installing psr/cache (1.0.1): Extracting archive<br>  - Installing league/mime-type-detection (1.11.0): Extracting archive<br>  - Installing league/flysystem (1.1.9): Extracting archive<br>  - Installing league/flysystem-cached-adapter (1.1.0): Extracting archive<br>  - Installing symfony/translation-contracts (v2.5.2): Extracting archive<br>  - Installing symfony/polyfill-php80 (v1.26.0): Extracting archive<br>  - Installing symfony/deprecation-contracts (v2.5.2): Extracting archive<br>  - Installing symfony/translation (v5.4.9): Extracting archive<br>  - Installing nesbot/carbon (2.59.1): Extracting archive<br>  - Installing phpmailer/phpmailer (v6.6.3): Extracting archive<br>  - Installing paragonie/random_compat (v9.99.100): Extracting archive<br>  - Installing paragonie/constant_time_encoding (v2.6.3): Extracting archive<br>  - Installing phpseclib/phpseclib (3.0.14): Extracting archive<br>  - Installing psr/container (1.1.2): Extracting archive<br>  - Installing symfony/var-dumper (v4.4.42): Extracting archive<br>  - Installing topthink/think-helper (v3.1.6): Extracting archive<br>  - Installing psr/simple-cache (1.0.1): Extracting archive<br>  - Installing psr/log (1.1.4): Extracting archive<br>  - Installing topthink/think-orm (v2.0.54): Extracting archive<br>  - Installing topthink/framework (v6.0.13): Extracting archive<br>  - Installing topthink/think-captcha (v3.0.7): Extracting archive<br>  - Installing topthink/think-migration (v3.0.3): Extracting archive<br>  - Installing topthink/think-trace (v1.4): Extracting archive<br>  - Installing topthink/think-template (v2.0.8): Extracting archive<br>  - Installing topthink/think-view (v1.0.14): Extracting archive<br>27 package suggestions were added by new dependencies, use `composer suggest` to see details.<br>Generating <span class="hljs-built_in">autoload</span> files<br>&gt; @php think service:discover<br>Succeed!<br>&gt; @php think vendor:publish<br>File /www/wwwroot/azpanel/config/captcha.php exist!<br>File /www/wwwroot/azpanel/config/trace.php exist!<br>Succeed!<br>17 packages you are using are looking <span class="hljs-keyword">for</span> funding.<br>Use the `composer fund` <span class="hljs-built_in">command</span> to find out more!<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>学习</tag>
      
      <tag>Azure</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>v2board 免宝塔部署教程</title>
    <link href="/2022/07/02/v2board-installation-without-bt/"/>
    <url>/2022/07/02/v2board-installation-without-bt/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="b696defcbf2a3c1e4ed02e724062985de26154c55f0d1ee86af171ceb0e81fc9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>科学上网</tag>
      
      <tag>Notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>脚本生成仅允许cloudflare访问80 443端口的iptables规则</title>
    <link href="/2022/06/28/Script-for-cf-ips-only-iptables-rules/"/>
    <url>/2022/06/28/Script-for-cf-ips-only-iptables-rules/</url>
    
    <content type="html"><![CDATA[<p>Cloudflare是一家提供网站安全管理、性能优化等相关技术的跨国科技企业，Cloudflare可以帮助受保护站点抵御包括分布式拒绝服务攻击(DDoS, Distributed Denial of Service)在内的大多数网络攻击，确保该网站长期在线，阻止网络攻击、垃圾邮件等，同时提升网站的性能、访问速度以改善访客体验。Cloudflare提供用户免费使用，是防御DDos的最佳解决方案之一。</p><p>本文讲了如何用脚本设置防火墙 80 443 端口仅对Cloudflare CDN的IP开放。</p><blockquote><p>如果不懂iptables或者ip6tables的话最好别用，免得失联</p></blockquote><span id="more"></span><h1 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h1><ul><li>服务器。作者使用的是Ubuntu 20.04，关闭ufw</li><li>服务器已经配置iptables 【ip6tables可选】</li><li>实在失联了作者不负责</li><li>作者的服务器具有ipv4和ipv6，所以服务器已经配置iptables 和 ip6tables都是同步讲解，如果你只有其中一个，可以自行更改处理。</li></ul><ol><li><p>项目仓库地址<br><a href="https://github.com/tech-fever/cloudflare_ips_only_iptables">https://github.com/tech-fever/cloudflare_ips_only_iptables</a></p></li><li><p>原理<br>新建 iptables 链 CLOUDFLARE 并插入引用到 INPUT 的80 443 端口，对Cloudflare的ip采用的数据包控制方式是 RETURN，丢弃其他网络数据包。就是说如果Cloudflare的IP访问80 443，会先从CLOUDFLARE中匹配，匹配到以后就会返回INPUT链，所以需要之前INPUT链中就有对80 443端口的放行规则，如果之前没有，可以加入<code>iptables -A INPUT -p tcp -m multiport --dports http,https -j ACCEPT</code>，或者把所有的 <code>RETURN</code> 改成 <code>ACCEPT</code> 。如果非Cloudflare的IP访问80和443，在CLOUDFLARE中会匹配到最后两条规则，被记录并丢弃。</p></li><li><p>ip来源<br>脚本使用的所有ip来自Cloudflare官方给的api：</p></li></ol><ul><li><a href="https://www.cloudflare.com/ips-v4">https://www.cloudflare.com/ips-v4</a></li><li><a href="https://www.cloudflare.com/ips-v6">https://www.cloudflare.com/ips-v6</a></li></ul><ol start="4"><li>日志<br>日志文件保存在 <code>/var/log/messages</code> ，高版本默认没有这个文件，因为 <code>/etc/rsyslog.d/50-default.conf</code> 将其注释掉了，想看日志的话可以谷歌一下解决办法。<br>被DROP掉的连接会被记录，以下面两行开头：<br>对于ipv4： <code>IPTABLES_CLOUDFLARE_ONLY_BANNED: </code><br>对于ipv6： <code>IP6TABLES_CLOUDFLARE_ONLY_BANNED: </code></li></ol><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol><li>官方 <a href="https://developers.cloudflare.com/fundamentals/get-started/setup/allow-cloudflare-ip-addresses/">Allow Cloudflare IP addresses</a></li><li>论坛帖子 《<a href="https://hostloc.com/thread-1007211-1-1.html">小鸡iptables只允许cloudflareip</a>》</li></ol><h1 id="预处理【必须】"><a href="#预处理【必须】" class="headerlink" title="预处理【必须】"></a>预处理【必须】</h1><p>如果重启服务器，所有的规则都丢失了。所以要保存规则，使其持久化。安装iptables-persistent包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install iptables-persistent<br></code></pre></td></tr></table></figure><p>为了防止你改出问题，先保存当前的iptables规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#保存规则</span><br><span class="hljs-comment"># mkdir -p /etc/iptables/</span><br>iptables-save &gt; /etc/iptables/rules.v4<br>ip6tables-save &gt; /etc/iptables/rules.v6<br></code></pre></td></tr></table></figure><p>查看规则编号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># for ipv4</span><br>iptables -nvL --line-numbers<br><span class="hljs-comment"># for ipv6</span><br>ip6tables -nvL --line-numbers<br></code></pre></td></tr></table></figure><div class="note info">在运行脚本之前先手动试试是否可行，如果出现问题可以随时reboot或强制断电重启，只要没有规则持久化（存入/etc/iptables/rules.v4 和 rules.v6 ），重启就会返回之前状态。</div><h1 id="iptables新建链【必须】"><a href="#iptables新建链【必须】" class="headerlink" title="iptables新建链【必须】"></a>iptables新建链【必须】</h1><p><font color="red">只有ipv4的话直接跳到后面两节（不过这里有命令的详细解释）</font></p><p>创建一个链，命名为 CLOUDFLARE</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -N CLOUDFLARE<br>ip6tables -N CLOUDFLARE<br></code></pre></td></tr></table></figure><p>让INPUT引用（<strong>下面两种选一种</strong>）<br>插入引用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 适合于已经有其他iptables规则，默认让CLOUDFLARE插入到第一行，优先其他规则生效</span><br>iptables  -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>ip6tables -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br></code></pre></td></tr></table></figure><p>附加引用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># CLOUDFLARE，附加到最后一条，优先级最低</span><br>iptables  -A INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>ip6tables -A INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br></code></pre></td></tr></table></figure><h1 id="命令行添加IP"><a href="#命令行添加IP" class="headerlink" title="命令行添加IP"></a>命令行添加IP</h1><p>然后把CF的IP加进链里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        iptables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span><br>        ip6tables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>不允许其他</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 记录并丢弃网络数据包</span><br>iptables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br>ip6tables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IP6TABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br><br>iptables -A CLOUDFLARE -j DROP<br>ip6tables -A CLOUDFLARE -j DROP<br></code></pre></td></tr></table></figure><h1 id="如果你只有ipv4"><a href="#如果你只有ipv4" class="headerlink" title="如果你只有ipv4"></a>如果你只有ipv4</h1><p>如果你只有ipv4但上面的你看不懂不会改，可以直接执行这里。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -N CLOUDFLARE<br>iptables  -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        iptables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br>iptables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br>iptables -A CLOUDFLARE -j DROP<br></code></pre></td></tr></table></figure><p>iptables持久化一定要做，不然重启就没了<br>比如ubuntu可以安装iptables-persistent，规则保存在(默认)&#x2F;etc&#x2F;iptables&#x2F;rules.v4<br>centos不知道，好像自带吧，执行service iptables save</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install iptables-persistent<br>iptables-save &gt; /etc/iptables/rules.v4<br></code></pre></td></tr></table></figure><h1 id="脚本时间"><a href="#脚本时间" class="headerlink" title="脚本时间"></a>脚本时间</h1><h2 id="创建规则脚本"><a href="#创建规则脚本" class="headerlink" title="创建规则脚本"></a>创建规则脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># !/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Configure your iptables to allow IPs from Cloudflare only.</span><br><span class="hljs-comment"># For users whose HTTP server is directly exposed to the host 80/443.</span><br><br>iptables -N CLOUDFLARE<br>ip6tables -N CLOUDFLARE<br><br><span class="hljs-comment"># 可以换成 -A</span><br>iptables  -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>ip6tables -I INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        iptables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span><br>        ip6tables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br>iptables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br>ip6tables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IP6TABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br><br>iptables -A CLOUDFLARE -j DROP<br>ip6tables -A CLOUDFLARE -j DROP<br></code></pre></td></tr></table></figure><h2 id="更新脚本"><a href="#更新脚本" class="headerlink" title="更新脚本"></a>更新脚本</h2><p>这里带ipv4和ipv6：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment">#先删掉&quot;不允许所有&quot;，避免在下面命令执行期间GG</span><br>iptables -D CLOUDFLARE -j DROP<br>ip6tables -D CLOUDFLARE -j DROP<br><br><span class="hljs-comment">#清除规则(旧的CF IP)</span><br>iptables -F CLOUDFLARE<br>ip6tables -F CLOUDFLARE<br><span class="hljs-comment">#添加CF IP，下面可以对curl的结果做一次判断，可以避免网络问题可能出现的问题，自己写</span><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        iptables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span><br>        ip6tables -A CLOUDFLARE -s <span class="hljs-variable">$ip</span> -j RETURN;<br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># 自己判断是否要保存，个人觉得可以手动执行脚本，之后看要不要保存</span><br><span class="hljs-comment">#mkdir -p /etc/iptables/</span><br><span class="hljs-comment"># iptables-save &gt; /etc/iptables/rules.v4</span><br><span class="hljs-comment"># ip6tables-save &gt; /etc/iptables/rules.v6</span><br><br><span class="hljs-comment"># 记录并禁用其他IP</span><br>iptables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IPTABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br>ip6tables -A CLOUDFLARE -j LOG --log-prefix <span class="hljs-string">&quot;IP6TABLES_CLOUDFLARE_ONLY_BANNED: &quot;</span><br><br>iptables -A CLOUDFLARE -j DROP<br>ip6tables -A CLOUDFLARE -j DROP<br></code></pre></td></tr></table></figure><h2 id="清除规则脚本【包售后】"><a href="#清除规则脚本【包售后】" class="headerlink" title="清除规则脚本【包售后】"></a>清除规则脚本【包售后】</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables  -F CLOUDFLARE<br>ip6tables -F CLOUDFLARE<br>iptables  -D INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>ip6tables -D INPUT -p tcp -m multiport --dports http,https -j CLOUDFLARE<br>iptables  -X CLOUDFLARE<br>ip6tables -X CLOUDFLARE<br><span class="hljs-comment"># 删除保存的规则并存入最新的（自己判断要不要去掉注释）</span><br><span class="hljs-comment">#&gt; /etc/iptables/rules.v4</span><br><span class="hljs-comment">#&gt; /etc/iptables/rules.v6</span><br><span class="hljs-comment"># iptables-save &gt; /etc/iptables/rules.v4</span><br><span class="hljs-comment"># ip6tables-save &gt; /etc/iptables/rules.v6</span><br></code></pre></td></tr></table></figure><h1 id="测试【重要】"><a href="#测试【重要】" class="headerlink" title="测试【重要】"></a>测试【重要】</h1><p>先看看网页能不能用域名正常访问。<br>使用下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -k -v 你的IP<br></code></pre></td></tr></table></figure><p>出现类似下面报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@host2:~<span class="hljs-comment"># curl -k -v `curl -4 ip.sb`</span><br>*   Trying 你的IP:80...<br>* connect to 你的IP port 80 failed: Connection timed out<br>* Failed to connect to 你的IP port 80: Connection timed out<br>* Closing connection 0<br>curl: (28) Failed to connect to 你的IP port 80: Connection timed out<br></code></pre></td></tr></table></figure><p>说明成功！</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#保存规则</span><br><span class="hljs-comment"># mkdir -p /etc/iptables/</span><br>iptables-save &gt; /etc/iptables/rules.v4<br>ip6tables-save &gt; /etc/iptables/rules.v6<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#引用规则</span><br>iptables-restore &lt; /etc/iptables/rules.v4<br>ip6tables-restore &lt; /etc/iptables/rules.v6<br></code></pre></td></tr></table></figure><h2 id="iptables和ip6tables仅开放22-80-443-端口和ping"><a href="#iptables和ip6tables仅开放22-80-443-端口和ping" class="headerlink" title="iptables和ip6tables仅开放22 80 443 端口和ping"></a>iptables和ip6tables仅开放22 80 443 端口和ping</h2><p>前提是安装iptables-persistent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install -y iptables-persistent<br></code></pre></td></tr></table></figure><div class="note info">直接修改/etc/iptables/rules.v4 v6 文件的时候如果不保留别的规则，会导致别的规则丢失！比如docker的和ufw的和fail2ban的。有时候可以通过重启解决。</div><h3 id="iptables白名单-22-80-443-端口和允许ping"><a href="#iptables白名单-22-80-443-端口和允许ping" class="headerlink" title="iptables白名单 22 80 443 端口和允许ping"></a>iptables白名单 22 80 443 端口和允许ping</h3><p>编辑<code>/etc/iptables/rules.v4</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">*filter<br><br><span class="hljs-comment">#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn&#x27;t use lo0</span><br>-A INPUT -i lo -j ACCEPT<br>-A INPUT ! -i lo -d 127.0.0.0/8 -j REJECT<br><br><span class="hljs-comment">#  Accept all established inbound connections</span><br>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT<br><br><span class="hljs-comment">#  Allow all outbound traffic - you can modify this to only allow certain traffic</span><br>-A OUTPUT -j ACCEPT<br><br><span class="hljs-comment">#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).</span><br>-A INPUT -p tcp --dport 80 -j ACCEPT<br>-A INPUT -p tcp --dport 443 -j ACCEPT<br><br><span class="hljs-comment">#  Allow SSH connections</span><br><span class="hljs-comment">#  The -dport number should be the same port number you set in sshd_config</span><br>-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT<br><br><span class="hljs-comment">#  Allow ping</span><br>-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT<br><br><span class="hljs-comment">#  Log iptables denied calls</span><br>-A INPUT -m <span class="hljs-built_in">limit</span> --<span class="hljs-built_in">limit</span> 5/min -j LOG --log-prefix <span class="hljs-string">&quot;iptables denied: &quot;</span> --log-level 7<br><br><span class="hljs-comment">#  Reject all other inbound - default deny unless explicitly allowed policy</span><br>-A INPUT -j REJECT<br>-A FORWARD -j REJECT<br><br>COMMIT<br></code></pre></td></tr></table></figure><p>持久化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables-restore &lt; /etc/iptables/rules.v4<br></code></pre></td></tr></table></figure><h3 id="ip6tables白名单-22-80-443-端口和允许ping"><a href="#ip6tables白名单-22-80-443-端口和允许ping" class="headerlink" title="ip6tables白名单 22 80 443 端口和允许ping"></a>ip6tables白名单 22 80 443 端口和允许ping</h3><p>编辑<code>/etc/iptables/rules.v6</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">*filter<br><br><span class="hljs-comment">#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn&#x27;t use lo0</span><br>-A INPUT -i lo -j ACCEPT<br>-A INPUT ! -i lo -d ::1/128 -j REJECT<br><br><span class="hljs-comment">#  Accept all established inbound connections</span><br>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT<br><br><span class="hljs-comment">#  Allow all outbound traffic - you can modify this to only allow certain traffic</span><br>-A OUTPUT -j ACCEPT<br><br><span class="hljs-comment">#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).</span><br>-A INPUT -p tcp --dport 80 -j ACCEPT<br>-A INPUT -p tcp --dport 443 -j ACCEPT<br><br><span class="hljs-comment">#  Allow SSH connections</span><br><span class="hljs-comment">#  The -dport number should be the same port number you set in sshd_config</span><br>-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT<br><br><span class="hljs-comment">#  Allow ping</span><br>-A INPUT -p icmpv6 -j ACCEPT<br><br><span class="hljs-comment">#  Log iptables denied calls</span><br>-A INPUT -m <span class="hljs-built_in">limit</span> --<span class="hljs-built_in">limit</span> 5/min -j LOG --log-prefix <span class="hljs-string">&quot;iptables denied: &quot;</span> --log-level 7<br><br><span class="hljs-comment">#  Reject all other inbound - default deny unless explicitly allowed policy</span><br>-A INPUT -j REJECT<br>-A FORWARD -j REJECT<br><br>COMMIT<br></code></pre></td></tr></table></figure><p>持久化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip6tables-save &gt; /etc/iptables/rules.v6<br></code></pre></td></tr></table></figure><h2 id="其他运维规则脚本"><a href="#其他运维规则脚本" class="headerlink" title="其他运维规则脚本"></a>其他运维规则脚本</h2><blockquote><p><a href="https://hostloc.com/forum.php?mod=viewthread&tid=1007102&highlight=%E8%A7%84%E5%88%99">仅允许cloudflare ip访问nginx的规则的生成脚本</a><br><a href="https://pawswrite.xyz/2022/06/15/Restoring-original-visitor-IPs-From-CLoudFlare/">使用脚本编写Nginx规则恢复CloudFlare原始访问者 IP</a></p></blockquote><p>其他参考（还没看，做个记录）：<br><a href="https://github.com/drvy/ufw-cloudflare">https://github.com/drvy/ufw-cloudflare</a><br><a href="https://github.com/kingcc/cloudflare-ips-only">https://github.com/kingcc/cloudflare-ips-only</a></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker部署的长毛象站点服务器迁移</title>
    <link href="/2022/06/24/Migrate-Mastodon-Site-deployed-in-Docker/"/>
    <url>/2022/06/24/Migrate-Mastodon-Site-deployed-in-Docker/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ba9d4e6fd1bc0f45fcb37357233a5aac0e801de5650ee7adf771cf5d8dfcd9fe"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>长毛象</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>长毛象</tag>
      
      <tag>Notes</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用脚本编写Nginx规则恢复CloudFlare原始访问者 IP</title>
    <link href="/2022/06/15/Restoring-original-visitor-IPs-From-CLoudFlare/"/>
    <url>/2022/06/15/Restoring-original-visitor-IPs-From-CLoudFlare/</url>
    
    <content type="html"><![CDATA[<p>CloudFlare 是非常好用的免费 CDN，但是来自 CDN 的请求显示的访问者 IP 将是CDN的 IP ，而不是真实访问者的。Cloudflare 将原始访问者 IP 地址包含在 <a href="https://support.cloudflare.com/hc/en-us/articles/200170986-How-does-Cloudflare-handle-HTTP-Request-headers-">X-Forwarded-For 和 CF-Connecting-IP</a> 标头中。我们可以通过Nginx来恢复原始访问者的 IP。</p><span id="more"></span><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>官方文章：</p><blockquote><p><a href="shttps://support.cloudflare.com/hc/articles/200170916">Restoring original visitor IP</a><br><a href="https://www.cloudflare.com/ips">Cloudflare IP addresses</a><br><a href="https://danielmiessler.com/blog/getting-real-ip-addresses-using-cloudflare-nginx-and-varnish/">Getting Real IP Addresses Using CloudFlare, Nginx, and Varnish</a></p></blockquote><h1 id="【推荐】脚本编写nginx规则"><a href="#【推荐】脚本编写nginx规则" class="headerlink" title="【推荐】脚本编写nginx规则"></a>【推荐】脚本编写nginx规则</h1><blockquote><p>这个脚本的前提是你的所有站点都使用cf进行保护，否则请把conf文件换个位置储存，再手动将文件include进你站点配置文件的server{}里。</p></blockquote><p>新建脚本文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /root/cf_rules<br>vim /root/cf_rules/update_cf_ip.sh<br><span class="hljs-built_in">chmod</span> +x /root/cf_rules/update_cf_ip.sh<br></code></pre></td></tr></table></figure><p>写入脚本内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;#Cloudflare&quot;</span> &gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v4`; <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;set_real_ip_from <span class="hljs-variable">$i</span>;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `curl https://www.cloudflare.com/ips-v6`; <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;set_real_ip_from <span class="hljs-variable">$i</span>;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;# use any of the following two&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;real_ip_header CF-Connecting-IP;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;#real_ip_header X-Forwarded-For;&quot;</span> &gt;&gt; /etc/nginx/conf.d/cloudflare_ip.conf;<br></code></pre></td></tr></table></figure><p>运行脚本后，我们可以得到一个 <code>/etc/nginx/conf.d/cloudflare_ip.conf</code> 的conf文件，添加完成后使用 <code>nginx -t</code> 来验证配置文件是否正确，正确无误后重启或者重新载入nginx即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -t<br>systemctl restart nginx<br></code></pre></td></tr></table></figure><p>使用cron计划任务来定期更新cloudflare_ip.conf文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 5 * * 1 /bin/bash /location/to/update_cf_ip.sh<br></code></pre></td></tr></table></figure><h1 id="手动恢复原始访问者-IP"><a href="#手动恢复原始访问者-IP" class="headerlink" title="手动恢复原始访问者 IP"></a>手动恢复原始访问者 IP</h1><p>首先编辑Nginx配置文件，一般为 <code>/etc/nginx/ngnix.conf</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/ngnix.conf<br></code></pre></td></tr></table></figure><h2 id="【方案1】对CloudFalre来源请求提取真实IP"><a href="#【方案1】对CloudFalre来源请求提取真实IP" class="headerlink" title="【方案1】对CloudFalre来源请求提取真实IP"></a>【方案1】对CloudFalre来源请求提取真实IP</h2><p>在http块中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#Cloudflare</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">173.245</span><span class="hljs-number">.48</span><span class="hljs-number">.0</span><span class="hljs-string">/20;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">103.21</span><span class="hljs-number">.244</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">103.22</span><span class="hljs-number">.200</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">103.31</span><span class="hljs-number">.4</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">141.101</span><span class="hljs-number">.64</span><span class="hljs-number">.0</span><span class="hljs-string">/18;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">108.162</span><span class="hljs-number">.192</span><span class="hljs-number">.0</span><span class="hljs-string">/18;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">190.93</span><span class="hljs-number">.240</span><span class="hljs-number">.0</span><span class="hljs-string">/20;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">188.114</span><span class="hljs-number">.96</span><span class="hljs-number">.0</span><span class="hljs-string">/20;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">197.234</span><span class="hljs-number">.240</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">198.41</span><span class="hljs-number">.128</span><span class="hljs-number">.0</span><span class="hljs-string">/17;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">162.158</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/15;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">104.16</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/13;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">104.24</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/14;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">172.64</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/13;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">131.0</span><span class="hljs-number">.72</span><span class="hljs-number">.0</span><span class="hljs-string">/22;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2400</span><span class="hljs-string">:cb00::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2606</span><span class="hljs-string">:4700::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2803</span><span class="hljs-string">:f800::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2405</span><span class="hljs-string">:b500::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">2405</span><span class="hljs-string">:8100::/32;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-string">2a06:98c0::/29;</span><br><span class="hljs-string">set_real_ip_from</span> <span class="hljs-string">2c0f:f248::/32;</span><br><br><span class="hljs-comment"># use any of the following two</span><br><span class="hljs-string">real_ip_header</span> <span class="hljs-string">CF-Connecting-IP;</span><br><span class="hljs-comment">#real_ip_header X-Forwarded-For;</span><br></code></pre></td></tr></table></figure><div class="note info">IP 截止至2022年6月28号是最新的。</div><p>最新IP列表请参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://www.cloudflare.com/ips-v4<br>https://www.cloudflare.com/ips-v6<br></code></pre></td></tr></table></figure><h2 id="【方案2】对所有来源请求提取真实IP"><a href="#【方案2】对所有来源请求提取真实IP" class="headerlink" title="【方案2】对所有来源请求提取真实IP"></a>【方案2】对所有来源请求提取真实IP</h2><p>用这个方案的前提是，你的Nginx代理的所有站点都使用了CloudFlare的CDN，而你又担心CloudFlare的IP地址产生变化，或者你觉得添加的IP太多太麻烦。那么你可以使用下面的办法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">set_real_ip_from</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/0;</span><br><span class="hljs-string">real_ip_header</span> <span class="hljs-string">X-Forwarded-For;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/Restoring-original-visitor-IPs-From-CLoudFlare/bt.png"></p><h2 id="重启生效"><a href="#重启生效" class="headerlink" title="重启生效"></a>重启生效</h2><p>先检测下修改后的语法有没有问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -t<br></code></pre></td></tr></table></figure><p>重启即可生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart nginx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Netflix DNS unlock Stream Media</title>
    <link href="/2022/06/10/Netflix-DNS-unlock-Stream-Media/"/>
    <url>/2022/06/10/Netflix-DNS-unlock-Stream-Media/</url>
    
    <content type="html"><![CDATA[<p>如何配置使用DNS解锁流媒体。【非原创，存档用】</p><span id="more"></span><h1 id="个人使用"><a href="#个人使用" class="headerlink" title="个人使用"></a>个人使用</h1><p>个人使用者，请仔细阅读以下使用指南，根据自己的实际情况进行配置。</p><p><font color="red">以下示例解锁DNS为4.4.4.4，实际使用以对应DNS为准</font></p><p>由于DNS解锁的特殊性，比较推荐的落地搭建方式为X-UI或其他V2ray，Xray一键脚本。</p><h2 id="非V2ray相关协议简单方法-直接修改VPS的系统DNS"><a href="#非V2ray相关协议简单方法-直接修改VPS的系统DNS" class="headerlink" title="非V2ray相关协议简单方法-直接修改VPS的系统DNS"></a>非V2ray相关协议简单方法-直接修改VPS的系统DNS</h2><ul><li><strong>SS SSR Trojan等</strong></li></ul><p>由于这些协议本身无法进行DNS分流，请使用如下命令配置DNS：</p><ul><li><strong>Debian&#x2F;centos系统</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo -e &quot;nameserver 4.4.4.4（以实际为准）&quot; &gt; /etc/resolv.conf<br>       <br>  chattr +i /etc/resolv.conf<br></code></pre></td></tr></table></figure><p>第一行命令是将解锁DNS添加为系统DNS</p><p>第二行命令是将DNS文件属性修改为只读(避免被系统复写修改）</p><ul><li><strong>移除操作</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">chattr -i /etc/resolv.conf<br>   echo -e &quot;nameserver 8.8.8.8&quot; &gt; /etc/resolv.conf<br></code></pre></td></tr></table></figure><ul><li><strong>ubuntu系统</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">修改DNS<br>vi /etc/systemd/resolved.conf<br>输入<br>DNS=4.4.4.4（以实际为准）<br><br>:wq保存后<br><br>systemctl daemon-reload<br>systemctl restart systemd-resolved.service<br>mv /etc/resolv.conf /etc/resolv.conf.bak<br>ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf<br></code></pre></td></tr></table></figure><ul><li><strong>移除操作</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">修改DNS<br>vi /etc/systemd/resolved.conf<br>输入<br>DNS=8.8.8.8<br>DNS=1.1.1.1<br><br>:wq保存后<br><br>systemctl daemon-reload<br>systemctl restart systemd-resolved.service<br>mv /etc/resolv.conf /etc/resolv.conf.bak<br>ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf<br></code></pre></td></tr></table></figure><ul><li><strong>Shadowsocks-libev 版本</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">打开配置文件 默认 /etc/shadowsocks-libev/config.json<br>修改&quot;nameserver&quot;:&quot;4.4.4.4（以实际为准）&quot;<br></code></pre></td></tr></table></figure><ul><li><strong>SS docker 版本</strong></li></ul><p>添加参数 <code>-d &quot;4.4.4.4（以实际为准）&quot;</code></p><h2 id="非V2ray相关协议复杂方法-VPS安装dnsmasq实现DNS解锁分流"><a href="#非V2ray相关协议复杂方法-VPS安装dnsmasq实现DNS解锁分流" class="headerlink" title="非V2ray相关协议复杂方法-VPS安装dnsmasq实现DNS解锁分流"></a>非V2ray相关协议复杂方法-VPS安装dnsmasq实现DNS解锁分流</h2><p>需要有一定使用基础，此处以debian系统为例</p><p>一.安装dnsmasq</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get -y install dnsmasq<br></code></pre></td></tr></table></figure><p>二.配置dnsmasq</p><p>1.配置文件&#x2F;etc&#x2F;dnsmasq.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/dnsmasq.conf<br><br>server=/netflix.com/4.4.4.4<br>server=/disneyplus.com/4.4.4.4<br>...<br>...<br>resolv-file=/etc/resolv.dnsmasq.conf<br><br>具体需要添加的域名请在TG群发送“域名规则”获取。4.4.4.4以实际DNS为准。<br></code></pre></td></tr></table></figure><p>2.配置文件&#x2F;etc&#x2F;resolv.dnsmasq.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/resolv.dnsmasq.conf<br><br>nameserver 1.1.1.1<br>nameserver 8.8.8.8<br></code></pre></td></tr></table></figure><p>3.设置VPS系统DNS，将本机dnsmasq作为系统DNS服务器。参考上面的操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">chattr -i /etc/resolv.conf<br> echo -e &quot;nameserver 127.0.0.1&quot; &gt; /etc/resolv.conf<br> chattr +i /etc/resolv.conf<br></code></pre></td></tr></table></figure><p>4.重启dnsmasq</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/etc/init.d/dnsmasq restart<br></code></pre></td></tr></table></figure><p>四.卸载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get remove dnsmasq<br>chattr -i /etc/resolv.conf<br>chmod 777 /etc/resolv.conf<br>echo -e &quot;nameserver 8.8.8.8&quot; &gt; /etc/resolv.conf<br></code></pre></td></tr></table></figure><h2 id="V2ray相关协议，DNS分流"><a href="#V2ray相关协议，DNS分流" class="headerlink" title="V2ray相关协议，DNS分流"></a>V2ray相关协议，DNS分流</h2><p>标准配置文件修改要素：</p><p>1.开启流量识别</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;sniffing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;destOverride&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;http&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-string">&quot;tls&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>2.修改出口流量域名分类方式</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;UseIP&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>3.添加DNS分流</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-string">&quot;geosite:netflix&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>一般默认配置文件地址</p><p>V2ray</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/etc/v2ray/config.json<br><br>修改完成后重启 systemctl restart v2ray<br></code></pre></td></tr></table></figure><p>Xray</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/etc/xray/config.json<br><br>修改完成后重启 systemctl restart xray<br></code></pre></td></tr></table></figure><p>完整配置文件示例（wulabing-Xray脚本）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br> <span class="hljs-attr">&quot;log&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>   <span class="hljs-attr">&quot;access&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/log/xray/access.log&quot;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-attr">&quot;error&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/log/xray/error.log&quot;</span><span class="hljs-punctuation">,</span><br>   <span class="hljs-attr">&quot;loglevel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;warning&quot;</span><br> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br> <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>   <span class="hljs-punctuation">&#123;</span><br>     <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vless&quot;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;clients&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>         <span class="hljs-punctuation">&#123;</span><br>           <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;123456-789-123456-45678-12345678&quot;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;flow&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xtls-rprx-direct&quot;</span><br>         <span class="hljs-punctuation">&#125;</span><br>       <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;decryption&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;none&quot;</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;fallbacks&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>         <span class="hljs-punctuation">&#123;</span><br>           <span class="hljs-attr">&quot;dest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">60000</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;alpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;xver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>         <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-punctuation">&#123;</span><br>           <span class="hljs-attr">&quot;dest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">60001</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;alpn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;h2&quot;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;xver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><br>         <span class="hljs-punctuation">&#125;</span><br>       <span class="hljs-punctuation">]</span><br>     <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;streamSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;network&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tcp&quot;</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;security&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xtls&quot;</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;xtlsSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>         <span class="hljs-attr">&quot;minVersion&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1.2&quot;</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-attr">&quot;certificates&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-punctuation">&#123;</span><br>             <span class="hljs-attr">&quot;certificateFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/usr/local/etc/xray/self_signed_cert.pem&quot;</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-attr">&quot;keyFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/usr/local/etc/xray/self_signed_key.pem&quot;</span><br>           <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-punctuation">&#123;</span><br>             <span class="hljs-attr">&quot;certificateFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/ssl/xray.crt&quot;</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-attr">&quot;keyFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/ssl/xray.key&quot;</span><br>           <span class="hljs-punctuation">&#125;</span><br>         <span class="hljs-punctuation">]</span><br>       <span class="hljs-punctuation">&#125;</span><br>     <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;sniffing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;destOverride&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>         <span class="hljs-string">&quot;http&quot;</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-string">&quot;tls&quot;</span><br>       <span class="hljs-punctuation">]</span><br>     <span class="hljs-punctuation">&#125;</span><br>   <span class="hljs-punctuation">&#125;</span><br> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br> <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>   <span class="hljs-punctuation">&#123;</span><br>     <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UseIP&quot;</span>  <br>     <span class="hljs-punctuation">&#125;</span><br>   <span class="hljs-punctuation">&#125;</span><br> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br> <span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>   <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>     <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>     <span class="hljs-punctuation">&#123;</span><br>       <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4&quot;</span><span class="hljs-punctuation">,</span> <br>       <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>       <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geosite:netflix&quot;</span> <span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:disney&quot;</span><br>       <span class="hljs-punctuation">]</span><br>     <span class="hljs-punctuation">&#125;</span><br>   <span class="hljs-punctuation">]</span><br> <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="其他脚本示例"><a href="#其他脚本示例" class="headerlink" title="其他脚本示例"></a>其他脚本示例</h2><h2 id="x-ui"><a href="#x-ui" class="headerlink" title="x-ui"></a>x-ui</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)<br></code></pre></td></tr></table></figure><p>进入【面板设置】——【Xray相关设置】替换文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;api&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;services&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;HandlerService&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;LoggerService&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;StatsService&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;inbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;listen&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">62789</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dokodemo-door&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;outbounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;freedom&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;domainStrategy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UseIP&quot;</span><span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blackhole&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;policy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;system&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;statsInboundDownlink&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;statsInboundUplink&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;routing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;rules&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;inboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;api&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;api&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;ip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;geoip:private&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;outboundTag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blocked&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;protocol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>          <span class="hljs-string">&quot;bittorrent&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;field&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span>    <span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-string">&quot;geosite:netflix&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;stats&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="mack-a-八合一脚本"><a href="#mack-a-八合一脚本" class="headerlink" title="mack-a 八合一脚本"></a>mack-a 八合一脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -P /root -N --no-check-certificate &quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot; &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh<br></code></pre></td></tr></table></figure><p>运行脚本，选择【流媒体工具】 ——&gt; 选【2.DNS解锁流媒体】 ——&gt; 选【1.添加】 ——&gt; 输入您的DNS【4.4.4.4】 ——&gt; 默认输入【1】</p><h1 id="机场使用"><a href="#机场使用" class="headerlink" title="机场使用"></a>机场使用</h1><p><font color="red">以下示例解锁DNS为4.4.4.4，实际使用以对应DNS为准</font></p><p>有些VPS无法配置DNS或配置DNS无效请联系客服定制SOCKS5等分流版本</p><h2 id="XrayR"><a href="#XrayR" class="headerlink" title="XrayR"></a>XrayR</h2><ul><li><strong>1.首先配置 DNS 文件</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/XrayR/dns.json<br></code></pre></td></tr></table></figure><p>全部删除覆盖</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;localhost&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;geosite:netflix&quot;</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dns_inbound&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ul><li><strong>2.修改 XrayR 配置文件</strong></li></ul><p>第 5 行去掉#号开启</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">DnsConfigPath<span class="hljs-punctuation">:</span>  /etc/XrayR/dns.json<br></code></pre></td></tr></table></figure><p>第 35 行附近修改参数</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">EnableDNS<span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><br> DNSType<span class="hljs-punctuation">:</span> UseIP<br></code></pre></td></tr></table></figure><ul><li><strong>3.重启</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">XrayR restart<br></code></pre></td></tr></table></figure><h2 id="SoGa"><a href="#SoGa" class="headerlink" title="SoGa"></a>SoGa</h2><ul><li><strong>docker</strong></li></ul><p>要素</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json">-e default_dns=<span class="hljs-number">4.4</span><span class="hljs-number">.4</span><span class="hljs-number">.4</span> \<br>-e dns_cache_time=<span class="hljs-number">1</span> \<br>-e dns_strategy=ipv4_first \<br></code></pre></td></tr></table></figure><p>示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json">docker run --restart=on-failure --name soga -d \<br>-v /etc/soga/<span class="hljs-punctuation">:</span>/etc/soga/ --network host \<br>-e type=sspanel-uim \<br>-e server_type=ssr \<br>-e api=webapi \<br>-e webapi_url=https<span class="hljs-punctuation">:</span><span class="hljs-comment">//api.soga.com \</span><br>-e webapi_key=admin \<br>-e node_id=<span class="hljs-number">10</span> \<br>-e default_dns=<span class="hljs-number">4.4</span><span class="hljs-number">.4</span><span class="hljs-number">.4</span> \<br>-e dns_cache_time=<span class="hljs-number">1</span> \<br>-e dns_strategy=ipv4_first \<br>-e forbidden_bit_torrent=<span class="hljs-keyword">true</span> \<br>-e cert_domain=image.baidu.com \<br>-e cert_mode=http \<br>-e tunnel_enable=<span class="hljs-keyword">false</span> \<br>-e tunnel_proxy_protocol=<span class="hljs-keyword">true</span> \<br>-e proxy_protocol=<span class="hljs-keyword">true</span> \<br>vaxilu/soga<br></code></pre></td></tr></table></figure><ul><li><strong>脚本安装</strong></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">/etc/soga/soga.conf 修改 default_dns=<span class="hljs-number">4.4</span><span class="hljs-number">.4</span><span class="hljs-number">.4</span><br></code></pre></td></tr></table></figure><h1 id="软路由配置"><a href="#软路由配置" class="headerlink" title="软路由配置"></a>软路由配置</h1><p>软路由插件passwall，openclash，ssrplus+ 都是可以正常使用</p><p>由于DNS解锁的特殊性，对于SS协议使用软路由配置可能会出现无法解锁的情况，这是由于软路由插件直接接管SS的DNS导致流量无法转发。（不是必然出现，与科学插件版本有关）</p><p><font color="red">推荐落地使用V2ray或者Xray协议。</font></p><p>设置要点：</p><p>*1.必须开启UDP转发代理</p><p>由于奈飞TV版本的特殊性，会不定期的使用UDP协议发送数据包查询DNS，UDP数据没有被代理则有可能出现看到一半跳提示：<code>奈飞检测到您可能使用了代理</code></p><p>*2.完备的强制代理域名列表</p><p>可在<a href="https://t.me/nfdns">TG群 <strong>(opens new window)</strong></a>内发送<code>域名规则</code>获取</p><p>*小提示</p><p>passwall中<code>高级设置</code>，UDP转发端口设置为<code>所有</code></p><p>群友反馈</p><p>可能需要<code>关闭</code>软路由openwrt的turoacc组件中的<code>Shortcut-FE 流量分载</code>功能</p><p>如果实在都不行，可以考虑找到类似访问控制，全局控制等选项卡，将电视或者电视盒子的IP设置为完全走代理</p><h1 id="解锁验证"><a href="#解锁验证" class="headerlink" title="解锁验证"></a>解锁验证</h1><h2 id="本地验证"><a href="#本地验证" class="headerlink" title="本地验证"></a>本地验证</h2><p>本地连接节点，用无痕模式打开网页</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://www.netflix.com/title/70143836<br></code></pre></td></tr></table></figure><p>浏览器无痕模式可以正常打开网页，地址栏自动跳转到相应地区</p><p>如：新加坡</p><p><a href="https://www.netflix.com/**sg-zh**/title/70143836">https://www.netflix.com/**sg-zh**/title/70143836</a></p><h2 id="部分VPS验证"><a href="#部分VPS验证" class="headerlink" title="部分VPS验证"></a>部分VPS验证</h2><p><font color="red">使用修改VPS本地DNS方式</font>解锁的可以在VPS上运行脚本验证32位版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.61/nf_2.61_linux_amd64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>ARM64版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.61/nf_2.61_linux_arm64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><h1 id="解锁域名收集"><a href="#解锁域名收集" class="headerlink" title="解锁域名收集"></a>解锁域名收集</h1><h2 id="个性化解锁"><a href="#个性化解锁" class="headerlink" title="个性化解锁"></a>个性化解锁</h2><p>根据具体的解锁需求，将需要解锁的内容添加到DNS的分流设置规则内</p><p>示例添加奈飞，迪士尼和动画疯分流：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-string">&quot;geosite:netflix&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:disney&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;gamer.com.tw&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;bahamut.com.tw&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;hinet.net&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;fbcdn.net&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;gvt1.com&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;digicert.com&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;viblast.com&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>目前已知的geo文件自带流媒体分组域名</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;geosite:netflix&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:bahamut&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:hulu&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:hbo&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:disney&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:bbc&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:4chan&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:fox&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:abema&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:dmm&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:niconico&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:pixiv&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:bilibili&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:viu&quot;</span><br></code></pre></td></tr></table></figure><p>示例简化：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;dns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;servers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;1.1.1.1&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;8.8.8.8&quot;</span><span class="hljs-punctuation">,</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;4.4.4.4（以实际为准）&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">53</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;domains&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>           <span class="hljs-string">&quot;geosite:netflix&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:disney&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;geosite:bahamut&quot;</span><br>        <span class="hljs-punctuation">]</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="动画疯"><a href="#动画疯" class="headerlink" title="动画疯"></a>动画疯</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">gamer.com.tw<br>bahamut.com.tw<br>hinet.net<br>fbcdn.net<br>gvt1.com<br>digicert.com<br>viblast.com<br></code></pre></td></tr></table></figure><h2 id="HBO-GO"><a href="#HBO-GO" class="headerlink" title="HBO GO"></a>HBO GO</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">conviva.com<br>go.com<br>hbo.com<br>hbogo.com<br>hbonow.com<br>hboasia.com<br>hbogo.com<br>hbogoasia.hk<br>hbogoasia.com<br>amazonaws.com<br>akamaihd.net<br>boltdns.net<br>cinemax.com<br>comhbo.com<br>hbomax.com<br>maxgo.com<br></code></pre></td></tr></table></figure><h2 id="Dazn"><a href="#Dazn" class="headerlink" title="Dazn"></a>Dazn</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">control.kochava.com<br>d151l6v8er5bdm.cloudfront.net<br>d1sgwhnao7452x.cloudfront.net<br>dazn-api.com<br>dazn.com<br>dazndn.com<br>dc2-vodhls-perform.secure.footprint.net<br>dca-ll-livedazn-dznlivejp.s.llnwi.net<br>dcalivedazn.akamaized.net<br>dcblivedazn.akamaized.net<br>indazn.com<br>indaznlab.com<br>intercom.io<br>logx.optimizely.com<br>s.yimg.jp<br>sentry.io<br></code></pre></td></tr></table></figure><h2 id="TVB（MyTvSuper）"><a href="#TVB（MyTvSuper）" class="headerlink" title="TVB（MyTvSuper）"></a>TVB（MyTvSuper）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">bigbigchannel.com.hk<br>bigbigshop.com<br>content.jwplatform.com<br>encoretvb.com<br>mytvsuper.com<br>mytvsuperlimited.hb.omtrdc.net<br>mytvsuperlimited.sc.omtrdc.net<br>tvb.com<br>tvb.com.au<br>tvbanywhere.com<br>tvbanywhere.com.sg<br>tvbc.com.cn<br>tvbeventpower.com.hk<br>tvbusa.com<br>tvbweekly.com<br>tvmedia.net.au<br>videos-f.jwpsrv.com<br></code></pre></td></tr></table></figure><h2 id="DMM"><a href="#DMM" class="headerlink" title="DMM"></a>DMM</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">dmm.com<br>dmm.co.jp<br>dmm-extension.com<br>dmmapis.com<br>api-p.videomarket.jp<br></code></pre></td></tr></table></figure><h2 id="Now-E"><a href="#Now-E" class="headerlink" title="Now E"></a>Now E</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">nowe.com<br>nowestatic.com<br></code></pre></td></tr></table></figure><h2 id="Bilibili-Taiwan"><a href="#Bilibili-Taiwan" class="headerlink" title="Bilibili Taiwan"></a>Bilibili Taiwan</h2><p>使用手机APP观看时，请点击播放设置，划开“启用https播放”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">akamaized.net<br>acg.tv<br>acgvideo.com<br>b23.tv<br>bigfun.cn<br>biliapi.com<br>biliapi.net<br>bilibili.com<br>bilibili.tv<br>bilibiligame.net<br>bilicdn1.com<br>bilicdn2.com<br>bilicdn3.com<br>bilicdn4.com<br>bilicdn5.com<br>biligame.com<br>biligame.net<br>bilivideo.com<br>bilivideo.cn<br>hdslb.com<br>im9.com<br>mincdn.com<br>biligo.com<br></code></pre></td></tr></table></figure><h2 id="catchplay"><a href="#catchplay" class="headerlink" title="catchplay"></a>catchplay</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">catchplay.com.tw<br>catchplay.com<br>cloudfront.net<br>akamaized.net<br></code></pre></td></tr></table></figure><h2 id="kktv"><a href="#kktv" class="headerlink" title="kktv"></a>kktv</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">kktv.com.tw<br>kktv.me<br>kk.stream<br></code></pre></td></tr></table></figure><h2 id="myvideo"><a href="#myvideo" class="headerlink" title="myvideo"></a>myvideo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">myvideo.net.tw<br></code></pre></td></tr></table></figure><h2 id="LineTV"><a href="#LineTV" class="headerlink" title="LineTV"></a>LineTV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">chocotv.com.tw<br>line-cdn.net<br>line-scdn.net<br>linetv.tw<br></code></pre></td></tr></table></figure><h2 id="LiTV"><a href="#LiTV" class="headerlink" title="LiTV"></a>LiTV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">litv.tv<br></code></pre></td></tr></table></figure><h2 id="4GTV"><a href="#4GTV" class="headerlink" title="4GTV"></a>4GTV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">4gtv.tv<br></code></pre></td></tr></table></figure><h2 id="ViuTV"><a href="#ViuTV" class="headerlink" title="ViuTV"></a>ViuTV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">viu.tv<br>viu.com<br>viu.now.com<br>amazonaws.com<br>cloudfront.net<br></code></pre></td></tr></table></figure><h2 id="Amazon-Prime-Video"><a href="#Amazon-Prime-Video" class="headerlink" title="Amazon Prime Video"></a>Amazon Prime Video</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">cloudfront.net<br>aiv-cdn.net<br>aiv-delivery.net<br>amazonprimevideo.cn<br>amazonprimevideo.com.cn<br>amazonprimevideos.com<br>amazonvideo.cc<br>amazonvideo.com<br>atv-ps.amazon.com<br>avodmp4s3ww-a.akamaihd.net<br>fls-na.amazon.com<br>llnwd.net<br>media-amazon.com<br>prime-video.com<br>primevideo.cc<br>primevideo.com<br>primevideo.info<br>primevideo.org<br>primevideo.tv<br></code></pre></td></tr></table></figure><h2 id="DMM-1"><a href="#DMM-1" class="headerlink" title="DMM"></a>DMM</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">dmm-extension.com<br>dmm.co.jp<br>dmm.com<br>videomarket.jp<br>p-smith.com<br>vmdash-cenc.akamaized.net<br>img.vm-movie.jp<br>bam.nr-data.net<br></code></pre></td></tr></table></figure><h2 id="Abema"><a href="#Abema" class="headerlink" title="Abema"></a>Abema</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">abema.io<br>abema.tv<br>ds-linear-abematv.akamaized.net<br>linear-abematv.akamaized.net<br>ds-vod-abematv.akamaized.net<br>vod-abematv.akamaized.net<br>ameba.jp<br>hayabusa.io<br>mobile-collector.newrelic.com<br>vod-abematv.akamaized.net<br>bucketeer.jp<br>abema.adx.promo<br>hayabusa.media<br></code></pre></td></tr></table></figure><h2 id="NicoNico"><a href="#NicoNico" class="headerlink" title="NicoNico"></a>NicoNico</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">dmc.nico<br>nicovideo.jp<br>nimg.jp<br>socdm.com<br></code></pre></td></tr></table></figure><h2 id="Telasa"><a href="#Telasa" class="headerlink" title="Telasa"></a>Telasa</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">telasa.jp<br>kddi-video.com<br>videopass.jp<br>d2lmsumy47c8as.cloudfront.net<br></code></pre></td></tr></table></figure><h2 id="Paravi"><a href="#Paravi" class="headerlink" title="Paravi"></a>Paravi</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">paravi.jp<br></code></pre></td></tr></table></figure><h2 id="U-NEXT"><a href="#U-NEXT" class="headerlink" title="U-NEXT"></a>U-NEXT</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">unext.jp<br>nxtv.jp<br></code></pre></td></tr></table></figure><h2 id="Hulu-Japan"><a href="#Hulu-Japan" class="headerlink" title="Hulu Japan"></a>Hulu Japan</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">hulu.com<br>huluad.com<br>huluim.com<br>hulustream.com<br>happyon.jp<br>hulu.jp<br>hjholdings.jp<br>streaks.jp<br>yb.uncn.jp<br>hulu.hb.omtrdc.net<br>conviva.com<br>imrworldwide.com<br>tealiumiq.com<br>tiqcdn.com<br>microad.jp<br>adsrvr.org<br>adsmoloco.com<br>yimg.jp<br>webantenna.info<br>doubleclick.net<br>usergram.info<br>hjholdings.tv<br></code></pre></td></tr></table></figure><h2 id="TVer"><a href="#TVer" class="headerlink" title="TVer"></a>TVer</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">tver.jp<br>edge.api.brightcove.com<br>players.brightcove.net<br></code></pre></td></tr></table></figure><h2 id="WOWOW"><a href="#WOWOW" class="headerlink" title="WOWOW"></a>WOWOW</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wowow.co.jp<br></code></pre></td></tr></table></figure><h2 id="Fuji-TV"><a href="#Fuji-TV" class="headerlink" title="Fuji TV"></a>Fuji TV</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">fujitv.co.jp<br>stream.ne.jp<br></code></pre></td></tr></table></figure><h2 id="Radiko"><a href="#Radiko" class="headerlink" title="Radiko"></a>Radiko</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">radiko.jp<br>radionikkei.jp<br>smartstream.ne.jp<br></code></pre></td></tr></table></figure><h2 id="Karaoke-DAM"><a href="#Karaoke-DAM" class="headerlink" title="Karaoke@DAM"></a>Karaoke@DAM</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">clubdam.com<br></code></pre></td></tr></table></figure><h2 id="Games"><a href="#Games" class="headerlink" title="Games"></a>Games</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">cygames.jp<br>konosubafd.jp<br>colorfulpalette.org<br>cds1.clubdam.com<br>api.worldflipper.jp<br></code></pre></td></tr></table></figure><h2 id="music-jp"><a href="#music-jp" class="headerlink" title="music.jp"></a>music.jp</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">music-book.jp<br>overseaauth.music-book.jp<br></code></pre></td></tr></table></figure><h2 id="GYAO"><a href="#GYAO" class="headerlink" title="GYAO!"></a>GYAO!</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gyao.yahoo.co.jp<br></code></pre></td></tr></table></figure><h2 id="J-com-On-Demand"><a href="#J-com-On-Demand" class="headerlink" title="J:com On Demand"></a>J:com On Demand</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">id.zaq.ne.jp<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 学生包: Namecheap 一年免费SSL证书</title>
    <link href="/2022/06/09/GitHub-Student-Pack-name-com-SSL/"/>
    <url>/2022/06/09/GitHub-Student-Pack-name-com-SSL/</url>
    
    <content type="html"><![CDATA[<p>GitHub学生包赠送name.com免费一年的SSL证书。</p><span id="more"></span><h1 id="福利介绍"><a href="#福利介绍" class="headerlink" title="福利介绍"></a>福利介绍</h1><p>SSL 证书是一个数字证书，用于认证网站的身份并启用加密连接。一般我们都用免费的，当然能用，但往往几个月就会过期。而且别人一查，会发现证书可信度不够高。name.com的证书，原价10美元一年。可以通过学生包免费薅到，岂不乐哉。</p><h1 id="领取"><a href="#领取" class="headerlink" title="领取"></a>领取</h1><p>首先在<a href="https://education.github.com/pack/offers#namecheap">GitHub学生包</a>页面生成offer code:<br><img src="/2022/06/09/GitHub-Student-Pack-name-com-SSL/code.PNG"></p><p>之后点击<a href="https://www.namecheap.com/cart/addtocart.aspx?producttype=ssl&product=positivessl&action=purchase&period=1-YEAR&qty=1">Namecheap网站</a>购买SSL证书，填入优惠码即可免费。<br><img src="/2022/06/09/GitHub-Student-Pack-name-com-SSL/code.PNG"></p><h1 id="激活SSL证书"><a href="#激活SSL证书" class="headerlink" title="激活SSL证书"></a>激活SSL证书</h1><p>首先在服务器上生成CSR，参考这篇文章<a href="https://help.aliyun.com/document_detail/42218.html">如何制作CSR文件</a>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@host]<span class="hljs-comment"># openssl req -new -nodes -sha256 -newkey rsa:2048 -keyout your_private.key -out CSR</span><br>Generating a RSA private key<br>......................+++++<br>.................................................+++++<br>writing new private key to <span class="hljs-string">&#x27;[]&#x27;</span><br>-----<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter <span class="hljs-string">&#x27;.&#x27;</span>, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:CN<br>State or Province Name (full name) []:Beijing<br>Locality Name (eg, city) [Default City]:Beijing<br>Organization Name (eg, company) [Default Company Ltd]:<br>Organizational Unit Name (eg, section) []:<br>Common Name (eg, your name or your server<span class="hljs-string">&#x27;s hostname) []:host</span><br><span class="hljs-string">Email Address []:example@aa.com</span><br><span class="hljs-string"></span><br><span class="hljs-string">Please enter the following &#x27;</span>extra<span class="hljs-string">&#x27; attributes</span><br><span class="hljs-string">to be sent with your certificate request</span><br><span class="hljs-string">A challenge password []:NferwjIEDRW</span><br><span class="hljs-string">An optional company name []:</span><br></code></pre></td></tr></table></figure><ul><li>Organization Name：公司名称，可以是中文或英文。</li><li>Organization Unit Name：部门名称，可以是中文或英文。</li><li>Country Code：申请单位所属国家，只能是两个字母的国家码。例如，中国只能是CN。</li><li>State or Province：州名或省份名称，可以是中文或英文。</li><li>Locality：城市名称，可以是中文或英文。</li><li>Common Name：申请SSL证书的具体网站域名。</li><li>Email Address：可选择不输入。</li><li>A challenge password：可选择不输入。</li></ul><p>会生成两个文件，一个your_private.key，一个CSR，其中CSR上传到namecheap网站，your_private.key则保留在服务器上，之后会用到。</p><p>在下面填入CSR内容：</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-literal">-----</span><span class="hljs-comment">BEGIN CERTIFICATE REQUEST</span><span class="hljs-literal">-----</span><br><span class="hljs-comment">类似于这样的格式</span><br><span class="hljs-literal">-----</span><span class="hljs-comment">END CERTIFICATE REQUEST</span><span class="hljs-literal">-----</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/09/GitHub-Student-Pack-name-com-SSL/CSR.PNG"></p><p>然后选择验证方式，如果有域名邮箱，可以直接用域名邮箱进行验证即可。<br><img src="/2022/06/09/GitHub-Student-Pack-name-com-SSL/confirm.PNG"></p><h1 id="证书安装"><a href="#证书安装" class="headerlink" title="证书安装"></a>证书安装</h1><p>根据<a href="https://www.namecheap.com/support/knowledgebase/article.aspx/795/69/how-to-install-ssl-certificates/?_gl=1*ibgtzr*_ga*MjU3MTYxMjkxLjE2NTQ3NTkyOTk.*_ga_7DMJMG20P8*MTY1NDc1OTI5OS4xLjEuMTY1NDc2MjczNS42MA..">Namecheap的官方安装教程</a>，有很多种选择，这里我们选择手动配置Nginx进行安装。</p><h1 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h1><p>下载证书文件到服务器：<br><img src="/2022/06/09/GitHub-Student-Pack-name-com-SSL/download.PNG">  </p><p>将两个文件的内容（your_domain.crt 和 your_domain.ca-bundle）合并到一个crt文件中:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> your_domain.crt your_domain.ca-bundle &gt;&gt; your_domain_chain.crt<br></code></pre></td></tr></table></figure><p>修改证书路径：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">ssl_certificate</span> <span class="hljs-string">/path/to/certificate/your_domain_chain.crt;</span><br><br><span class="hljs-string">ssl_certificate_key</span> <span class="hljs-string">/path/to/your_private.key;</span><br></code></pre></td></tr></table></figure><h1 id="重启Nginx即可"><a href="#重启Nginx即可" class="headerlink" title="重启Nginx即可"></a>重启Nginx即可</h1><p>验证配置文件是否正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ nginx -t<br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf <span class="hljs-built_in">test</span> is successful<br></code></pre></td></tr></table></figure><p>重启：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl reload nginx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>web开发</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 学生包：没用的Netwise服务器托管</title>
    <link href="/2022/06/09/GitHub-Student-Pack-Netwise/"/>
    <url>/2022/06/09/GitHub-Student-Pack-Netwise/</url>
    
    <content type="html"><![CDATA[<p>GitHub 学生包有很多福利。netwise是英国的基础设施供应商。Github学生包可为学生提供12个月的基础 1U 服务器托管包。其实没啥用。</p><blockquote><p>Free single unit server colocation package free for 12 months.</p></blockquote><span id="more"></span><h1 id="福利介绍"><a href="#福利介绍" class="headerlink" title="福利介绍"></a>福利介绍</h1><p><strong>12个月</strong>的位于<strong>伦敦</strong>的服务器托管基础服务，这意味着要使用托管服务，您需要<strong>拥有自己的物理服务器</strong>。 </p><p>服务器将受益于数据中心设计的高正常运行时间冗余，例如弹性电源、运营商级连接、适当设计的冷却系统、增强的安全性和 24x7 技术支持。</p><div class="note info">请注意：我们不提供服务器，因此您必须拥有自己的物理服务器硬件才能使用此服务。</div><p>包含以下内容：  </p><ul><li>1U 安全空间？</li><li>0.5 安培功率分配？</li><li>1TB 流量</li><li>100 Mbps 带宽</li><li>一个 ipv4 地址</li></ul><p><img src="/2022/06/09/GitHub-Student-Pack-Netwise/benifits.PNG"></p><p>另外包括技术支持：</p><ul><li><input checked disabled type="checkbox"> 24 小时技术专家支持</li><li><input checked disabled type="checkbox"> 一流设施？</li><li><input checked disabled type="checkbox"> 高弹性低延迟网络</li><li><input checked disabled type="checkbox"> 冗余功率和冷却</li></ul><p><img src="/2022/06/09/GitHub-Student-Pack-Netwise/features.PNG"></p><h1 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h1><blockquote><p>官网链接：<a href="https://www.netwise.co.uk/students/">Netwise Students</a><br>点击右上角 <code>BOOK A TOUR</code> 注册账号。</p></blockquote><p>注意，这里选择 <code>London Central</code> 。<br><img src="/2022/06/09/GitHub-Student-Pack-Netwise/register.PNG"></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>web开发</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 学生包: Azure 100美金试用</title>
    <link href="/2022/06/08/GitHub-student-pack-Azure-100/"/>
    <url>/2022/06/08/GitHub-student-pack-Azure-100/</url>
    
    <content type="html"><![CDATA[<p>本文详解如何薅GitHub的学生包里的Azure给的100美金试用，有效期一年，<font color="orange">不需要信用卡，而是学校的电子邮件地址</font>。<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/azure100.PNG"></p><span id="more"></span><h1 id="福利解释"><a href="#福利解释" class="headerlink" title="福利解释"></a>福利解释</h1><p>Azure这个福利主要是给了<strong>100美金</strong>的试用（为期一年），同时可以享受1年期的2个Azure虚拟机，Azure SQL数据库，和5GB的本地冗余存储热块。同时还有永久的Azure应用服务和云函数，集群容器管理Azure Kubernetes服务，静态页面部署（最多10个）等等。<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/100.PNG">  </p><ol><li>Linux 虚拟机 750 小时&#x2F;月，即套餐B1S VM（1核1GB内存）开一个免费用一年。</li><li>Windows 虚拟机 750 小时&#x2F;月，即套餐B1S VM（1核1GB内存）开一个免费用一年。</li><li>托管磁盘 两个 64 GB 的 P6 SDD ，Blob 存储 5 GB 。文件存储 5 GB。</li><li>SQL 数据库 250 GB ，创建可提供内置智能功能的 SQL 数据库。</li><li>Azure Cosmos DB 数据库 400 RU 数&#x2F;秒</li></ol><p>关于带宽的问题，Azure官方的 <a href="https://azure.microsoft.com/zh-cn/pricing/details/bandwidth/">带宽定价</a> 有说明。下面是我的理解，不一定对：</p><ul><li>数据传入：免费</li><li>数据传出：<ul><li>前100GB免费</li><li>后10TB：<ul><li>$0.12&#x2F;GB</li><li><a href="https://docs.microsoft.com/zh-cn/azure/virtual-network/routing-preference-overview">路由首选传输 ISP 网络</a>：$0.12&#x2F;GB</li></ul></li></ul></li><li>区域之间：<ul><li>同区域免费</li><li>跨区域 $0.02 ~ 0.16&#x2F;GB 不等</li></ul></li></ul><p>就是说前100GB免费，而100刀的话，基本每个月还可以超大概70GB的样子。</p><p>参考：</p><blockquote><p>Azure $200（需要信用卡）：<a href="https://visualstudio.microsoft.com/zh-hans/dev-essentials/">《Visual Studio Dev Essentials 免费工具. 云服务和培训》</a><br>Azure $100 （需要教育邮箱）：<a href="https://azure.microsoft.com/zh-cn/free/students/">使用面向学生的 Azure 在云中免费生成内容</a></p></blockquote><p><img src="/2022/06/08/GitHub-student-pack-Azure-100/azurefree.PNG"></p><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><p>激活账号非常简单方便。</p><p>从<strong>学生包的链接</strong>进入：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/link.PNG">  </p><p>之后可以选择使用已经有的微软账号登录或者新建账号登录，均可。最后选择自己需要的福利进行激活。</p><p>一般来说用的最多的就是：</p><ul><li>Azure 免费帐户 + 100 美元信用额度</li></ul><p>但是之后又需要你用<strong>教育邮箱</strong>来进行激活：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/join.PNG">  </p><h1 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h1><p><img src="/2022/06/08/GitHub-student-pack-Azure-100/start.PNG"><br>进入首页，点击创建资源：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/create.PNG"><br>选择虚拟机-创建：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/VM.PNG"><br>如果使用私钥登录SSH的话，按照下图创建，并命名密钥对名字即可，如果使用密码登录，指定密码和用户名即可，新手建议后者：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/basic.PNG"><br>改用密码登录：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/passwd.PNG"> </p><div class="note info">如果使用密钥连接SSH，一定要记得下载密钥！只有一次下载机会。</div><p>之后对细节进行确认，再点击创建，即可。最后等待部署完成<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/ok.PNG"></p><h1 id="更换磁盘"><a href="#更换磁盘" class="headerlink" title="更换磁盘"></a>更换磁盘</h1><p>Azure for Student包含两个免费的64GB的p6性能的磁盘。但创建实例的时候默认创建30GB的磁盘且不能更改，这个30GB是<strong>收费</strong>的，虽然我们有100刀可拿来扣，但实在亏啊，所以一定要修改成64GB。</p><h2 id="停止实例"><a href="#停止实例" class="headerlink" title="停止实例"></a>停止实例</h2><p>直接修改会发现实例在运行的时候是不能改的。所以先停止实例。<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/warn.PNG"></p><p>在资源中找到实例，点击概述，找到停止：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/stop.PNG"></p><div class="note info">面板上重启机器会导致IP变化。但静态IP是要收费的。不过一般来说也不会重启所以我个人觉得无所谓了。</div><h2 id="更改磁盘容量【必须】"><a href="#更改磁盘容量【必须】" class="headerlink" title="更改磁盘容量【必须】"></a>更改磁盘容量【必须】</h2><p>点击磁盘：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/disk.PNG"></p><p>调整大小：<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/adjust.PNG"></p><p>之后返回页面点击概述-开始，启动虚拟机即可~</p><div class="note info">磁盘页面的磁盘容量如果没有变化，刷新就好。</div><h1 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h1><p>点开刚创建的虚拟机 -&gt; 网络 -&gt; 入站端口规则 -&gt; 添加入站端口规则 + 添加出站端口规则，你需要用到什么端口就开什么端口，如果对安全要求不高且怕麻烦的话，建议一次性全开了。出入站都是如下图所设置，规则名字不要重复就好。<br><img src="/2022/06/08/GitHub-student-pack-Azure-100/inbound.png">  </p><h1 id="增加磁盘【可选】"><a href="#增加磁盘【可选】" class="headerlink" title="增加磁盘【可选】"></a>增加磁盘【可选】</h1><p>因为b1s性能垃圾。一般我都不开windows，所以多出来一个64GB磁盘。点击 <code>磁盘</code> ，点击附加磁盘，</p><p>之后按照官方教程来即可：<br><a href="https://docs.microsoft.com/zh-cn/azure/virtual-machines/linux/attach-disk-portal">使用门户将数据磁盘附加到 Linux VM</a></p><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>列出磁盘：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i <span class="hljs-string">&quot;sd&quot;</span><br></code></pre></td></tr></table></figure><p>输出类似于以下示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">sda     0:0:0:0      30G<br>├─sda1             29.9G /<br>├─sda14               4M<br>└─sda15             106M /boot/efi<br>sdb     1:0:1:0      14G<br>└─sdb1               14G /mnt<br>sdc     3:0:0:0       4G<br></code></pre></td></tr></table></figure><p>在此示例中，添加的磁盘是 <code>sdc</code>。 它的 LUN 为 0，大小为 4 GB。<br>如果附加新磁盘，需要对磁盘进行分区。</p><p><code>parted</code> 实用程序可用于对数据磁盘进行分区和格式设置。</p><ul><li>建议使用适用于你的发行版的最新版 <code>parted</code>。</li><li>如果磁盘大于或等于 2 TiB，必须使用 GPT 分区。 如果磁盘小于 2 TiB，则可以使用 MBR 或 GPT 分区。</li></ul><p>以下示例在 <code>/dev/sdc</code> 上使用 <code>parted</code>，那里是大多数 VM 上第一块数据磁盘通常所在的位置。 将 <code>sdc</code> 替换为磁盘的正确选项。 我们还使用 <a href="https://xfs.wiki.kernel.org/">XFS</a> 文件系统对其进行格式设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo parted /dev/sdc --script mklabel gpt mkpart xfspart xfs 0% 100%<br>sudo mkfs.xfs /dev/sdc1<br>sudo partprobe /dev/sdc1<br></code></pre></td></tr></table></figure><h2 id="装载磁盘"><a href="#装载磁盘" class="headerlink" title="装载磁盘"></a>装载磁盘</h2><p>使用 <code>mkdir</code> 创建一个目录来装载文件系统。 以下示例在 <code>/datadrive</code> 处创建一个目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> /datadrive<br></code></pre></td></tr></table></figure><p>然后，使用 <code>mount</code> 来装载文件系统。 以下示例将 <em>&#x2F;dev&#x2F;sdc1</em> 分区装载到 <code>/datadrive</code> 装入点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mount /dev/sdc1 /datadrive<br></code></pre></td></tr></table></figure><p>若要确保在重新引导后自动重新装载驱动器，必须将其添加到 <em>&#x2F;etc&#x2F;fstab</em> 文件。 强烈建议在 &#x2F;etc&#x2F;fstab 中使用 UUID（全局唯一标识符）来引用驱动器而不是只使用设备名称（例如 &#x2F;&#x2F;dev&#x2F;sdc1） 。 如果 OS 在启动过程中检测到磁盘错误，使用 UUID 可以避免将错误的磁盘装载到给定位置。 然后为剩余的数据磁盘分配这些设备 ID。 若要查找新驱动器的 UUID，请使用 <code>blkid</code> 实用工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo blkid<br></code></pre></td></tr></table></figure><p>输出与以下示例类似：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">/dev/sda1: LABEL=<span class="hljs-string">&quot;cloudimg-rootfs&quot;</span> UUID=<span class="hljs-string">&quot;11111111-1b1b-1c1c-1d1d-1e1e1e1e1e1e&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span> PARTUUID=<span class="hljs-string">&quot;1a1b1c1d-11aa-1234-1a1a1a1a1a1a&quot;</span><br>/dev/sda15: LABEL=<span class="hljs-string">&quot;UEFI&quot;</span> UUID=<span class="hljs-string">&quot;BCD7-96A6&quot;</span> TYPE=<span class="hljs-string">&quot;vfat&quot;</span> PARTUUID=<span class="hljs-string">&quot;1e1g1cg1h-11aa-1234-1u1u1a1a1u1u&quot;</span><br>/dev/sdb1: UUID=<span class="hljs-string">&quot;22222222-2b2b-2c2c-2d2d-2e2e2e2e2e2e&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span> PARTUUID=<span class="hljs-string">&quot;1a2b3c4d-01&quot;</span><br>/dev/sda14: PARTUUID=<span class="hljs-string">&quot;2e2g2cg2h-11aa-1234-1u1u1a1a1u1u&quot;</span><br>/dev/sdc1: UUID=<span class="hljs-string">&quot;33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e&quot;</span> TYPE=<span class="hljs-string">&quot;xfs&quot;</span> PARTLABEL=<span class="hljs-string">&quot;xfspart&quot;</span> PARTUUID=<span class="hljs-string">&quot;c1c2c3c4-1234-cdef-asdf3456ghjk&quot;</span><br></code></pre></td></tr></table></figure><div class="note info">错误地编辑 /etc/fstab 文件可能会导致系统无法引导。 如果没有把握，请参考分发的文档来获取有关如何正确编辑该文件的信息。 另外，建议在编辑前备份 /etc/fstab 文件。</div><p>在文本编辑器中打开 <em>&#x2F;etc&#x2F;fstab</em> 文件，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/fstab<br></code></pre></td></tr></table></figure><p>在此示例中，使用在之前的步骤中创建的 <code>/dev/sdc1</code> 设备的 UUID 值并使用 <code>/datadrive</code> 装入点。 在 <code>/etc/fstab</code> 文件的末尾添加以下行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">UUID=33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e   /datadrive   xfs   defaults,nofail   1   2<br></code></pre></td></tr></table></figure><p>因为使用的是 nano 编辑器，所以在编辑完文件后，使用 <code>Ctrl+O</code> 写入该文件，然后使用 <code>Ctrl+X</code> 退出该编辑器。</p><h2 id="验证磁盘"><a href="#验证磁盘" class="headerlink" title="验证磁盘"></a>验证磁盘</h2><p>现在可以再次使用 <code>lsblk</code> 来查看磁盘和装入点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i <span class="hljs-string">&quot;sd&quot;</span><br></code></pre></td></tr></table></figure><p>输出将如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">sda     0:0:0:0      30G<br>├─sda1             29.9G /<br>├─sda14               4M<br>└─sda15             106M /boot/efi<br>sdb     1:0:1:0      14G<br>└─sdb1               14G /mnt<br>sdc     3:0:0:0       4G<br>└─sdc1                4G /datadrive<br></code></pre></td></tr></table></figure><p>可以看到 <code>sdc</code> 现在已装载到 <code>/datadrive</code>。</p><p>查看总磁盘容量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sL yabs.sh | bash -s -- -fig<br></code></pre></td></tr></table></figure><h2 id="多嘴一句"><a href="#多嘴一句" class="headerlink" title="多嘴一句"></a>多嘴一句</h2><p>B1s这个性能限制到了10%，硬盘性能也非常差。意思就是拿来玩玩就好了。实际上做不了啥。</p><p><img src="/2022/06/08/GitHub-student-pack-Azure-100/b1s.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>web开发</tag>
      
      <tag>学习</tag>
      
      <tag>Azure</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Telegram机器人api被墙解决办法：自建反代</title>
    <link href="/2022/06/03/Reverse-Proxy-for-Telegram-Bot-API/"/>
    <url>/2022/06/03/Reverse-Proxy-for-Telegram-Bot-API/</url>
    
    <content type="html"><![CDATA[<p>如果我们需要在大陆的服务器&#x2F;网络上使用telegram bot的API，那要么翻墙要么反代。本来可以用CloudFlare的workers进行反代，但前不久它已经被墙了。但是我们可以用自己的<strong>国外</strong>服务器进行反代。</p><span id="more"></span><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li>不受GFW封锁的服务器</li><li>一个没有被墙的域名</li></ul><h1 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h1><p>这个应该不必说。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Ubuntu或者Debian</span><br>apt install nginx<br><span class="hljs-comment"># CentOS或者Red Hat</span><br>yum install nginx<br></code></pre></td></tr></table></figure><h1 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h1><p>找到你nginx的配置文件，在http{}中加上下面的配置。</p><p>目前较新版本的nginx是在 <code>/etc/nginx/conf.d/</code> 文件夹下。</p><p>老一点的版本是在： <code>/etc/nginx/sites-available/</code> 文件夹下。</p><p>新建<code>.conf</code>结尾的文件即可。例如：<code>vim /etc/nginx/conf.d/telebotapi.conf</code></p><p>然后加入下面配置 （记得把 <code>yourDomainName</code> 换成你的域名，有两处）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># http强制跳转到htpps</span><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">yourDomainName;</span><br><br>    <span class="hljs-comment"># Enforce HTTPS</span><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$server_name$request_uri;</span><br>&#125;<br><span class="hljs-comment">## https</span><br><span class="hljs-string">server</span> &#123;<br>        <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl;</span><br>        <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl;</span><br><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">yourDomainName;</span><br><br>        <span class="hljs-comment">## ssl密钥路径自己改改</span><br><span class="hljs-comment">#ssl_certificate server.pem;</span><br><span class="hljs-comment">#ssl_certificate_key server.key;</span><br><br>        <span class="hljs-comment">## root非必要</span><br><span class="hljs-string">root</span> <span class="hljs-string">/var/www/tgbot/;</span><br><br>        <span class="hljs-comment">## dns必须写，不然会报502错误</span><br>        <span class="hljs-string">resolver</span> <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span><span class="hljs-string">;</span><br><br>        <span class="hljs-comment">## 以bot开头的请求都会被正则匹配到</span><br>        <span class="hljs-string">location</span> <span class="hljs-string">~*</span> <span class="hljs-string">^/bot</span> &#123;<br><span class="hljs-string">proxy_buffering</span> <span class="hljs-string">off;</span><br>                <span class="hljs-string">proxy_pass</span>  <span class="hljs-string">https://api.telegram.org$request_uri;</span><br>                <span class="hljs-string">proxy_http_version</span> <span class="hljs-number">1.1</span><span class="hljs-string">;</span><br>        &#125;<br><br>        <span class="hljs-comment">## 和上面root一样非必要，这个主要是用来确认服务器状态的。也可以改成return 403</span><br><span class="hljs-string">location</span> <span class="hljs-string">/</span>&#123; <br><span class="hljs-string">try_files</span> <span class="hljs-string">/$uri</span> <span class="hljs-string">$uri</span> <span class="hljs-string">/index.html;</span><br>&#125;<br><br>        <span class="hljs-comment">## no log no fix</span><br>        <span class="hljs-string">error_log</span>    <span class="hljs-string">/var/log/tg.log</span>  <span class="hljs-string">error;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><code>yourDomainName</code>-<font color="red">你准备的域名</font></p><p>测试一下语法是否正确：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nginx -t</span><br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is successful<br></code></pre></td></tr></table></figure><p>重新加载配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl reload nginx<br></code></pre></td></tr></table></figure><p>🎉然后执行 <code>systemctl restart nginx</code> </p><h1 id="安装certbot（申请证书用）"><a href="#安装certbot（申请证书用）" class="headerlink" title="安装certbot（申请证书用）"></a>安装certbot（申请证书用）</h1><p>如果已经有证书，直接将Nginx配置文件中<code>ssl_certificate server.pem;</code> <code>ssl_certificate_key server.key;</code> 写入你的证书地址，并取消注释（删除<code>#</code>）即可，那可以跳过本小节。</p><p><code>ssl_certificate</code>-SSL证书路径<br><code>ssl_certificate_key</code>-SSL证书路径</p><p>不知道的可以参考文章：<a href="https://pawswrite.xyz/2022/06/02/Certbot-Installation/">自动为你的域名申请证书：certbot的安装和使用</a></p><h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p>将原来的 <code>https://api.telegram.org/</code> 替换为 <code>https://yourDomainName/</code> ,即可正常推送消息</p><h1 id="防止盗用"><a href="#防止盗用" class="headerlink" title="防止盗用"></a>防止盗用</h1><h1 id="用防火墙限制访问的源IP"><a href="#用防火墙限制访问的源IP" class="headerlink" title="用防火墙限制访问的源IP"></a>用防火墙限制访问的源IP</h1><p><code>serverIp</code>-你用来访问反代域名的ip地址,你系统安装的那个就用那个命令,<code>ufw</code> <code>iptables</code> 都可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#ubuntu</span><br>ufw allow proto tcp from serverIp to any port 443<br><span class="hljs-comment">#centos</span><br>iptables -I INPUT -p tcp --dport 443 -j DROP<br>iptables -I INPUT -s serverIp -p tcp --dport 443 -j ACCEPT<br></code></pre></td></tr></table></figure><p>但问题是如果你用了反代的服务器建了别的站，会导致别的站不能访问。不过你可以换个端口来反代telegram bot，相应的，防火墙规则也换一个端口就好。</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><blockquote><p>本文参考哪吒面板文档：<a href="https://nezhahq.github.io/guide/q1.html">TG api被墙解决方案</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>翻墙</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Nginx做简单反向代理</title>
    <link href="/2022/06/03/Simple-Reverse-Proxy-by-Nginx/"/>
    <url>/2022/06/03/Simple-Reverse-Proxy-by-Nginx/</url>
    
    <content type="html"><![CDATA[<p>Nginx是一个很强大的轻量级的Web服务器、反向代理服务器，由于它的内存占用少，启动极快，高并发能力强，在互联网项目中广泛应用。如果想要在一个服务器上布置很多个站点，并且都直接用域名不加端口号，也就是用443&#x2F;80端口访问，那么反向代理必不可少。本文用搭建 <code>Speedtest-x</code> 服务器来介绍简单的Nginx反代。</p><span id="more"></span><h1 id="首先搭建站点"><a href="#首先搭建站点" class="headerlink" title="首先搭建站点"></a>首先搭建站点</h1><p>首先可以看<a href="https://pawswrite.xyz/2022/06/01/Deploy-your-own-speedtest-website/">用服务器搭建你自己的SpeedTest测速服务器</a>来搭建自己的网页，但最后是访问 <code>&#123;IP&#125;:&#123;端口&#125;/index.html</code> 进行测速打开网页，这样很不方便。这里我们记住端口号就好。</p><h1 id="修改端口的host"><a href="#修改端口的host" class="headerlink" title="修改端口的host"></a>修改端口的host</h1><p>对于<a href="https://pawswrite.xyz/2022/06/01/Deploy-your-own-speedtest-website/">用服务器搭建你自己的SpeedTest测速服务器</a>这篇文章，我们的站点是可以通过外网来访问端口最终来访问网页的，但既然我们已经要进行反代了，那么对外网开放端口并不是一个很好的选择。我们可以先停止之前的容器。</p><p><code>docker ps</code>查看容器信息，找到对应的容器ID（CONTAINER ID）。</p><p>然后<code>docker stop speedtest-x &amp;&amp; docker rm speedtest-x</code>或者<code>docker stop 容器ID &amp;&amp; docker rm 容器ID</code></p><ol><li><p>arm架构<br>运行 <code>docker run -d -p 127.0.0.1:9001:80 -it --name speedtest-x stilleshan/speedtest-x</code></p></li><li><p>amd架构<br>运行 <code>docker run -d -p 127.0.0.1:9001:80 -it --name speedtest-x badapple9/speedtest-x</code></p></li></ol><h1 id="Nginx-反代"><a href="#Nginx-反代" class="headerlink" title="Nginx 反代"></a>Nginx 反代</h1><h2 id="新建配置文件"><a href="#新建配置文件" class="headerlink" title="新建配置文件"></a>新建配置文件</h2><p>在 <code>/etc/nginx/conf.d/</code> 文件夹下新建 <code>.conf</code> 结尾的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/speedtest-x.conf<br></code></pre></td></tr></table></figure><p>将下面配置复制进去，记得把域名 <code>speedtest.pawswrite.xyz</code> 改成你的域名，有两处：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">speedtest.pawswrite.xyz;</span><br><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$host$request_uri;</span><br>&#125;<br><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-comment"># Replace bark.app.dev with your real domain name.</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">speedtest.pawswrite.xyz;</span><br><br>    <span class="hljs-comment"># ssl_certificate /path/to/signed_cert_plus_intermediates;</span><br>    <span class="hljs-comment"># ssl_certificate_key /path/to/private_key;</span><br>    <span class="hljs-string">ssl_session_timeout</span> <span class="hljs-string">1d;</span><br>    <span class="hljs-string">ssl_session_cache</span> <span class="hljs-string">shared:MozSSL:10m;</span>  <span class="hljs-comment"># about 40000 sessions</span><br>    <span class="hljs-string">ssl_session_tickets</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># modern configuration</span><br>    <span class="hljs-string">ssl_protocols</span> <span class="hljs-string">TLSv1.3;</span><br>    <span class="hljs-string">ssl_prefer_server_ciphers</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># HSTS (ngx_http_headers_module is required) (63072000 seconds)</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Strict-Transport-Security</span> <span class="hljs-string">&quot;max-age=63072000&quot;</span> <span class="hljs-string">always;</span><br><br>    <span class="hljs-comment"># OCSP stapling</span><br>    <span class="hljs-string">ssl_stapling</span> <span class="hljs-string">on;</span><br>    <span class="hljs-string">ssl_stapling_verify</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-comment"># verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br>    <span class="hljs-comment"># ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><br>    <span class="hljs-comment"># replace with the IP address of your resolver</span><br>    <span class="hljs-comment">#resolver 127.0.0.1;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br><br>        <span class="hljs-string">log_not_found</span> <span class="hljs-string">on;</span><br>        <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://127.0.0.1:9001;</span><br><br>        <span class="hljs-string">proxy_read_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_connect_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_redirect</span> <span class="hljs-string">off;</span><br><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span>              <span class="hljs-string">$host;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$scheme;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Real-IP</span>         <span class="hljs-string">$remote_addr;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>测试一下语法是否正确：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nginx -t</span><br>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is successful<br></code></pre></td></tr></table></figure><p>重新加载配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl reload nginx<br></code></pre></td></tr></table></figure><h1 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h1><h1 id="安装certbot"><a href="#安装certbot" class="headerlink" title="安装certbot"></a>安装certbot</h1><p>看另一篇文章。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些VPS主机服务商的广告推荐（带aff）</title>
    <link href="/2022/06/02/VPS-aff/"/>
    <url>/2022/06/02/VPS-aff/</url>
    
    <content type="html"><![CDATA[<p>VPS主机服务商的广告推荐（带aff）</p><span id="more"></span><h1 id="RackNerd-VPS-所有目前在售特价促销小鸡汇总："><a href="#RackNerd-VPS-所有目前在售特价促销小鸡汇总：" class="headerlink" title="RackNerd VPS 所有目前在售特价促销小鸡汇总："></a>RackNerd VPS 所有目前在售特价促销小鸡汇总：</h1><p>3C&#x2F;3G&#x2F;45G SSD&#x2F;6.5T  $24.28<br><a href="https://my.racknerd.com/aff.php?aff=3020&amp;pid=199">https://my.racknerd.com/aff.php?aff=3020&amp;pid=199</a></p><p>1C&#x2F;512MB&#x2F;10G SSD&#x2F;1T  $9.89<br><a href="https://my.racknerd.com/aff.php?aff=3020&amp;pid=620">https://my.racknerd.com/aff.php?aff=3020&amp;pid=620</a></p><p>1C&#x2F;768MB&#x2F;13 SSD&#x2F;1T  $10.88<br><a href="https://my.racknerd.com/aff.php?aff=3020&amp;pid=632">https://my.racknerd.com/aff.php?aff=3020&amp;pid=632</a></p><p>1C&#x2F;1G&#x2F;12G SSD&#x2F;1T  $11.88<br><a href="https://my.racknerd.com/aff.php?aff=3020&amp;pid=648">https://my.racknerd.com/aff.php?aff=3020&amp;pid=648</a></p><p>1C&#x2F;1G&#x2F;20G SSD&#x2F;2T  $13.98<br><a href="https://my.racknerd.com/aff.php?aff=3020&amp;pid=621">https://my.racknerd.com/aff.php?aff=3020&amp;pid=621</a></p><p>1C&#x2F;1G&#x2F;25G SSD&#x2F;4T  $14.88<br><a href="https://my.racknerd.com/aff.php?aff=3020&amp;pid=588">https://my.racknerd.com/aff.php?aff=3020&amp;pid=588</a></p><p>1C&#x2F;2G&#x2F;25G SSD&#x2F;3T  $17.88<br><a href="https://my.racknerd.com/aff.php?aff=3020&amp;pid=649">https://my.racknerd.com/aff.php?aff=3020&amp;pid=649</a></p><p>2C&#x2F;1.5G&#x2F;20G SSD&#x2F;4T  $16.55<br><a href="https://my.racknerd.com/aff.php?aff=3020&amp;pid=135">https://my.racknerd.com/aff.php?aff=3020&amp;pid=135</a></p><h1 id="RackNerd"><a href="#RackNerd" class="headerlink" title="RackNerd"></a>RackNerd</h1><p>一直在用，线路一般，性价比非常高。</p><p><a href="https://lowendtalk.com/">LowEndTalk</a>回复可以发工单流量加倍？但我反正用不完。</p><h2 id="RackNerd黑五促銷VPS"><a href="#RackNerd黑五促銷VPS" class="headerlink" title="RackNerd黑五促銷VPS"></a>RackNerd黑五促銷VPS</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>可选机房: <ul><li>洛杉矶, 圣何塞, 达拉斯, 芝加哥, 纽约或西雅图</li></ul></li></ul><table><thead><tr><th align="center">内存</th><th align="center">CPU</th><th align="center">SSD</th><th align="center">流量</th><th align="center">价格</th><th align="center">购买</th></tr></thead><tbody><tr><td align="center">768M</td><td align="center">1核</td><td align="center">12G</td><td align="center">1T&#x2F;月</td><td align="center">$10.88&#x2F;年</td><td align="center"><a href="https://my.racknerd.com/aff.php?&pid=587&aff=3020">链接</a></td></tr><tr><td align="center">1G</td><td align="center">1核</td><td align="center">25G</td><td align="center">4T&#x2F;月</td><td align="center">$14.88&#x2F;年</td><td align="center"><a href="https://my.racknerd.com/aff.php?&pid=588&aff=3020">链接</a></td></tr><tr><td align="center">2.5G</td><td align="center">2核</td><td align="center">50G</td><td align="center">6T&#x2F;月</td><td align="center">$27.88&#x2F;年</td><td align="center"><a href="https://my.racknerd.com/aff.php?&pid=589aff=3020">链接</a></td></tr></tbody></table><p>好像用我的链接是可以拿回扣。我还没试过。</p><h2 id="RackNerd劳动节促销VPS"><a href="#RackNerd劳动节促销VPS" class="headerlink" title="RackNerd劳动节促销VPS"></a>RackNerd劳动节促销VPS</h2><p>流量可以去LET发工单翻倍。</p><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><table><thead><tr><th align="center">内存</th><th align="center">CPU</th><th align="center">SSD</th><th align="center">流量</th><th align="center">价格</th><th align="center">购买</th></tr></thead><tbody><tr><td align="center">3G</td><td align="center">3核</td><td align="center">45G</td><td align="center">6.5T&#x2F;月</td><td align="center">$24.28&#x2F;年</td><td align="center"><a href="https://my.racknerd.com/aff.php?aff=3020&pid=199">链接</a></td></tr></tbody></table><h2 id="Looking-Glass"><a href="#Looking-Glass" class="headerlink" title="Looking Glass"></a>Looking Glass</h2><p>LA-DC01的Looking Glass页面是: <a href="http://lg-lax.racknerd.com/">http://lg-lax.racknerd.com/</a></p><p>LA-DC02的Looking Glass页面是: <a href="http://lg-lax02.racknerd.com/">http://lg-lax02.racknerd.com/</a></p><h1 id="附一个跑分"><a href="#附一个跑分" class="headerlink" title="附一个跑分"></a>附一个跑分</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs s"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #<br>#              Yet-Another-Bench-Script              #<br>#                     v2022-05-06                    #<br># https://github.com/masonr/yet-another-bench-script #<br># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #<br><br>Sat 11 Jun 2022 01:39:11 PM EDT<br><br>Basic System Information:<br>---------------------------------<br>Uptime     : 7 days, 1 hours, 5 minutes<br>Processor  : Intel(R) Xeon(R) CPU E5-2690 0 @ 2.90GHz<br>CPU cores  : 1 @ 2899.996 MHz<br>AES-NI     : ✔ Enabled<br>VM-x/AMD-V : ❌ Disabled<br>RAM        : 735.1 MiB<br>Swap       : 765.0 MiB<br>Disk       : 14.0 GiB<br>Distro     : Debian GNU/Linux 10 (buster)<br>Kernel     : 4.19.0-20-amd64<br><br>fio Disk Speed Tests (Mixed R/W 50/50):<br>---------------------------------<br>Block Size | 4k            (IOPS) | 64k           (IOPS)<br>  ------   | ---            ----  | ----           ---- <br>Read       | 71.15 MB/s   (17.7k) | 954.21 MB/s  (14.9k)<br>Write      | 71.34 MB/s   (17.8k) | 959.24 MB/s  (14.9k)<br>Total      | 142.49 MB/s  (35.6k) | 1.91 GB/s    (29.8k)<br>           |                      |                     <br>Block Size | 512k          (IOPS) | 1m            (IOPS)<br>  ------   | ---            ----  | ----           ---- <br>Read       | 1.21 GB/s     (2.3k) | 1.20 GB/s     (1.1k)<br>Write      | 1.27 GB/s     (2.4k) | 1.28 GB/s     (1.2k)<br>Total      | 2.49 GB/s     (4.8k) | 2.48 GB/s     (2.4k)<br><br>iperf3 Network Speed Tests (IPv4):<br>---------------------------------<br>Provider        | Location (Link)           | Send Speed      | Recv Speed     <br>                |                           |                 |                <br>Clouvider       | London, UK (10G)          | 618 Mbits/sec   | 90.7 Mbits/sec <br>Online.net      | Paris, FR (10G)           | 637 Mbits/sec   | 52.5 Mbits/sec <br>Hybula          | The Netherlands (40G)     | 596 Mbits/sec   | 486 Mbits/sec  <br>Clouvider       | NYC, NY, US (10G)         | 762 Mbits/sec   | 190 Mbits/sec  <br>Velocity Online | Tallahassee, FL, US (10G) | busy            | busy           <br>Clouvider       | Los Angeles, CA, US (10G) | 809 Mbits/sec   | 836 Mbits/sec  <br><br>Geekbench 5 Benchmark Test:<br>---------------------------------<br>Test            | Value                         <br>                |                               <br>Single Core     | 476                           <br>Multi Core      | 496                           <br>Full Test       | https://browser.geekbench.com/v5/cpu/15416382<br></code></pre></td></tr></table></figure><h1 id="RN-流量翻倍"><a href="#RN-流量翻倍" class="headerlink" title="RN 流量翻倍"></a>RN 流量翻倍</h1><p>购买完成后，可进行流量翻倍（虽然此活动有适用范围，但实行的很灵活，目前全适用，算福利）</p><h2 id="方法1：到LET（lowendtalk）论坛的特定贴子里回帖"><a href="#方法1：到LET（lowendtalk）论坛的特定贴子里回帖" class="headerlink" title="方法1：到LET（lowendtalk）论坛的特定贴子里回帖"></a>方法1：到LET（lowendtalk）论坛的<a href="https://lowendtalk.com/discussion/178275/its-over-heres-this-dont-forget/p1">特定贴子</a>里回帖</h2><p>回帖评论可以直接用这个模板：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Hello, I would like to double the bandwidth.<br><span class="hljs-keyword">Order</span> <span class="hljs-title">Number</span>: 邮件里有<br>Invoice ID: <span class="hljs-comment">#邮件里有</span><br>Thanks!<br></code></pre></td></tr></table></figure><p>没LET账号的可注册一个，注册时候需要填写注册理由（比如想来交流学习了解VPS资讯），译成英文后写上去。要验证邮箱，等待LET论坛管理员审核你的信息，审核通过会收到邮件，就能正常使用账号回帖评论了）</p><h2 id="方法2：可以发工单申请翻倍"><a href="#方法2：可以发工单申请翻倍" class="headerlink" title="方法2：可以发工单申请翻倍"></a>方法2：可以发工单申请翻倍</h2><p>（我在LOC有看到某些MJJ成功的）</p><p>注：如果是去年&#x2F;前年买的错过翻倍流量的小鸡，可以用续费的invoice号（某MJJ分享的经历）</p><h2 id="方法3：可以找你走他链接的那位AFFman，请他帮忙在LET论坛回帖翻倍流量。"><a href="#方法3：可以找你走他链接的那位AFFman，请他帮忙在LET论坛回帖翻倍流量。" class="headerlink" title="方法3：可以找你走他链接的那位AFFman，请他帮忙在LET论坛回帖翻倍流量。"></a>方法3：可以找你走他链接的那位AFFman，请他帮忙在LET论坛回帖翻倍流量。</h2><p>（比如你走此贴上面链接买的，可以私信我，提供你的Order Number和Invoice ID，我帮你去回帖翻倍）</p><h1 id="流量用完"><a href="#流量用完" class="headerlink" title="流量用完"></a>流量用完</h1><p>流量少的当月不小心用完流量的，当月会停机，次月1号重置流量 (美西时间每月1号)</p><h1 id="机房介绍"><a href="#机房介绍" class="headerlink" title="机房介绍"></a>机房介绍</h1><p>RN VPS的机房目前主要是 CC 机房和 MC机房<br>CC 机房（全称ColoCrossing）：此机房IP基本被 Google 列入黑名单了，富强时搜索会跳Google 验证。圣何塞、西雅图、芝加哥、达拉斯等等都是这个。<br>MC机房（全称Multacom Corporation）：仅有洛杉矶DC2是这个机房。目前较挤，晚高峰表现差些，好处是 IP不会跳 Google 验证，另有IPv6。</p><p>各有优劣，一般建议可选洛杉矶或圣何塞，但最终还是根据自身需求和实测为准。</p><p>注：google跳验证码问题，可用一键脚本WARP 解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N https://cdn.jsdelivr.net/gh/fscarmen/warp/menu.sh &amp;&amp; bash menu.sh d <br></code></pre></td></tr></table></figure><p>（此脚本项目地址：<a href="https://github.com/fscarmen/warp">https://github.com/fscarmen/warp</a> ）</p><h1 id="机房迁移"><a href="#机房迁移" class="headerlink" title="机房迁移"></a>机房迁移</h1><p>如果你购买的套餐是多个机房可选的那种，可以发工单免费迁移，如果你买的是固定某个机房的，可能要花5刀迁移（一般情况也是免费），一些低价套餐（小于10刀）好像就迁移不了（成功&#x2F;失败案例都不少，以自己工单结果为准）。<br>工单意思可以这样说：线路不好请求换机房，请帮我把这台VPS迁移到XXX</p><p>注1：迁移后IP会变，数据会丢（做好备份），是台同配置的新机器，翻倍的流量可能会没。（可以工单意思回：我之前在Let论坛中留言过，流量翻倍到了2xT（英文注意用过去式表达）。现在流量变回了xt，能申请调整回2xt吗？）<br>注2：小鸡迁到LA（dc2）机房的，如果小鸡没有ipv6而自己又需要，可以发工单要个。RN 目前只有DC系列才有ipv6，幸运的话ipv6可以解锁奈飞。</p><h1 id="改邮箱"><a href="#改邮箱" class="headerlink" title="改邮箱"></a>改邮箱</h1><p>alenxu在2022-1-22曾说过：我们更换邮箱需要支付费用的哦，防止很多黄牛买了然后转手。<br>（RN公司员工在LOC的ID：alenxu）</p><p>不过，目前是可以发工单免费申请改邮箱。</p><h1 id="push"><a href="#push" class="headerlink" title="push"></a>push</h1><p>push一次是8刀费用，发工单提push。（push费用是按次算不是按台算的，比如A账号有4台小鸡，要push其中2台到B账号，只需支付8刀而不是16刀）</p><pre><code class="hljs"></code></pre>]]></content>
    
    
    <categories>
      
      <category>VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自动为你的域名申请证书：certbot的安装和使用</title>
    <link href="/2022/06/02/Certbot-Installation/"/>
    <url>/2022/06/02/Certbot-Installation/</url>
    
    <content type="html"><![CDATA[<p>certbot的安装和使用。</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>打开<a href="https://certbot.eff.org/">Certbot官网</a>。</p><p>选择自己的web服务器和系统：</p><p><img src="/2022/06/02/Certbot-Installation/certbot.png"></p><p>比如 Nginx 和 Red Hat (没有这个所以选择CentOS)</p><p>跟着指示做即可</p><h1 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h1><p>先在nginx的配置文件的http{}中加上你的server{}部分，填入你的域名，certbot会自动检测。之后使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo certbot --nginx<br></code></pre></td></tr></table></figure><p>仅申请证书（不希望certbot修改你的nginx配置文件，希望自己修改的话用这个）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">certbot certonly --nginx<br></code></pre></td></tr></table></figure><p>手动模拟更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo certbot renew --dry-run<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux禁用ipv6</title>
    <link href="/2022/06/01/ban-ipv6-on-Linux/"/>
    <url>/2022/06/01/ban-ipv6-on-Linux/</url>
    
    <content type="html"><![CDATA[<p>有时候ipv6并不好用，所以需要禁用。</p><span id="more"></span><p>【非原创】</p><h1 id="查看是否启用ipv6"><a href="#查看是否启用ipv6" class="headerlink" title="查看是否启用ipv6"></a>查看是否启用ipv6</h1><p><code>ip a</code><br>如果启用了 IPv6 协议（您的网卡名称可能不同），应该可以看到inet6</p><h1 id="临时禁用"><a href="#临时禁用" class="headerlink" title="临时禁用"></a>临时禁用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1<br>sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1<br>sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1<br></code></pre></td></tr></table></figure><p>上述方法只是在 Ubuntu 系统中临时禁用了 IPv6 协议，重启后系统会自动再次启用 IPv6。</p><h1 id="永久禁用-IPv6"><a href="#永久禁用-IPv6" class="headerlink" title="永久禁用 IPv6"></a>永久禁用 IPv6</h1><p>通过本文编辑器来修改 &#x2F;etc&#x2F;sysctl.conf 文件：</p><ol><li><p>使用 VIM 或 Nano 等文件编辑器打开 &#x2F;etc&#x2F;sysctl.conf 配置文件</p></li><li><p>将以下 3 行内容添加到 &#x2F;etc&#x2F;sysctl.conf 配置文件当中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs conf">net.ipv6.conf.all.disable_ipv6=1<br>net.ipv6.conf.default.disable_ipv6=1<br>net.ipv6.conf.lo.disable_ipv6=1<br></code></pre></td></tr></table></figure></li><li><p>配置文件修改完成后，要使设置生效，还需要在「终端」中执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sysctl -p<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 安装</title>
    <link href="/2022/06/01/Docker-installation/"/>
    <url>/2022/06/01/Docker-installation/</url>
    
    <content type="html"><![CDATA[<p>本文介绍了 <code>Docker</code> 和 <code>Docker-compose</code> 的安装。</p><span id="more"></span><p>本文参考来源：学习资料【非官方】：<a href="https://yeasy.gitbook.io/docker_practice/">Docker - 从入门到实践</a></p><h1 id="Docker-介绍"><a href="#Docker-介绍" class="headerlink" title="Docker 介绍"></a><code>Docker</code> 介绍</h1><p>Docker 使用 Google 公司推出的 Go 语言 进行开发实现，基于 Linux 内核的 cgroup，namespace，以及 OverlayFS 类的 Union FS 等技术，对进程进行<em>封装隔离</em>，属于 <strong>操作系统层面的虚拟化技术</strong>。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为<strong>容器</strong>。</p><p><img src="https://docs.microsoft.com/en-us/virtualization/windowscontainers/deploy-containers/media/docker-on-linux.png"></p><h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>官网：<a href="https://www.docker.com/">Docker</a><br>文档：<a href="https://docs.docker.com/">Docker Documentation</a></p><h1 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a><code>Docker</code> 安装</h1><h2 id="官方文档最新版本安装方式"><a href="#官方文档最新版本安装方式" class="headerlink" title="官方文档最新版本安装方式"></a>官方文档最新版本安装方式</h2><p>Docker 分为 stable test 和 nightly 三个更新频道。<br>官方网站上有各种环境下的 安装指南，这里主要介绍 <code>Docker</code> 在 Linux 、Windows 10 和 macOS 上的安装。最新版本可以参考官方文档：<br><code>https://docs.docker.com/desktop/linux/install/</code></p><h2 id="使用脚本自动安装"><a href="#使用脚本自动安装" class="headerlink" title="使用脚本自动安装"></a>使用脚本自动安装</h2><p>在测试或开发环境中 <code>Docker</code> 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装：<br>若你想安装测试版的 <code>Docker</code>, 请从 <code>test.docker.com</code> 获取脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># $ curl -fsSL test.docker.com -o get-docker.sh</span><br>$ curl -fsSL get.docker.com -o get-docker.sh<br>$ sudo sh get-docker.sh --mirror Aliyun<br><span class="hljs-comment"># $ sudo sh get-docker.sh --mirror AzureChinaCloud</span><br></code></pre></td></tr></table></figure><h2 id="Ubuntu包管理器"><a href="#Ubuntu包管理器" class="headerlink" title="Ubuntu包管理器"></a>Ubuntu包管理器</h2><p>两种安装方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install docker.io<br></code></pre></td></tr></table></figure><p>或者有snap的话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">snap install docker<br></code></pre></td></tr></table></figure><p>用snap安装会一起把 <code>Docker-compose</code> 也安装了，但安装的版本比较低。是 <code>docker-compose version 1.25.0</code> 。</p><h1 id="测试-Docker-是否安装正确"><a href="#测试-Docker-是否安装正确" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h1><p>查看<code>Docker</code>版本：<code>docker -v</code>。</p><p>测试启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker run --<span class="hljs-built_in">rm</span> hello-world<br></code></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Unable <span class="hljs-built_in">to</span> find image <span class="hljs-string">&#x27;hello-world:latest&#x27;</span> locally<br>latest: Pulling <span class="hljs-built_in">from</span> library/hello-world<br><span class="hljs-number">4</span>ee5c797bcd7: Pull complete<br>Digest: sha256:<span class="hljs-number">308866</span>a43596e83578c7dfa15e27a73011bdd402185a84c5cd7f32a88b501a24<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hello-world:latest<br><br>Hello <span class="hljs-built_in">from</span> Docker!<br>This message shows that your installation appears <span class="hljs-built_in">to</span> be working correctly.<br><br>To generate this message, Docker took <span class="hljs-keyword">the</span> following steps:<br> <span class="hljs-number">1.</span> The Docker client contacted <span class="hljs-keyword">the</span> Docker daemon.<br> <span class="hljs-number">2.</span> The Docker daemon pulled <span class="hljs-keyword">the</span> <span class="hljs-string">&quot;hello-world&quot;</span> image <span class="hljs-built_in">from</span> <span class="hljs-keyword">the</span> Docker Hub.<br>    (arm32v7)<br> <span class="hljs-number">3.</span> The Docker daemon created <span class="hljs-keyword">a</span> <span class="hljs-built_in">new</span> container <span class="hljs-built_in">from</span> that image which runs <span class="hljs-keyword">the</span><br>    executable that produces <span class="hljs-keyword">the</span> output you are currently reading.<br> <span class="hljs-number">4.</span> The Docker daemon streamed that output <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> Docker client, which sent <span class="hljs-keyword">it</span><br>    <span class="hljs-built_in">to</span> your terminal.<br><br>To <span class="hljs-keyword">try</span> something more ambitious, you can run <span class="hljs-keyword">an</span> Ubuntu container <span class="hljs-keyword">with</span>:<br> $ docker run -<span class="hljs-keyword">it</span> ubuntu bash<br><br>Share images, automate workflows, <span class="hljs-keyword">and</span> more <span class="hljs-keyword">with</span> <span class="hljs-keyword">a</span> free Docker ID:<br> <span class="hljs-keyword">https</span>://hub.docker.com/<br><br>For more examples <span class="hljs-keyword">and</span> ideas, visit:<br> <span class="hljs-keyword">https</span>://docs.docker.com/<span class="hljs-built_in">get</span>-started/<br></code></pre></td></tr></table></figure><p>若能正常输出以上信息，则说明安装成功。</p><h1 id="启动-Docker"><a href="#启动-Docker" class="headerlink" title="启动 Docker"></a>启动 Docker</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo systemctl <span class="hljs-built_in">enable</span> docker</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo systemctl start docker</span><br></code></pre></td></tr></table></figure><h1 id="Docker-compose-手动安装"><a href="#Docker-compose-手动安装" class="headerlink" title="Docker-compose 手动安装"></a><code>Docker-compose</code> 手动安装</h1><p>Linux 上我们可以从 Github 上下载它的二进制包来使用，最新发行的版本地址：</p><p><a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a></p><p>运行以下命令以下载 Docker Compose 的当前稳定版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo curl -L <span class="hljs-string">&quot;https://github.com/docker/compose/releases/download/v2.6.0/docker-compose-<span class="hljs-subst">$(uname -s)</span>-<span class="hljs-subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>要安装其他版本的 Compose，请替换 v2.2.2。</p><blockquote><p>国内镜像加速：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.6.0/docker-compose-`<span class="hljs-built_in">uname</span> -s`-`<span class="hljs-built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>将可执行权限应用于二进制文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>创建软链：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose<br></code></pre></td></tr></table></figure><p>测试是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose --version<br></code></pre></td></tr></table></figure><h1 id="Docker-compose-基础使用"><a href="#Docker-compose-基础使用" class="headerlink" title="Docker-compose 基础使用"></a><code>Docker-compose</code> 基础使用</h1><p>在测试目录中，执行以下命令来启动应用程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up<br></code></pre></td></tr></table></figure><p>如果你想在后台执行该服务可以加上 -d 参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux笔记：firewall-cmd防火墙使用</title>
    <link href="/2022/06/01/Linux%E7%AC%94%E8%AE%B0%EF%BC%9Afirewall-cmd%E9%98%B2%E7%81%AB%E5%A2%99%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/06/01/Linux%E7%AC%94%E8%AE%B0%EF%BC%9Afirewall-cmd%E9%98%B2%E7%81%AB%E5%A2%99%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>一些<code>Red Hat</code> <code>CentOS</code> 防火墙使用笔记。用 <code>firewalld</code> 来管理 <code>iptables</code> 防火墙。</p><span id="more"></span><h1 id="一键开启"><a href="#一键开启" class="headerlink" title="一键开启"></a>一键开启</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --zone=public --add-port=22/tcp<br></code></pre></td></tr></table></figure><h1 id="运行、停止、禁用firewalld"><a href="#运行、停止、禁用firewalld" class="headerlink" title="运行、停止、禁用firewalld"></a>运行、停止、禁用firewalld</h1><p>启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start  firewalld<br></code></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status firewalld 或者 firewall-cmd --state<br></code></pre></td></tr></table></figure><p>停止：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">disable</span> firewalld<br></code></pre></td></tr></table></figure><p>禁用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop firewalld<br></code></pre></td></tr></table></figure><p>查看firewall是否运行,下面两个命令都可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status firewalld.service<br><br>firewall-cmd --state<br></code></pre></td></tr></table></figure><h1 id="查看default-zone和active-zone"><a href="#查看default-zone和active-zone" class="headerlink" title="查看default zone和active zone"></a>查看default zone和active zone</h1><p>默认的 <code>default zone</code> 和 <code>active zone</code> 都应该是public</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --get-default-zone<br><br>firewall-cmd --get-active-zones<br></code></pre></td></tr></table></figure><h1 id="查看当前开了哪些端口"><a href="#查看当前开了哪些端口" class="headerlink" title="查看当前开了哪些端口"></a>查看当前开了哪些端口</h1><p>其实一个服务对应一个端口，每个服务对应&#x2F;usr&#x2F;lib&#x2F;firewalld&#x2F;services下面一个xml文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看端口</span><br>firewall-cmd --zone=public --list-ports<br><span class="hljs-comment"># 查看服务</span><br>firewall-cmd --list-services<br></code></pre></td></tr></table></figure><p>更新防火墙规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --reload<br></code></pre></td></tr></table></figure><p>添加一个服务到firewalld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --add-service=https或者http换成想要开放的service<br></code></pre></td></tr></table></figure><p>这样添加的service当前立刻生效，但系统下次启动就失效，可以测试使用。要永久开发一个service，加上 –permanent</p><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p>如果要添加的端口并没有服务对应</p><p>就要新建一个服务，在&#x2F;usr&#x2F;lib&#x2F;firewalld&#x2F;services，随便拷贝一个xml文件到一个新名字。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-service=myservice<br></code></pre></td></tr></table></figure><p>重启firewalld 生效</p><!-- ```bash``````bash``` --><h1 id="查询表"><a href="#查询表" class="headerlink" title="查询表"></a>查询表</h1><p>1、firewalld的基本使用</p><p>启动： systemctl start firewalld</p><p>查看状态： systemctl status firewalld</p><p>停止： systemctl disable firewalld</p><p>禁用： systemctl stop firewalld</p><p>2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。</p><p>启动一个服务：systemctl start firewalld.service</p><p>关闭一个服务：systemctl stop firewalld.service</p><p>重启一个服务：systemctl restart firewalld.service</p><p>显示一个服务的状态：systemctl status firewalld.service</p><p>在开机时启用一个服务：systemctl enable firewalld.service</p><p>在开机时禁用一个服务：systemctl disable firewalld.service</p><p>查看服务是否开机启动：systemctl is-enabled firewalld.service</p><p>查看已启动的服务列表：systemctl list-unit-files|grep enabled</p><p>查看启动失败的服务列表：systemctl –failed</p><p>3.配置firewalld-cmd</p><p>查看版本： firewall-cmd –version</p><p>查看帮助： firewall-cmd –help</p><p>显示状态： firewall-cmd –state</p><p>查看所有打开的端口： firewall-cmd –zone&#x3D;public –list-ports</p><p>更新防火墙规则： firewall-cmd –reload</p><p>查看区域信息:  firewall-cmd –get-active-zones</p><p>查看指定接口所属区域： firewall-cmd –get-zone-of-interface&#x3D;eth0</p><p>拒绝所有包：firewall-cmd –panic-on</p><p>取消拒绝状态： firewall-cmd –panic-off</p><p>查看是否拒绝： firewall-cmd –query-panic</p><p>那怎么开启一个端口呢</p><p>添加</p><p>firewall-cmd –zone&#x3D;public –add-port&#x3D;80&#x2F;tcp –permanent    （–permanent永久生效，没有此参数重启后失效）</p><p>重新载入</p><p>firewall-cmd –reload</p><p>查看</p><p>firewall-cmd–zone&#x3D;public–query-port&#x3D;80&#x2F;tcp</p><p>删除</p><p>firewall-cmd –zone&#x3D;public –remove-port&#x3D;80&#x2F;tcp –permanent</p><p>作者：依然饭太稀<br>链接：<a href="https://www.jianshu.com/p/064e2887709b">https://www.jianshu.com/p/064e2887709b</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用服务器搭建你自己的SpeedTest测速服务器</title>
    <link href="/2022/06/01/Deploy-your-own-speedtest-website/"/>
    <url>/2022/06/01/Deploy-your-own-speedtest-website/</url>
    
    <content type="html"><![CDATA[<p>经常用Speedtest测速，但实际上你也可以用服务器搭建自己的测速网站。测试的是你上传&#x2F;下载流文件到测速服务器的速度。注意测速的上限是你服务器的带宽上限。</p><p>❗ <strong>注意</strong>：</p><div class="note info"><p>一定程度上存在被恶意刷流量的风险，在对外分享你的测速页面后，请注意观察服务器流量使用情况，避免流量使用异常。</p></div><p><img src="/2022/06/01/Deploy-your-own-speedtest-website/demo.png"></p><span id="more"></span><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><ul><li><a href="https://github.com/BadApple9/speedtest-x">Speedtest-X</a></li><li><a href="https://github.com/librespeed/speedtest">LibreSpeed</a></li></ul><p>本文介绍的是<a href="https://github.com/BadApple9/speedtest-x">Speedtest-X</a>的搭建。</p><ul><li>用户测速会上传测速记录并保存至网站服务器</li><li>不依赖 MySQL，使用文件数据库</li><li>IP 库改用 ip.sb，运营商记录更为精确</li></ul><h1 id="Docker部署"><a href="#Docker部署" class="headerlink" title="Docker部署"></a>Docker部署</h1><p>使用<code>uname -m</code>或者<code>arch</code>命令查看你自己服务器的架构。然后在下面2选1。</p><h3 id="arm架构"><a href="#arm架构" class="headerlink" title="arm架构"></a>arm架构</h3><p>运行 <code>docker run -d -p 9001:80 -it --name speedtest-x stilleshan/speedtest-x</code></p><h3 id="amd架构"><a href="#amd架构" class="headerlink" title="amd架构"></a>amd架构</h3><p>运行 <code>docker run -d -p 9001:80 -it --name speedtest-x badapple9/speedtest-x</code></p><h2 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h2><ul><li><p><code>-d</code>：以常驻进程模式启动</p><p>9001: 默认容器开放端口，可改为其他端口</p></li></ul><p>启动时可指定的环境变量：</p><ul><li><p><code>-e WEBPORT=80:</code> 容器内使用的端口</p></li><li><p><code>-e MAX_LOG_COUNT=100:</code> 最大可保存多少条测速记录</p></li><li><p><code>-e IP_SERVICE=ip.sb:</code> 使用的 IP 运营商解析服务(<code>ip.sb</code> 或 <code>ipinfo.io</code>)</p></li><li><p><code>-e SAME_IP_MULTI_LOGS=false:</code> 是否允许同一IP记录多条测速结果</p></li></ul><h2 id="ipv6支持【不建议】"><a href="#ipv6支持【不建议】" class="headerlink" title="ipv6支持【不建议】"></a>ipv6支持【不建议】</h2><p>如果想让 <code>Docker</code> 容器支持 <code>ipv6</code>，可编辑 <code>/etc/docker/daemon.json</code> ，加上以下内容：（如果不存在这个文件则直接创建）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>  <span class="hljs-string">&quot;ipv6&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;fixed-cidr-v6&quot;</span>: <span class="hljs-string">&quot;fd00::/80&quot;</span>,<br>  <span class="hljs-string">&quot;experimental&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;ip6tables&quot;</span>: <span class="hljs-literal">true</span><br>&#125;<br></code></pre></td></tr></table></figure><p>注意，你在使用<code>docker run</code>命令的时候会读取这个文件内容，创建其他容器也会同时支持ipv6，如果创建完容器又删除这段内容，之前创建的docker容器依然会支持ipv6。所以如果不想要的话建议创建完容器就删除。以免其他容器出现错误。</p><h1 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h1><p>访问 <code>&#123;IP&#125;:&#123;端口&#125;/index.html</code> 进行测速。<br><img src="https://raw.githubusercontent.com/BadApple9/images/main/indexdemo.png"> <img src="https://raw.githubusercontent.com/BadApple9/images/main/resultsdemo.png"></p><h1 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h1><p>如果想要用域名来访问，可以采用Nginx反代的方法。</p><p>参考本站另一篇文章：<br><a href="https://pawswrite.xyz/2022/06/03/Simple-Reverse-Proxy-by-Nginx/">用Nginx做简单反向代理</a></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>Speedtest</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS 测试脚本收集</title>
    <link href="/2022/06/01/VPS-sh-collections/"/>
    <url>/2022/06/01/VPS-sh-collections/</url>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>收集了一些常用的VPS测试脚本、ip解锁检测脚本。</p><span id="more"></span><h1 id="综合性测试"><a href="#综合性测试" class="headerlink" title="综合性测试"></a>综合性测试</h1><p>综合性测试，包括硬件基础信息，硬盘IO速度，网速，有的还包括CPU跑分测试等。</p><h2 id="yabs-sh"><a href="#yabs-sh" class="headerlink" title="yabs.sh"></a>yabs.sh</h2><p>特色是可以基于Geekbench进行CPU跑分测试，但测速仅包含国外测速。</p><blockquote><p>项目地址：<a href="https://github.com/masonr/yet-another-bench-script">yabs.sh</a></p></blockquote><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><code>curl -sL yabs.sh | bash</code> </p><p>or </p><p><code>wget -qO- yabs.sh | bash</code></p><p>输出举例：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2020-09-21                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br>Mon 21 Sep 2020 12:31:13 AM EDT<br><br>Basic System Information:<br>---------------------------------<br>Processor  : Intel(R) Xeon(R) E-2276G CPU @ 3.80GHz<br>CPU cores  : 12 @ 800.087 MHz<br>AES-NI     : ✔ Enabled<br>VM-x/AMD-V : ✔ Enabled<br>RAM        : 15Gi<br>Swap       : 14Gi<br>Disk       : 865G<br><br>fio Disk Speed Tests (Mixed R/W 50/50):<br>---------------------------------<br>Block Size |<span class="hljs-string"> 4k            (IOPS) </span>|<span class="hljs-string"> 64k           (IOPS)</span><br><span class="hljs-string">  ------   </span>|<span class="hljs-string"> ---            ----  </span>|<span class="hljs-string"> ----           ----</span><br><span class="hljs-string">Read       </span>|<span class="hljs-string"> 445.04 MB/s (111.2k) </span>|<span class="hljs-string"> 475.05 MB/s   (7.4k)</span><br><span class="hljs-string">Write      </span>|<span class="hljs-string"> 446.22 MB/s (111.5k) </span>|<span class="hljs-string"> 477.55 MB/s   (7.4k)</span><br><span class="hljs-string">Total      </span>|<span class="hljs-string"> 891.26 MB/s (222.8k) </span>|<span class="hljs-string"> 952.60 MB/s  (14.8k)</span><br><span class="hljs-string">           </span>|<span class="hljs-string">                      </span>|<br>Block Size |<span class="hljs-string"> 512k          (IOPS) </span>|<span class="hljs-string"> 1m            (IOPS)</span><br><span class="hljs-string">  ------   </span>|<span class="hljs-string"> ---            ----  </span>|<span class="hljs-string"> ----           ----</span><br><span class="hljs-string">Read       </span>|<span class="hljs-string"> 474.42 MB/s    (926) </span>|<span class="hljs-string"> 472.32 MB/s    (461)</span><br><span class="hljs-string">Write      </span>|<span class="hljs-string"> 499.63 MB/s    (975) </span>|<span class="hljs-string"> 503.77 MB/s    (491)</span><br><span class="hljs-string">Total      </span>|<span class="hljs-string"> 974.05 MB/s   (1.9k) </span>|<span class="hljs-string"> 976.10 MB/s    (952)</span><br><span class="hljs-string"></span><br><span class="hljs-string">iperf3 Network Speed Tests (IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider        </span>|<span class="hljs-string"> Location (Link)           </span>|<span class="hljs-string"> Send Speed      </span>|<span class="hljs-string"> Recv Speed</span><br><span class="hljs-string">                </span>|<span class="hljs-string">                           </span>|<span class="hljs-string">                 </span>|<br>Clouvider       |<span class="hljs-string"> London, UK (10G)          </span>|<span class="hljs-string"> 1.19 Gbits/sec  </span>|<span class="hljs-string"> 2.39 Gbits/sec</span><br><span class="hljs-string">Online.net      </span>|<span class="hljs-string"> Paris, FR (10G)           </span>|<span class="hljs-string"> 2.35 Gbits/sec  </span>|<span class="hljs-string"> 2.04 Gbits/sec</span><br><span class="hljs-string">WorldStream     </span>|<span class="hljs-string"> The Netherlands (10G)     </span>|<span class="hljs-string"> 2.17 Gbits/sec  </span>|<span class="hljs-string"> 1.29 Gbits/sec</span><br><span class="hljs-string">Wifx            </span>|<span class="hljs-string"> Zurich, CH (10G)          </span>|<span class="hljs-string"> 1.28 Gbits/sec  </span>|<span class="hljs-string"> 522 Mbits/sec</span><br><span class="hljs-string">Biznet          </span>|<span class="hljs-string"> Jakarta, Indonesia (1G)   </span>|<span class="hljs-string"> 19.4 Mbits/sec  </span>|<span class="hljs-string"> 41.8 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> NYC, NY, US (10G)         </span>|<span class="hljs-string"> 9.40 Gbits/sec  </span>|<span class="hljs-string"> 9.41 Gbits/sec</span><br><span class="hljs-string">Velocity Online </span>|<span class="hljs-string"> Tallahassee, FL, US (10G) </span>|<span class="hljs-string"> 2.39 Gbits/sec  </span>|<span class="hljs-string"> 2.94 Gbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> Los Angeles, CA, US (10G) </span>|<span class="hljs-string"> 2.40 Gbits/sec  </span>|<span class="hljs-string"> 2.89 Gbits/sec</span><br><span class="hljs-string">Iveloz Telecom  </span>|<span class="hljs-string"> Sao Paulo, BR (2G)        </span>|<span class="hljs-string"> 136 Mbits/sec   </span>|<span class="hljs-string"> 192 Mbits/sec</span><br><span class="hljs-string"></span><br><span class="hljs-string">iperf3 Network Speed Tests (IPv6):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider        </span>|<span class="hljs-string"> Location (Link)           </span>|<span class="hljs-string"> Send Speed      </span>|<span class="hljs-string"> Recv Speed</span><br><span class="hljs-string">                </span>|<span class="hljs-string">                           </span>|<span class="hljs-string">                 </span>|<br>Clouvider       |<span class="hljs-string"> London, UK (10G)          </span>|<span class="hljs-string"> 803 Mbits/sec   </span>|<span class="hljs-string"> 2.09 Gbits/sec</span><br><span class="hljs-string">Online.net      </span>|<span class="hljs-string"> Paris, FR (10G)           </span>|<span class="hljs-string"> 2.32 Gbits/sec  </span>|<span class="hljs-string"> 2.20 Gbits/sec</span><br><span class="hljs-string">WorldStream     </span>|<span class="hljs-string"> The Netherlands (10G)     </span>|<span class="hljs-string"> 1.95 Gbits/sec  </span>|<span class="hljs-string"> 1.49 Gbits/sec</span><br><span class="hljs-string">Wifx            </span>|<span class="hljs-string"> Zurich, CH (10G)          </span>|<span class="hljs-string"> 168 Mbits/sec   </span>|<span class="hljs-string"> 579 Mbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> NYC, NY, US (10G)         </span>|<span class="hljs-string"> 9.28 Gbits/sec  </span>|<span class="hljs-string"> 9.28 Gbits/sec</span><br><span class="hljs-string">Clouvider       </span>|<span class="hljs-string"> Los Angeles, CA, US (10G) </span>|<span class="hljs-string"> 2.80 Gbits/sec  </span>|<span class="hljs-string"> 2.90 Gbits/sec</span><br><span class="hljs-string"></span><br><span class="hljs-string">Geekbench 4 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test            </span>|<span class="hljs-string"> Value</span><br><span class="hljs-string">                </span>|<br>Single Core     |<span class="hljs-string"> 6035</span><br><span class="hljs-string">Multi Core      </span>|<span class="hljs-string"> 24473</span><br><span class="hljs-string">Full Test       </span>|<span class="hljs-string"> https://browser.geekbench.com/v4/cpu/15770150</span><br><span class="hljs-string"></span><br><span class="hljs-string">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test            </span>|<span class="hljs-string"> Value</span><br><span class="hljs-string">                </span>|<br>Single Core     |<span class="hljs-string"> 1348</span><br><span class="hljs-string">Multi Core      </span>|<span class="hljs-string"> 5857</span><br><span class="hljs-string">Full Test       </span>|<span class="hljs-string"> https://browser.geekbench.com/v5/cpu/3844555</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p><strong>只测试CPU跑分</strong></p><p>Geekbench 5<br><code>curl -sL yabs.sh | bash -s -- -fi</code></p><p>Geekbench 4<br><code>curl -sL yabs.sh | bash -s -- -fi4</code></p><p><strong>其他参数</strong></p><ul><li><code>-f/-d</code> 不进行硬盘测速</li><li><code>-i</code> 不测速</li><li><code>-g</code> 不测CPU跑分，就是geekbench</li><li><code>-h</code> 打印帮助信息</li><li><code>-4</code> 跑Geekbench 4 （默认跑5）</li><li><code>-9</code> 跑Geekbench 4和Geekbench 5</li></ul><h2 id="其他综合测试"><a href="#其他综合测试" class="headerlink" title="其他综合测试"></a>其他综合测试</h2><p>系统信息、硬件信息、三网测速：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -qO- sb.oldking.net | bash<br></code></pre></td></tr></table></figure><p>teddysun 提供的综合脚本，检测 CPU，内存，负载，磁盘 IO，带宽：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -qO- bench.sh | bash<br>curl -Lso- bench.sh | bash<br></code></pre></td></tr></table></figure><h1 id="测速脚本"><a href="#测速脚本" class="headerlink" title="测速脚本"></a>测速脚本</h1><p>国内测速，包含三网测速</p><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p><code>bash &lt;(curl -Lso- https://git.io/superspeed.sh)</code></p><p><code>bash &lt;(curl -Lso- https://git.io/J1SEh)</code></p><h1 id="ip解锁情况"><a href="#ip解锁情况" class="headerlink" title="ip解锁情况"></a>ip解锁情况</h1><h2 id="综合解锁检测"><a href="#综合解锁检测" class="headerlink" title="综合解锁检测"></a>综合解锁检测</h2><p>目前<strong>最全</strong>的解锁测试脚本，但Disney+的解锁情况会有错误出现。支持docker运行，支持ipv4 ipv6双栈检测，支持iOS。可以结合下面提到的Disney+测试脚本进行测试。iOS运行方法请参考<a href="https://github.com/lmc999/RegionRestrictionCheck/wiki/iOS%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E6%96%B9%E6%B3%95">此处</a>。</p><blockquote><p>项目地址：<a href="https://github.com/lmc999/RegionRestrictionCheck">RegionRestrictionCheck</a></p></blockquote><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p><strong>使用脚本前请确认curl已安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media)<br></code></pre></td></tr></table></figure><h5 id="只检测IPv4结果："><a href="#只检测IPv4结果：" class="headerlink" title="只检测IPv4结果："></a>只检测IPv4结果：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media) -M 4<br></code></pre></td></tr></table></figure><h5 id="只检测IPv6结果："><a href="#只检测IPv6结果：" class="headerlink" title="只检测IPv6结果："></a>只检测IPv6结果：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media) -M 6<br></code></pre></td></tr></table></figure><h5 id="指定检测的网卡名称："><a href="#指定检测的网卡名称：" class="headerlink" title="指定检测的网卡名称："></a>指定检测的网卡名称：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media) -I eth0<br></code></pre></td></tr></table></figure><h5 id="选择脚本语言为英文："><a href="#选择脚本语言为英文：" class="headerlink" title="选择脚本语言为英文："></a>选择脚本语言为英文：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s check.unlock.media) -E<br></code></pre></td></tr></table></figure><p><strong>或者直接运行以下Docker命令</strong> (兼容ARM架构)</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs docker">docker <span class="hljs-keyword">run</span><span class="language-bash"> --<span class="hljs-built_in">rm</span> -ti --net=host lmc999/regioncheck &amp;&amp; docker rmi lmc999/regioncheck</span><br></code></pre></td></tr></table></figure><h2 id="DisneyPlus-解锁检测"><a href="#DisneyPlus-解锁检测" class="headerlink" title="DisneyPlus 解锁检测"></a>DisneyPlus 解锁检测</h2><p>检测出口IP是否解锁DisneyPlus的脚本</p><ol><li>支持双栈检测</li><li>会获取权验接口模拟登陆DisneyPlus以验证是否真的可以解锁，故检测准确率高于大多第三方脚本</li></ol><p>项目地址： <a href="https://github.com/sjlleo/VerifyDisneyPlus">https://github.com/sjlleo/VerifyDisneyPlus</a></p><p><img src="https://user-images.githubusercontent.com/13616352/114509583-41d5e200-9c68-11eb-8127-8bbce25dcf75.png"></p><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O dp https://github.com/sjlleo/VerifyDisneyPlus/releases/download/1.01/dp_1.01_linux_amd64 &amp;&amp; <span class="hljs-built_in">chmod</span> +x dp &amp;&amp; clear &amp;&amp; ./dp<br></code></pre></td></tr></table></figure><h2 id="NetFlix-解锁检测"><a href="#NetFlix-解锁检测" class="headerlink" title="NetFlix 解锁检测"></a>NetFlix 解锁检测</h2><p>用Go语言编写，几秒内快速完成IPv4&#x2F;IPv6的NF解锁情况判断。支持双栈检测。支持指定网卡出口测试。</p><ul><li><input checked disabled type="checkbox"> 解锁情况判断</li><li><input checked disabled type="checkbox"> 地域信息显示</li><li><input checked disabled type="checkbox"> 双栈网络测试</li><li><input checked disabled type="checkbox"> 代理检测 (Experiment)</li></ul><h3 id="使用方法-4"><a href="#使用方法-4" class="headerlink" title="使用方法"></a>使用方法</h3><p>使用前，如果您不知道您使用的是什么架构的CPU，请先使用<code>uname -m</code>查看</p><p><strong>如果提示<code>Exec format error</code>是因为您下载了与您系统架构不对应的二进制文件</strong></p><p>对于<code>amd64</code>（<code>x86_64</code>），请使用如下命令下载运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/v3.0/nf_linux_amd64 &amp;&amp; <span class="hljs-built_in">chmod</span> +x nf &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>对于<code>arm64</code>，请使用如下命令下载运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/v3.0/nf_linux_arm64 &amp;&amp; <span class="hljs-built_in">chmod</span> +x nf &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>对于部分路由器，其SoC使用了<code>mips</code>架构，请使用如下命令下载运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/v3.0/nf_linux_mips &amp;&amp; <span class="hljs-built_in">chmod</span> +x nf &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><h3 id="相关名词解释"><a href="#相关名词解释" class="headerlink" title="相关名词解释"></a>相关名词解释</h3><ol><li><strong>不提供服务</strong> - 所在的地区NF没开通，连自制剧也看不了</li><li><strong>宽松版权</strong> - 有些NF拍摄的影片不是特别注重版权，所以限制放的很开</li><li><strong>解锁自制剧</strong> - 代表可以看由NF自己拍摄的影片</li><li><strong>解锁非自制剧</strong> - 代表可以看NF买下的第三方版权影片</li><li><strong>地域解锁</strong> - NF在不同的地区可以看的片源都是不同的，有些影片只能在特定区观看</li></ol><p>一般来说，需要能看非自制剧才算真正意义上的NF解锁</p><h3 id="指定网卡出口测试"><a href="#指定网卡出口测试" class="headerlink" title="指定网卡出口测试"></a>指定网卡出口测试</h3><p>有些时候，我们使用了<code>Warp</code>或者是其他隧道网卡工具的时候，设置的路由表默认不通过他们上网</p><p>在这种情况下，如果我们依旧想要测试该网卡出口是否支持解锁NetFlix，可以选择指定网卡IP进行测试</p><p>在终端输入<code>ip a</code>，查看您想测试的网卡IP，然后加入参数 <code>-address</code> + 您的网卡IP地址即可，具体可看下图</p><p><img src="https://user-images.githubusercontent.com/13616352/169537511-8a10c9d2-3f4c-438a-b20a-8e5e31464259.png" alt="图片"></p><h2 id="Youtube-缓存节点、地域信息检测"><a href="#Youtube-缓存节点、地域信息检测" class="headerlink" title="Youtube 缓存节点、地域信息检测"></a>Youtube 缓存节点、地域信息检测</h2><p>用于检测&#x2F;诊断Youtube地域信息的。</p><p><img src="https://user-images.githubusercontent.com/13616352/112748155-97658a00-8fec-11eb-82a2-1839781ce968.png" alt="image"></p><ol><li>支持双栈网络测试</li><li>显示当前网络到Youtube的连接模式</li><li>在<code>Google Global Cache</code>连接模式下，会提供ISP信息</li><li>支持获取当前网络所访问Youtube视频节点的地域信息</li><li>如果地域信息可用，会显示Youtube识别到的地区信息</li></ol><h3 id="使用方法-5"><a href="#使用方法-5" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li><p>支持IPv4网络的机器：</p><p> <code>wget -O tubecheck https://github.com/sjlleo/TubeCheck/releases/download/1.0Beta/tubecheck_1.0beta_linux_amd64 &amp;&amp; chmod +x tubecheck &amp;&amp; clear &amp;&amp; ./tubecheck</code></p></li><li><p>支持IPv4或者IPv6网络的机器（通用选项）：</p><p> <code>wget -O tubecheck https://cdn.jsdelivr.net/gh/sjlleo/TubeCheck/CDN/tubecheck_1.0beta_linux_amd64 &amp;&amp; chmod +x tubecheck &amp;&amp; clear &amp;&amp; ./tubecheck</code></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 配置 ProxyChains 上网</title>
    <link href="/2022/05/31/ProxyChains/"/>
    <url>/2022/05/31/ProxyChains/</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><code>ProxyChains</code>是一个<code>Linux</code>和<code>Unix</code>下的代理工具，允许<code>TCP</code>和<code>DNS</code>通过代理隧道，支持<code>HTTP</code>、<code>SOCKS4</code>、<code>SOCKS5</code>类型的代理服务器，且可配置多个代理。</p><p><code>ProxyChains</code>通过用户自定义的代理列表强制连接指定的应用程序。</p><p>本文简述<code>Linux</code>下如何通过<code>ProxyChains</code>使用<code>Clash</code>主机代理。</p><span id="more"></span><h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><h2 id="GitHub项目地址"><a href="#GitHub项目地址" class="headerlink" title="GitHub项目地址"></a>GitHub项目地址</h2><p><code>ProxyChains</code>：<a href="https://github.com/haad/proxychains">haad&#x2F;proxychains: proxychains - a tool that forces any TCP connection made by any given application to follow through proxy like TOR or any other SOCKS4, SOCKS5 or HTTP(S) proxy. Supported auth-types: “user&#x2F;pass” for SOCKS4&#x2F;5, “basic” for HTTP. (github.com)</a></p><p><code>ProxyChains-ng</code>：<a href="https://github.com/rofl0r/proxychains-ng">rofl0r&#x2F;proxychains-ng: proxychains ng (new generation) - a preloader which hooks calls to sockets in dynamically linked programs and redirects it through one or more socks&#x2F;http proxies. continuation of the unmaintained proxychains project. the sf.net page is currently not updated, use releases from github release page instead.</a></p><h1 id="安装ProxyChains4"><a href="#安装ProxyChains4" class="headerlink" title="安装ProxyChains4"></a>安装ProxyChains4</h1><p><code>kali</code>默认预装<code>proxychains4</code>，其它基于<code>Debian</code>的<code>Linux</code>发行版可通过如下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install proxychains4<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install proxychains<br></code></pre></td></tr></table></figure><h1 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>proxychains4.conf<br></code></pre></td></tr></table></figure><p>如果刚刚是用<code>apt-get install proxychains</code>安装的话就是修改：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>proxychains.conf<br></code></pre></td></tr></table></figure><p>取消<code>dynamic_chain</code>的注释，<del>也可以注释掉<code>strict_chain</code></del>:</p><p><img src="/2022/05/31/ProxyChains/comment.png"></p><p><font color="orange">注：请在代理软件上勾选<code>允许本地网络连接</code>选项。</font></p><p>在这个配置文件最下面有[ProxyList]这么一行，在这行下面添加上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">socks5 127.0.0.1 7891 <br><span class="hljs-comment"># 7891 取决于yaml的配置</span><br></code></pre></td></tr></table></figure><p>如果有别的比如<code>socks4 127.0.0.1 9050</code>那么就把它给注释掉。</p><p>重启，若要在代理下使用某条命令，则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">proxychains [<span class="hljs-built_in">command</span>]<br></code></pre></td></tr></table></figure><p>即可在proxychains代理规则下启动。</p><p>比如说使用curl的时候用代理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">proxychains curl -fsSL https://get.docker.com | sh<br></code></pre></td></tr></table></figure><p>例如使用snap的时候用代理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@raspberrypi:~# proxychains snap install docker<br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/aarch64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.16<br>[proxychains] DLL init: proxychains-ng 4.16<br>Download snap &quot;docker&quot; (1783) from channel<br></code></pre></td></tr></table></figure><p>测试网络：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping google.com<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>RaspberryPi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【保姆级教程】Linux（树莓派）用代理上网并配置web界面</title>
    <link href="/2022/05/30/RaspberryPi-using-proxy/"/>
    <url>/2022/05/30/RaspberryPi-using-proxy/</url>
    
    <content type="html"><![CDATA[<p>本文记录了国内的Linux系统如何用Clash代理上网，并配置web界面，来方便切换节点，查看连接和日志。</p><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p>Clash GitHub地址为：<a href="https://github.com/Dreamacro/clash/releases">https://github.com/Dreamacro/clash/releases</a></p><p>常用的web界面有yacd和razord。本文讲了三种配置clash UI web界面的方法。</p><ol><li>razord: 可以自建，也可以用本站的 - <a href="http://clash.pawswrite.xyz/">http://clash.pawswrite.xyz/</a><br><img src="/2022/05/30/RaspberryPi-using-proxy/razord.png"></li><li>yacd GitHub 项目地址: <a href="https://github.com/haishanh/yacd">https://github.com/haishanh/yacd</a><br><img src="/2022/05/30/RaspberryPi-using-proxy/yacd.png"></li></ol><span id="more"></span><h1 id="安装Clash"><a href="#安装Clash" class="headerlink" title="安装Clash"></a>安装Clash</h1><p>树莓派是 <code>ARM</code> 架构的卡片电脑。请用 <code>arch</code> 或 <code>uname -m</code> 命令查看你的架构。（树莓派3&#x2F;4&#x2F;400的cpu虽然是64位，但可能官方装的系统是32位的），例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs s">pi@raspberrypi:~$ arch<br>armv7l<br></code></pre></td></tr></table></figure><p>然后找到服务器下载对应的版本，树莓派3&#x2F;4一般32位的就是<code>armv7</code>，64位就是<code>armv8</code>（<code>arch</code>命令显示<code>aarch64</code>）。</p><p>一般的服务器，64位的都是<code>clash-linux-amd64</code>版本。国内服务器一般无法从GitHub下载clash，本站提供了下载链接。</p><p><strong>本文写于2022&#x2F;5&#x2F;30，所提供的下载链接截至目前都是最新版本</strong></p><table><thead><tr><th><code>arch</code>结果</th><th>架构</th><th>GitHub链接</th><th>本站链接（点击下载或右键复制下载链接）</th></tr></thead><tbody><tr><td><code>x86</code></td><td>i386</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-386-v1.10.6.gz">clash-linux-386-v1.10.6.gz</a></td><td><a href="clash/clash-linux-386-v1.10.6.gz">clash-linux-386-v1.10.6.gz</a></td></tr><tr><td><code>x86_64</code></td><td>amd64</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-amd64-v1.10.6.gz">clash-linux-amd64-v1.10.6.gz</a></td><td><a href="clash/clash-linux-amd64-v1.10.6.gz">clash-linux-amd64-v1.10.6.gz</a></td></tr><tr><td></td><td>armv5</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv5-v1.10.6.gz">clash-linux-armv5-v1.10.6.gz</a></td><td><a href="clash/clash-linux-armv5-v1.10.6.gz">clash-linux-armv5-v1.10.6.gz</a></td></tr><tr><td></td><td>armv6</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv6-v1.10.6.gz">clash-linux-armv6-v1.10.6.gz</a></td><td><a href="clash/clash-linux-armv6-v1.10.6.gz">clash-linux-armv6-v1.10.6.gz</a></td></tr><tr><td><code>armv7l</code></td><td>armv7</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv7-v1.10.6.gz">clash-linux-armv7-v1.10.6.gz</a></td><td><a href="clash/clash-linux-armv7-v1.10.6.gz">clash-linux-armv7-v1.10.6.gz</a></td></tr><tr><td><code>aarch64</code></td><td>armv8</td><td><a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv8-v1.10.6.gz">clash-linux-armv8-v1.10.6.gz</a></td><td><a href="clash/clash-linux-armv8-v1.10.6.gz">clash-linux-armv8-v1.10.6.gz</a></td></tr></tbody></table><p>通过本站链接下载clash：<br><font color="orange">把第二条命令最后的 clash-linux-armv8-v1.10.6.gz 换成你需要的版本</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建clash文件夹并打开</span><br><span class="hljs-built_in">mkdir</span> /root/clash &amp;&amp; <span class="hljs-built_in">cd</span> /root/clash<br><span class="hljs-comment"># 下载压缩文件包，可以把最后的 clash-linux-armv8-v1.10.6.gz 换成你需要的版本即可，也可以通过在上面的表格里右键，复制链接地址，然后用复制的链接替换下面的链接</span><br>curl https://pawswrite.xyz/2022/05/30/RaspberryPi-using-proxy/clash/clash-linux-armv8-v1.10.6.gz &gt; clash.gz<br><span class="hljs-comment"># 解压文件</span><br>gzip -d clash.gz<br><span class="hljs-comment"># 赋予clash可执行权限</span><br><span class="hljs-built_in">chmod</span> +x clash<br></code></pre></td></tr></table></figure><blockquote><p>其他查看系统架构的命令：<br>    1. <code>uname -a</code><br>    2. <code>cat /proc/cpuinfo</code><br>    3. <code>getconf LONG_BIT</code><br>    4. <code>file /bin/bash</code><br>    5. <code>cat /proc/version</code><br>    6. <code>dpkg --print-architecture</code></p></blockquote><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p><code>clash</code> 默认配置文件放在 <code>/root/.config/clash</code> 目录下，需要两个文件，<code>config.yaml</code>、<code>Country.mmdb</code> 。</p><ol><li><p><code>config.yml</code> 是你的配置文件。但可能有的人并不喜欢把配置文件放在 <code>/root/.config/clash</code> 目录。也可以另外放。在运行的时候使用<code>/root/clash/clash -f 配置文件名 -d 配置文件路径</code></p></li><li><p><code>Country.mmdb</code> 是一个设计用于存储IPv4和IPv6的数据信息的数据库，mmdb文件是一个二进制格式的文件，它使用一个二分查找树加速IP信息的查询。<code>clash</code> 分流的时候会用到，直接运行 <code>clash</code> 的话，他会从GitHub上下载，如果你是国内的话，下载链接是 <a href="https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb">https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb</a> ，原项目地址是：<a href="https://github.com/Dreamacro/maxmind-geoip/releases">https://github.com/Dreamacro/maxmind-geoip/releases</a> ，但前几天<code>cdn.jsdelivr.net</code>刚被墙，所以不管是原来的项目地址还是国内并下不下来。</p></li></ol><h2 id="下载Country-mmdb"><a href="#下载Country-mmdb" class="headerlink" title="下载Country.mmdb"></a>下载Country.mmdb</h2><p>将 Country.zip 文件下载到<code>/root/.config</code>文件夹中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 采用我站链接【推荐】</span><br>curl -o /root/.config/clash/Country.mmdb --create-dirs https://pawswrite.xyz/2022/05/30/RaspberryPi-using-proxy/clash/Country.mmdb<br></code></pre></td></tr></table></figure><p>如果采用其他链接下载【可能会被墙】：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 采用GitHub原项目地址</span><br>curl -o /root/.config/clash/Country.mmdb --create-dirs https://github.com/Dreamacro/maxmind-geoip/releases/download/20220512/Country.mmdb<br><span class="hljs-comment"># 采用cdn加速GitHub</span><br>curl -o /root/.config/clash/Country.mmdb --create-dirs https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb<br></code></pre></td></tr></table></figure><p>点击下载👉<a href="clash/Country.mmdb">Country.mmdb</a></p><h2 id="下载配置文件"><a href="#下载配置文件" class="headerlink" title="下载配置文件"></a>下载配置文件</h2><p>这个就得找你的机场了。自行从机场下载相对应的配置文件<code>config.yaml</code>。这里推荐作者朋友用的机场 GLaDOS，盲猜机场老板是游戏传送门的粉丝，刚好我也很喜欢这个游戏。它提供了Linux版本的<a href="https://glados.rocks/console/terminal">clash配置文件</a>。</p><blockquote><p><font color="red">注册GLaDOS(注册地址在 <a href="https://github.com/glados-network/GLaDOS">https://github.com/glados-network/GLaDOS</a> 实时更新), 并输入邀请码:<br> <code>N3CMR-9H4SV-RE0Z6-LE1RZ</code> 激活</font></p></blockquote><p>请使用下面命令下载配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -o /root/.config/clash/config.yaml 你的clash配置文件url<br></code></pre></td></tr></table></figure><p>如果你的机场不提供clash的配置文件，可以用本站的订阅转换地址进行订阅转换（<strong>不要使用短链接</strong>）：</p><p><a href="https://sub.pawswrite.xyz/">https://sub.pawswrite.xyz/</a></p><p>如果订阅下载不下来，可以浏览器打开，然后复制所有的订阅信息，再回到服务器或者树莓派，新建文件粘贴进去，注意粘贴之前要删空：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /root/.config/clash/config.yaml<br></code></pre></td></tr></table></figure><h1 id="启动Clash"><a href="#启动Clash" class="headerlink" title="启动Clash"></a>启动Clash</h1><p>现在就可以<strong>直接启动clash</strong>了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/root/clash/clash<br></code></pre></td></tr></table></figure><p>如果出现类似下面的信息，就是启动成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@raspberrypi:/root/clash# /root/clash/clash<br>INFO[0000] RESTful API listening at: [::]:9090<br>INFO[0000] HTTP proxy listening at: [::]:7890<br>INFO[0000] SOCKS proxy listening at: [::]:7891<br></code></pre></td></tr></table></figure><p>日志提示已经开放了HTTP代理服务端口为7890, SOCK55服务端口为7891。后面设置其他程序(浏览器&#x2F;GIT等)通过7890&#x2F;7891来代理访问网络就可以了。</p><p>检查是否启动成功，还可以开一个新的ssh session或者terminal，在新终端中输入<code>curl localhost:9090</code>并回车，出现下面信息则是成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pi@raspberrypi:~$ curl localhost:9090<br>&#123;<span class="hljs-string">&quot;hello&quot;</span>:<span class="hljs-string">&quot;clash&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>这个时候就可以使用 <code>clash</code> ，只是需要另开一个terminal。</p><p>如果想要配置 <code>clash.service</code> 来实现开机自启动，进行进程维护，以及配置web UI面板来管理Clash，在下面的章节有提到。</p><h1 id="使用clash代理"><a href="#使用clash代理" class="headerlink" title="使用clash代理"></a>使用clash代理</h1><ol><li><p>例如 Git:</p><p> 新开一个Terminal:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/twbs/bootstrap.git --config <span class="hljs-string">&quot;http.proxy=127.0.0.1:7890&quot;</span><br></code></pre></td></tr></table></figure><p> clash 打印如下日志说明clash完成了工作<br> <code>INFO[0007] [TCP] 127.0.0.1:54875 --&gt; github.com:443 match DomainKeyword(github) using Proxy</code></p></li><li><p>例如 NPM:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> proxy http://127.0.0.1:7890 <br>npm install pm2 -g <br>npm config delete proxy  <span class="hljs-comment">#取消代理设置</span><br></code></pre></td></tr></table></figure></li><li><p>通过设置Shell的环境变量, 例如 APT&#x2F;CURL:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> https_proxy=<span class="hljs-string">&quot;socks5://127.0.0.1:7891&quot;</span><br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;http://127.0.0.1:7890&quot;</span><br>apt update <br>apt install wget <br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">#取消代理设置</span><br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;127.0.0.1:7890&quot;</span> <br>curl https://ifconfig.me <br><span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">#取消代理设置</span><br></code></pre></td></tr></table></figure></li><li><p>SSH 通过代理连接服务器, 例如:</p><p> ubuntu 下编辑 ~&#x2F;.ssh&#x2F;config 文件:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Host 1.1.1.1<br>User root<br>ProxyCommand /usr/bin/nc -X5 -x 127.0.0.1:7891  %h %p<br></code></pre></td></tr></table></figure><p> 连接服务器</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh root@1.1.1.1<br></code></pre></td></tr></table></figure></li><li><p>桌面型Linux(如Ubuntu 22.04)<br> 请打开设置-网络-设置网络代理为SOCK5, 地址为 127.0.0.1, 端口为7891.</p></li></ol><p><strong>注意: ping 并不是 TCP 应用，因此无法使用Clash的HTTP&#x2F;SOCK5代理。</strong></p><h1 id="【进阶】ProxyChains"><a href="#【进阶】ProxyChains" class="headerlink" title="【进阶】ProxyChains"></a>【进阶】ProxyChains</h1><p>个人认为ProxyChains是Linux上最好用的代理工具。配合Clash使用非常方便，具体可看另一篇文章：<br><a href="https://pawswrite.xyz/2022/05/31/ProxyChains/">https://pawswrite.xyz/2022/05/31/ProxyChains/</a></p><h1 id="测试网络"><a href="#测试网络" class="headerlink" title="测试网络"></a>测试网络</h1><p>看看能不能上谷歌：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/root/clash/clash <span class="hljs-comment"># 启动clash</span><br></code></pre></td></tr></table></figure><p>新开一个terminal，并输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> https_proxy=http://127.0.0.1:7890<br>ping google.com<br></code></pre></td></tr></table></figure><p>若能ping通则能正常翻墙，如果不能的话，检查机场订阅有没有过期，配置文件还能不能用。</p><h1 id="进阶：管理Clash【可选】"><a href="#进阶：管理Clash【可选】" class="headerlink" title="进阶：管理Clash【可选】"></a>进阶：管理Clash【可选】</h1><h1 id="service守护进程，配置开机自启"><a href="#service守护进程，配置开机自启" class="headerlink" title="service守护进程，配置开机自启"></a>service守护进程，配置开机自启</h1><p>不希望Clash专门占用一个terminal，希望关闭对话以后依然在后台运行，如果出错了自动重启，并实现开机重启。那么就可以照本章节来做。</p><p>输入以下指令创建clash.service文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> /etc/systemd/system/clash.service<br></code></pre></td></tr></table></figure><p>双击打开clash.service文件，粘贴以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=clash daemon<br>After=network.target<br><br>[Service]<br>Type=simple<br>Restart=always<br>ExecStart=/root/clash/clash -d /root/.config/clash<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>然后设置clash开机自启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> clash<br>service clash start<br></code></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status clash.service<br></code></pre></td></tr></table></figure><h1 id="UI面板"><a href="#UI面板" class="headerlink" title="UI面板"></a>UI面板</h1><p>第1种选择的razord面板是最简单最方便的，并且可以和第2种选择里的yacd面板共存，第二种是yacd面板，较简单，第三种是自建razord面板。但是2、3种只能选一个，第2、3种面板都需要修改配置文件。但第1种用的是别人建的razord面板，<em><strong>不需要修改配置</strong></em>。</p><h2 id="【第1种选择】本站面板（最方便）"><a href="#【第1种选择】本站面板（最方便）" class="headerlink" title="【第1种选择】本站面板（最方便）"></a>【第1种选择】本站面板（最方便）</h2><p>浏览器输入：</p><ul><li><a href="http://clash.pawswrite.xyz/">http://clash.pawswrite.xyz/</a><!-- - http://clash.razord.top/ --><!-- - https://yacd.haishan.me/ --></li></ul><p>填入ip地址和端口。</p><blockquote><p>注意如果连不上的话要用http而不是https。</p></blockquote><p>关于Host：</p><ul><li>如果你是用桌面版Linux，就在Linux系统中的浏览器打开这个网址，输入127.0.0.1就可。</li><li>如果你是用服务器，就输入公网IP</li><li>如果你是用openwrt或者树莓派或者其他server版系统，没有公网IP，那就输入<code>ifconfig</code>，查看本机ip，然后在用同一个局域网下（比如说连到同一个WiFi）的其他设备下用浏览器打开，并且输入刚刚得到的ip</li></ul><p><img src="/2022/05/30/RaspberryPi-using-proxy/ip.png"></p><p>关于端口：端口就是启动Clash以后打印的<code>RESTful API listening at: [::]:9090</code>这里的端口号，（默认9090）<br><img src="/2022/05/30/RaspberryPi-using-proxy/razord2.png"></p><p>关于密码：没有修改过配置文件的话一般留空。如果连不上就去配置文件查看，看开头是否有 <code>secret</code> 这一项。</p><h2 id="【第2种选择】自建yacd面板"><a href="#【第2种选择】自建yacd面板" class="headerlink" title="【第2种选择】自建yacd面板"></a>【第2种选择】自建yacd面板</h2><p><a href="https://github.com/haishanh/yacd/releases">yacd 项目地址</a>:<br><img src="/2022/05/30/RaspberryPi-using-proxy/yacd.png"><br><a href="https://github.com/haishanh/yacd/releases">https://github.com/haishanh/yacd/releases</a></p><p>首先，下载最新版<a href="clash/yacd.tar.xz">yacd</a>。<br>推荐：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -o /root/.config/clash/yacd.tar.xz https://pawswrite.xyz/2022/05/30/RaspberryPi-using-proxy/clash/yacd.tar.xz<br>tar -xvJf /root/.config/clash/yacd.tar.xz -C /root/.config/clash/ <br><span class="hljs-built_in">mv</span> /root/.config/clash/public /root/.config/clash/dashboard<br><span class="hljs-built_in">rm</span> /root/.config/clash/yacd.tar.xz<br></code></pre></td></tr></table></figure><p><img src="/2022/05/30/RaspberryPi-using-proxy/yacd2.PNG"></p><p>备选：<br>点击下载👉<a href="clash/yacd.tar.xz">yacd</a>，下载到本地后再拖动上传到&#x2F;root&#x2F;.config&#x2F;clash目录解压</p><h2 id="【第3种选择】自建razord面板"><a href="#【第3种选择】自建razord面板" class="headerlink" title="【第3种选择】自建razord面板"></a>【第3种选择】自建razord面板</h2><p>dashboard项目地址：<br><a href="https://github.com/Dreamacro/clash-dashboard/tags">https://github.com/Dreamacro/clash-dashboard/tags</a></p><p>从本站直接下载v0.3.0版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -O https://pawswrite.xyz/2022/05/30/RaspberryPi-using-proxy/clash/dashboard.zip<br>unzip -d /root/.config/clash/ dashboard.zip &amp;&amp; <span class="hljs-built_in">rm</span> dashboard.zip<br></code></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>自建yacd界面和razord界面都需要在配置文件里修改后才能使用，<font color="red">但是用别人的不需要</font></p><p>编辑配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /root/.config/clash/config.yaml<br></code></pre></td></tr></table></figure><p>在配置文件开头加入下面几行：<br><em>如果配置文件已经有这几行就不用加了，比如GLaDOS提供的Linux版本配置文件就已经自带了</em></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 您可以将静态网页资源（如 clash-dashboard）放置在一个目录中，clash 将会服务于 `$&#123;API&#125;/ui`</span><br><span class="hljs-comment"># 参数应填写配置目录的相对路径或绝对路径。</span><br><span class="hljs-attr">external-ui:</span> <span class="hljs-string">dashboard</span><br><span class="hljs-comment"># A RESTful API for clash</span><br><span class="hljs-attr">external-controller:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:9090</span><br><span class="hljs-comment"># Secret for RESTful API (Optional)口令 (可选)留空就是没有</span><br><span class="hljs-attr">secret:</span> <span class="hljs-string">&quot;yourpassword&quot;</span><br></code></pre></td></tr></table></figure><p><font color="orange">记住自己配置的口令，后面会用上</font></p><p>重启clash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart clash<br></code></pre></td></tr></table></figure><p>在浏览器中输入 <code>http://你的ip:9090/ui/</code> 进行访问。如果有公网IP就填公网IP，可以在外网进行访问还可以配置Nginx进行反代。</p><p>关于Host：</p><ul><li>如果你是用桌面版Linux，就在Linux系统中的浏览器打开这个网址，输入127.0.0.1就可。</li><li>如果你是用服务器，就输入公网IP</li><li>如果你是用openwrt或者树莓派或者其他server版系统，没有公网IP，那就输入<code>ifconfig</code>，查看本机ip，然后在用同一个局域网下（比如说连到同一个WiFi）的其他设备下用浏览器打开，并且输入刚刚得到的ip</li></ul><p><img src="/2022/05/30/RaspberryPi-using-proxy/ip.png"></p><p>关于端口：端口就是启动Clash以后打印的<code>RESTful API listening at: [::]:9090</code>这里的端口号，也就是配置文件里设置的<code>external-controller</code>（默认9090）<br>关于密码：去配置文件查看，看填入secret后面的内容，比如<code>yourpassword</code><br><img src="/2022/05/30/RaspberryPi-using-proxy/razord2.png"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>RaspberryPi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NextCloud: 配置你自己的云服务器【快速部署版】</title>
    <link href="/2022/05/29/NextCloud-Set-Up-your-own-Cloud/"/>
    <url>/2022/05/29/NextCloud-Set-Up-your-own-Cloud/</url>
    
    <content type="html"><![CDATA[<p><strong>NextCloud</strong>是开源的个人云存储服务，提供云存储服务，内置了Office文档、图片相册、日历联系人、两步验证、文件管理、RSS阅读等丰富的应用。可安装在本地或云主机。简单来说就是不要钱的百度云。本文使用 <code>docker-compose</code> 进行部署。</p><span id="more"></span><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><p>笔者的服务器是 <code>arm</code> 架构, <code>Ubuntu 20.04.4 LTS</code> 系统。但因为我们是使用Docker进行安装，所以系统环境并不是非常重要。大家选一个网速不错硬盘够用的服务器即可。</p><p><code>NextCloud</code>官方镜像仓库地址：<a href="https://hub.docker.com/_/nextcloud?tab=description">nextcloud</a></p><h2 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>首先需要安装 <code>Docker</code>，具体安装请参照官方文档：<a href="https://docs.docker.com/get-docker/">Get Docker</a>。笔者的安装是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">snap install docker<br></code></pre></td></tr></table></figure><p>检查安装是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker -v<br></code></pre></td></tr></table></figure><h3 id="安装-docker-compose"><a href="#安装-docker-compose" class="headerlink" title="安装 docker-compose"></a>安装 <code>docker-compose</code></h3><p><code>docker-compose</code> 是一个非常方便的部署docker容器的方式，减少了许多代码量，便于维护。由于Nextcloud还需要数据库的支持，如果单独用docker的话，需要手动依次运行2个容器，因此使用 <code>docker-compose</code> 部署。</p><p><code>snap</code> 进行安装会直接一起把<code>docker-compose</code>一起安装了。用命令进行检查：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose -v<br></code></pre></td></tr></table></figure><p>如果没有的话参照这里进行安装：<a href="https://www.runoob.com/docker/docker-compose.html">Docker Compose 菜鸟教程</a></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>在根目录（或者你喜欢的地方）创建nextcloud文件夹，用于保存所有数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> nextcloud &amp;&amp; <span class="hljs-built_in">cd</span> nextcloud<br></code></pre></td></tr></table></figure><p>在本地创建 <code>docker-compose,yml</code> 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim docker-compose.yml<br></code></pre></td></tr></table></figure><p>复制以下内容（可以修改<code>MYSQL_ROOT_PASSWORD</code>和<code>MYSQL_PASSWORD</code>）：</p><blockquote><p><font color="red">注意，如果你是其他内核版本的服务器，请将arm64v8&#x2F;mysql:oracle更改为你相应的mysql镜像，比如mysql:latest</font></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><br><span class="hljs-attr">services:</span><br><br>  <span class="hljs-attr">db:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">arm64v8/mysql:oracle</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">--default-authentication-plugin=mysql_native_password</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./mysql:/var/lib/mysql</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_ROOT_PASSWORD=l12345</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_USER=user</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_PASSWORD=l12345</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_DATABASE=clouddata</span><br>      <br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">internal_network</span><br><br>  <span class="hljs-attr">app:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">nextcloud:latest</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./nextcloud:/var/www/html</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8000</span><span class="hljs-string">:80</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">depends_on:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">db</span><br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">internal_network</span><br><br><span class="hljs-comment">#   redis:</span><br><span class="hljs-comment">#     image: redis:latest</span><br><span class="hljs-comment">#     volumes:</span><br><span class="hljs-comment">#       - ./redis/data:/data</span><br><span class="hljs-comment">#     healthcheck:</span><br><span class="hljs-comment">#       test: [&#x27;CMD&#x27;, &#x27;redis-cli&#x27;, &#x27;ping&#x27;]</span><br><span class="hljs-comment">#     networks:</span><br><span class="hljs-comment">#       - internal_network</span><br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">internal_network:</span><br></code></pre></td></tr></table></figure><p>然后在当前目录执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><p>之后用<code>docker ps</code>查看容器运行情况，<code>docker logs 容器名</code>来查看日志。</p><h3 id="遇到任何问题需要重启"><a href="#遇到任何问题需要重启" class="headerlink" title="遇到任何问题需要重启"></a>遇到任何问题需要重启</h3><p>在<code>docker-compose,yml</code> 文件同文件夹下运行：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">docker-compose <span class="hljs-meta">down</span><br>docker-compose <span class="hljs-meta">up</span> -d<br></code></pre></td></tr></table></figure><h2 id="网页配置"><a href="#网页配置" class="headerlink" title="网页配置"></a>网页配置</h2><p>在你的浏览器输入<code>http://你的ip:8000</code> ，即可进入网页进行设置。会出现如下界面，在该界面填入你要设置的管理员账户的账户名和密码即可：</p><p><img src="/2022/05/29/NextCloud-Set-Up-your-own-Cloud/start.PNG"></p><p>点击<em>储存于数据库</em>，选择中间的MySQL，在下面依次填入你的数据库用户、密码、名称。也就是之前文件中设置的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_USER=user</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_PASSWORD=l12345</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">MYSQL_DATABASE=clouddata</span><br></code></pre></td></tr></table></figure><p>那么就依次填入：user，l12345，clouddata</p><p>最下面的填入<code>db</code>即可。</p><blockquote><p>这里最后一栏就是填入你的数据库容器名或者别名，使用<code>docker ps</code>查看容器名，一般是<code>nextcloud_db_1</code>或者<code>nextcloud-db-1</code>，取决于<code>docker-compose</code>版本，那么用<code>docker inspect nextcloud_db_1</code>查看<code>alias</code>别名，一般是<code>db</code>。如果不是默认端口的话还需要指定端口。</p></blockquote><p><img src="/2022/05/29/NextCloud-Set-Up-your-own-Cloud/setup.PNG"></p><p>之后就可以成功配置，你可以选择是否下载常用应用。</p><p><img src="/2022/05/29/NextCloud-Set-Up-your-own-Cloud/hello.PNG"></p><!-- ## Nginx 反代安装`nginx`:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install nginx<br></code></pre></td></tr></table></figure><p>创建 nextcloud.conf nginx 配置文件 </p><p><code>bash vim /etc/nginx/conf.d/nextcloud.conf </code> –&gt;</p>-->]]></content>
    
    
    <categories>
      
      <category>NextCloud</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>permanent alias Linux</title>
    <link href="/2022/05/29/permanent-alias-Linux/"/>
    <url>/2022/05/29/permanent-alias-Linux/</url>
    
    <content type="html"><![CDATA[<p>Linux设置永久 <code>alias</code> 别名的方法。</p><span id="more"></span><p>打开文件进行编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br></code></pre></td></tr></table></figure><p>添加下面这行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> [<span class="hljs-built_in">alias</span> name]= <span class="hljs-string">&#x27;[command]&#x27;</span><br></code></pre></td></tr></table></figure><p>比如说使用 <code>dc</code> 作为 <code>docker-compose</code> 的别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> dc=<span class="hljs-string">&#x27;docker-compose&#x27;</span><br></code></pre></td></tr></table></figure><p>最后使其生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自建订阅转换平台</title>
    <link href="/2022/05/25/%E8%87%AA%E5%BB%BA%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E5%B9%B3%E5%8F%B0/"/>
    <url>/2022/05/25/%E8%87%AA%E5%BB%BA%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E5%B9%B3%E5%8F%B0/</url>
    
    <content type="html"><![CDATA[<p>    <strong><em><span style="color:#E53333;">笔者的订阅转换链接：<a href="https://sub.pawswrite.xyz" target="_blank">https://sub.pawswrite.xyz</a></span></em></strong></p><p>订阅转换是说，把一份配置文件&#x2F;节点列表中的节点提取出来，配上一些好用的分流规则，适配Clash|ClashR|QuantumultX|ShadowRocket|Surge等等客户端。</p><span id="more"></span><ul><li><p>机场可能提供了纯v2节点列表或者小火箭的配置文件，但你需要用在Clash或者Surge等其他的客户端，但机场没给现成的。</p></li><li><p>你不满意机场提供的分流规则，想换成别的。机场给的配置文件也不能够涵盖你的需求。</p></li><li><p>你用一键脚本自建翻墙节点，需要转换成不同客户端的配置文件。</p></li></ul><p>这个时候就需要用到订阅转换。现在有一些大佬做了订阅转换的网站，比如说<a href="bianyuan.xyz">边缘订阅转换</a>。这些都是公益免费很方便。但问题就在于，用别人的后端转换订阅，存在一定的数据隐患，那还有甚者说自己的订阅已经被盗用，流量也是不正常。（当然我没出现过这种问题，一般来说人家也不屑于。。。）</p><p>偷订阅这种事情，除了当事人，没人知道到底有没有。实在不行，那咱们就自己建一个订阅转换。毕竟前后端都已经开源了。</p><h2 id="前期需求"><a href="#前期需求" class="headerlink" title="前期需求"></a>前期需求</h2><ul><li>一台拥有公网IP的服务器（没有公网IP就自己研究内网穿透啊什么的）</li><li>一个域名</li></ul><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p>前端项目地址：<a href="https://github.com/CareyWang/sub-web">https://github.com/CareyWang/sub-web</a><br>后端项目地址：<a href="https://github.com/tindy2013/subconverter">https://github.com/tindy2013/subconverter</a></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>作者使用的是CloudFlare进行解析。解析两个域名，分别给前端和后端。  </p><ol><li>前端 我们使用 sub.你的域名 进行解析</li><li>后端 我们使用 suc.你的域名 进行解析</li></ol><p><strong>开启CDN代理会更安全</strong></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>使用<code>uname -a</code>看一下自己的服务器架构，如果是amd，直接使用官方镜像，如果是arm则需要自己构建镜像或者使用笔者构建的镜像：<code>docker push techfever/sub-web:latest</code></p><h3 id="【amd架构】Docker运行"><a href="#【amd架构】Docker运行" class="headerlink" title="【amd架构】Docker运行"></a>【amd架构】Docker运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 58080:80 --restart always --name subweb careywong/subweb:latest<br></code></pre></td></tr></table></figure><p>若需要对代码进行修改，你需要在本地构建镜像并运行。<br>注：每次修改代码，你都需要重新执行 <code>docker build</code> 来执行打包操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker build -t subweb-local:latest .<br><br>docker run -d -p 58080:80 --restart always --name subweb subweb-local:latest<br></code></pre></td></tr></table></figure><h3 id="【arm架构】利用GitHub-Actions自行build镜像并push到DockerHub"><a href="#【arm架构】利用GitHub-Actions自行build镜像并push到DockerHub" class="headerlink" title="【arm架构】利用GitHub Actions自行build镜像并push到DockerHub"></a>【arm架构】利用GitHub Actions自行build镜像并push到DockerHub</h3><p>因为笔者用的是<code>arm</code>架构的服务器，而作者的 <code>careywong/subweb:latest</code> 并不支持。因此可以自己编译镜像【推荐】。</p><p><em>也可以用笔者的镜像：</em></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker run -d -<span class="hljs-selector-tag">p</span> <span class="hljs-number">58080</span>:<span class="hljs-number">80</span> <span class="hljs-attr">--restart</span> always <span class="hljs-attr">--name</span> subweb techfever/sub-web:latest<br></code></pre></td></tr></table></figure><p>下面讲解如何自行编译镜像：</p><h3 id="自行编译镜像"><a href="#自行编译镜像" class="headerlink" title="自行编译镜像"></a>自行编译镜像</h3><h4 id="注册DockerHub"><a href="#注册DockerHub" class="headerlink" title="注册DockerHub"></a>注册DockerHub</h4><p>先注册<a href="https://hub.docker.com/signup">DockerHub</a>，记住账号密码。</p><h4 id="添加Secrets"><a href="#添加Secrets" class="headerlink" title="添加Secrets"></a>添加Secrets</h4><p>先登录自己的账号 <code>fork</code> 项目<a href="https://github.com/CareyWang/sub-web">sub-web</a>，然后打开<code>Settings</code>，在<code>Secrets-Actions</code>下添加两个Secret，分别是 <code>DOCKER_USERNAME</code> 和 <code>DOCKER_PASSWORD</code>。请注意 <code>DOCKER_USERNAME</code> 需要<strong>全部小写</strong>。<br><img src="/2022/05/25/%E8%87%AA%E5%BB%BA%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E5%B9%B3%E5%8F%B0/actions.PNG"></p><p>打开项目，点击<code>Actions</code>，选择<code>New workflow</code>，选择 <code>set up a workflow yourself</code> ，然后将下面的代码复制进去，你也可以选择复制<a href="https://github.com/tech-fever/sub-web/blob/master/.github/workflows/docker-image.yml">我的yml文件</a>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Docker</span> <span class="hljs-string">Image</span> <span class="hljs-string">CI</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [ <span class="hljs-string">master</span> ]<br><br><span class="hljs-attr">jobs:</span><br><br>  <span class="hljs-attr">Docker:</span><br><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">out</span> <span class="hljs-string">the</span> <span class="hljs-string">repo</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>        <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">docker/setup-qemu-action@v1</span><br>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">docker/setup-buildx-action@v1</span><br>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">docker/login-action@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">username:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.DOCKER_USERNAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">password:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.DOCKER_PASSWORD</span> <span class="hljs-string">&#125;&#125;</span><br>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">and</span> <span class="hljs-string">push</span> <span class="hljs-string">Docker</span> <span class="hljs-string">images</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">docker/build-push-action@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">context:</span> <span class="hljs-string">.</span><br>          <span class="hljs-attr">platforms:</span> <span class="hljs-string">linux/amd64,linux/arm64</span><br>          <span class="hljs-attr">push:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">tags:</span> <span class="hljs-string">你的DockerHub用户名/sub-web:latest</span><br></code></pre></td></tr></table></figure><p><strong>记得写入你的DockerHub用户名</strong></p><p>保存以后，会自动运行actions（如果没有运行的话需要进入actions选择&#96;&#96;enable workflow&#96;），然后你的DockerHub就会出现新的镜像。</p><h4 id="修改镜像"><a href="#修改镜像" class="headerlink" title="修改镜像"></a>修改镜像</h4><ol><li>如果你是上一小节说的方法自行编译镜像，那么每次对镜像进行任何修改，都只需要将改变提交到GitHub，然后GitHub actions就会自动编译新的镜像并且推送到DockerHub，你只需要pull新镜像即可。</li><li>如果你是使用别人的镜像，那么你需要先进入容器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it subweb bash<br></code></pre></td></tr></table></figure>之后在容器里进行修改。</li></ol><h4 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h4><p>运行自己的镜像：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -d -p 58080<span class="hljs-function">:80</span> <span class="hljs-params">--restart</span> always <span class="hljs-params">--name</span> subweb 你的dockerhub名字<span class="hljs-string">/sub-web</span><span class="hljs-function">:latest</span><br></code></pre></td></tr></table></figure><h3 id="预览前端"><a href="#预览前端" class="headerlink" title="预览前端"></a>预览前端</h3><p>到目前为止，浏览器访问 http:&#x2F;&#x2F;服务器ip:58080&#x2F; 应该可以进行前端 sub-web 的预览了。</p><p>如果需要用域名来访问，而不是ip:端口的形式来访问，那我们就需要反代前端，该内容在后面小节有提到。</p><h3 id="前端修改"><a href="#前端修改" class="headerlink" title="前端修改"></a>前端修改</h3><p>前端默认的后端地址是<code>https://api.wcc.best</code>，可以用，但我们的目的是为了数据安全，要自建后端，当然需要修改。</p><blockquote><p>本节进行了修改以后，都需要删除原来的容器，并用修改后的镜像来运行。</p></blockquote><ul><li>【推荐】如果你是通过 <code>GitHub Actions</code> 进行构建，那么直接修改以后push到GitHub，之后把Actions构建并推送到Docker Hub的最新镜像pull下来即可。  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker stop subweb &amp;&amp; docker <span class="hljs-built_in">rm</span> subweb<br>docker rmi techfever/sub-web:latest &amp;&amp; docker pull techfever/sub-web:latest<br>docker run -d -p 127.0.0.1:58080:80 --restart always --name subweb techfever/sub-web:latest<br></code></pre></td></tr></table></figure></li><li>如果你是在本地构建镜像并运行。每次修改代码，你都需要重新执行 <code>docker build</code> 来执行打包操作。</li></ul><h4 id="修改默认后端地址"><a href="#修改默认后端地址" class="headerlink" title="修改默认后端地址"></a>修改默认后端地址</h4><p>如果你是使用自己构建Docker镜像的方式，首先打开<code>sub-web/.env</code>文件修改下面这项，把<code>https://api.wcc.best</code>改成你自己的后端地址（后面会配置，比如笔者的是<a href="https://suc.pawswrite.xyz）：">https://suc.pawswrite.xyz）：</a></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># API 后端</span><br><span class="hljs-attr">VUE_APP_SUBCONVERTER_DEFAULT_BACKEND</span> = <span class="hljs-string">&quot;https://api.wcc.best&quot;</span><br><br><span class="hljs-comment"># 文本托管后端</span><br><span class="hljs-attr">VUE_APP_CONFIG_UPLOAD_BACKEND</span> = <span class="hljs-string">&quot;https://api.wcc.best&quot;</span><br></code></pre></td></tr></table></figure><h4 id="增加远程配置【可选】"><a href="#增加远程配置【可选】" class="headerlink" title="增加远程配置【可选】"></a>增加远程配置【可选】</h4><p>找到 <code>sub-web/src/views/Subconverter.vue</code> 文件，找到 259 行 <code>remoteConfig: [</code>（写博客的时候是这行），敲下回车，插入下面内容。有不清楚的就参照我的<a href="https://github.com/tech-fever/sub-web/blob/master/src/views/Subconverter.vue">Subconverter.vue</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>            label: <span class="hljs-string">&quot;ACL4SSR&quot;</span>,<br>            options: [<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online 默认版 分组比较全 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_AdblockPlus 更多去广告 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_AdblockPlus.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_NoAuto 无自动测速 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_NoReject 无广告拦截规则 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_NoReject.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini 精简版 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini_AdblockPlus.ini 精简版 更多去广告 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_AdblockPlus.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini_NoAuto.ini 精简版 不带自动测速 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini_Fallback.ini 精简版 带故障转移 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_Fallback.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Mini_MultiMode.ini 精简版 自动测速、故障转移、负载均衡 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_MultiMode.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Full 全分组 重度用户使用 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Full_NoAuto.ini 全分组 无自动测速 重度用户使用 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Full_AdblockPlus 全分组 重度用户使用 更多去广告 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_AdblockPlus.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Online_Full_Netflix 全分组 重度用户使用 奈飞全量 (与Github同步)&quot;</span>,<br>                value:<br>                  <span class="hljs-string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_Netflix.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR 本地 默认版 分组比较全&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Mini 本地 精简版&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_Mini.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Mini_NoAuto.ini 本地 精简版+无自动测速&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_Mini_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_Mini_Fallback.ini 本地 精简版+fallback&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_Mini_Fallback.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_BackCN 本地 回国&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_BackCN.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_NoApple 本地 无苹果分流&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_NoApple.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_NoAuto 本地 无自动测速 &quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_NoAuto.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_NoAuto_NoApple 本地 无自动测速&amp;无苹果分流&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_NoAuto_NoApple.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_NoMicrosoft 本地 无微软分流&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_NoMicrosoft.ini&quot;</span><br>              &#125;,<br>              &#123;<br>                label: <span class="hljs-string">&quot;ACL4SSR_WithGFW 本地 GFW列表&quot;</span>,<br>                value: <span class="hljs-string">&quot;config/ACL4SSR_WithGFW.ini&quot;</span><br>              &#125;<br>            ]<br>          &#125;,<br></code></pre></td></tr></table></figure><h3 id="nginx反代前端"><a href="#nginx反代前端" class="headerlink" title="nginx反代前端"></a>nginx反代前端</h3><p>为了之后再用nginx进行反代，可以停止之前的容器，再重新启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker stop subweb &amp;&amp; docker <span class="hljs-built_in">rm</span> subweb<br>docker run -d -p 127.0.0.1:58080:80 --restart always --name subweb techfever/sub-web:latest<br></code></pre></td></tr></table></figure><p>创建新的nginx配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/subconverter.conf<br></code></pre></td></tr></table></figure><p>输入下列配置，将其中 <code>sub.pawswrite.xyz</code> 部分改成你的域名：：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">sub.pawswrite.xyz;</span><br><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$host$request_uri;</span><br>&#125;<br><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-comment"># Replace bark.app.dev with your real domain name.</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">sub.pawswrite.xyz;</span><br><br>    <span class="hljs-comment"># ssl_certificate /path/to/signed_cert_plus_intermediates;</span><br>    <span class="hljs-comment"># ssl_certificate_key /path/to/private_key;</span><br>    <span class="hljs-string">ssl_session_timeout</span> <span class="hljs-string">1d;</span><br>    <span class="hljs-string">ssl_session_cache</span> <span class="hljs-string">shared:MozSSL:10m;</span>  <span class="hljs-comment"># about 40000 sessions</span><br>    <span class="hljs-string">ssl_session_tickets</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># modern configuration</span><br>    <span class="hljs-string">ssl_protocols</span> <span class="hljs-string">TLSv1.3;</span><br>    <span class="hljs-string">ssl_prefer_server_ciphers</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># HSTS (ngx_http_headers_module is required) (63072000 seconds)</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Strict-Transport-Security</span> <span class="hljs-string">&quot;max-age=63072000&quot;</span> <span class="hljs-string">always;</span><br><br>    <span class="hljs-comment"># OCSP stapling</span><br>    <span class="hljs-string">ssl_stapling</span> <span class="hljs-string">on;</span><br>    <span class="hljs-string">ssl_stapling_verify</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-comment"># verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br>    <span class="hljs-comment"># ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><br>    <span class="hljs-comment"># replace with the IP address of your resolver</span><br>    <span class="hljs-comment">#resolver 127.0.0.1;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br><br>        <span class="hljs-string">log_not_found</span> <span class="hljs-string">on;</span><br>        <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://127.0.0.1:58080;</span><br><br>        <span class="hljs-string">proxy_read_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_connect_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_redirect</span> <span class="hljs-string">off;</span><br><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span>              <span class="hljs-string">$host;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$scheme;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Real-IP</span>         <span class="hljs-string">$remote_addr;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>之后就可以用域名来访问前端面板了。</p><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>先在GitHub上找到最新的<a href="https://github.com/tindy2013/subconverter/releases">后端发布版本</a>，选择适配你服务器架构的压缩文件，如果不知道你服务器的架构，采用命令 <code>uname -m</code> 来查看，比如笔者就是 <code>aarch64</code> 。然后复制你对应的压缩文件链接：</p><p><img src="/2022/05/25/%E8%87%AA%E5%BB%BA%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E5%B9%B3%E5%8F%B0/url.PNG"></p><p>在服务器上下载并解压后端程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /root<br>wget https://github.com/tindy2013/subconverter/releases/download/v0.7.2/subconverter_aarch64.tar.gz<br>tar -zxvf subconverter_aarch64.tar.gz<br></code></pre></td></tr></table></figure><h3 id="修改配置文件参数"><a href="#修改配置文件参数" class="headerlink" title="修改配置文件参数"></a>修改配置文件参数</h3><p>现在我们需要修改后端配置文件中的一些参数。</p><p>复制一份配置文件到本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span>  /root/subconverter/pref.example.ini /root/subconverter/pref.ini<br></code></pre></td></tr></table></figure><p>找到如下参数进行修改：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">api_access_token</span>=<span class="hljs-number">123123</span>dfsdsdfsdfsdf            <span class="hljs-comment">#随意设置自己知道就行</span><br><span class="hljs-attr">managed_config_prefix</span>=https://suc.v2rayssr.com  <span class="hljs-comment">#设置成我们刚刚解析的后端域名</span><br><span class="hljs-attr">listen</span>=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>                                <span class="hljs-comment">#这里改成 127.0.0.1 进行反代</span><br></code></pre></td></tr></table></figure><p>创建服务进程并启动<br>接下来我们需要创建一个服务，让VPS每次重启或是开机自动运行后端程序</p><p>找到VPS目录 &#x2F;etc&#x2F;systemd&#x2F;system，创建一个名为 sub.service 的文件</p><p>打开文件，贴入以下内容，保存。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=A API For Subscription Convert<br><span class="hljs-attr">After</span>=network.target<br> <br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">ExecStart</span>=/root/subconverter/subconverter<br><span class="hljs-attr">WorkingDirectory</span>=/root/subconverter<br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">10</span><br> <br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>检查运行状态以及设置开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br>systemctl start sub<br>systemctl <span class="hljs-built_in">enable</span> sub<br>systemctl status sub<br></code></pre></td></tr></table></figure><p>到这里，后端也就搭建完毕了，我们现在可以在浏览器里面访问我们的后端了 <a href="https://suc.pawswrite.xyz/">https://suc.pawswrite.xyz</a> （正常的话，会返回下面的图例）</p><p><img src="/2022/05/25/%E8%87%AA%E5%BB%BA%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E5%B9%B3%E5%8F%B0/suc.PNG"></p><h3 id="nginx反代后端"><a href="#nginx反代后端" class="headerlink" title="nginx反代后端"></a>nginx反代后端</h3><p>创建新的nginx配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/subconverter2.conf<br></code></pre></td></tr></table></figure><p>输入下列配置，将其中 <code>suc.pawswrite.xyz</code> 部分改成你的域名：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:80;</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">suc.pawswrite.xyz;</span><br><br>    <span class="hljs-string">return</span> <span class="hljs-number">301</span> <span class="hljs-string">https://$host$request_uri;</span><br>&#125;<br><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-string">listen</span> [<span class="hljs-string">::</span>]<span class="hljs-string">:443</span> <span class="hljs-string">ssl</span> <span class="hljs-string">http2;</span><br>    <span class="hljs-comment"># Replace bark.app.dev with your real domain name.</span><br>    <span class="hljs-string">server_name</span> <span class="hljs-string">suc.pawswrite.xyz;</span><br><br>    <span class="hljs-comment"># ssl_certificate /path/to/signed_cert_plus_intermediates;</span><br>    <span class="hljs-comment"># ssl_certificate_key /path/to/private_key;</span><br>    <span class="hljs-string">ssl_session_timeout</span> <span class="hljs-string">1d;</span><br>    <span class="hljs-string">ssl_session_cache</span> <span class="hljs-string">shared:MozSSL:10m;</span>  <span class="hljs-comment"># about 40000 sessions</span><br>    <span class="hljs-string">ssl_session_tickets</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># modern configuration</span><br>    <span class="hljs-string">ssl_protocols</span> <span class="hljs-string">TLSv1.3;</span><br>    <span class="hljs-string">ssl_prefer_server_ciphers</span> <span class="hljs-string">off;</span><br><br>    <span class="hljs-comment"># HSTS (ngx_http_headers_module is required) (63072000 seconds)</span><br>    <span class="hljs-string">add_header</span> <span class="hljs-string">Strict-Transport-Security</span> <span class="hljs-string">&quot;max-age=63072000&quot;</span> <span class="hljs-string">always;</span><br><br>    <span class="hljs-comment"># OCSP stapling</span><br>    <span class="hljs-string">ssl_stapling</span> <span class="hljs-string">on;</span><br>    <span class="hljs-string">ssl_stapling_verify</span> <span class="hljs-string">on;</span><br><br>    <span class="hljs-comment"># verify chain of trust of OCSP response using Root CA and Intermediate certs</span><br>    <span class="hljs-comment"># ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;</span><br><br>    <span class="hljs-comment"># replace with the IP address of your resolver</span><br>    <span class="hljs-comment">#resolver 127.0.0.1;</span><br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br><br>        <span class="hljs-string">log_not_found</span> <span class="hljs-string">on;</span><br>        <span class="hljs-string">proxy_pass</span> <span class="hljs-string">http://127.0.0.1:58080;</span><br><br>        <span class="hljs-string">proxy_read_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_connect_timeout</span> <span class="hljs-number">300</span><span class="hljs-string">;</span><br>        <span class="hljs-string">proxy_redirect</span> <span class="hljs-string">off;</span><br><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">Host</span>              <span class="hljs-string">$host;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Forwarded-Proto</span> <span class="hljs-string">$scheme;</span><br>        <span class="hljs-string">proxy_set_header</span> <span class="hljs-string">X-Real-IP</span>         <span class="hljs-string">$remote_addr;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="安装cerbot申请证书"><a href="#安装cerbot申请证书" class="headerlink" title="安装cerbot申请证书"></a>安装cerbot申请证书</h2><p>安装certbot的步骤参照：<a href="https://certbot.eff.org/">https://certbot.eff.org</a></p><p>申请证书使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">certbot --nginx<br></code></pre></td></tr></table></figure><p>按照步骤来即可</p>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Clash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多出口ip检测</title>
    <link href="/2022/05/20/ip-check/"/>
    <url>/2022/05/20/ip-check/</url>
    
    <content type="html"><![CDATA[<p>多出口ip检测。</p><span id="more"></span><iframe src="https://ip.skk.moe/simple" style="width: 100%; border: 0"></iframe><iframe src="https://debug.skk.moe/" style="width: 100%; border: 0"></iframe>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IP</tag>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Conda: python 虚拟环境</title>
    <link href="/2022/05/19/conda-virtual-python-enviroment/"/>
    <url>/2022/05/19/conda-virtual-python-enviroment/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么要用虚拟环境？"><a href="#为什么要用虚拟环境？" class="headerlink" title="为什么要用虚拟环境？"></a>为什么要用虚拟环境？</h2><p>在开发Python应用程序的时候，系统安装的Python3只有一个版本：3.4。所有第三方的包都会被pip安装到Python3的site-packages目录下。这就会造成，在Linux上直接用 <code>pip install</code> 来安装包的时候常常会遇到警告，可能会造成系统包管理器的冲突，如果你是root用户还会警告你可能导致权限问题。</p><p>如果今天我们需要某个包的2.3版本，但是明天需要这个包的2.4版本，该怎么办？</p><p>这种情况下，每个应用可能需要各自拥有一套“<strong>独立</strong>”的“<strong>隔离</strong>”的Python运行环境。一般推荐的解决办法是安装<strong>虚拟环境</strong>。</p><h2 id="为什么要用conda"><a href="#为什么要用conda" class="headerlink" title="为什么要用conda"></a>为什么要用conda</h2><p>Python3.3 之后，自带了 <code>venv</code> 指令可以创建虚拟环境，但我一般喜欢用 <code>anaconda</code> 或者 <code>miniconda</code>，更方便。他封装了建立python下各种各样的依赖包。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>对于Linux，<a href="https://www.anaconda.com/products/distribution">官网</a>提供多种不同架构下的的安装方式：</p><ul><li>64-Bit (x86) Installer (659 MB)</li><li>64-Bit (Power8 and Power9) Installer (367 MB)</li><li>64-Bit (AWS Graviton2 &#x2F; ARM64) Installer (568 MB)</li><li>64-bit (Linux on IBM Z &amp; LinuxONE) Installer (280 MB)</li></ul><p>先下载<a href="https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html">miniconda</a>。点击👉<a href="https://docs.conda.io/en/latest/miniconda.html#linux-installers">Linux installers</a>此网站找到对应内核版本，比如我的是<code>aarch64</code>，想安装<code>python3.9</code>版本，那就是<a href="https://repo.anaconda.com/miniconda/Miniconda3-py39_4.11.0-Linux-aarch64.sh%E3%80%82">https://repo.anaconda.com/miniconda/Miniconda3-py39_4.11.0-Linux-aarch64.sh。</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://repo.anaconda.com/miniconda/Miniconda3-py39_4.11.0-Linux-aarch64.sh<br>bash Miniconda3-py39_4.11.0-Linux-aarch64.sh<br></code></pre></td></tr></table></figure><p>之后按Enter继续安装，Miniconda 会显示很长一段使用许可说明，按Enter不断翻页。输入yes来接受license terms。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs s">Do you accept the license terms? [yes|no]<br>[no] &gt;&gt;&gt; <br>Please answer &#x27;yes&#x27; or &#x27;no&#x27;:&#x27;<br>&gt;&gt;&gt; yes<br></code></pre></td></tr></table></figure><p>选择是否运行 conda init 来初始化，我选了 yes 。</p><p>出现错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CommandNotFoundError: Your shell has not been properly configured to use <span class="hljs-string">&#x27;conda activate&#x27;</span><br></code></pre></td></tr></table></figure><p>这是<code>conda init</code>出错，激活环境即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 激活环境</span><br><span class="hljs-built_in">source</span> activate<br><span class="hljs-comment"># 退出环境</span><br><span class="hljs-built_in">source</span> deactivate<br></code></pre></td></tr></table></figure><p>然后创建新环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n <span class="hljs-built_in">test</span> <span class="hljs-comment"># 创建一个叫test的版本的虚拟环境</span><br>conda activate <span class="hljs-built_in">test</span> <span class="hljs-comment"># 激活环境</span><br>python -m pip install 包名 <span class="hljs-comment"># 在环境中安装需要的包</span><br>conda install 包名 <span class="hljs-comment"># 也可以用conda来安装</span><br>conda deactivate <span class="hljs-comment"># 退出环境</span><br></code></pre></td></tr></table></figure><p>conda支持指定python版本和安装的包版本。</p>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CloudFlare CNAME接入</title>
    <link href="/2022/05/19/CloudFlare-CNAME/"/>
    <url>/2022/05/19/CloudFlare-CNAME/</url>
    
    <content type="html"><![CDATA[<p>CloudFlare默认的NS接入因各种原因（面向国内速度慢 无法自定义解析 不能分流）遭到诟病。但 <code>CloudFlare</code> CNAME接入就大不一样。它可以：</p><ul><li>自选IP，针对国内三大运营商优化</li><li>可以用你喜欢的DNS服务商管理，不局限在CloudFlare<span id="more"></span></li></ul><p>传统CNAME接入CloudFlare从2021年11月开始被通过API禁用。</p><h2 id="CloudFlare-SaaS-CNAME接入"><a href="#CloudFlare-SaaS-CNAME接入" class="headerlink" title="CloudFlare SaaS CNAME接入"></a>CloudFlare SaaS CNAME接入</h2><p>但这需要用户信用卡绑定，并且默认只能回源一个ip或域名，回源多个需要在服务器上做相应的配置。</p><blockquote><p>教程：<br><a href="https://luotianyi.vc/6185.html">https://luotianyi.vc/6185.html</a></p></blockquote><h2 id="pages-function实现cname接入"><a href="#pages-function实现cname接入" class="headerlink" title="pages function实现cname接入"></a>pages function实现cname接入</h2><p>其原理和CFworker相同，都是通过js来控制出入站流量。使用CFPage时绑定域名<strong>无需信用卡</strong>，也<strong>可以自选域名</strong>，只要做好TXT和海外CNAME记录即可，并且可以回源多个站点。CloudFlarePage是无流量限制的，唯一的弊端是一天只允许<strong>10万次</strong>请求，超出会直接中断。</p><blockquote><p><a href="https://hostloc.com/thread-1017748-1-1.html">https://hostloc.com/thread-1017748-1-1.html</a></p></blockquote><p>请注意，使用Page接入将无法使用WAF防火墙，面对攻击时防护能力较弱。此外，无论是SaaS还是Page，都无法使用ArgoTunnel功能。</p><p>fork 仓库：<a href="https://github.com/ChenYFan/PageFunctionTest">https://github.com/ChenYFan/PageFunctionTest</a></p><p>修改&#x2F;functions&#x2F;_middleware.js中的样例域名即可，之后直接Fork导入Page，不需要额外配置。</p><p>回源节点和CloudFlareFree相同，即按照访客命中的节点数据中心回源，效果不如ArgoTunnel佳。</p><h2 id="自选IP"><a href="#自选IP" class="headerlink" title="自选IP"></a>自选IP</h2><p>CloudFlare自定义CDN节点IP可以在一定程度上解决免费套餐线路拥堵的问题，不过随之而来的风险也有不少，例如可能自定义的IP会失效，出现一些莫名其妙的错误。自定义CloudFlare的节点IP，有可能被CloudFlare封掉，解决的办法也很简单，利用DNS智能解析，将国外访问按照正常的CloudFlare给的CNAME记录解析。</p><p><a href="https://github.com/ddgth/cf2dns">https://github.com/ddgth/cf2dns</a></p>]]></content>
    
    
    <categories>
      
      <category>长毛象运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>CloudFlare</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>marks</title>
    <link href="/2022/05/18/marks/"/>
    <url>/2022/05/18/marks/</url>
    
    <content type="html"><![CDATA[<p>收藏一些奇怪的文章</p><span id="more"></span><p>grafana+prometheus+node_exporter  监控 在prometheus上面还可以添加alertmanage微信报警<br><a href="https://i4t.com/4741.html">https://i4t.com/4741.html</a><br>示例: grafana.frps.cn<br>来自 <a href="https://hostloc.com/space-uid-18261.html">https://hostloc.com/space-uid-18261.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --zone=public --add-port=22/tcp<br>systemctl <span class="hljs-built_in">enable</span> --now cockpit.socket<br>nmap -T4 -A -v -Pn IP<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>awscli version 2学习笔记</title>
    <link href="/2022/05/18/introduction-to-awscli/"/>
    <url>/2022/05/18/introduction-to-awscli/</url>
    
    <content type="html"><![CDATA[<p>AWS Command Line Interface (AWS CLI) 是一种开源工具，让您能够在命令行 Shell 中使用命令与 AWS 服务进行交互。搜了一下感觉相关中文资料不太多？特别是 <code>version 2</code> 的几乎没找到。就看官方自己学了学。写一点<code>awscli s3 version2</code>的学习笔记，一些命令的简单介绍。</p><span id="more"></span><p>参考资料：</p><ol><li>官方文档<a href="https://docs.aws.amazon.com/cli/latest/index.html">AWS CLI Command Reference</a>  </li><li>官方文档<a href="https://awscli.amazonaws.com/v2/documentation/api/latest/index.html">AWS CLI Command Reference version 2</a></li><li>GitHub 项目 <a href="https://github.com/aws/aws-cli">aws-cli</a></li><li><a href="https://docs.aws.amazon.com/cli/latest/userguide/aws-cli.pdf#cli-chap-using">User Guide for Version 2 pdf</a></li><li><a href="http://download.iteablue.com/21%E4%B8%AA%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E5%B7%A5%E5%85%B7%E8%B5%84%E6%96%99%E5%8C%85/AWS%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/AWS%20Command%20Line%20Interface%20%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97.pdf">AWS Command Line Interface中文用户指南</a></li><li>【推荐】<a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/aws-cli.pdf#cli-chap-welcome">AWS Command Line Interface 版本 2 的用户指南</a></li></ol><h2 id="安装-version-1"><a href="#安装-version-1" class="headerlink" title="安装 version 1"></a>安装 version 1</h2><p>AWS CLI有三种安装方式。</p><ol><li><p>pip<br> AWS CLI 在 Linux、Windows 和 macOS 上的主要分发方式是 pip，这是一个用于 Python 的程序包管理<br>器，可提供方便的方式来安装、升级和删除 Python 程序包及其相关组件。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install awscli --upgrade --user<br></code></pre></td></tr></table></figure></li><li><p>在虚拟环境中安装【推荐】<br> 用root用户使用pip可能会出现问题，一般建议使用虚拟环境（*我个人喜欢用<code>anaconda</code>或者<code>miniconda</code>*）。  </p><ul><li>pip安装virtualenv  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install --user virtualenv<br></code></pre></td></tr></table></figure></li><li>创建虚拟环境并为其命名  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">virtualenv ~/cli-ve<br></code></pre></td></tr></table></figure></li><li>激活新虚拟环境<br> Linux, macOS, or Unix  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/cli-ve/bin/activate<br></code></pre></td></tr></table></figure>  Windows  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-variable">%USERPROFILE%</span>\cli-ve\Scripts\activate<br></code></pre></td></tr></table></figure></li><li>将 AWS CLI 安装到虚拟环境中 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(cli-ve)~$ pip install --upgrade awscli<br></code></pre></td></tr></table></figure></li></ul><p> 您可以使用 deactivate 命令退出虚拟环境。不管何时启动新会话，都必须重新激活环境。</p></li></ol><p>要升级到最新版本，请重新运行安装命令：<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(cli-ve)~$ pip install --upgrade awscli<br></code></pre></td></tr></table></figure><br>3. 捆绑安装程序</p><p>验证 AWS CLI 是否已正确安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws --version<br></code></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><p>pip 卸载，或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">rm</span> -rf /usr/local/aws<br>sudo <span class="hljs-built_in">rm</span> /usr/local/bin/aws<br></code></pre></td></tr></table></figure><h2 id="安装version2"><a href="#安装version2" class="headerlink" title="安装version2"></a>安装version2</h2><p>AWS CLI 版本 2 是 AWS CLI 的最新主版本，支持所有最新功能。版本 2 中引入的某些功能无法向后兼容版<br>本 1，您必须升级才能访问这些功能。AWS CLI 版本 2 仅可作为捆绑安装程序安装。虽然您可能会在软件包管理器中找到它，但这些软件包是不受支持的非官方软件包，并非由生产或管理AWS 我们建议您仅从本指南中记载的官方 AWS CLI 发行点安装<br>AWS。  </p><h3 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h3><p>Linux x86 (64-bit)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl <span class="hljs-string">&quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot;</span> -o <span class="hljs-string">&quot;awscliv2.zip&quot;</span><br>unzip awscliv2.zip<br>sudo ./aws/install<br></code></pre></td></tr></table></figure><p>Linux ARM</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl <span class="hljs-string">&quot;https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip&quot;</span> -o <span class="hljs-string">&quot;awscliv2.zip&quot;</span><br>unzip awscliv2.zip<br>sudo ./aws/install<br></code></pre></td></tr></table></figure><p>验证 AWS CLI 是否已正确安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws --version<br></code></pre></td></tr></table></figure><h3 id="Docker官方镜像安装"><a href="#Docker官方镜像安装" class="headerlink" title="Docker官方镜像安装"></a>Docker官方镜像安装</h3><p>官方 AWS CLI 版本 2 <code>Docker</code> 镜像托管在 <code>amazon/aws-cli</code> 存储库中的 <code>DockerHub</code> 上。首次使用 <code>docker run</code> 命令时，最新的 <code>Docker</code> 镜像将下载到您的电脑。<code>docker run</code> 命令的每次后续使用都会从本地副本运行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -it amazon/aws-cli <span class="hljs-built_in">command</span><br></code></pre></td></tr></table></figure><p><em><strong>command</strong></em> 替换成你需要的 <code>aws-cli</code> 命令</p><p>比如说，验证 AWS CLI 是否已正确安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -it amazon/aws-cli --version<br></code></pre></td></tr></table></figure><blockquote><p> <code>--rm</code>   – 指定在命令退出后清理容器。<br> <code>-it</code>    – 指定要使用 打开伪 <code>TTY</code>。stdin这允许您在容器中运行 <code>AWS CLI 版本 2</code> 时向其提供输入，例如，<br>通过使用 aws configure 和 aws help 命令。当选择是否省略 <code>-it</code> 时，请考虑以下事项：<br> • 如果您正在运行脚本，则不需要 <code>-it</code>。<br> • 如果您的脚本遇到错误，则从 <code>Docker</code> 调用中省略 <code>-it</code> 也许能解决此问题。<br> • 如果您正在尝试通过管道发送输出，-it 可能会导致错误，从 Docker 调用中省略 <code>-it</code> 也许能解决此问题。如果希望保留 -it 标志，但仍想通过管道发送输出，请禁用 <code>AWS CLI</code> 默认使用的客户端分页程序 (p. 109)，应该能解决此问题。</p></blockquote><p>可以使用 -e 标志调用特定系统的环境变量。要使用环境变量，请按名称调用它。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker run --<span class="hljs-built_in">rm</span> -it -v ~/.aws:/root/.aws -e ENVVAR_NAME amazon/aws-cli s3 <span class="hljs-built_in">ls</span></span><br>2020-03-25 00:30:48 aws-cli-docker-demo<br></code></pre></td></tr></table></figure><p>您可以使用 -e 标志调用特定系统的环境变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker run --<span class="hljs-built_in">rm</span> -it -v ~/.aws:/root/.aws -e AWS_PROFILE amazon/aws-cli s3 <span class="hljs-built_in">ls</span><br>2020-03-25 00:30:48 aws-cli-docker-demo<br></code></pre></td></tr></table></figure><p>用别名缩短 Docker 命令：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-built_in">alias</span> aws=&#x27;docker <span class="hljs-built_in">run</span> <span class="hljs-comment">--rm -it amazon/aws-cli&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="快速配置"><a href="#快速配置" class="headerlink" title="快速配置"></a>快速配置</h2><p><code>aws configure</code> 命令是设置 <code>AWS CLI</code> 安装的最快方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ aws configure<br>AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE<br>AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY<br>Default region name [None]: us-west-2<br>Default output format [None]: json<br></code></pre></td></tr></table></figure><p>• 访问密钥 ID (p. 32)<br>• 秘密访问密钥 (p. 32)<br>• AWS 区域 (p. 33)<br>• 输出格式 (p. 33)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">```<br><span class="hljs-comment">## AWS CLI 的命名配置文件</span><br>配置文件默认保存在 `~/.aws` 文件夹中，有两个 `~/.aws/config` 和 `~/.aws/credentials`。<br>每个中括号的一部分 `[]` 就是一个命名配置文件，可将多个命名配置文件，存储在 `config` 和 `credentials` 文件中。<br><br>config 文件的内容类似如下：<br>```conf<br>[default]<br>region=us-west-2<br>output=json<br>[profile user1]<br>region=us-east-1<br>output=text<br></code></pre></td></tr></table></figure><blockquote><p>在 config 文件中命名配置文件时，请包括前缀词“profile”。</p></blockquote><p>credentials 文件格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs conf">[default]<br>aws_access_key_id=AKIAIOSFODNN7EXAMPLE<br>aws_secret_access_key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY<br>[user1]<br>aws_access_key_id=AKIAI44QH8DHBEXAMPLE<br>aws_secret_access_key=je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY<br></code></pre></td></tr></table></figure><blockquote><p>在 credentials 文件中创建条目时，<strong>请勿</strong>使用单词 profile<br>[default] 配置文件，以在没有显式引用配置文件时使用</p></blockquote><p>可以通过在 aws configure (p. 36) 中使用 –profile 选项或手动通过向 <code>config</code> 和 <code>credentials</code> 文件中添加条目来配置其他配置文件。例如</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">aws <span class="hljs-built_in">config</span> <span class="hljs-comment">--profile profile-name</span><br></code></pre></td></tr></table></figure><p>就会往 <code>config</code> 文件中写入 <code>[profile profile-name]</code> 的配置文件，在 <code>credentials</code> 文件中写入 <code>[profile-name]</code> 的配置文件。</p><p>用别的命令的时候，只需要使用 <code>--profile profile-name</code>  指定配置文件名称就可以使用这个配置文件。</p><h2 id="aws-s3"><a href="#aws-s3" class="headerlink" title="aws s3"></a>aws s3</h2><p>Amazon S3 就是 Amazon Simple Storage Service (Amazon S3)。AWS CLI 提供两个命令来访问 Amazon S3：<br>• s3 – 用于简化常见任务（如创建、操作和删除对象及存储桶）的执行的高级命令。<br>• s3api – 提供对所有 Amazon S3 API 操作的直接访问，使您能够执行高级操作。</p><h3 id="mb-创建存储桶"><a href="#mb-创建存储桶" class="headerlink" title="mb 创建存储桶"></a>mb 创建存储桶</h3><p>使用 s3 mb 命令创建存储桶。存储桶名称必须是全局 唯一的（在所有 Amazon S3 存储桶中都是唯一的）。存储桶名称可以包含<em>小写字母、数字、连字符和点号</em>。存储桶名称只能<em>以字母或数字开头和结尾</em>，连字符或点号后不能跟点号。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 mb &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 mb s3://bucket-name<br></code></pre></td></tr></table></figure><h3 id="ls-列出存储桶和对象"><a href="#ls-列出存储桶和对象" class="headerlink" title="ls 列出存储桶和对象"></a>ls 列出存储桶和对象</h3><p>要列出存储桶、文件夹或对象。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>这个命令默认 <code>endpoint</code> 是 <code>amazon</code> 的，所以用Scaleway的时候要加上 <code>--endpoint-url=https://s3.你的地区.scw.cloud</code> 。</p><p>示例：<br>列出所有存储桶</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> --endpoint-url=https://s3.你的地区.scw.cloud<br></code></pre></td></tr></table></figure><p>命令列出一个存储桶中的所有对象和前缀。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> s3://桶名 --endpoint-url=https://s3.你的地区.scw.cloud<br></code></pre></td></tr></table></figure><p>命令列出一个存储桶中某文件夹中的所有对象（即 <code>桶名</code> 中按前缀 <code>文件夹名/</code> 筛选出的对象）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> s3://桶名/文件夹名 --endpoint-url=https://s3.你的地区.scw.cloud<br></code></pre></td></tr></table></figure><h3 id="rb-删除存储桶"><a href="#rb-删除存储桶" class="headerlink" title="rb 删除存储桶"></a>rb 删除存储桶</h3><p>语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 rb &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>以下示例删除 s3:&#x2F;&#x2F;bucket-name 存储桶。(如果你的桶不是aws的话，记得加上 <code>endpoint</code> )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 rb s3://bucket-name --endpoint-url=https://s3.你的地区.scw.cloud<br></code></pre></td></tr></table></figure><p>默认情况下，存储桶必须为空，此操作才能成功。要删除不为空的存储桶，您必须包含 <code>--force</code> 选项。如<br>果您使用的是受版本控制的存储桶，即其中包含以前删除“但仍保留”的对象，则此命令 不 允许您删除该存储<br>桶。您必须先删除所有内容。</p><h3 id="rm-删除对象"><a href="#rm-删除对象" class="headerlink" title="rm 删除对象"></a>rm 删除对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">rm</span> &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>将从 <code>s3://bucket-name/example</code> 删除 <code>filename.txt</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">rm</span> s3://bucket-name/example/filename.txt --recursive<br></code></pre></td></tr></table></figure><h3 id="mv-移动对象"><a href="#mv-移动对象" class="headerlink" title="mv 移动对象"></a>mv 移动对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">mv</span> &lt;<span class="hljs-built_in">source</span>&gt; &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>将所有对象从 s3:&#x2F;&#x2F;bucket-name&#x2F;example 移动到 s3:&#x2F;&#x2F;my-bucket&#x2F;。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">mv</span> s3://bucket-name/example s3://my-bucket/<br></code></pre></td></tr></table></figure><p>将本地文件从当前工作目录移动到 Amazon S3 存储桶</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">mv</span> filename.txt s3://bucket-name<br></code></pre></td></tr></table></figure><h3 id="cp-复制对象"><a href="#cp-复制对象" class="headerlink" title="cp 复制对象"></a>cp 复制对象</h3><p>将所有对象从 s3:&#x2F;&#x2F;bucket-name&#x2F;example 复制到 s3:&#x2F;&#x2F;my-bucket&#x2F;。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">cp</span> s3://bucket-name/example s3://my-bucket/<br></code></pre></td></tr></table></figure><p>例使用 s3 cp 命令，将本地文件从当前工作目录复制到 Amazon S3 存储桶。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">cp</span> filename.txt s3://bucket-name<br></code></pre></td></tr></table></figure><p>将文件从 Amazon S3 存储桶复制到当前工作目录，其中 .&#x2F; 指定当前的工作目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">cp</span> s3://bucket-name/filename.txt ./<br></code></pre></td></tr></table></figure><p>使用 echo 将文本“hello world”流式传输到 s3:&#x2F;&#x2F;bucket-name&#x2F;filename.txt 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello world&quot;</span> | aws s3 <span class="hljs-built_in">cp</span> - s3://bucket-name/filename.txt<br></code></pre></td></tr></table></figure><p>将 s3:&#x2F;&#x2F;bucket-name&#x2F;filename.txt 文件流式传输到 stdout，并将内容输出到控制台。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">cp</span> s3://bucket-name/filename.txt -<br></code></pre></td></tr></table></figure><h3 id="sync-同步对象"><a href="#sync-同步对象" class="headerlink" title="sync 同步对象"></a>sync 同步对象</h3><p>同步一个存储桶与一个目录中的内容，或者同步两个存储桶中的内容。通常，<code>s3 sync</code> 在源<br>和目标之间<strong>复制缺失或过时的文件或对象</strong>。不过，您还可以提供 <code>--delete</code> 选项来从目标中删除源中不存在<br>的文件或对象。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">sync</span> &lt;<span class="hljs-built_in">source</span>&gt; &lt;target&gt; [--options]<br></code></pre></td></tr></table></figure><p>更新与目标位置中同名文件的大小或修改时间不同的任何文件。输出显示在同步期间执行的操作。(注意，子文件夹也会被同步)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">sync</span> . s3://my-bucket/path<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">// Delete local file<br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">rm</span> ./MyFile1.txt</span><br>// Attempt sync without --delete option - nothing happens<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">sync</span> . s3://my-bucket/path</span><br>// Sync with deletion - object is deleted from bucket<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">sync</span> . s3://my-bucket/path --delete</span><br>delete: s3://my-bucket/path/MyFile1.txt<br>// Delete object from bucket<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">rm</span> s3://my-bucket/path/MySubdirectory/MyFile3.txt</span><br>delete: s3://my-bucket/path/MySubdirectory/MyFile3.txt<br>// Sync with deletion - local file is deleted<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">sync</span> s3://my-bucket/path . --delete</span><br>delete: MySubdirectory\MyFile3.txt<br>// Sync with Infrequent Access storage class<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">aws s3 <span class="hljs-built_in">sync</span> . s3://my-bucket/path --storage-class STANDARD_IA</span><br></code></pre></td></tr></table></figure><h3 id="–options-选项"><a href="#–options-选项" class="headerlink" title="[–options]选项"></a>[–options]选项</h3><h4 id="recursive"><a href="#recursive" class="headerlink" title="recursive"></a>recursive</h4><p>使用此选项时，系统针对所指定目录或前缀下的所有文件或对象执行该命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">rm</span> s3://my-bucket/path --recursive<br></code></pre></td></tr></table></figure><h4 id="acl"><a href="#acl" class="headerlink" title="acl"></a>acl</h4><p><code>sync</code> 和 <code>cp</code> 为复制到 Amazon S3 的文件设置访问权限。<code>--acl</code> 选项接受 <code>private</code>、<code>public-read</code> 和 <code>public-read-write</code> 值。</p><h4 id="exclude-include"><a href="#exclude-include" class="headerlink" title="exclude include"></a>exclude include</h4><p>使用 <code>s3 cp</code>、<code>s3 mv</code>、<code>s3 sync</code> 或 <code>s3 rm</code> 命令时，可以使用 <code>--exclude</code> 或 <code>--include</code> 选项筛选结<br>果。</p><p><code>--exclude</code> 选项将规则设置为仅从命令中排除对象，并且系统将按照指定的顺序应用这些选项。</p><p><code>--include</code> 选项将规则设置为仅包括为命令指定的对象，并且系统将按照指定的顺序应用这些选<br>项。</p><h4 id="–grants"><a href="#–grants" class="headerlink" title="–grants"></a>–grants</h4><p><code>s3 cp</code>、<code>s3 mv</code> 和 <code>s3 sync</code> 命令包括一个 <code>--grants</code> 选项，可用来向指定的用户或组授予对对<br>象的权限。使用以下语法对权限列表设置 <code>--grants</code> 选项。将 <code>Permission</code>、<code>Grantee_Type</code> 和<br><code>Grantee_ID</code> 替换为您自己的值。<br>语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">--grants Permission=Grantee_Type=Grantee_ID<br> [Permission=Grantee_Type=Grantee_ID ...]<br></code></pre></td></tr></table></figure><p>每个值都包含以下元素：<br>• 可可 – 指定授予的权限。可以设置为 read、readacl、writeacl 或 full。<br>• Grantee_Type – 指定如何标识被授权者。可以设置为 uri、emailaddress 或 id。<br>• Grantee_ID – 根据 Grantee_Type.指定被授权者。<br>• uri – 组 URI。有关更多信息，请参阅 谁是授权者？<br>• emailaddress – 账户的电子邮件地址。<br>• id – 账户的规范 ID。</p><h2 id="awscli-plugin-endpoint-插件"><a href="#awscli-plugin-endpoint-插件" class="headerlink" title="awscli-plugin-endpoint 插件"></a>awscli-plugin-endpoint 插件</h2><blockquote><p>Scaleway:<br><a href="https://www.scaleway.com/en/docs/storage/object/api-cli/object-storage-aws-cli/">https://www.scaleway.com/en/docs/storage/object/api-cli/object-storage-aws-cli/</a><br>为了更方便地使用第三方的S3服务商，可以安装插件 <code>awscli-plugin-endpoint</code>。在使用 <code>aws</code> 命令的时候就不需要再指定endpoint。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install awscli-plugin-endpoint<br></code></pre></td></tr></table></figure><p>之后运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws configure <span class="hljs-built_in">set</span> plugins.endpoint awscli_plugin_endpoint<br></code></pre></td></tr></table></figure><p>修改<code>~/.aws/config</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[plugins]<br>endpoint = awscli_plugin_endpoint<br><br>[default]<br>region = nl-ams<br>s3 =<br>  endpoint_url = https://s3.nl-ams.scw.cloud<br>s3api =<br>  endpoint_url = https://s3.nl-ams.scw.cloud<br></code></pre></td></tr></table></figure><h2 id="s3api"><a href="#s3api" class="headerlink" title="s3api"></a>s3api</h2><p>AWS CLI 参考：<br>• aws s3api<br>• aws s3api put-bucket-acl<br>• aws s3api put-bucket-logging</p><p>• aws s3api<br>• aws s3api create-bucket<br>• aws s3api copy-object<br>• aws s3api delete-bucket<br>• aws s3api delete-object<br>• aws s3api head-bucket<br>• aws s3api list-objects<br>• aws s3api put-object</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>定时获取Scaleway的存储桶大小，并通过Bark每日推送到iPhone</title>
    <link href="/2022/05/18/get-s3-storage-size-regularly-and-alert-by-bark/"/>
    <url>/2022/05/18/get-s3-storage-size-regularly-and-alert-by-bark/</url>
    
    <content type="html"><![CDATA[<p>定时获取Scaleway的存储桶大小，并通过Bark每日推送到iPhone端。<del>在存储桶过大的时候报警</del></p><span id="more"></span><blockquote><p>现学的sh，能用就行。<br>获取存储桶大小，并进行每日通知。</p></blockquote><h3 id="通过awscli"><a href="#通过awscli" class="headerlink" title="通过awscli"></a>通过awscli</h3><h4 id="获取存储桶大小"><a href="#获取存储桶大小" class="headerlink" title="获取存储桶大小"></a>获取存储桶大小</h4><blockquote><p>awscli 安装和配置见另一篇文章：<a href="https://pawswrite.xyz/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/">https://pawswrite.xyz/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/</a></p></blockquote><p>用 <code>awscli</code> 有条简单的命令是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">ls</span> s3://桶名 --endpoint-url=https://s3.桶的地区如nl-ams.scw.cloud --recursive --human-readable --summarize | <span class="hljs-built_in">tail</span> -2<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">Total Objects:</span> <span class="hljs-number">107355</span><br>   <span class="hljs-attr">Total Size:</span> <span class="hljs-number">19.5</span> <span class="hljs-string">GiB</span><br></code></pre></td></tr></table></figure><p>这将遍历存储桶中的每个项目，并在最后打印项目总数和总大小，但我们其实只需要知道总大小就行，所以加上 <code>tail -2</code> 只打印最后两行。但有个缺点是这样很慢，会遍历所有的项目。</p><p>我自己大概 <code>20GB</code> ，十万个文件，大概<strong>耗时4分钟</strong>。</p><h4 id="脚本监控并用Bark通知"><a href="#脚本监控并用Bark通知" class="headerlink" title="脚本监控并用Bark通知"></a>脚本监控并用Bark通知</h4><p>可以自己搭建bark-server，确保了数据的安全。也可以使用Bark作者提供的服务端，<code>https://api.day.app</code>，但数据会保留在服务器端的数据库。所以怎么取舍可以看自己。</p><p>创建脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim Scaleway.sh<br></code></pre></td></tr></table></figure><p>复制以下内容，对相应的地方进行更改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span><br><br>media_size=$(aws s3 <span class="hljs-built_in">ls</span> s3://你的桶名 --endpoint-url=https://s3.桶的地区如nl-ams.scw.cloud --recursive --human-readable --summarize | <span class="hljs-built_in">tail</span> -2)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Size calculation done&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$media_size</span><br><br>bark_server=<span class="hljs-string">&quot;你的bark server&quot;</span><br>device_key=<span class="hljs-string">&quot;你的bark客户端的device key&quot;</span><br>bark_url=<span class="hljs-variable">$bark_server</span><span class="hljs-string">&quot;/push&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$bark_url</span><br><br>curl -X <span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-variable">$bark_url</span> \<br>     -H <span class="hljs-string">&#x27;Content-Type: application/json; charset=utf-8&#x27;</span> \<br>     -d <span class="hljs-string">&quot;&#123;</span><br><span class="hljs-string">  \&quot;body\&quot;: \&quot;<span class="hljs-variable">$media_size</span>\&quot;,</span><br><span class="hljs-string">  \&quot;device_key\&quot;: \&quot;<span class="hljs-variable">$device_key</span>\&quot;,</span><br><span class="hljs-string">  \&quot;title\&quot;: \&quot;Scaleway Object Storage Size\&quot;,</span><br><span class="hljs-string">  \&quot;badge\&quot;: 1,</span><br><span class="hljs-string">  \&quot;isArchive\&quot;: 1,</span><br><span class="hljs-string">  \&quot;category\&quot;: \&quot;Scaleway\&quot;,</span><br><span class="hljs-string">  \&quot;sound\&quot;: \&quot;minuet.caf\&quot;,</span><br><span class="hljs-string">  \&quot;icon\&quot;: \&quot;https://avatars.githubusercontent.com/u/5185491?s=200&amp;v=4\&quot;,</span><br><span class="hljs-string">  \&quot;group\&quot;: \&quot;Scaleway\&quot;,</span><br><span class="hljs-string">  \&quot;url\&quot;: \&quot;https://console.scaleway.com/object-storage/buckets\&quot;</span><br><span class="hljs-string">&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>一共需要更改四处，你的桶名，桶的地区（三个，分别是Amsterdam The Netherlands就是nl-ams，Paris就是 fr-pa，Warsaw, Poland就是 pl-waw）<br>然后是 <code>你的bark server</code> 和 <code>你的bark客户端的device key</code> 。这个打开自己iPhone的Bark App看一下首页都有。</p><blockquote><p>Device Key:<br>打开bark，在界面点击☁云朵图案。<br>然后点击要用的服务器，点击 <code>Copy address and key</code>。即可。  </p></blockquote><p>对脚本赋权。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x Scaleway.sh<br></code></pre></td></tr></table></figure><h4 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h4><p>设置定时任务，命令行输入 <code>crontab -e</code>，之后在文件中输入下面命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">00 22 * * * /home/mastodon/scripts/Scaleway.sh &gt;&gt; /home/mastodon/log/Scaleway.<span class="hljs-built_in">log</span> 2&gt;&amp;1<br></code></pre></td></tr></table></figure><p>每天22点执行。记得把脚本路径和日志文件路径改成你自己的。</p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>效果如下：</p><p><img src="/2022/05/18/get-s3-storage-size-regularly-and-alert-by-bark/res1.jpg"></p><p><img src="/2022/05/18/get-s3-storage-size-regularly-and-alert-by-bark/res2.jpg"></p><!-- blank line --><h3 id="通过s3cmd【推荐】"><a href="#通过s3cmd【推荐】" class="headerlink" title="通过s3cmd【推荐】"></a>通过s3cmd【推荐】</h3><blockquote><p>github:<br><a href="https://github.com/s3tools/s3cmd">https://github.com/s3tools/s3cmd</a><br>文档<br><a href="https://s3tools.org/s3_about">https://s3tools.org/s3_about</a></p></blockquote><p>更简单的方法是安装 <code>s3cmd</code> ，它不是  <code>awscli</code> 的所以要另外安装。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install s3cmd<br></code></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>安装以后要配置密钥，就是 <code>Access Key</code> 和 <code>Secret Key</code>。<br>回到根目录，创建配置文件.s3cfg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span><br><span class="hljs-built_in">touch</span> .s3cfg<br></code></pre></td></tr></table></figure><p>输入以下内容吗，记得修改 <code>host_base</code> <code>host_bucket</code> <code>bucket_location</code> <code>access_key</code> <code>secret_key</code> :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs conf">[default]<br># Object Storage Region NL-AMS<br><br>host_base = s3.nl-ams.scw.cloud<br>host_bucket = %(bucket)s.s3.nl-ams.scw.cloud<br>bucket_location = nl-ams<br>use_https = True<br><br># Login credentials<br><br>access_key = &lt;ACCESS_KEY&gt;<br>secret_key = &lt;SECRET_KEY&gt;<br></code></pre></td></tr></table></figure><p>之后就可以使用下面的命令来列举出所有的桶的大小了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">s3cmd <span class="hljs-built_in">du</span> -H<br></code></pre></td></tr></table></figure><p>这将比文件大小的递归总和更快地显示大存储区的大小。因为它会获取实际使用的磁盘空间。<code>-H</code> 可以把桶的大小转换成MB GB这种人类易读的单位。<br>列举桶名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">s3cmd <span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><h4 id="脚本监控并用Bark通知-1"><a href="#脚本监控并用Bark通知-1" class="headerlink" title="脚本监控并用Bark通知"></a>脚本监控并用Bark通知</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S Starting monitering&quot;</span><br><br>media_size=$(s3cmd <span class="hljs-built_in">du</span> -H)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Size calculation done&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$media_size</span><br><br>bark_server=<span class="hljs-string">&quot;你的bark server&quot;</span><br>device_key=<span class="hljs-string">&quot;你的bark客户端的device key&quot;</span><br>bark_url=<span class="hljs-variable">$bark_server</span><span class="hljs-string">&quot;/push&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$bark_url</span><br><br>curl -X <span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-variable">$bark_url</span> \<br>     -H <span class="hljs-string">&#x27;Content-Type: application/json; charset=utf-8&#x27;</span> \<br>     -d <span class="hljs-string">&quot;&#123;</span><br><span class="hljs-string">  \&quot;body\&quot;: \&quot;<span class="hljs-variable">$media_size</span>\&quot;,</span><br><span class="hljs-string">  \&quot;device_key\&quot;: \&quot;<span class="hljs-variable">$device_key</span>\&quot;,</span><br><span class="hljs-string">  \&quot;title\&quot;: \&quot;Scaleway Object Storage Size\&quot;,</span><br><span class="hljs-string">  \&quot;badge\&quot;: 1,</span><br><span class="hljs-string">  \&quot;isArchive\&quot;: 1,</span><br><span class="hljs-string">  \&quot;category\&quot;: \&quot;Scaleway\&quot;,</span><br><span class="hljs-string">  \&quot;sound\&quot;: \&quot;minuet.caf\&quot;,</span><br><span class="hljs-string">  \&quot;icon\&quot;: \&quot;https://avatars.githubusercontent.com/u/5185491?s=200&amp;v=4\&quot;,</span><br><span class="hljs-string">  \&quot;group\&quot;: \&quot;Scaleway\&quot;,</span><br><span class="hljs-string">  \&quot;url\&quot;: \&quot;https://console.scaleway.com/object-storage/buckets\&quot;</span><br><span class="hljs-string">&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>如果你的s3cmd安装在虚拟环境里， media_size 改成下面这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">media_size=$(<span class="hljs-built_in">source</span> ~/miniconda3/bin/activate 你的虚拟环境名;s3cmd <span class="hljs-built_in">du</span> -H)<br></code></pre></td></tr></table></figure><h3 id="通过boto3-调用-s3-列举所有【失败】"><a href="#通过boto3-调用-s3-列举所有【失败】" class="headerlink" title="通过boto3 调用 s3 列举所有【失败】"></a>通过boto3 调用 s3 列举所有【失败】</h3><p>居然有 <code>Maxkeys</code> 的限制啊。默认 <code>Maxkeys</code> 是1000，但是对于动辄六位数的媒体文件，太少了。超过这个数字就贼慢，数字稍微大一点就会报错412 Precondition Failed。没救了，重点是很慢。</p><p>存一下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 获取区域内所有桶名称</span><br>client = boto3.client(<span class="hljs-string">&#x27;s3&#x27;</span>, aws_access_key_id=aws_access_key_id,<br>                      aws_secret_access_key=aws_secret_access_key,<br>                      region_name=region_name, endpoint_url=ENDPOINT, )<br>response = client.list_buckets()<br><span class="hljs-keyword">for</span> bucket <span class="hljs-keyword">in</span> response[<span class="hljs-string">&#x27;Buckets&#x27;</span>]:<br>    bucket_name = bucket[<span class="hljs-string">&#x27;Name&#x27;</span>]<br>    bucket_content = client.list_objects(Bucket=bucket_name, MaxKeys=<span class="hljs-number">10000</span>, )[<span class="hljs-string">&#x27;Contents&#x27;</span>]<br>    bucket_size = <span class="hljs-built_in">sum</span>(obj[<span class="hljs-string">&#x27;Size&#x27;</span>] <span class="hljs-keyword">for</span> obj <span class="hljs-keyword">in</span> bucket_content)<br>    <span class="hljs-built_in">print</span>(bucket_name, bucket_size)<br></code></pre></td></tr></table></figure><h3 id="通过boto3-调用-CloudWatch【失败】"><a href="#通过boto3-调用-CloudWatch【失败】" class="headerlink" title="通过boto3 调用 CloudWatch【失败】"></a>通过boto3 调用 CloudWatch【失败】</h3><p>尝试了一下，Scaleway不支持CLoudwatch，哭哭。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws cloudwatch list-dashboards<br></code></pre></td></tr></table></figure><p>报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs s">An error occurred (Unknown) when calling the ListDashboards operation: Unknown<br></code></pre></td></tr></table></figure><p>python代码也是报一样的错误，去看了Scaleway的文档也是没提到支持CloudWatch，是我太天真。<br>但还是放一下python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-keyword">import</span> boto3<br><br><span class="hljs-comment"># key填写账户生成的，可以去用户账户里面生成</span><br>aws_access_key_id = <span class="hljs-string">&#x27;&#x27;</span><br>aws_secret_access_key = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment"># 桶所在区域</span><br>region_name = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment"># endpoint</span><br>ENDPOINT = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment"># 获取区域内所有桶名称</span><br>client = boto3.client(<span class="hljs-string">&#x27;s3&#x27;</span>, aws_access_key_id=aws_access_key_id,<br>                      aws_secret_access_key=aws_secret_access_key,<br>                      region_name=region_name, endpoint_url=ENDPOINT,)<br>response = client.list_buckets()<br><span class="hljs-comment"># 查看桶的大小要调CloudWatch的接口</span><br>client = boto3.client(<span class="hljs-string">&#x27;cloudwatch&#x27;</span>,<br>                      aws_access_key_id=aws_access_key_id,<br>                      aws_secret_access_key=aws_secret_access_key,<br>                      region_name=region_name, endpoint_url=ENDPOINT,<br>                      )<br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> response[<span class="hljs-string">&#x27;Buckets&#x27;</span>]:<br>    bucketname = name[<span class="hljs-string">&#x27;Name&#x27;</span>]<br><br>    <span class="hljs-comment"># 看了下监控CloudWatch监控的是2天前的数据，这里可以取大点时间范围</span><br>    td = datetime.timedelta(days=<span class="hljs-number">4</span>, seconds=<span class="hljs-number">0</span>, microseconds=<span class="hljs-number">0</span>)<br>    response = client.get_metric_statistics(<br>        Namespace=<span class="hljs-string">&#x27;AWS/S3&#x27;</span>,<br>        MetricName=<span class="hljs-string">&#x27;BucketSizeBytes&#x27;</span>,<br>        <span class="hljs-comment"># 文档参考https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/cloudwatch-monitoring-accessing.html</span><br>        <span class="hljs-comment"># 接口格式参考https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/cloudwatch.html#CloudWatch.Client.get_metric_statistics</span><br>        Dimensions=[<br>            &#123;<br>                <span class="hljs-string">&#x27;Name&#x27;</span>: <span class="hljs-string">&#x27;BucketName&#x27;</span>,<br>                <span class="hljs-string">&#x27;Value&#x27;</span>: bucketname<br>            &#125;,<br>            &#123;<br>                <span class="hljs-string">&#x27;Name&#x27;</span>: <span class="hljs-string">&#x27;StorageType&#x27;</span>,<br>                <span class="hljs-string">&#x27;Value&#x27;</span>: <span class="hljs-string">&#x27;StandardStorage&#x27;</span><br>            &#125;,<br>        ],<br>        StartTime=(datetime.datetime.utcnow() - td).isoformat(),<br>        EndTime=datetime.datetime.utcnow().isoformat(),<br>        <span class="hljs-comment"># 这个是间隔时间 默认单位是S 86400是取1天</span><br>        Period=<span class="hljs-number">86400</span>,<br>        Statistics=[<br>            <span class="hljs-string">&#x27;Average&#x27;</span>,<br>        ],<br>        Unit=<span class="hljs-string">&#x27;Bytes&#x27;</span>,<br>    )<br>    <span class="hljs-comment"># bytes换成GB TB查看 有的桶太小了就直接过滤了懒的看了</span><br>    <span class="hljs-keyword">try</span>:<br>        standardstorage_size = response[<span class="hljs-string">&#x27;Datapoints&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;Average&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-comment"># print(bucketname,&#x27;%.2fTB&#x27;%(standardstorage_size/1024/1024/1024/1024))</span><br>    <span class="hljs-built_in">print</span>(bucketname, <span class="hljs-string">&#x27;%.2fGB&#x27;</span> % (standardstorage_size / <span class="hljs-number">1024</span> / <span class="hljs-number">1024</span> / <span class="hljs-number">1024</span>))<br></code></pre></td></tr></table></figure><blockquote><p>参考文章：<br><a href="https://www.howtogeek.com/devops/how-to-get-the-size-of-an-amazon-s3-bucket/">https://www.howtogeek.com/devops/how-to-get-the-size-of-an-amazon-s3-bucket/</a></p></blockquote><!-- ```bash``` -->]]></content>
    
    
    <categories>
      
      <category>长毛象运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>Object Storage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>部署自己的Bark服务端</title>
    <link href="/2022/05/17/set-up-your-own-bark-server/"/>
    <url>/2022/05/17/set-up-your-own-bark-server/</url>
    
    <content type="html"><![CDATA[<p>Bark是一款开源的消息推送服务，用于给 iPhone 发送自定义的内容，支持文字和链接。我们可以使用Bark作者Fin提供的服务端来发送通知，也可以使用别人的。但通知过程所有数据都会保存在服务器，这样并<strong>不安全</strong>。通过部署自己的 Bark 服务端，我们可以安全地推送一些敏感信息。部署自己的 <code>bark-server</code>，来进行消息提醒。Bark 分为客户端和服务端。其中，客户端用于接收消息；服务端用于推送消息。</p><span id="more"></span><p>官方项目地址：</p><blockquote><p><a href="https://github.com/Finb/bark-server">https://github.com/Finb/bark-server</a><br><a href="https://github.com/Finb/Bark">https://github.com/Finb/Bark</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>最简单的，docker部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -dt --name bark -p 8080:8080 -v `<span class="hljs-built_in">pwd</span>`/bark-data:/data finab/bark-server<br></code></pre></td></tr></table></figure><p>或者docker-compose启动，方便之后修改参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> bark-server &amp;&amp; <span class="hljs-built_in">cd</span> bark-server<br>curl -sL https://git.io/JvSRl &gt; docker-compose.yaml<br>docker-compose up -d<br></code></pre></td></tr></table></figure><h3 id="【可选】健康检查"><a href="#【可选】健康检查" class="headerlink" title="【可选】健康检查"></a>【可选】健康检查</h3><p>为了监控，增加了一个健康检查，先修改<code>docker-compose.yml</code>文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.8&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">bark-server:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">finab/bark-server</span><br>    <span class="hljs-attr">build:</span><br>      <span class="hljs-attr">context:</span> <span class="hljs-string">./</span><br>      <span class="hljs-attr">dockerfile:</span> <span class="hljs-string">Dockerfile</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">bark-server</span><br>    <span class="hljs-attr">healthcheck:</span><br>      <span class="hljs-attr">test:</span> <span class="hljs-string">curl</span> <span class="hljs-string">http://127.0.0.1:8080/healthz</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./data:/data</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8080:8080&quot;</span><br></code></pre></td></tr></table></figure><p>但是原镜像是没有curl这个命令的，我们需要加上，所以创建Dockerfile文件，写入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">FROM finab/bark-server<br>RUN apk --update --no-cache add curl<br></code></pre></td></tr></table></figure><p>然后启动即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d --build<br></code></pre></td></tr></table></figure><p>用<code>docker ps</code>查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">CONTAINER ID   IMAGE               COMMAND         CREATED         STATUS                   PORTS                                       NAMES<br>3dba0f99f5ea   finab/bark-server   &quot;bark-server&quot;   4 minutes ago   Up 4 minutes (healthy)   0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp   bark-server<br></code></pre></td></tr></table></figure><h2 id="打开防火墙"><a href="#打开防火墙" class="headerlink" title="打开防火墙"></a>打开防火墙</h2><p>如果你装了防火墙的话，不要忘记放开端口，否则不能外网访问：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --zone=public --add-port=8080/tcp<br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><p>iptables是另外的方法。</p><h2 id="检查可用性"><a href="#检查可用性" class="headerlink" title="检查可用性"></a>检查可用性</h2><p>用 <code>safari</code> ，在网址一栏输入 <code>http://你的ip:8080/ping</code> 打开，看是否返回类似下面的信息：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">200</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;success&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;timestamp&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1652768076</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/05/17/set-up-your-own-bark-server/1.jpg"></p><p>或者输入 <code>http://你的ip:8080/healthz</code> ，看网页是否返回 <code>ok</code> 。</p><p><img src="/2022/05/17/set-up-your-own-bark-server/2.jpg"></p><h2 id="添加nginx反代"><a href="#添加nginx反代" class="headerlink" title="添加nginx反代"></a>添加nginx反代</h2><p>用IP访问确实难看，换成域名访问还需要用nginx反代，这里准备一个域名，解析到你的服务器IP。<br>创建nginx配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/bark.conf<br></code></pre></td></tr></table></figure><p>填入一下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs conf">server &#123;<br>    listen 80;<br>    listen [::]:80;<br>    # Replace bark.app.dev with your real domain name.<br>    server_name bark.app.dev;<br><br>    return 301 https://$host$request_uri;<br>&#125;<br><br>server &#123;<br>    listen 443 ssl http2;<br>    listen [::]:443 ssl http2;<br>    # Replace bark.app.dev with your real domain name.<br>    server_name bark.app.dev;<br><br>    # ssl_certificate /path/to/signed_cert_plus_intermediates;<br>    # ssl_certificate_key /path/to/private_key;<br>    ssl_session_timeout 1d;<br>    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions<br>    ssl_session_tickets off;<br><br>    # modern configuration<br>    ssl_protocols TLSv1.3;<br>    ssl_prefer_server_ciphers off;<br><br>    # HSTS (ngx_http_headers_module is required) (63072000 seconds)<br>    add_header Strict-Transport-Security &quot;max-age=63072000&quot; always;<br><br>    # OCSP stapling<br>    ssl_stapling on;<br>    ssl_stapling_verify on;<br><br>    # verify chain of trust of OCSP response using Root CA and Intermediate certs<br>    # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;<br><br>    # replace with the IP address of your resolver<br>    #resolver 127.0.0.1;<br><br>    location / &#123;<br><br>        log_not_found on;<br>        # Replace http://192.168.1.123:8080 with the listening address of the bark server.<br>        proxy_pass http://192.168.1.123:8080;<br><br>        proxy_read_timeout 300;<br>        proxy_connect_timeout 300;<br>        proxy_redirect off;<br><br>        proxy_set_header Host              $host;<br>        proxy_set_header X-Forwarded-Proto $scheme;<br>        proxy_set_header X-Real-IP         $remote_addr;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>用 <code>nginx -t</code> 验证一下是否有问题。</p><h2 id="申请SSL证书"><a href="#申请SSL证书" class="headerlink" title="申请SSL证书"></a>申请SSL证书</h2><p>用<a href="https://certbot.eff.org/">certbot</a>申请SSL证书，具体安装看官网👉<a href="https://certbot.eff.org/">certbot</a></p><p>我的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install certbot<br>certbot --nginx<br></code></pre></td></tr></table></figure><p>按照指示来就好。</p><h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><p>下载bark app，打开，点击右上角的 <code>+</code> 号，添加刚刚的域名或者ip</p><p><img src="/2022/05/17/set-up-your-own-bark-server/4.jpg"></p><p>域名格式： <code>https://你的域名</code> ，比如说 <code>https://api2.day.app</code> 。</p><p>ip格式： <code>http://你的ip:你的端口</code> ，比如说 <code>https://123.45.67.89:8080</code> 。</p><p>之后回到首页，点击 <code>注册设备</code> 获取你的 <code>Device Key</code></p><p><img src="/2022/05/17/set-up-your-own-bark-server/3.png"></p><h2 id="获取key"><a href="#获取key" class="headerlink" title="获取key"></a>获取key</h2><p>打开bark，在界面点击☁云朵图案。</p><p><img src="/2022/05/17/set-up-your-own-bark-server/server.jpg"></p><p>然后点击要用的服务器，点击 <code>Copy address and key</code>。即可。</p><p><img src="/2022/05/17/set-up-your-own-bark-server/key.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【个人笔记】将媒体文件同步到Scaleway存储桶（Docker部署长毛象）</title>
    <link href="/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/"/>
    <url>/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/</url>
    
    <content type="html"><![CDATA[<p>用<strong>docker</strong>部署站点的情况下，将媒体文件同步到Scaleway存储桶。本文仅作个人笔记与备忘用，非原创。</p><span id="more"></span><p>参考了以下文章，表示感谢：</p><blockquote><p><a href="https://pullopen.github.io/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/2020/07/22/Move-mastodon-media-to-Scaleway.html">https://pullopen.github.io/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/2020/07/22/Move-mastodon-media-to-Scaleway.html</a><br><a href="https://www.notion.so/3f645c4a2ab14f34aef37703ee286d3a">https://www.notion.so/3f645c4a2ab14f34aef37703ee286d3a</a></p></blockquote><!-- ## 创建储存库注册Scaleway。注册完毕后，在控制面板右上角点击Create，选择 `Create an OS Bucket`，开始创建。命名，选择地区，公开性选择Public，创建。 --><h3 id="关于地区"><a href="#关于地区" class="headerlink" title="关于地区"></a>关于地区</h3><p>Scaleway ，该服务商提供如下位置的节点：</p><ul><li>Amsterdam, The Netherlands:<ul><li>Region: <code>nl-ams</code></li><li>Endpoint: <code>https://s3.nl-ams.scw.cloud</code></li></ul></li><li>Paris, France:<ul><li>Region: <code>fr-par</code></li><li>Endpoint: <code>https://s3.fr-par.scw.cloud</code></li></ul></li><li>Warsaw, Poland:<ul><li>Region: <code>pl-waw</code></li><li>Endpoint: <code>https://s3.pl-waw.scw.cloud/</code></li></ul></li></ul><p>我们可以登录长毛象服务器的 SSH，利用 Ping 命令来测试从长毛象服务器到外部存储节点的延迟，Ping 的结果数值越低则延迟越小。</p><p>例如你想要测试到 <code>[s3.nl-ams.scw.cloud](http://s3.nl-ams.scw.cloud)</code> 的延迟，则输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping s3.nl-ams.scw.cloud<br></code></pre></td></tr></table></figure><p>使用 Ctrl + C 停止发送 Ping 请求。</p><p>比如说 <code>mstdn.homes</code> 到 <code>s3.nl-ams.scw.cloud</code> 的延迟最低。(我尽力了)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ping s3.nl-ams.scw.cloud</span><br>PING s3.nl-ams.scw.cloud (163.172.208.8) 56(84) bytes of data.<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=1 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=2 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=3 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=4 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=5 ttl=51 time=231 ms<br>64 bytes from 163.172.208.8 (163.172.208.8): icmp_seq=6 ttl=51 time=231 ms<br></code></pre></td></tr></table></figure><h2 id="创建-Bucket"><a href="#创建-Bucket" class="headerlink" title="创建 Bucket"></a>创建 Bucket</h2><p>注册 Scaleway 账户后，点击右上角的 <code>Create</code> 按钮，创建一个 Bucket：</p><ul><li>Name your bucket<ul><li>如果使用自定义域名绑定储存桶，<strong>储存桶的名称务必填写媒体服务的子域名</strong>，如  <strong>[i.mstdn.homes]</strong> 或 <strong>media.mstdn.homes</strong> 等，便于 <code>Cloudflare</code> 的绑定。</li><li>本教程中，因为我们要绑定 media.mstdn.homes 作为媒体域名，我们将储存桶命名为 media.mstdn.homes。</li></ul></li><li>Choose a Region<ul><li>选择一个距离你的长毛象服务器位置最近的地点（见上方如何选择节点）</li></ul></li><li>Visibility<ul><li>设置为 Private。请不要设置为 Public，否则任何人都可以看到媒体文件列表。</li></ul></li></ul><p><img src="/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/create.png"></p><h2 id="获取API-key"><a href="#获取API-key" class="headerlink" title="获取API key"></a>获取API key</h2><p>创建 Bucket 成功后，点击右上角账户名 &gt; Credentials 获取 API Key。  </p><p><img src="/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/API.png">  </p><p>你会得到一组密钥，只会显示一次，请立即记录下来。</p><h2 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h2><p>回到长毛象服务器的 SSH，编辑长毛象配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /home/mastodon/mastodon/.env.production<br></code></pre></td></tr></table></figure><p>添加以下内容，注意替换为你的 Bucket 密钥信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">S3_ENABLED=<span class="hljs-literal">true</span><br>S3_BUCKET=你的储存桶名字<br>AWS_ACCESS_KEY_ID=你的_ACCESS_KEY<br>AWS_SECRET_ACCESS_KEY=你的_SECRET_ACCESS<br>S3_REGION=你的储存桶地区<br>S3_PROTOCOL=https<br>S3_HOSTNAME=你的储存桶地区地址<br>S3_ENDPOINT=https://你的储存桶地区地址/<br>S3_ALIAS_HOST=你的Cloudflare储存桶域名（可选）<br></code></pre></td></tr></table></figure><p>不填写<code>S3_ALIAS_HOST</code>的话，会直接从Scaleway的endpoint拉取媒体文件，但是这样从国内访问非常非常慢。用了<code>S3_ALIAS_HOST</code>可以加上Cloudflare的CDN，会快一些。</p><!-- > 如果填写S3_ALIAS_HOST出现S3_ALIAS_HOST `NET::ERR_CERT_COMMON_NAME_INVALID`的问题还没搞懂为什么。> 相关文章：https://www.h3xed.com/web-development/using-https-with-amazon-s3-and-your-domain --><p>在本例中，我们填写的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">S3_ENABLED=<span class="hljs-literal">true</span><br>S3_BUCKET=media.mstdn.homes<br>AWS_ACCESS_KEY_ID=xxxxxxxxxxxxx<br>AWS_SECRET_ACCESS_KEY=yyyyyyyyyyyyyyyyy<br>S3_REGION=nl-ams<br>S3_PROTOCOL=https<br>S3_HOSTNAME=s3.nl-ams.scw.cloud<br>S3_ENDPOINT=https://s3.nl-ams.scw.cloud<br>S3_ALIAS_HOST=media.mstdn.homes<br></code></pre></td></tr></table></figure><ul><li><p>S3_BUCKET</p><ul><li>填写的是我们创建的桶名称</li><li>如果使用 Cloudflare，需要以绑定 Cloudflare 的存储桶域名一致</li></ul></li><li><p>AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY</p><ul><li>XXXXXXXXXX 和 YYYYYYYYYY 分别是我们刚刚在 Credential 页面获取的 Key 和 Secret。</li></ul></li><li><p>S3_REGION</p><p>  按地区，以 Scaleway 为例：</p><ul><li><p>Amsterdam, The Netherlands 节点:</p><ul><li>S3_REGION 填写: <code>nl-ams</code></li><li>S3_HOSTNAME 填写: <code>s3.nl-ams.scw.cloud</code></li></ul></li><li><p>Paris, France 节点:</p><ul><li>S3_REGION 填写: <code>fr-par</code></li><li>S3_HOSTNAME 填写: <code>s3.fr-par.scw.cloud</code></li></ul></li><li><p>Warsaw, Poland 节点:</p><ul><li>S3_REGION 填写: <code>pl-waw</code></li><li>S3_HOSTNAME 填写: <code>s3.pl-waw.scw.cloud</code></li></ul></li><li><p>S3_ALIAS_HOST:</p><ul><li>填写了我们绑定 Cloudflare 的存储桶域名</li></ul></li></ul></li></ul><p>编辑完成后，使用 ctrl + X 退出，按 Y 、回车保存。</p><p>保存后，重启 Mastodon：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">【不适用】<br>systemctl restart mastodon-web mastodon-sidekiq mastodon-streaming<br></code></pre></td></tr></table></figure><p>【docker适用】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home/mastodon/mastodon<br>docker-compose down<br>docker-compose up -d<br><br>docker-compose run --<span class="hljs-built_in">rm</span> web bin/tootctl search deploy<br></code></pre></td></tr></table></figure><h2 id="绑定-Cloudflare"><a href="#绑定-Cloudflare" class="headerlink" title="绑定 Cloudflare"></a>绑定 Cloudflare</h2><p>添加一条 CNAME 记录指向我们刚创建的存储桶：</p><p>目标为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Bucket名称.s3.地区.scw.cloud <br></code></pre></td></tr></table></figure><p>你也可以在 Scaleway 面板的 Bucket Settings 标签页中找到目标地址：</p><p><img src="/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/url.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/cb8fd59b-3b61-4b9d-a7b0-eefe63d8b0b9/Untitled.png"></p><p>Cloudflare 面板 &gt; DNS &gt; 添加记录 &gt; CNAME，填入名称和目标，点亮代理状态：<br><img src="/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/dns.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6a718d17-3461-4247-b771-d9ff9bb082c1/Untitled.png"></p><h2 id="Cloudflare-页面规则"><a href="#Cloudflare-页面规则" class="headerlink" title="Cloudflare 页面规则"></a>Cloudflare 页面规则</h2><p>添加 DNS 记录后，可以创建页面规则，加大力度缓存媒体文件。特别是对于流量收费的存储服务，可以大大降低成本。</p><p><img src="/2022/05/17/Upload-Mastodon-Media-Files-to-Scaleway/rules.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/eca960ce-780e-446f-a2da-633aa926037c/Untitled.png"></p><p>发一张图片，确保图片可以正常上传、显示。</p><!-- ![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/051578f3-18df-4ab7-9fa2-49608b812570/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/051578f3-18df-4ab7-9fa2-49608b812570/Untitled.png) --><p>Enjoy ~</p><h2 id="迁移已有媒体文件"><a href="#迁移已有媒体文件" class="headerlink" title="迁移已有媒体文件"></a>迁移已有媒体文件</h2><h3 id="安装并调试Aws-Cli"><a href="#安装并调试Aws-Cli" class="headerlink" title="安装并调试Aws-Cli"></a>安装并调试Aws-Cli</h3><p>打开服务器，进入root用户。安装 <code>awscli</code>。</p><p>aws官方文档如下：<br><a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html">https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl <span class="hljs-string">&quot;https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip&quot;</span> -o <span class="hljs-string">&quot;awscliv2.zip&quot;</span><br>unzip awscliv2.zip<br>sudo ./aws/install<br></code></pre></td></tr></table></figure><p>安装完会显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">You can now run: /usr/local/bin/aws --version<br></code></pre></td></tr></table></figure><p>每次要<code>/usr/local/bin/aws</code>来使用<code>aws</code>很麻烦。为了方便我们创建软链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /usr/local/bin/aws /usr/bin/aws<br></code></pre></td></tr></table></figure><p>就可以直接使用aws了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws configure<br></code></pre></td></tr></table></figure><p>按指示依次输入Access Key和Secret Key。Region部分，如果你创建时选择的是巴黎则填写fr-par，阿姆斯特丹则填写nl-ams。Default output format直接回车即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs conf">AWS Access Key ID [None]: <br>AWS Secret Access Key [None]: <br>Default region name [None]: nl-ams<br>Default output format [None]: <br></code></pre></td></tr></table></figure><h3 id="迁移原来的文件！"><a href="#迁移原来的文件！" class="headerlink" title="迁移原来的文件！"></a>迁移原来的文件！</h3><p>进入<code>mastodon</code>文件夹，先清理一下文件，运行同步命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">sync</span> public/system s3://media.mstdn.homes --endpoint-url=https://s3.nl-ams.scw.cloud --acl public-read<br></code></pre></td></tr></table></figure><p>因为运行时间可能比较长，可以挂在后台运行，将日志文件输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">aws s3 <span class="hljs-built_in">sync</span> public/system s3://mediafiles.mstdn.homes --endpoint-url=https://s3.nl-ams.scw.cloud --acl public-read &gt;&gt; /home/mastodon/log/sync.log &amp;<br></code></pre></td></tr></table></figure><blockquote><p>如果迁移了原来的文件却发现以前的媒体文件打不开，很可能是 <code>--acl public-read</code> 参数没有加~</p></blockquote><p>如果一切正常，就可以删除<code>public/system</code>文件夹了~</p>]]></content>
    
    
    <categories>
      
      <category>长毛象</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>长毛象</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>rclone自动备份数据库</title>
    <link href="/2022/05/17/mastodon-maintenance/"/>
    <url>/2022/05/17/mastodon-maintenance/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ba247547c32189216408dd6480329a8885f5f8d9ef1a3021ce8945918891b462">6d05a0a7f8f5f26ac1a0f788610c8c39bc22bdfc2194d0c85556f9f3953c2d8d3a36f04bc5049e0e30304038eec0cae91c11c1f0657b3ee37bbcd07e7fe8ad407961e31394cc215f786ea8bc3c14efbfef639b6b3c73dae3b90e1d2b5726408da74ccbfead49c638371927536b92405cbb076aaf742803f2f432fac588f7f1aa72cf7ac8784495883a9d3a07267d52c5cd161a7c8b6a43bd671dfbbee1a01f5d1058d6fd908d4ed67705b12cdbc778cf2f1a9aef1f5351766ee13cc00dc247003923660faa812d3bcff5bbd21a70e0ccfab38f036ec8ebd34926a5b461617a4ee38f28d9e7b085a10c1cf0dfb07fafa2f6925c9ca5e9a89ad8353a4b79e400a292522a0f89d77cc20bc40d488192096107210b908d5218de854ead430dd18de341eed1e8daf6c6e6abc1b8ea3cd7b8d519798b1dbcda566430225cda4d0a3ec6586876bdb49f8a0e9082d41c5a89ed5a0345647cf98e1f2549e2573913e6e08c66d9d897216b558963f0d434e5a33239d5af5ebc7a884660d28e5fab1a6c2f07630d3c2028ff123de90e3283ddb134da79508d54d2f32698357341fbb2ed031d7a798e953edb897fce1b7e017364f1076120f3481e00904711f02410a4580ef6275f99504604c7273b067f9d13cd03b30135f989caa65f0784f6c50820a33bb8e482c50f483bfa3b75d3545a89fe7d80e5bd0fd3e2af75772efa7c118c8eb722096c7e71b7281669d9c5b94a3f2616279befcf95a74ee8e19fad0bdd1c5d943893ecf255b32fbb818c8939d7628468ee7144a2db967e940c66f33e80da3f42d3ea391f3e82ee2d61802d5e5b53383dbd308ed68a3763b3433268d4c1a5d010861bab171f56be1680bd1416e8f7c55774629bd7bd696ed622372341bfc9f4fae81f5cc6e0f921b814ccb157e202eac33c3edc15f64aa13d8e468e55de11328cfadab1feb72fa456748527b31891ecbd518e920dbe36feccb9979442a86e685fde90085e0d4e54ee17b31bdd697bc84556dd0bffd6a3c220c16d772d252ac84438d5968c03d518e822a80d9c7bb8290225aae95c28875802403a13464ac8d25c244b8586fd2de68e215f78d62c5aaf93949919a5229c36fefc5b91185eaeaed7f981e4c7fc41148489e9626eb0b56041e7fd98904beea99341d11e112249ac0ca05bce6ca880527b90ba528cee3f4b3a6143446086ab4bcfab440710e5c0f49308f83cc7ed71a6fdb2e2f78922a782d45fd8cae5aaa4045dcfb12b77bc8f8632b400fa4425e2804afdcfd90ae686d5c862ce6ad372c24b8c8ac0b114adb2d7fd81658ef325c36af91a905aebb0b9ea050bcb59ae261445fbaf2267ba101a27cc4cbd68442850969ea0e4d4e6a8cea0e1be575ce831a63388aced1d9f20e2c35aa854a50c0bf6eec6cca2a482c11ee67b439ba7e8c7ff5b725d74763771fb1914f2bb2ce82fe034613211443c9c4464cf957bedb4660214cf110df91afe44a36c23f0ec266d6316ff58ed1f3f9cca4acd89f0a20e3ca24bed363edc51dd70a2186334cd32519bf7c4a29a5b87ece71443c5fe82508f18813473a2f5173f369c7b69fef21c9a3b65730c75163213beb143ba20b2da953553fc6d7a721272f8a4d8129d1e7952be76ce7ec758549fb9d8cf5acc0d60f23bd0a7e7cddc14b9093407dc83c85bad3e0091404fb5c8a58e38efb1ba903ee17a48793cfb5dfed2b0bd0ce9c64728618eecbfe9e4a4ad9c5ab57e7f39e0ea7c0e511bfc514d0aaef70158ec7f0307f4593f0429d1f332b88f0defa229bc43ea84ae7bde77d3d1bac05df283d4da120c4579f7701dd50ff355bca1eb9aa2317c9aee8dcf554907234386662e83011e340ed00e34aae61ba47a83e1ab976f25e099136550ab2255c532071fba7c19470642fcaa4a33f98d43dd544d265966d61c261b1f1c9a659c4a294c4d25eec648dc834dbe9903f7466262e6784ef940cbb66c154b7dfbee4bc6866739526795ec8beaf14e4d7c20e43cadaca2f4de97b8cdaf8f6fe7f54f2089e41e1037a3ca66775c2b8bac1e6c7f9e9d897d86823e99d127d8e7f61bff3c40a9d9c19b86d2ff93a2796695c800f1fecfe1184db3e3481de0b25fc7a7226a0d373c868a0ac4b5a3e52fad20b99a2879c447dd84c8f29d165f9e2111d0221756166a43d3d9d4ba94af8e3667fb59ff0a78eacdb2cd294a754646bea4ada160186bcdfd6ef4682c050c618d7cc3193654a7741bd3188ffe6543a8ae4a6921a1d49b7b67aa8e54e476410578e9888c4a6a88b20a959b60bb878011a9bcaceb67c822ad6079f5a7f6a4c17a04fc51d5b82e7a33a97f0e86de20a10eb4af2678afc1be6ae354cff92a4ceffeb6f61d29f76aba8a598e53ea1e9fd6074897241e8d1c9eca514a187a7e991c310d956075bd05e6826c454f50dd1abbc657bb63f8c935ebf8b4386faba242c2039709aa2d8ec4272d7405c413ad3fc41f4e1cbcc10598c42cba67973b5db3a293e3ffa78be8249f63ad2948fd8e5e88c731183c9e9590b68b2461dc144bca21698035d17f8123c83b2d2ce199025a401dea67da8b1993dc3e439918078d4735e26aed24ddadebc042e48961df8ac5995fe409dee2af3836457cbc515f6bf9c9aa9339d12decd50990ed1999f86ee02b4154b57e76751e444417d66e0d58d49358a6a497d3d847c8c54401dde6b8a40baf6c1f5baff40d8464e7d4d2c0dde6239e5132d22f12ff270d889dfd8c6d5551420ff9c4f1935fbeceae805deeb3d1d16524b6c0d811ef2cc67fefb886ff2a50b54f828b6030b756fdaf9a44f8d17ebf35d142ca221c471479c27c4184a8c895dfb55754fe9a96e54b726d008b5de5557f02c1878744d9b8dcbd5e6f4c84d9c848decc82e4bd1adf73d82d9ebe096dce565da6b501e6223c40262dac52ec7bb34d195a4e1ce070b8dec43dcb43640868bbc1beb05e0033ccb5985ea0882e9aa3b4105b833c9dfb23641be30bb5df82c4c546d165f295cbb68a62cb57fd22d5c140cbed9f976e657f02fdb7563e5958665db89808cd3be9dea9ae30e2ac1abc5511fa79de593137c56dfe710a8eafdddcb1cb1b69b735839a8db59d47f5419f825d11719c605b1e3163a63d62624ac5d83912313f9efdc6927ae1ec7a677316491f0988791317712a640a11b75015f9812e94679f9f26e6f8c67586bdbbadf016db5e00121b571d75748da00f4ac0d799c4698b096512f594b7185e4a076ef8a161993c407ed7c04c16e0a12c4da67eb375309fbf195774a1157d8818e8b9d1211829a20d2f8870d5d180b2e58c9b3da624525d8ec127a0e02f245e8389a7443744990b7320559c2c6a4a08a9dad96c2b717f54d2589fe5692cc45581e0fd5958deb6e1a2099864383b1103c93d074c401d7894ebcab9969f6bab06a87191c4668f9107e604ca4d185e6c8fc690ed9ab5319485e3727eda5702d232f7b63d33204ab825c546055bb787a62747c54ca20bde09ba0f14846cee4114ef13ec140b9731d2270e1d1b13cf01c3681c38c3852efcfa0f8f75a0d59b96658343ece96f5d1485ec182b6206bc6ff87f5d0607134a547a35fd94f4218c6e24d0b17bce08e0a4db1f78138f727f6c4c8edec23ff79c3d3be898ee8547756ecad87a631a390ed7de2aad8892224bf658af14d340330ee50e849b68ddd89aa6e9811e8313adea16684425c76a72f5807caf2d7913d187cddf0c4a5bb8763ad25df3a4281a80b13a14267de73c0d6b8554a6c9a54ac6a7d26d19060d5cfc78b1ca45554e1799005e37203eb92cb605c907f9da2465471168d83bdb11e280d28f81ab0e7da1fbdfe3212d88c6d22d9c43b13ab24054c38d75e0a1255e67b13f01fb6d2e9fe28f4deffa57932df32b1f8b4f933253fb7a730cf749ee7b7f849e1b578c0d8fa605c9b67345cc56f67ef61c6ad6580521c3e8fca7166b2eec02c003af0f2ace0ce83278925df0c8b1cd5aabacb94c1144a71bd71985f48b8ba32762cf0677ae6be68f8d3984f8d5d4c6638564a8c3c9f88c285529b7707776ea98af2727e1a383ed17d533a3dbaec281e8fbdbc1047b9f861472a2c86d5921fb8d180699d889b1928d508fbaac78af0b9718dab047c41105044797be41376d0bd059780943194517a1c37031e906b0250825ec11d57af3d7e29c2566fa5a9f784301d42bbd39d8704ce8267e99e31e9604d89eb4b9fa48916157bb9a39f852e99b8d97e8f8282afd21f9f2c312863699be8d5eff486ce91b9fe3fc7fed03135df67a303d88995de272ffd6218f6dee5f44c922c6ff3b7e935a0ddea4b0589650bbfa496693a0556c09b5d4d3298cfca6dfcf9afa95e47f37d77f825c78bce89c5eaa3e06546ebb91502bca6d8702f5bd729f4480bfcf27e467e1af499a55785d525d4d2e0cdbe30649b17c80b68601ea48097e72821114114e0dbe2121eec205bdc190e0777b9e0a1a6c4e5b4f9b0df43a0d185868f347f42c7f100313633380609ed1ecf34c9a72570574157930e0d809a30c90c57fac0b50184b2b7aacd33be2f156e2a91360702106ffdf9a845361c7f11c18fc80e47baf1123a6603de57c9103b6409d6035c28ff1dd36f9767c6f3bd4cc14d7073778042e80ea1a042f00cd034e560e8780819c498351d5336578c55a1d76e8ae8a6968b39df00111f5ba26a7096bdce05bfd0a8bb0f60493336301560e9dac30e3c49bf77c68c39303b291e7afa6dc60ee16dcffa3bad19f0712c2b1ee3ccdf26775855360aa8ef14f3c1d4f74c95080ce0b41165c5c91223b8556bfa8a1535fc1cc83ce7ef0d89671be75547b3a39cb5271f639cb2f4d1d63f94eba663c833d9d5fd10b8c94219d842690496db55ceacd6c17f86156cf1dff7e8577690422661c600af5d57de56e4dcd64d45ae87f53c20aadedaad95afc7d780bb9e1f7d56453d7e8c225a2c709f7eb82c52b67abf811527943a3da16ea4ee1a81121ea3c7a009aeae88fb67a33bbb98a9cb250a5d2b5ade0f41f2b03712fbf7d013ba149af8e675a7908bf9b210fa35eb973f12e1bbe288935b2e3cc0d4b3b9fdbf9f12059943be971c966bf9b69a2fc58ea974042449b95269a8cbd1d77c44a69a7161b6da8bbb8d1995eb1342000621fea361c4f98e81894d980bb103302d01c1b9ee28c6b746a92e7668ac5006d1c03ae28cd001d885d4bfffd41789153087e4c220dc2d0f4c7e1c5bc6063abccd721b296dd2c5cb8d5bc7c8b56547cfa8bc594c996ea23b92160b14f176602d62acaf6d2fde220d5712e19e213bcf0ae0b0e3ea8b10e3b9a863fe016c811981e85c5262bd20f553ef4815bfcd372171d0b5f0f3d30fe6bf4af2967c696312966099ed5d3600e40cad7402d5677162bafadc3036ebfc0ba317f3dc84c56774d8ec3d8e097a78c0ae1eccc866cc0b21421a3a81d44f336788d2e7848428f148de60e3644c4557321759c002c6e2e1dfc1fc93059675d1e3b6fae7f763b569d41bdb9bdff72beee1bd104b19efe1088a4753f47f7198e99b3269636164c2623a7725be5910aa157fffeb933f75df4fb6bfb4d84bfb9dbe109637cb38a8bc4851fb8e9d5237e0f40227d0bfbe384e36256e04998ded52c62a1cd1df11feed63bfafe60bcc27eb5bc04b2746efe7df52cc9cf61a1ab5dfd5f2ded45eb57149f567c181a769b7e7dfa35443590be08eb812dbce5bc6924c846166244dcb8a13b62b0052fc411933b051c1305cfce8d49a0375f74969d13496f2972a174808be03c14bdf08a8213cb0294b580d3b65057174b54d8db42b6105e79dc07c5731bebe6cd6d822b46cba358c034085f8651f7aa44921772cfe71b55ec119e93a918c2dc636d3eb4e6dc466945a181916a0bafb66187de0447a0dca64739a4200b8899a3191887bca46115137456f68e1d2c57be94fcf23c63859d3d18a39e88b724dd4cf33318a774b1e45bb513e68476f131ccae65a131b8eec4701e98e15ca64353175f461a9a6c6eb91e85c0df58b04f22855eb2929943008e871bf8488c1c3d024938e6f67bd5733c86d77c87acfcef90058a7ec8369d5da202e06bdc79cd88bc5ceb3baef837aaabe93a6c30a2780ddc75121bf3a350a00e5b7118c39f3d92d314aaba86b4d17c00c7648d19a8db76e1c10325fc988d092816da51e47136275d4cb015a8865456498e6bf5b94a200a7efad5f6c2c86ecb4f279e36dda76e52f93da2356d678191428e81fdcb7e0288cc7b89e2ccb3dbfe4268955b7d3fa76dbeacc60b9dacbafc8ad7cbf3c6bf001ce08221a976a97d81a8f3bf27429551b8df62791f054334902e1010943f5499507f97b73e4d35cf110cfbf7449888b80f5470f6a76eaf466ba38256ea8d9a141778cecd909ec6b49e0eae51f7533bea517f261aa73bd60eebaa9fefc24063231ee28ec78b24bc687491b7ba19b64ad5a0c02af1eb24e0ce46cd5b4af6fd142025e8d9b3b1cc663ba8356bc86156e415cf2f1efe736bcd383f5d557cbf8e2e0b658fd3dff1bef2bcff20c5654c91be62264bb582218588d4c0344c957115d354e8b1c0ab6def1a0109ac701baf341a680e59a92fe80c906ced403d8411440b68b2b12f1b0f3f2ad42efee52f9d63e3db818468e859acf593524c281e824129e80d2ddc7206dbbb54f28e4637f721eb9c7f899c1f071c03c9bdd19231a9d3f7304805f6220bdf338bd1c65ca17a80c8b4a3cb0adbe153dd7a85cad8fc2b011e3f6f56e4ee92e3e4187de20a043bd28b60f9c913e4d0b00a6fc6e86b36207bc4b3892fb7fa3d9f28d826382c71801c517430b221abfa34344b7413f6ae59b57dccb472c2bf08fed020b4cb258fa17c05b01d0d600dc72a0e5280f3c25cafbbdec1ee4f3bdd2f8cdf5cda0084122a9e26c6de92b2bfa1fc5e29905f934acb0221cd9ddd20054ed453728a6fd40132db1dd74a4ae4f8eac704c83fa12648cd44e487e46e63bb036cd10d94ebb4c1f3a378ad1d23bb10b8dee45a7a7667ab1b9a59ceff704f5c8b64397ee179ca21292792b534f5ebf8a3606481a41506c4a17f8a93d682e04accf7d859ad29405cf24d3d5fe2469fc064b80c6899236268966b925ab41417bb09533cea62c5998cc7ef080a499d5a53a1b72e98e49f7aaf4e2a6d6d9bb2e80a471fe8731dd369c9b42de1d04ead34f4d37e37f617321cff35be8e821ea65bfe8f361f6b6b9e608ea3d2f5b1e77e92f1e159ff9b24115e2236846b514246c992f9c2f79dd93cbd8cc82f4e686f051dca922726193228c64b6f0e4a6b80e554acc0b5d0b95469c8dec6d0175f15e037e968418036b6c2fe59adea1ae0ea1629aa64904020eee978990ce9d80fc481c48c400c0eb940f58cd161922e68b7ccdbe03a363d89b682c7a155f094c2dbd2c1b332b8f43e0c3489c000805806f0684d656c9511c63366e6b4ab3660f4bb82ea56ea680d315858c7cb55e7d87d6333e9a1e075894f4841fe7c6a96b47b2576f6a69cd8028ae60cb0bd4d48c91014b920bc734361c0b9933a5bb81196cf71d30e9747d1a320ebb1bc416c6425e580165103948fa0c2cd3d0511866afda5b751a8facabc240b1d7e11f406b3d251eee54961807bde886640914be5fdc5dd81d7b471f9e51231df08aea43eaa17efd920a742e87ccb5daed62783f3eac2f301623a6eba5da160554d570835ba1fd265ae1d2fb117f36fd4a9571edf422e5def62ec9961c63de139dae2c064ccb70a075d8a4492d33eb44b618b10f486a408fee0d684d2962e63fef3fa47e3fe577cfe6851509326fbf0c50ae261a713235130457a67868ef62ea69ccadde8e6d8d3f4845a134beef5f9179a1ce21554094bf00de473c07bb81ba016bac30f06e55ec1ee903f650d310613be075d29c65cdc96aee82867672b86146d6e265fdc235db2b181675eb9c1d14676687c54ce18db74f075e48e7e79bd9178d19d41aff7d7291752aa3406677b60b8275731c87d462838e410f92cf8a25c4908c4c1a1a4fa85a52c33c885146213b4337a0980ba136d36111f71165331a9d6925e334a6afa72649d93870682e9956da0c1abb611bd7f9a07a7b5cbfec7731bef686121fe03b63ccbcd79213000112c32f674f575b56a594ae79826238c2f719e29b5e86fd6dc1df61eb3bc3c248402ed0415e64ac07abbe83b85153dc600b0d77a2acb60671ac8f761d4e7657c15ff87c40e68129bbd99dfba40b135300c55c66ae79a7a85f9534d2aa034a289f7317d72fbdb2ccd6e3a4119cc77fd9db674b6324dde98b5f8a420a5210c01b7e67fc60fbd1a5e407896d077db978a6c2d17c58bb97da48a0691e1b5905aa251e923dd2208260507023c5569a93c00d3090c1c33f9c32e3f8976597be1c0d2f16d7c3203598212bbd8592271b695235b7fe220c2bc5cf97a8e94d5fc85f78ba191319a7f7e776029d26b70d796038568afb70fc664f4313339c23ae286e2550c22fe1c7d190b056a2638811975776b200dda4dc42881033e24cb1eee6ec145991cb85371170a7b5643d10d8a19ce8f21ca159936f0e3a5f54e73563c7a3bce20e98e692b8c32e4f9159880b4f578f20050afdb90e4fa5359154bae4f9d3e636048cc453b2c2db7ee2a10c0aad03bfd16005b29cb2468cfa4ca2a47da5bb26fe5f2729ea695d0a9bf0cf6d8ed1a5ab9e5b486b5eeec0a9e6af2e0a9db4811341287b2bcefef4f257694af87f285dc328fca25059ed05572c35fbaa9b700b526211525b0acd94ecd481f566e8a106f116d78e4b29f2783db590762b24fd890ef31d77f0bcb3d88fa7032050c1e5d119a855a81baecf3d4524ec232d179ef301a32c1e3d225aeaa8e004b40f6217cdc5038f2e1907970e837b6f042e957eb3ca5a2557f7bc82670380e72dfca64d646e30bd71c9b80e483e2848d993e2a7a6de87c9b7d31f2af2e38daa185feeb8483ba72b9fb5bafaf36599c62e64ba6135beaff9aca3e0f8552848b032bd0065108df5b3c4189766cd843d4cb1c0f1ddb0cd44c4ef0bd58495d0e6dfc3b9e6c7b56a8f23cf756ebc147ec7c669046fe1a9188e73a836f5ea27e2b4da06de4e9b9551a4bdfab72cf098801d35eb8acd4d3894b4c3a87421d8b910b0bf8f4227ab0373820866c0176db23e5ef915aebd5bbfa619eab9d5feee887b27658a467c56c0c14be07b491015707ba52ba2d140dbde4f1e804d3164bcdce36d89e3e0615fe2cbaff5f19fe5fffede9389ddfe4565389a88562a96d40e584f592344fa82b0ddc3fe4a0bda6d3b4e2a5d9f770df16f2583f63a9292c5d5e5195f8f3c8eedde4a7e287e31e2f656c4c19fda9af064b323fe02431e386ed9a3f581d8cbf7b2813f444f244cfc4cfc82bf32bad9c51ce504cf8b935cbce9ec0bf4d319395395115aae1bb710c4b8eee732f49d1c5c796d69f1f36f527c3f1504b3d2456cf6b688cb907df26e0360ecb243ee08631426e0c4ca729816922aaee4a01f6abcc2b44f7183b385ea0b1882fa26765527b9ae5c55cfbab97930273cc22f15fa6b4e6c3aa349616af1fe439d61dadd066fcd12f287cfa752e048d656e34d43a89a1790405da4a543dd54050b2713f5b977f76700bcb195bb3d098a3c29271aa8f780d71ad43d33ba597cb1b27f2a31dec20c578c573f7b4117bb550d3d5ca473267e467a286a80c548de18cbff994ff38f3d0f7649f963c3bf61dee95fe35e935b6106e12d30a8a7fa600cf7f30a42ca7d2cce41b96176384ea01fb4e1fb4dd234c0a451d388b249045809aad394fd9c9cf23bb3656b1392fbe0e60fa36f696fd47fa05cae14cb25f3da6d0c322c529d769f9f5b4f0bde29c6be8e9d336c763ee66207528fd4af37809a2eecfb13e6bad8c81950099f6bdf7f03b4f5f2f0f2375ecc4ad91bfa07e6328673b1afbe831675d94776f77bcd2e0cf21d41734be8c78fd4dd52591cf54ea62cf55e46da3966983558c05a5de2612</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>长毛象运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>笔记</tag>
      
      <tag>Notes</tag>
      
      <tag>长毛象运维</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022最新最全GitHub学生包分析</title>
    <link href="/2022/05/13/GitHub-Student-Developer-Pack/"/>
    <url>/2022/05/13/GitHub-Student-Developer-Pack/</url>
    
    <content type="html"><![CDATA[<p>GitHub 学生包有很多福利。最近薅了一个，记录一下包里的内容~</p><span id="more"></span><h2 id="GitHub学生包简介"><a href="#GitHub学生包简介" class="headerlink" title="GitHub学生包简介"></a><code>GitHub</code>学生包简介<img src="https://assets-global.website-files.com/5c7036349b5477bf13f828cf/5d25a8e546c1e328549f9e9b_GitHub%20icon.svg"></h2><p><a href="https://education.github.com/pack">GitHub 学生包</a>，也就是 <code>GitHub Student Developer Pack</code>是面向海内外高校学生的一项福利，一些公司免费提供给学生资源一段时间，或一定量。。不过因为被薅羊毛太过，现在审核很严格，原本白名单学校只需要edu邮箱验证即可，但现在基本都要学生证验证了。所以在校大学生珍惜这个机会，去尝试尝试吧。</p><h2 id="学生包内容简介"><a href="#学生包内容简介" class="headerlink" title="学生包内容简介"></a>学生包内容简介</h2><p>这个包主要由两部分组成，Web 开发简介和虚拟化套件。除此之外还有其他的福利。这里对两个包简要介绍如下。<br><strong>微注</strong>：有用的会在下一部分详细介绍</p><h3 id="Web-开发简介-Intro-to-Web-Dev"><a href="#Web-开发简介-Intro-to-Web-Dev" class="headerlink" title="Web 开发简介 Intro to Web Dev"></a>Web 开发简介 Intro to Web Dev</h3><img alt="Intro to Web Dev logo - purple computer monitor with yellow post-it featuring invertocat logo" class="width-fit experience__header__logo mb-4 mb-sm-0 ml-0 ml-sm-4" width="200" src="https://education.github.com/assets/experience/02/github-web-development-kit-logo-7b7457f9366e7e245815871a994d0e2ebacdbd84549a53182b308d795b46d88d.png"><p>官方介绍：构建下一个网站所需的一切。 在学习 Web 开发基础知识的同时，了解如何设计和构建自己的网站。 无论您目前拥有多少经验或技术知识，Web 开发体验简介都为学生提供了让您走上正轨的工具。</p><p>包内优惠：</p><blockquote><p>🎒表示学生认证期间可享受福利</p></blockquote><table><thead><tr><th align="left">名字</th><th align="left">简介</th><th align="center">时长</th></tr></thead><tbody><tr><td align="left">bootstrap studio</td><td align="left">用于使用 Bootstrap 框架创建响应式网站的桌面应用程序</td><td align="center">🎒</td></tr><tr><td align="left">🔥DigitalOcean</td><td align="left">🖥️云托管商，但注册需信用卡</td><td align="center">$100试用</td></tr><tr><td align="left">🔥JetBrains</td><td align="left">专业桌面 IDE，码农神器</td><td align="center">1年</td></tr><tr><td align="left">👩‍🏫🔥Microsoft Azure</td><td align="left">微软Azure云服务和学习资源</td><td align="center">$100试用</td></tr><tr><td align="left">👩‍🏫educative</td><td align="left">基于文本的交互式课程</td><td align="center">6个月</td></tr><tr><td align="left">Polypane</td><td align="left">从头开始构建的浏览器，用于创建和测试网站和应用</td><td align="center">1年</td></tr><tr><td align="left">Twilio</td><td align="left">将语音、视频和消息传递等功能添加到app的开发者平台</td><td align="center">$50</td></tr><tr><td align="left">Microsoft Visual Studio</td><td align="left">桌面 IDE，码农神器，Visual Studio 社区访问权限</td><td align="center">1 年 Azure 服务</td></tr><tr><td align="left">GitHub Pages</td><td align="left">通过GitHub Pages可以部署静态网站</td><td align="center">本就免费</td></tr><tr><td align="left">👩‍🏫开源课程</td><td align="left"><a href="https://github.com/microsoft/Web-Dev-For-Beginners">JavaScript, CSS, and HTML 基础课程</a></td><td align="center">本就免费</td></tr></tbody></table><h3 id="虚拟化套件-Virtual-Event-Kit"><a href="#虚拟化套件-Virtual-Event-Kit" class="headerlink" title="虚拟化套件 Virtual Event Kit"></a>虚拟化套件 Virtual Event Kit</h3><img alt="Education laptop invertocat" class="width-fit experience__header__logo mb-4 mb-sm-0 ml-0 ml-sm-4" width="288" src="https://education.github.com/assets/experience/01/virtual-event-kit-icon-37a665f41a85865fe51a9db5c9b050f4bdc684d42b379e80688ec078e11a6114.png"><p>官方介绍：虚拟活动所需的一切。 为参与而设计，我们将负责这些工具。 虚拟活动工具包为学生提供了使在线活动变得简单且易于访问的资源。</p><blockquote><p>🎒表示学生认证期间可享受福利</p></blockquote><table><thead><tr><th align="left">名字</th><th align="left">简介</th><th align="center">时长</th></tr></thead><tbody><tr><td align="left">🔥Namecheap</td><td align="left">经济实惠的注册、托管和域管理</td><td align="center">1年的 <code>.me</code> 域名和SSL证书</td></tr><tr><td align="left">🔥Name.com</td><td align="left">域、电子邮件和托管。提供域名注册和高级安全。</td><td align="center">一年</td></tr><tr><td align="left">StreamYard</td><td align="left">专业直播串流平台，提供Essential Plan</td><td align="center">🎒</td></tr><tr><td align="left">Canva</td><td align="left">专业外观的图形和设计编辑器</td><td align="center">12个月</td></tr><tr><td align="left">Discord</td><td align="left"><a href="https://discord.com/template/UqzZCTj2zfwy">黑客马拉松服务器模板</a></td><td align="center">本就免费</td></tr></tbody></table><h3 id="其他福利"><a href="#其他福利" class="headerlink" title="其他福利"></a>其他福利</h3><blockquote><p>🎒表示学生认证期间可享受福利</p></blockquote><table><thead><tr><th align="left">名字</th><th align="left">简介</th><th align="center">时长</th></tr></thead><tbody><tr><td align="left">👩‍🏫<a href="https://frontendmasters.com/welcome/github-student-developers/">FrontendMasters</a></td><td align="left">JavaScript、Node.js 和前端工程课程</td><td align="center">6个月</td></tr><tr><td align="left">👩‍🏫DataCamp</td><td align="left">专业数据科学课程</td><td align="center">3个月</td></tr><tr><td align="left">🔥<a href="#githubpro">GitHub Pro</a></td><td align="left">Pro用户资格</td><td align="center">🎒</td></tr><tr><td align="left">🔥.TECH</td><td align="left"><code>.tech</code>域名注册</td><td align="center">1年 <code>.tech</code>域名，2个免费邮箱</td></tr><tr><td align="left"><a href="#gitlens">GitLens</a></td><td align="left">VS Code 的 Git 扩展</td><td align="center">🎒</td></tr><tr><td align="left"><a href="#gitlens">GitKraken </a></td><td align="left">Git 客户端，提供 GUI 和终端界面。</td><td align="center">🎒</td></tr><tr><td align="left">Polypane</td><td align="left">功能强大的浏览器和开发工具</td><td align="center">1年</td></tr><tr><td align="left">PomoDone</td><td align="left">跨平台番茄钟应用</td><td align="center">Lite plan 2年</td></tr><tr><td align="left">Iconscout</td><td align="left">设计资源市场，可获取高质量的图标、插图和图像</td><td align="center">1年</td></tr><tr><td align="left">Icons8</td><td align="left">提供图标、UI 插图、照片和软件的设计资源</td><td align="center">3个月</td></tr><tr><td align="left">🔥Termius</td><td align="left">界面好看，适用于桌面和移动设备的 SSH 客户端</td><td align="center">🎒</td></tr><tr><td align="left">👩‍🏫OneMonth</td><td align="left">HTML, CSS, JavaScript and Python的30天课程</td><td align="center">30天</td></tr><tr><td align="left">MongoDB</td><td align="left">通用、基于文档的分布式数据库</td><td align="center">$50试用</td></tr><tr><td align="left">📧Testmail</td><td align="left">使用自动化API和无限的邮箱地址来邮件测试</td><td align="center">🎒</td></tr><tr><td align="left">📧Mailgun</td><td align="left">电子邮件服务商</td><td align="center">12个月</td></tr><tr><td align="left">DeepSource</td><td align="left">静态分析Python和Go代码的各种风险的平台</td><td align="center">🎒</td></tr><tr><td align="left">Atom</td><td align="left">GitHub上的开源编辑器</td><td align="center">开源免费</td></tr><tr><td align="left">🔥Netwise</td><td align="left">英国的云服务商，提供免费服务器托管</td><td align="center">12个月</td></tr><tr><td align="left">Replit</td><td align="left">超过 50 种语言代码的在线 IDE</td><td align="center">3个月</td></tr><tr><td align="left">👩‍🏫Covalence</td><td align="left">全栈 Web 开发的独家开发者课程</td><td align="center">前端课程</td></tr><tr><td align="left">👩‍🏫InterviewCake</td><td align="left">练习题、数据结构和算法题等使编码面试课程</td><td align="center">3 周</td></tr><tr><td align="left">Typeform</td><td align="left">交互式表格、调查和测验工具</td><td align="center">1年</td></tr><tr><td align="left">🔥Strip</td><td align="left">网上支付平台，帮你匿名收钱</td><td align="center">前1000 美元免手续费</td></tr><tr><td align="left"><a href="https://newrelic.com/">New Relic</a></td><td align="left">提供服务器的性能监控功能</td><td align="center">🎒</td></tr><tr><td align="left">Pageclip</td><td align="left">用于静态网站和 HTML 表单的服务器</td><td align="center">🎒</td></tr><tr><td align="left">HazeOver</td><td align="left">Mac平台的多窗口管理工具，提高专注力</td><td align="center">免费程序许可证</td></tr><tr><td align="left">👩‍🏫GoRails</td><td align="left">Ruby、Rails、Javascript、Turbolinks、Stimulus.js、Vue.js 等的教程</td><td align="center">12个月</td></tr><tr><td align="left">Arduino</td><td align="left">单片机入门神器，提供Create Maker plan 和硬件折扣</td><td align="center">6个月</td></tr><tr><td align="left">👩‍🏫Thinkful</td><td align="left">网站开发基础教程</td><td align="center">1个月</td></tr><tr><td align="left">Tower</td><td align="left">Mac和Windows平台的Git客户端</td><td align="center">🎒</td></tr><tr><td align="left">🔥Datadog</td><td align="left">云平台监控市场的老大，基于SaaS的数据分析平台</td><td align="center">2年</td></tr><tr><td align="left">Kodika</td><td align="left">通过拖拽来打造iOS应用</td><td align="center">6个月</td></tr><tr><td align="left">PopSQL</td><td align="left">SQL 语句编辑器，支持团队合作，可视化编程结果</td><td align="center">🎒</td></tr><tr><td align="left">🔥Imgbot</td><td align="left">为GitHub的公开和私有仓库无损压缩优化图片</td><td align="center">🎒</td></tr><tr><td align="left">Dashlane</td><td align="left">云端密码管理</td><td align="center">6个月</td></tr><tr><td align="left">Sentry</td><td align="left">代码优化，错误检查</td><td align="center">🎒</td></tr><tr><td align="left">BrowserStack</td><td align="left">App多设备、多浏览器测试</td><td align="center">1年</td></tr><tr><td align="left">Zyte</td><td align="left">爬虫平台，代理、管理和自动化爬虫</td><td align="center">永久免费</td></tr><tr><td align="left">Blackfire</td><td align="left">代码性能测量工具</td><td align="center">🎒</td></tr><tr><td align="left">🔥Travis CI</td><td align="left">类似GitHub Actions的自动化部署平台</td><td align="center">🎒</td></tr><tr><td align="left">Gitpod</td><td align="left">在线版Git客户端</td><td align="center">6个月</td></tr><tr><td align="left">Cryptolens</td><td align="left">安全地许可和销售您的软件</td><td align="center">10个许可证</td></tr><tr><td align="left">Adafruit</td><td align="left">开源硬件和开源教育电子公司</td><td align="center">1年硬件折扣</td></tr><tr><td align="left">Xojo</td><td align="left">原生应用程序的跨平台开发工具</td><td align="center">🎒</td></tr><tr><td align="left">Freshpaint</td><td align="left">营销和分析工具</td><td align="center">🎒</td></tr><tr><td align="left">Lingohub</td><td align="left">翻译神器，翻译管理服务</td><td align="center">🎒</td></tr><tr><td align="left">Blockchair</td><td align="left">区块链相关</td><td align="center">10万个请求</td></tr><tr><td align="left">👩‍🏫SymfonyCast</td><td align="left">Symfony 和 PHP在线课程</td><td align="center">3 个月</td></tr><tr><td align="left">LambdaTest</td><td align="left">在线对2000多个真实浏览器和操作系统执行自动化和交互式跨浏览器测试</td><td align="center">1年</td></tr><tr><td align="left">Honeybadger</td><td align="left">网站监控，uptime和cron监控</td><td align="center">1年</td></tr><tr><td align="left"></td><td align="left"></td><td align="center"></td></tr></tbody></table><h2 id="云服务器"><a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h2><h3 id="DigitalOcean"><a href="#DigitalOcean" class="headerlink" title="DigitalOcean"></a>DigitalOcean</h3><p>Digital Ocean （简称为 DO）成立于 2012 年，是一家从 TechStars 孵化出来的<strong>大型</strong>云托管服务提供商。其特色服务是提供快速的固态硬盘服务器，宣称可在 55 秒钟搭建好一台云服务器。所有的服务器均拥有 1G 的网络接口，每月基础套餐为 1TB 流量，超出部分按每 GB2 美分计算。公司还提供了灵活的 API 供客户控制其私有虚拟服务器。控制面板也相当直观易用。</p><p>Github 学生包一个比较吸引人的地方就是 DigitalOcean 的代金券。注册后使用offer code可拿到100美金，期限为一年。不过DigitalOcean 注册需要信用卡或者PayPal，且不允许一个 PayPal、信用卡 注册多个账户，否则会有封停的危险。</p><h3 id="MicroSoft-Azure"><a href="#MicroSoft-Azure" class="headerlink" title="MicroSoft Azure"></a>MicroSoft Azure</h3><p>大名鼎鼎的Azure，本来需要信用卡注册，但学生包可以免信用卡，免费试用25+项云服务，并且获得100美金的试用。 Azure 的线路到国内非常优秀。拿来当梯子或者中转或者建站都是上上之选。</p><h2 id="网站托管"><a href="#网站托管" class="headerlink" title="网站托管"></a>网站托管</h2><h3 id="PageClip"><a href="#PageClip" class="headerlink" title="PageClip"></a>PageClip</h3><p>PageClip是静态网站托管服务，可以托管类似本站Hexo博客之类的静态网站。用于 HTML 表单的灵活服务器 &#x2F; 后端. 在实时 Web 界面中查看数据，或使用 API获取 CSV 和 JSON 输出。</p><p>虽然GItHub Pages也满足这个功能，但毕竟全开源。</p><p>在学生期间一直可享受basic plan。</p><blockquote><p>静态网站：<a href="https://asmcn.icopy.site/awesome/awesome-static-website-services/">https://asmcn.icopy.site/awesome/awesome-static-website-services/</a></p></blockquote><h2 id="SSH软件"><a href="#SSH软件" class="headerlink" title="SSH软件"></a>SSH软件</h2><h3 id="termius"><a href="#termius" class="headerlink" title="termius"></a>termius</h3><p>可用于桌面及移动端的SSH平台。<strong>当你为学生时，可以一直访问Premium计划（价值9.99美元&#x2F;月）。</strong></p><p>进入<a href="https://termius.com/education?utm_source=github+termius">termius</a>即可关联 <code>GitHub</code> 学生账号来解锁，link your account to unlock <strong>premium features</strong>!</p><p>之后会要求你用 <code>GitHub</code> 的邮箱来创建termius账号，会发一封邮件给你，然后你登录，会记录你登录用的<strong>IP</strong>，记住要用<strong>同样的IP</strong>去验证此次登录。</p><p><img src="https://assets-global.website-files.com/5c7036349b5477bf13f828cf/5ee98fcc9bc7df9d4b8f99d2_desktop_preview.png"></p><p><img src="/2022/05/13/GitHub-Student-Developer-Pack/termius.PNG"></p><h2 id="设计制作"><a href="#设计制作" class="headerlink" title="设计制作"></a>设计制作</h2><h3 id="Bootstrap-Studio"><a href="#Bootstrap-Studio" class="headerlink" title="Bootstrap Studio"></a>Bootstrap Studio</h3><p>Bootstrap Studio是一款非常方便的网页编辑工具，可支持用户通过该软件创建多种样式的网站页面，提供多种网页样式模板，这些模板全部都可以免费使用</p><h2 id="邮件服务📧"><a href="#邮件服务📧" class="headerlink" title="邮件服务📧"></a>邮件服务📧</h2><h3 id="MailGun"><a href="#MailGun" class="headerlink" title="MailGun"></a>MailGun</h3><p>MailGun是依托AWS的邮件发送服务，提供US和EU两个区域，支持SMTP和API，可以使用自己的域名邮箱。建站非常需要相应的服务。<br>每月 20,000 封免费电子邮件和 100 封免费电子邮件验证，最长持续 12 个月。  </p><blockquote><p>邮件测试得分：</p><blockquote><p>mail tester: 9.2<br>TestMail:X-Spam-Status: No, score&#x3D;0.8 required&#x3D;5.0<br><img src="/2022/05/13/GitHub-Student-Developer-Pack/MailGun.PNG"><br>利用 <code>API</code> 发件代码如下</p></blockquote></blockquote><!-- tab bash --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -s --user <span class="hljs-string">&#x27;api:YOUR_API_KEY&#x27;</span> \<br>https://api.mailgun.net/v3/YOUR_DOMAIN_NAME/messages \<br>-F from=<span class="hljs-string">&#x27;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&#x27;</span> \<br>-F to=YOU@YOUR_DOMAIN_NAME \<br>-F to=bar@example.com \<br>-F subject=<span class="hljs-string">&#x27;Hello&#x27;</span> \<br>-F text=<span class="hljs-string">&#x27;Testing some Mailgun awesomeness!&#x27;</span><br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab python --><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_simple_message</span>():<br><span class="hljs-keyword">return</span> requests.post(<br><span class="hljs-string">&quot;https://api.mailgun.net/v3/YOUR_DOMAIN_NAME/messages&quot;</span>,<br>auth=(<span class="hljs-string">&quot;api&quot;</span>, <span class="hljs-string">&quot;YOUR_API_KEY&quot;</span>),<br>data=&#123;<span class="hljs-string">&quot;from&quot;</span>: <span class="hljs-string">&quot;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&quot;</span>,<br><span class="hljs-string">&quot;to&quot;</span>: [<span class="hljs-string">&quot;bar@example.com&quot;</span>, <span class="hljs-string">&quot;YOU@YOUR_DOMAIN_NAME&quot;</span>],<br><span class="hljs-string">&quot;subject&quot;</span>: <span class="hljs-string">&quot;Hello&quot;</span>,<br><span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;Testing some Mailgun awesomness!&quot;</span>&#125;)<br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab java --><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> com.mashape.unirest.http.HttpResponse;<br><span class="hljs-keyword">import</span> com.mashape.unirest.http.JsonNode;<br><span class="hljs-keyword">import</span> com.mashape.unirest.http.Unirest;<br><span class="hljs-keyword">import</span> com.mashape.unirest.http.exceptions.UnirestException;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MGSample</span> &#123;<br> <span class="hljs-comment">// ...</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> JsonNode <span class="hljs-title function_">sendSimpleMessage</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> UnirestException &#123;<br>HttpResponse&lt;JsonNode&gt; request = Unirest.post(<span class="hljs-string">&quot;https://api.mailgun.net/v3/&quot;</span> + YOUR_DOMAIN_NAME + <span class="hljs-string">&quot;/messages&quot;</span>),<br>.basicAuth(<span class="hljs-string">&quot;api&quot;</span>, API_KEY)<br>.queryString(<span class="hljs-string">&quot;from&quot;</span>, <span class="hljs-string">&quot;Excited User &lt;USER@YOURDOMAIN.COM&gt;&quot;</span>)<br>.queryString(<span class="hljs-string">&quot;to&quot;</span>, <span class="hljs-string">&quot;artemis@example.com&quot;</span>)<br>.queryString(<span class="hljs-string">&quot;subject&quot;</span>, <span class="hljs-string">&quot;hello&quot;</span>)<br>.queryString(<span class="hljs-string">&quot;text&quot;</span>, <span class="hljs-string">&quot;testing&quot;</span>)<br>.asJson();<br><span class="hljs-keyword">return</span> request.getBody();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab go --><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">SendSimpleMessage</span><span class="hljs-params">(domain, apiKey <span class="hljs-type">string</span>)</span></span> (<span class="hljs-type">string</span>, <span class="hljs-type">error</span>) &#123;<br>mg := mailgun.NewMailgun(domain, apiKey, publicApiKey)<br>m := mg.NewMessage(<br><span class="hljs-string">&quot;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&quot;</span>,<br><span class="hljs-string">&quot;Hello&quot;</span>,<br><span class="hljs-string">&quot;Testing some Mailgun awesomeness!&quot;</span>,<br><span class="hljs-string">&quot;YOU@YOUR_DOMAIN_NAME&quot;</span>,<br>)<br>_, id, err := mg.Send(m)<br><span class="hljs-keyword">return</span> id, err<br>&#125;<br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab RUBY --><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs RUBY"><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_simple_message</span><br>RestClient.post <span class="hljs-string">&quot;https://api:YOUR_API_KEY&quot;</span>\<br><span class="hljs-string">&quot;@api.mailgun.net/v3/YOUR_DOMAIN_NAME/messages&quot;</span>,<br><span class="hljs-symbol">:from</span> =&gt; <span class="hljs-string">&quot;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&quot;</span><br><span class="hljs-symbol">:to</span> =&gt; <span class="hljs-string">&quot;bar@example.com, YOU@YOUR_DOMAIN_NAME&quot;</span>,<br><span class="hljs-symbol">:subject</span> =&gt; <span class="hljs-string">&quot;Hello&quot;</span>,<br><span class="hljs-symbol">:text</span> =&gt; <span class="hljs-string">&quot;Testing some Mailgun awesomness!&quot;</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab PHP --><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-comment"># Include the Autoloader (see &quot;Libraries&quot; for install instructions)</span><br><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;vendor/autoload.php&#x27;</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">Mailgun</span>\<span class="hljs-title">Mailgun</span>;<br><span class="hljs-comment"># Instantiate the client.</span><br><span class="hljs-variable">$mgClient</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mailgun</span>(<span class="hljs-string">&#x27;YOUR_API_KEY&#x27;</span>);<br><span class="hljs-variable">$domain</span> = <span class="hljs-string">&quot;YOUR_DOMAIN_NAME&quot;</span>;<br><span class="hljs-comment"># Make the call to the client.</span><br><span class="hljs-variable">$result</span> = <span class="hljs-variable">$mgClient</span>-&gt;<span class="hljs-title function_ invoke__">sendMessage</span>(<span class="hljs-variable">$domain</span>, <span class="hljs-keyword">array</span>(<br><span class="hljs-string">&#x27;from&#x27;</span>=&gt; <span class="hljs-string">&#x27;Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;&#x27;</span>,<br><span class="hljs-string">&#x27;to&#x27;</span>=&gt; <span class="hljs-string">&#x27;Baz &lt;YOU@YOUR_DOMAIN_NAME&gt;&#x27;</span>,<br><span class="hljs-string">&#x27;subject&#x27;</span> =&gt; <span class="hljs-string">&#x27;Hello&#x27;</span>,<br><span class="hljs-string">&#x27;text&#x27;</span>=&gt; <span class="hljs-string">&#x27;Testing some Mailgun awesomness!&#x27;</span><br>));<br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab C# --><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.IO;<br><span class="hljs-keyword">using</span> RestSharp;<br><span class="hljs-keyword">using</span> RestSharp.Authenticators;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">SendSimpleMessageChunk</span><br>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span> (<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>Console.WriteLine (SendSimpleMessage ().Content.ToString ())<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> IRestResponse <span class="hljs-title">SendSimpleMessage</span> ()</span><br>&#123;<br>RestClient client = <span class="hljs-keyword">new</span> RestClient ();<br>client.BaseUrl = <span class="hljs-keyword">new</span> Uri (<span class="hljs-string">&quot;https://api.mailgun.net/v3&quot;</span>);<span class="hljs-string">&quot;</span><br><span class="hljs-string">client.Authenticator =&#x27;</span><br><span class="hljs-string">new HttpBasicAuthenticator (&quot;</span>api<span class="hljs-string">&quot;,</span><br><span class="hljs-string">&quot;</span>YOUR_API_KEY<span class="hljs-string">&quot;);</span><br><span class="hljs-string">RestRequest request = new RestRequest ();</span><br><span class="hljs-string">request.AddParameter (&quot;</span>domain<span class="hljs-string">&quot;, &quot;</span>YOUR_DOMAIN_NAME<span class="hljs-string">&quot;, ParameterType.UrlSegment);</span><br><span class="hljs-string">request.Resource = &quot;</span>&#123;domain&#125;/messages<span class="hljs-string">&quot;;</span><br><span class="hljs-string">request.AddParameter (&quot;</span><span class="hljs-keyword">from</span><span class="hljs-string">&quot;, &quot;</span>Excited User &lt;mailgun@YOUR_DOMAIN_NAME&gt;<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.AddParameter (&quot;</span>to<span class="hljs-string">&quot;, &quot;</span>bar@example.com<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.AddParameter (&quot;</span>to<span class="hljs-string">&quot;, &quot;</span>YOU@YOUR_DOMAIN_NAME<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.AddParameter (&quot;</span>subject<span class="hljs-string">&quot;, &quot;</span>Hello<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.AddParameter (&quot;</span>text<span class="hljs-string">&quot;, &quot;</span>Testing some Mailgun awesomness!<span class="hljs-string">&quot;);</span><br><span class="hljs-string">request.Method = Method.POST;</span><br><span class="hljs-string">return client.Execute (request);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><!-- endtab --><!-- tab javascript --><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mailgun = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mailgun-js&quot;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DOMAIN</span> = <span class="hljs-string">&#x27;YOUR_DOMAIN_NAME&#x27;</span>;<br><span class="hljs-keyword">const</span> mg = <span class="hljs-title function_">mailgun</span>(&#123;<span class="hljs-attr">apiKey</span>: api_key, <span class="hljs-attr">domain</span>: <span class="hljs-variable constant_">DOMAIN</span>&#125;);<br><span class="hljs-keyword">const</span> data = &#123;<br><span class="hljs-attr">from</span>: <span class="hljs-string">&#x27;Excited User &lt;me@samples.mailgun.org&gt;&#x27;</span>,<br><span class="hljs-attr">to</span>: <span class="hljs-string">&#x27;bar@example.com, YOU@YOUR_DOMAIN_NAME&#x27;</span>,<br><span class="hljs-attr">subject</span>: <span class="hljs-string">&#x27;Hello&#x27;</span>,<br><span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Testing some Mailgun awesomness!&#x27;</span><br>&#125;;<br>mg.<span class="hljs-title function_">messages</span>().<span class="hljs-title function_">send</span>(data, <span class="hljs-keyword">function</span> (<span class="hljs-params">error, body</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(body);<br>&#125;);<br></code></pre></td></tr></table></figure><!-- endtab --><h3 id="TestMail"><a href="#TestMail" class="headerlink" title="TestMail"></a>TestMail</h3><p>TestMail顾名思义就是用来测试你的邮件服务的，使用无限的邮箱和 GraphQL API 自动执行端到端的电子邮件测试。可以用来测试新用户注册，交易邮件和广告邮件的发送等等。邮件发多了可能会被识别为垃圾邮件，不含DKIM认证的邮件域名可能会被标记为冒充，等等，因此需要进行邮箱测试。</p><blockquote><p>与之对应的还有DebugMail和Mailosaur，都可以使用虚拟 SMTP 服务器进行电子邮件测试，而不会真正发出邮件。前者免费，后者还可以进行 SMS 和垃圾邮件测试，以用于企业级用途。  </p></blockquote><p>TestMail就是通过API 获取无限的电子邮件地址和邮箱，以自动进行电子邮件测试。测试你的邮件质量如何。  </p><ul><li>10,000 * emails&#x2F;month</li><li>Unlimited users, email addresses, and mailboxes</li><li>1-3 days retention</li><li>One random namespace</li><li>Full API access</li></ul><p>我使用MailGun托管的邮件服务的测试结果是：<br><code>X-Spam-Status: No, score=0.8 required=5.0</code>  </p><p>在学生认证期间，testmail.app将一直提供Essential计划。</p><blockquote><p>其他免费邮件测试服务还有：</p><blockquote><p><a href="https://www.mail-tester.com/">https://www.mail-tester.com/</a><br><a href="https://senderscore.org/">https://senderscore.org/</a> （测试IP）<br><a href="https://mxtoolbox.com/">https://mxtoolbox.com/</a>    (查找邮件域名提供商和提供简单的问题解决方案)</p></blockquote></blockquote><!-- >> http://bin.mailgun.net/  （暂时下线） --><p><img src="/2022/05/13/GitHub-Student-Developer-Pack/mailtester.PNG"></p><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><h3 id="DataDog"><a href="#DataDog" class="headerlink" title="DataDog"></a>DataDog</h3><p>Datadog是云平台监控市场的老大，基于SaaS的数据分析平台，实现对服务器、数据库、工具和服务的监控，同时提供日志记录、应用性能管理、基础设施监测、 <code>serverless</code> 云函数和安全服务等等。<br><img src="/2022/05/13/GitHub-Student-Developer-Pack/datadog.PNG"><br><img src="/2022/05/13/GitHub-Student-Developer-Pack/product-features-network.avif"><br>美中不足是没有免费计划。但是GitHub学生包提供了2年的 <code>Pro Account</code> ( $15 每月)，包括免费的10台服务器监控 （datadog的服务器监控是按服务器数量计费）。相当划算。<br><img src="/2022/05/13/GitHub-Student-Developer-Pack/datadog2.PNG"></p><h3 id="New-Relic"><a href="#New-Relic" class="headerlink" title="New Relic"></a>New Relic</h3><p><a href="https://developer.newrelic.com/students/">New Relic</a> 也是依托于AWS，和Datadog功能比较重叠，选一个用就行。</p><p>它目前专注于SaaS和App性能管理业务，它支持支持agent和API传送数据，能够对部署在本地或在云中的web应用程序进行监控、故障修复、诊断、线程分析以及容量计划。</p><p>笔者现在用的就是这款。</p><h4 id="New-Relic-认证流程"><a href="#New-Relic-认证流程" class="headerlink" title="New Relic 认证流程"></a>New Relic 认证流程</h4><p>New Relic认证很坑，点击 <a href="https://education.github.com/pack/redeem/newrelic-student">Get access by connecting your GitHub account on New Relic</a>后，会让你创建新账户（但其实旧帐户也可以），创建完账户就是免费计划，之后进入的是创建新监控的引导流程，而不是GitHub学生认证的流程。我找了老半天才找到学生认证的<a href="https://one.newrelic.com/nr1-core/students-edition">入口</a>。如下图：<br><img src="/2022/05/13/GitHub-Student-Developer-Pack/NewRelicAuth.PNG"></p><blockquote><p>参考：<a href="https://discuss.newrelic.com/t/how-can-i-connect-my-github-account-with-existing-new-relic-account-for-student-pack/153617">https://discuss.newrelic.com/t/how-can-i-connect-my-github-account-with-existing-new-relic-account-for-student-pack/153617</a>  </p></blockquote><p>跟GitHub认证完，还要再次提交学校名、邮箱认证，真的很烦了。<br><img src="/2022/05/13/GitHub-Student-Developer-Pack/product-features-network.avif"></p><h4 id="New-Relic-学生包福利"><a href="#New-Relic-学生包福利" class="headerlink" title="New Relic 学生包福利"></a>New Relic 学生包福利</h4><ul><li>3 个标准的全栈可观察性用户</li><li>每月 500GB 的数据储存 （这个网站一向以储存数据量定价,但是要提交500GB的数据也不是几个机器就能做到的）</li></ul><h3 id="Raygun"><a href="#Raygun" class="headerlink" title="Raygun"></a>Raygun</h3><p>Web 和移动应用程序的错误、崩溃和性能监控。Startup Platform plan免费一年。</p><h2 id="开发和设计"><a href="#开发和设计" class="headerlink" title="开发和设计"></a>开发和设计</h2><h3 id="zyte爬虫平台"><a href="#zyte爬虫平台" class="headerlink" title="zyte爬虫平台"></a>zyte爬虫平台</h3><p>zyte 就是之前的Scrapinghub，爬虫费时费力费IP，自己买服务器的话，很多VPS提供商不允许爬虫的存在，对IP有负面影响。但是zyte就可以解决这个问题。</p><p>之前是提供免费套餐的Scrapy Cloud的，现在要9美元一个月了。好在学生包福利还在。提供一个永久免费的Scrapy Cloud单元，无限团队成员、项目、请求、抓取时间，数据保留时间120天。</p><p>1个Scrapy Cloud单元 &#x3D; 1 GB的RAM + 2.5GB磁盘空间 + 1个CPU + 1个运行中任务</p><h2 id="GitHub相关"><a href="#GitHub相关" class="headerlink" title="GitHub相关"></a>GitHub相关</h2><h3 id="GitHub-Pro"><a href="#GitHub-Pro" class="headerlink" title="GitHub Pro"></a><span id="githubpro">GitHub Pro</span></h3><p>♾️ Unlimited public&#x2F;private repos<br>♾️ Unlimited collaborators<br>✔️ 3,000 Actions minutes&#x2F;month<br>✔️ 2GB of Packages storage<br>✔️ Code owners, required reviewers, GitHub Pages, and more <a href="https://docs.github.com/en/free-pro-team@latest/github/getting-started-with-github/githubs-products#github-team">advanced tools</a>.</p><h3 id="GitLens-和-GitKraken"><a href="#GitLens-和-GitKraken" class="headerlink" title="GitLens 和 GitKraken"></a><span id="gitlens">GitLens 和 GitKraken</span></h3><p><img class="auth-logo ease-in-shared" src="https://www.gitkraken.com/img/logos/github.svg" style="height:5.1rem;">&lt;span style&#x3D;”color:#D0D0D2;font-family:”font-size:17px;background-color:#141422;”&gt;&amp;nbsp;<img class="auth-logo ease-in-shared" src="https://www.gitkraken.com/img/happy-kraken.svg" style="height:5.1rem;"></p><p><code>GitLens</code> 是一个开源的 <code>VS Code</code> 的插件，功能丰富。注册免费账号后可以在公开 repo 使用高级功能，私有 repo 才需要付费使用追加的高级功能。<br><code>GitKraken</code> 适用于 Windows、Mac 和 Linux 的最流行的 Git 客户端，提供 GUI 和终端界面。 与 GitHub 存储库和问题的深度集成支持直接在客户端中进行交互式拉取请求管理和问题管理。<br><img src="/2022/05/13/GitHub-Student-Developer-Pack/gk-gui-tab-example.png">   <img src="/2022/05/13/GitHub-Student-Developer-Pack/gk-terminal-tab-example.png"></p><p>进入<a href="https://www.gitkraken.com/github-student-developer-pack">GitKraken</a>，点击<a href="https://app.gitkraken.com/"><strong>create a GitKraken account</strong></a>，创建账号，再用GitHub学生包账号认证就好。<br><img src="/2022/05/13/GitHub-Student-Developer-Pack/GitLen.PNG"></p><h2 id="课程学习"><a href="#课程学习" class="headerlink" title="课程学习"></a>课程学习</h2><h3 id="GoRails"><a href="#GoRails" class="headerlink" title="GoRails"></a>GoRails</h3><p><a href="https://gorails.com/">GoRails</a>是一个在线课程平台，提供面向 Web 开发人员的 Ruby、Rails、Javascript、Turbolinks、Stimulus.js、Vue.js 等课程。学生包在 <strong>12 个月</strong>内免费访问所有视频和课程。</p><h2 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h2><h3 id="HazeOver"><a href="#HazeOver" class="headerlink" title="HazeOver"></a>HazeOver</h3><p><a href="https://hazeover.com/">HazeOver</a> 是 Mac OS X 上的一款小工具,它可以在激活的窗口区域以外显示阴影,这可以让你很方便聚焦在当前的任务上,再也不用担心所有窗口叠在一起了。通过强调活跃的窗口，淡出不活跃的窗口来帮助你集中注意力。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="软件加密"><a href="#软件加密" class="headerlink" title="软件加密"></a>软件加密</h3><p>Cryptolens<br>NetLicensing</p><h3 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h3><ol><li>Blackfire 代码性能测量工具</li><li>Codecov</li><li>BetterCodeHub</li><li>DeepScan</li></ol><h3 id="多语言翻译"><a href="#多语言翻译" class="headerlink" title="多语言翻译"></a>多语言翻译</h3><ol><li>Lingohub 翻译管理服务</li><li>POEditor</li><li>Transifex</li><li>Crowdin</li><li>Phrase</li></ol><h3 id="应用测试"><a href="#应用测试" class="headerlink" title="应用测试"></a>应用测试</h3><ol><li>LambdaTest</li><li>AccessLint</li><li>SOFY</li><li>Coveralls</li></ol>]]></content>
    
    
    <categories>
      
      <category>学习是人生第一要务</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>web开发</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【华硕路由器】虚拟内存读取写入速度不符合要求的解决办法</title>
    <link href="/2022/05/11/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E8%AF%BB%E5%8F%96%E5%86%99%E5%85%A5%E9%80%9F%E5%BA%A6%E4%B8%8D%E7%AC%A6%E5%90%88%E8%A6%81%E6%B1%82%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <url>/2022/05/11/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E8%AF%BB%E5%8F%96%E5%86%99%E5%85%A5%E9%80%9F%E5%BA%A6%E4%B8%8D%E7%AC%A6%E5%90%88%E8%A6%81%E6%B1%82%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>ax56u使用软件中心虚拟内存插件来挂载虚拟内存，U盘读写速度不够的解决办法。</p><p><font color="orange">【此方法仅在没有合适U盘的时候用，读写速度限制是为了保证性能！】</font></p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li><p>路由器型号：ax56u</p></li><li><p>固件版本：梅林官改</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>使用软件中心虚拟内存插件来挂载虚拟内存，总是提示读写速度不够，新固件的读取速度要求 <code>20M/s</code>，写入速度要求 <code>30M/s</code>。</p></li></ul><p>日志内容如下：</p><blockquote><p>USB磁盘[&#x2F;dev&#x2F;sda1]的三次平均顺序读取速度大约为：40.87 MB&#x2F;s。<br>USB磁盘[&#x2F;dev&#x2F;sda1]的三次平均顺序写入速度大约为：9.74 MB&#x2F;s</p></blockquote><p>我另一个U盘：</p><blockquote><p>USB磁盘[&#x2F;dev&#x2F;sda1]的三次平均顺序读取速度大约为：16.85 MB&#x2F;s<br>USB磁盘[&#x2F;dev&#x2F;sda1]的三次平均顺序写入速度大约为：7.02 MB&#x2F;s</p></blockquote><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>修改参数限制</p><p>ssh 登录到路由器，执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改写入速度限制，30替换为10</span><br>sed -i <span class="hljs-string">&#x27;s/^W_LIMIT=30/W_LIMIT=10/&#x27;</span> /koolshare/scripts/swap_make.sh<br><br><span class="hljs-comment"># 修改读取速度限制，20替换为10</span><br>sed -i <span class="hljs-string">&#x27;s/^R_LIMIT=20/R_LIMIT=10/&#x27;</span> /koolshare/scripts/swap_make.sh<br></code></pre></td></tr></table></figure><p>解释一下，就是把创建 <code>swap</code> 分区的U盘速度限制调整至可用值，值可设置成自己想设置的值（保证外设能达到的水准，不行就往低了调）。以上参数可以根据自己的实际情况进行调整，完成后重新进入管理界面，再次进入软件中心，即可正常创建虚拟内存。</p>]]></content>
    
    
    <categories>
      
      <category>华硕路由器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>华硕路由器</tag>
      
      <tag>梅林固件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>笔记</title>
    <link href="/2022/05/11/Notes-on-Mastodon/"/>
    <url>/2022/05/11/Notes-on-Mastodon/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="8ab8be4b651f2e36f7ddb53b5fccd8ba7e821cdbb38d3c34c1aec0276f25030b">6d05a0a7f8f5f26ac1a0f788610c8c39dcadc5fa3ac74c5e751c7be01ed66863fdcfbec6b7d466d3cf3bf3d3ac8d7eac7b8473a4eb6c6e026f99f8702a89604bf84606109af4fed877532c1af94a65b9bd1e95d64bd14caf0f6585b971577290d65e600d1c232e9a993541ce7b48fec83b44be10127c1231ac4a6e7bdcf264954bbf65d1a4382e93f9b9e28e570beedea6e8c569b4297b2d42c38b08fb7e1b7d5155db631d329ff8e0eb9a349191cc5b0bc3d4c7f2ad21baa3a352df14f01519ecc37c54315431738dfe2f97867533792733a28a55ef517af8e7a26838f814555ea74bff37c2b93228b67290f9dc98b97fd2a2fa34afeba79dc8c0805d3ed571bc31b4dfcf19b3d4c4a3646e42eeac7da0de5db9011e52c4ca28b6da814a45a4bd9d77b8969b6b6b7abfdb742769fce40b7c1a9466ae366f0da08c7ac28095b6cbfe82ada5ff4f6ecf4c355c17861f6c511c778695bbe5cda30445e8e0e1b8a3f76a3740582f9723eefee7ae0e74154075fa82449d095b46e9e900aeaad50e010e22dcda48148f0640f8291313f8b47cb1ccb59cfee39623fb3e8940da2caa924c077b05b8dab2277d1b62c266b309558340219083768b6f5f49b22357cb69fcdc45b6b50ee50c6f436efefb22a3c4fe6369b89dd855f51dee4b8662e20ec6b04e94b8bc75963a0c252b659366033e0accadb0e959a05977327ec95cd63610a55748d8fd6e23a35290fac351952fcfbdd00254dfcd3750c01686522b2511d24d0f49aa993d86bcbfaf20c49559f2b6428c25439236a89df129f79202148bfc9347a3f2d943b8827a5fdbbb49ab8edee05e923684d97291b1781f0913e6f68c03969c77483c3056479fe2bb3ab142f794a95ad836cdf189191c241134d468f6a47b138e797b42c6dc8867cba108e693a126c4ea48cf8579040e93800434375130d18f5d395e41bbfa4925365a2b62c7656b4eb5aae98cd76ff64979c4b43ca961fe1cb1cb61c9224534d833c3a5c15aa239c8b50bf104a7a9cfa933fad876204dbcbbc33935adbaad5293a25d532d91d989461012ae6b9346775b74894538a199d2c3b64cf824eb47bde42cfe019417eb41284195e644ee8114f575d64ca85e29382656bfd5220bd4d73cce557e8e7fa95025b5aa45e8a77386aae73a5e60ebe612d8effc76039eab278b30213f6f606879c622c9a5a7ecbccd228e146eac1ea04e96bbd2f63b775d5fe633beb5a5ad17c5b9dbb40abdf6c880c9d26474ed3499ce6fdcc522428bbecf7c10acf11ea5fa20a4f492fcf9dfb33d835f54d75ca2de6cfa4003418ee0b02cb5b22f34e2833c5bcddb7f4ca29382e976c5293109cc98fcdd05cac9d6355df7cef55ca679392b80e038bb2ef93b22b43d187ecad2c69ed02f0c3ccb05c7691cded060c4e190a7c2a8dd4bbaf65e551b28cc8ca3c30a8ec7a9cd5c02b0e706f7bdafd54f40384a566190f8c782a3a981b07ccf83a046289d9e75920bffec62f529acd7b05a401906b44726566131038cc899e3cb8485a87c036683da710229a12bfd9b510dedc8e7db7a9049a703cf443f86babb186e3c410c30086964536faee282fd1982c93c39b0bce6deaafe1f4f76d8c0f34fb84a59ea357c37db5175ca96300782c9bceeb6ce9a62e6393b496a332144f71c732fe4e7ba1e7d65b54f2cc60bfce98088576ada7b4639b228554325dc3a65047eca0a1e3afde6316e5f7be52a9f3b43109485749c47b96a69c3c972ab7202608f7473aaf51c2b454631f478934e2627f364d8a5a1326889e451d84bb0549570210c73be2447571baf81c56c2de88291929293a1d8579ed19525e65f5ee79c6dcc267dff42e3cf8eb3c174a91065a968f05803dc2afb3b00e662dea9cb81a855723ac485dec32148aa89ac67ec7f438174a5fa01a3322447d5d5189b25405329b8fdf1218deb7f3043edda4293f2f58d9b31791529c70dab5e58e9948abf99288034fa5223378de019a890d385020b9201f0e9394aa00561ed3e496c918106869eade3a47c9bfd2a01d0ef96a2ca53a0fb6494f981a9ae48c9b869e7d9a5fde3c6d52994a8c109c9aca784e2a5d178ca0ab228cfb4cb6e2b659556ff201e7b83d8a20c3839f655360ca8d75cb5ff93d65c48f1bbcd0f6ed5889b9782adaf4e1e719bdaf37146e99e52d25c5becf5c86fb576883a0e95507e86c17decb5a9637b1fe58e0cfe614686566b18dfaa28d249ffc0d88e99e708b06a25b7b32accf568096499c3127b4d46b4fc38621affba7fc35ac90a4b62b375a3c9ccc4f840e757a038fcd70598ccbae51ca962bef69181c9ca961dcdd4634372ccdb9a669d51a2b68d471fa45f960167520d609c4d460534b9c4db125dd74de0e9a4aee7c2fad55d9a8ef10a98b2fcc965a854528f22ec14cc90ef597688151904e9b8ea04208c5760850535806ed7e0d0157b14bd3f96b56b634ce0fae458309ae9882831854df2427adcacf8e27d8126e2bb0a1abb52abac62ef9a54d41f78b1cd7819ff5061f8e0eb69194fce409d1bdb3558e36786cf9eda5e032ada0a798f569b074378a62cdcd6cb3804f4b5ffa82c2c2a77bddd28847ab64fdf69ea9fc5ad557bd32604bdfe12c8a52edaa08af019cfcd7f4b84e52c57ec5459694464ebd55eeb22c5d571e707dbdf7ad947cc73801100876b4958360999062ff06f637b7c6d1b4e3b0ce4dfabb12fa3e19143e49fcebf234d0e570e6b3cd7151c8564597c847d2a736267070a9a0d86f84b14a63f7765f0e1c049c775b1892e3512347e8218b119ecb05903bea85054749412ad9a981a5d5bee96c6a9c07cdf29df15c9f7c782a1f0bc8f0320f473da75de24dc03ead2e0e917fdf1dabba370d8e59cbb8d6ee092ae591d5bcbb0ef119dd3be130cb03e01a331d28e22751531e79f9bf377561f39a7af5866065f69ce0d3e748819f6e5868d58cedeb437cb0dbd4e3509dba6a34394383e3ca85ce051c7b39f580ccd4f12f5693ff6eae9c3803220a1822076ff820a1ae67c27de167e1ab9cd9b3ad71e8ad0c8bf1e578760b2e8184c595cc3c19be78e00276527a20557f9f5e7c8f70675b6f73be9c5a81f857c9ed755d4f4b52967dcddd0ec1193b9527232b16a7b51bef1e8627d7ecee580b6379def2f5f64327d036f4d2f74548d0f83d105801cd712a3d99dac33619403750999d52a71281b6dcf49138fd82f710395b7ec58c7738c8ac08bcaa9e7c7666fc4847e8f60ffa7bf6d8db3b328fd11636bc1ce59d186482009b62b9544278ce85e3365de8bb543a8774780d882ebf07ef3cfd0f9fb488f0a6ff751e1d417f4363ddb29c36142fecf1095db9dc10bf98503be47cea3ad71a10007ead3fae023064271361c9d8eeccb258235d7d22fa78d6f47ca81353e8e5ff27e320da883eb7440e61c68065d1240f1826504fa49db53121c316b03b083374dfac2cafe26cdf4e95b0ca0fc8e98bea4cf0cacc1a93000fef1d5867fa6dfe52fb69a6fa835d271fee33b5a965f88318145d81b49fa6cd65e5580d9a0d453992a1d0731b098761d5e5eb217154a08aab524506341a858fbf346c3f8144812f63787c016296491c59d3512a9c51fb107a4c160434f25f058f70cf6071af6e80971046bd858f87582b0d719c0adecc150d5c242fd44e7680f3886f659c46acf72f77a10e4af111c9af21ad47f28fd884df21a56b8b00cc69af5f173954cf343a241a966172feef0be00e239eb6254114eb1a6e4ee32c35ea2e1d1fe6b1451aeb89a6d4a724e4e43b9ddbd0d582bec4774b460508dd833af3bc1af384b2b3233ed6f2036c7f880244be7a4035991a50570384f9fc8081a97061d1b52081151f336f99c76cd221547f55662f97cbb73fcf86dfad021b69d34c29f8705ce21d53c1f115f32c01d6c937004bf625a3fbb2586462c1e78b685851e6a85a691217db73f9fda793523666b8b2abbcca0ae8e0cfb91c01941a038b61b9458b84261367dc6056116f509ec75fcf1baa41536479da61d7c6cac30f4e7efee21f416f360ee39f3d02fbbda724cc008f8bdf042aa1f2775fdc0e73cf6271502f55f1cac27544ae6a3adf1cd7a501cc529d46542fb3f8e5f88856ac5602d05fca6ee9c64bf5780b0888ea204545c3c91f3b91989c1a9fbab2da5c5277297f3405cf9482ef2573583dead2a2db70620e088c58c46eddae8b2306c1dfabef6e14a319ed58d127ab8928a234eeb4fa3684b8fc0c832f01f3d9715ab17508eeb1e9cd61d9493cd0099c48449f392ee518e346fcd740a1efe299a6ef6de7ba651d9565a9006d7a8565eae3cb6be772d80dca385c3e55be55cc8235d992582407d1be66ff081f2228c03f07ef0a36da8d92d00d6b36ebde8f3cafaec879c1717b04a10c8daafca4dda13e2371a0530e181d2bb92d95eea7fd3065509ea6d0ae03638343266fd5c14bed3fa814d9d89082c60b4e8137588b77e8c88a4598b8565153bc3fe5b30ecb157e43f36a641bc655e6f0a0016d969826b740a38865888cf7e8026d656f37273fcee0f7a3fc380e1563c6dd2455379ee0e437f5f697e0734cc7cb335df8fbfa4165e707640a86d7e917e1ad2dc5674924baf90c64baa9323894fe55216e0aa5a8849bde96b67ed10b0dc7adced44c3f57b0d9dfaa5e5c77a7ac853f9c68a4eecd06ce47cbd11ffcef3dab99cfd3700a5b7330085ad45b458648d64233d9a0415c399b451e8ef3eb7bbcbb0a92140fcedafc5ed0dc4e748c6ff86bb080c3baf514f693473cd71ba8b0c11dca7b3517385c9929f2fcfa8040fe4c71e4f1a1a9c1e81a982ceccf9448da68235dc78b6311d656fe21e10c775218f74ff789d58ef7a7b4df79e2331c8df51e739f8ad229f24f0dce7e10cdc5cd68c85552591ececd17318d7b291a9178e612829cbe79b6970b50570b8823b7a1c54c307e2e102fbea4e5c5133022e535c62792d3954745aecaafe79f18604c2365941f6f492444aebf9edb09768fd9fb4c1acda4be041903e41882d2817c2b49cc936b66d502ef3ae7fb6cf18fae48d62de3a17fcf90621b1dbad173e1a26ba955b7da8f26a8b3beb129ebe5118ad8d000f7a95e7aead9c58b2d632a4837be46194cf3d28b8b304bf467f83d25004984a43682fcc5b73ced4d6e787ebd1e6fdab88e4f53534621e25d92e7e749a0dd137ce3eec1e636d43519f80e17954c6e746f384c1f201ca4bd5291bc2427640da23e08c04218d94451f731c958b362ac3b84030849d1a9cac6fd7f46708ea490e26d8a89389bf77608a1b5e43918418c2cf51e0c9c2d886e1f81331fa87afda7dff158e8aae8d56711f0f9b1068074985c5ac4a39d4b8ecafbd129106266ecd506a5ed169a4c54d4800f55835f2839535f8ab0e7ff0d30d48e9dd04900130e94cb3fe02dd22b5268fe63661a084cc8f538d85951463be622507976c098eb2e631b9d473f26a381e7e9955735134bff7be9a8c52517333b6e53417586187069b1574e30f7e9e10f498f749693be6d04bf82e687b2d7b50e105a57f097e4617e5598c99c149c1f63d6e28e52af5ae41359fc97e4e338b4008a26e8130d7a20f86ec553928c29c00d516aabae23146137a494e2df6d996fd68feeb15e19bfb58abf3b610f9354bbe6ecfb1ff9d1abd9d3421c2d186b1222f6d3d63a4a34f852dad3803ddc1aa2bae4c6a8491e85ec2b2976efc8771b4969a32236fd34294a31905662ed767220af9c6734f4a18ec641d689cbb50b177b92e453abcf7a705384291258e8823de328652c94a28772f3bf2bb4f9f177d75291e46e876d31cb3904fbf1d5c3e61502f4a7839a4bca0ede095b52e5cad5aa7f36c85ef67be7c590c8b13328112de49e132c28284a5facef1dedfe6e04038f4dd944b1f0711d4cd9a2cb32ce84da3ea20d25505ea5c4518409706de8e39fb43db5f80b92961479767ee151e42882d65bf8112dbe8191be6ca970d69f4c0d11d323980af3ac92df2fe1701b12a32e7409f72feae2bc9c9e99ad8bfdfe2fb08700ff8e20cb83f1fbcf73a94b6f385688292ec1481c81f36fbd252ece0100390edc2f35da6aea649cb19dea4eceee7d5f1560e9e42cc717e4e6b5d2f705236d1428d3c0733bc412ba6c4e7b40152103b9db2717804bc205f2136e98b0db06bfa7181ae55c9fbc6e055717e02bd538cdd2ecae3d991033dfff82df4e2d5f4078976a1f756aaa26791f57964ac84107af8e80675053782fe217dd4604cd60ac7e7b5c4c3204364b1220576665622cbb536034df1591cda1e23c6be43efc81406dc76caf6b5ccacfa22ee94a2bc7c78676d8783f19bbf887ad9af896ace648b6a3d3f16e069f65f96958f417a4444eca7e20d27ec03db59a564f598c60f4381aee289b09e4e6a7163ff5c9ff95205a00a80cedf4bafa91a2044338316912ef31a5c1f5f332eed5c9c7f36ea54b46147db034b72c140f9b8d56bf7c1e1e522e3a936ba2009b5e35724ccf040fe72d98d132c0ef44026a7a731ecb2e8b785fc3064fe1d51b9c42e9b9207a17e6b22098649806dcb2c6c517f28606afcf23eaeb70b1f3a4ea745e358408e851a9687518b0c60ed084ed6bae106db4df4d3d3c4a7b812facd0628e9afcf8d3dc46c072ce1d986a3352e6d5b2758b923044d790534b2c67e69a04bcaeb6e819e1e3ef7872b15ba003584646bdabbd9afa498e92a23d3b5e7e78dafbaa5b37e38489e5c626b6d3729fe0181c3303b092f48b1a8fd9c745bcfbdf80b3b35e9221815cb925e6c19b545f90a6386f703cd405289826b9e2b1591a572524d1f67b28380b8f8ce18f56fda1fd5350fb5e4a98ae2499c836816e98dfddb9b297227750458544b72dca18060c963e790c606130268dcdffd106b112b1600ec215856e95c01b3d8e34819005f09868b951c1b74d17afa624382366483e7c626049230beaf0f0e926812857ef3539b018c459b60900a34d0fd4414734bffdcdb7284452194d695b08299054641f210346e0d9ba97dcb15f3a60673eca50d9d732b91687fb2ba4256eec7595bb16d0a04fbfb04b6b1a67118e63bdfd40baba00f2e5c008d21fca9b03dba7f7817e940e323110c3a9f86e750813c9203cf09f3ce60ffdb2abb5335546f9ad0c628f9ebfb7a94a93a7f88eedfb68b17c38f8db49813e755651ae76221709e974da83305d7b3b24e33fd9c3cc8194d3e605ad4eeb8992ebbb60dd7824dbba1f8af13c38853d88a66123e99de9cabf2ee38afced64a29def67ba3e75087436eff55900c304e8d7d313a5e4df76e1f461962626c51557f001eb0893d1561db28eaf07db74bcb2d6b5000f82077f3ec2b3b207d56222dfc013fa59f2446a222b14debff29435bba939808463735c70178de5a975a5dffe55e11300a5e482d00f409f0b97d8a46280d05ea8a9eace665b2d771ba817e855a89bf8eaa60bb87121a223e575a4398a8c9806f9a71ea22c4dfc61a513993a575f9d17145483a26fc9ba4920b282e57ea54afa0a1d6cb71b61f0c636534bcd238514ea9d2a7e47b1a6a3e446de27c49f25fa9d51c684d46a6b806073086d77fdd5a0eb9d49fd1bdf00553eeebe1bf3a8ac91e1dd6abdba48373ce53bdd0d79e1239baed50a790790f8d15406342348b5344dfc9edc074f2b823832182cb02eb2dd1e5834829ca09a08df2d087b32e1b061b1f4357d327ff6e4a463416efe2338a2cfa6cccbe91437e558503d2a784de018a9a41027bd9603556785cdb0d6fdba3e4d6d7701496a47e7864efd61ccf2e81886f4ca8eec9942b68fc6758d306420d6b6488128d167e0b9660a85fea9c9765e445eeba2715bace3e7628d028ffd0a2d97351044025c183a27e0d7b3dddbd4e52fa4c85c4f21af25113f2313c076f1b229c16fc297d18307947d41fde057e6bb17775e5b79ca5d50bda92bb2667114342a3823c50be7151ea5f7e7cbb93bfe0d4e89f54cf711291b502b0b61fc1321b7837a5d5a53440e625726e992885750502979bfea9e00585e537422a9c91a7a1ab3bc00ed81c9bc918fe30815cebf3848acf4d794a0f396d2a4c24f3749b2c2ae610956dbbdbdc2de498b20b5f974738c3a8c9b165df6fab6341b15b0349109516831b3eaf4b1857cac1b9642931bda24f0237e0c622ee321e8c779a6642a320fcc5f3bba930bd5e519287e6994ff3dfecdabe844cd19d916f841dcacb63105566eb9ceed258677fd69fd0eb6ed95553233b21c1cabd0e4519027544edcaa9808e3e5ce29c986d5735567938609ab6d9702ed0d3c99c80f20f7b8c2594e5fe96fa75d7d92f9ad0b235a1a8819d750450bb15a11c4fbbba0a10769962b25cb18e98916ad97b29a27f89a74e98fb0f2328e9f93dd06054fcd96a2870e699fffb5007eae062c748e03c1b850dc917c1c2d4439a05081d37cca5346107015574e76f659653d8b78e426e8d44a2abd4104d3b89e345e1f7abac4541903a6f32298e755c42ee68cf981db35408451738f8aa0f0179af9edda2e193284d8f04f34846d5f3e41828f11c7feae55723ba64939dedca41c58d0fab71e52473224801bff2fd44f6edff8828f95a8a866d2acc018983c817ea50aaedc0c5653dfe4750c15bff85375ddc4aa75ae699451fc9d14f9fad3b03894184a8bd65f22f4312461a39e0b0654b0e72aac909aab1912b4d5e8e7340b2759fd8911eea33115e91eaa2bb191ba096a344f8f70326dd154bbe69bbdd8c355269e0b52c20935d56ad89d9c65b700da9ba53681547d43e11d03dace43f7c5613553843dbdfa9dd006e9996b6e48077c7230e72268d84743382d3652e1f7368fd72858b2cfc3b80c3337189f21b640bf31772f55315e3942a88928fc6b158c286646c7aa938b4c5b58bab1265a3a1e2b2f22152a0c49e8efb969ff7b1e10b4da35521f494ef98931a5e53e41c442a7a0fb0d4f13867f821a0900cb205eef13128cd536821c6e5dacb98c11bb7d5f22c770f52afd6640d1343aa301fabf5de729c4120b544b45776ff3d51f27a14f85e12a5a4e6cbce46713e5fb6f969be6351ca2e11224a11405eeab12cc7af41e4d2c67e6088b91f21c85132490175ed036ef1c2cbda6941c45dbf046e3637779ef068c37ca8adf8b79b079a23e8e724323bf28cea344e2abcd89cd6f3f2dcff693ca88a0a16a57232484f464be3dbe47dc5a851b372026ca256c0f407b1f1d1a1bfff6d5ef20fda6416d641a3db31d58803dae090680bcb272f48fe6a748b6d13007bf5d7598da49f4b646042acf0e437362f5534beae17b1e8759e4ebe1080612e155ccfe285b3c0ead8ba9a433972a8f65f0369761d4e43387905b0ef828fa4cf3bf517588646b4ae3fb73d654094ece2dc570d1c0833104eff1818164d798309815a874ca7532387ad08906d285dcc463745e2a3ea393c56d04b21878af9ba68050dda0f551b622463229a6ba95987ecc6c82f6ce2b4226eeb707283a0505d6bac8292a7a190f9c5f9f6be0f8f92d883cc4241e977c622f8e2122ece74b3383b28598cafa09c9ddaefcef8cb229091205b803e3e2cd0006410024f515cb5a497c3511ab43866f28f790e74598658aedff818633a422127a6a855d4bf1d4694a59595c53e79968db1f396b702b2705cd54c3761914e09801114beb527c38931ed20b758097a6764aa2906826ffc63ac8d154feb8ce31e6b8f3de0272e5613e22ce5808032bfc28e97f53caf9d2856f5045344e13572bc097625ee48b034603f288770ef5469f38963d1af5ac08f1a20414fe2e5b560f887228ee727c00258f32dc3f19bc116f99cc4a385787515dab1cb25a8267478f6932172646d4c210ca405cb4ece287fcddd5802f04fe00e224dcfe44c5650f912c67209880fbf726b6420308bf1998f077d4c234c40d0eaef4f6f4a4d0de63164db59025d072d3c423940bd09dd02d1c8f6cb265bbbac7c8994c625c34acde030c0364cd34b6d20c1b33e8d3526af70a389db7412cead5eeacfe8313c21fa36b76fa1c70cb84d8accfbd221e6abcec32e882aa8d4d6a8ac04ff79eb3ef11a9611df2c32c3e01b6a890a5cabb638b1fb6ac596d35cc202139c466c6ab3810f8210dcb04f8c5f6e876c4890460dff34e5c20fc4b92ad95081922754c1c91f96d70cc5a63aa13dd6beb2573f632ae14ddb97eb30f5db08ec3393a592923327b6db66218ad8a6513d62763c99f187b4e1b777a5769c8fab33522bc72a8241ec0185cc91e1b68859af16d58e5415c89d7fcc635f8efa7a50d6a17ac7b36419151a77329f9184bce41215790c97bd282940402086d12e89777b7f42e61c0cef84386a64d6709ce335db1134b5d645a93a87d38c019b030daf8abcde62f4015c5721762683030f6d1df009b4a7917e0ddd8c723eeeaa3ab48f652b3ae3c9778c4083b210461de24d2c37193bc2105dbf2817fe465ea7e2d91d87b431d1d987b014b96eae12b1b0ae919751a7a2a707c19e4d52ec906927ecf1776c50d486dd044b50216a2187b3a78cff000c4f70cbce3f86f4aaaca1606f5ffe4d09ff9d77deb96a8ea0ab0ab9203c74e512ec9920bf9b0681059884a07611dc13beb7a8a0a5b813c4e01a3a42a60c8281ca59c4a74c5029ce534539ff45b7f68bbf4741965ed60a29f5bae0e4e9df432c5c80472ef075273094a4523e9e8f15cc7ecedb9782aba8007569b26abe11e6fc9b07f28e044004965c039261b77e50afdc4d0bbb7c0c97d30ed9701d726fee60c18bb9bc669b2247be53f48c766be528fc6f5735a4721bd2884267e7ae7d10713db320ee9323634cd48bf882fc47b1971995e8ce25723ae8d6dd2aa26cc7365db3fdd2be56b6ae53e75d3658c325e7b67d91a7cafef3e542791014404819ab174fb44e71bf95958418a7e4cfda6a73d7cc50e89e646834e5597e19fbb440c3d5f711aaad3ce341798d49ba27f8d571b9116aeaa72602d0ace6ed42f249019dcc99774bf38aaf3234aabb415ef59dc375a33d5ebbb9ff10006cb19f7afaba82996254db2924656dd58b96686ced0c5febe5b406a998bd2676fb3ce5d4315214a7a1dca8006168f40ad92d27fcce42c513d26f9863212973c02e9ddc43bf8933ace113c41460cfe62cd34de589d208bc6c4f5e8d84ee423e7bafe6e42b4b19c68083eb7a827342c50a46083b647a090491b7a17d73045df2e09b3ea0638f4701f9e6a77fabccf8ccd78d5afcb25024bff0eb63f020e7c04b14e811ff739cead9cc6ceff20674811c0d5f3c6183e28d05c366fa2ebc5872c714ca895e1481cb5052de06bac48d50024615faecbd61a82892888711eabbc9c0a0b4f22ddf31b8c734766d05f0dbfb1643d3e3c8db1431774e85f5b734bd8dd8f80e24cff45c0f159f19297442f2f226e1cafe3a4e3d399b19cf24b834b7ce1bff08744048a165e4579b1b409d9f331cc0f9f514d316ddb74d9bd1e63ef975dd49570ae54249db3f48bdc721bc8b391a55a3dfb38ed568cdd7907be73dfa64bf088e855126512fc67fa6a64f3751237c0969e565b85f369b996cfd31c0b94686531d4ff8aa8af0a4494f4bbcdbe407973c5fa3c5ab0246f8437c5fe232429e108a00d614bec510ffb92e23d4677df250fad7c505465850ea5e15bf30c042dfc0b31845c1d30ce677c6b70860f1a24dd97f314910d7ef9d1339f192bfb01c888b59a4ee5e8f527202ebfcb9644d2de0389d32f179daec674aee64745c8e229afd186800bd30e26ed9f869a592c10723acc6addd66592c4e2deb48a3eff98d95f7d875ce275a17c02ac580343bc0157968f41b220ebd97ba1e0d7d89a9666614db3c5261fff6071c0ef5fc1b8d20a48e1b1d48c733c7f3e7a950387ddca8c9c9bfd3836a7231fd328761164b7ef987158bb6bb38164af044ddf4e5d4e5cb1a66f368fd82fd188870b0d05cf42709c35d81e11a4b74dae9c7051d083e0664e86c329d6c82c62158d3029273ab5c55d5d980f989f60123362e1a9a1edf64fea1a63b7598ba26398754d9192802366f3407db84df005abb7714322c998597b36558ff94f2c048056f187ff24a15d4e8cf6f28685d72c335ed05df4e9c2413633ad26843b4f9689fccaaa079424aaf9aec58fc5bd4c1adf8a09b67a9f60e7037b7d9c511b07ac8e24eb19016f3905dcfab79838ecfb51c9f7a9044561c9186a8ca201b67e6e80dc3385ab00d730d7f0d9c7894f104504df390bed7bf991ba79a47825ae8f07b9a59aa8d374166e7a4a081da343a6bd3c82d8c2d13acf1b5ce2281f5409e5bce23314cacb68a4834a05d72ad5aaa97028f1dd584c18acc9537c5d4572695e4591e2e7316f5b3ba05b2223432fcbf248cb9354f361b811488a261aeb123bbba566fb254703ef31a6f3c3042e57856ce1193c3c174a5b50c9cf90b91be0a64360042a05c89d95479c1bf830d3813b380f6e81cad7c7164cb741078a0fa12ff21b736d4c7aaae00e47123a8a9c255e79681facda1504441f5bc881fbe247760eb736ed6fd8ac1a33c8f22f826d9462b5c921a8153a6803ff0be09143759ad93f4a9ee5b450e03e0150a948f039f9fab6af04ab7040582e7fea2a28ec98c3d4439513f9f6af6baa07da6ad8b1c96f4d4882aee8a2abe4ebd36fd003f2a515f68a2795ccc738b06e903cdf67c7acd5b56a50ac38dafe2469056a8ff04266df73b4fab9eb630ac211fbd71b45768b8962cca89ec4c55be72753ecea1217aac67df162bd70d73805b69af3f1a8e86a6cbb5c298bf4c454001f0fd829973ef727e8f751485f2256d312ca2ad752f099d8fdbb9453cbca22311f6b67e02a0a0bbf1c9e003a8379c1dc27b6dab27e07677ee49291a39c1e58e887ccd537bc3f1dbb3889283ced9eafa83d75b332566a686a6e3ee3f4806fe53408057cb5e77eb572719baf70028ad3c9730a7106e7d55f0814ad9d862eaef0218d02f9cecb6a8ea65e905ab227eae3997afcb3717cd05300ff58107f5d5df6ff23107b3a0d6dec0421ac37c5aa523ac1a8c2893230fd56079603b7cac37e123f23c2e6440493df0570052557beab3f912a7a4a732a4b6a7475c4aae34f343e687dc86da017d28bda889737a8371b146421f2634adf29580d0aad5033df558ae8fd01f7ddacba015d1a1df23619934f2bc2876acac0ec5a929113f060724ec6de251860ba33faee439cf035db8478b7ca613087dc71a8ead524fa3d4388ee59d115e2c7c56d91fa2bfc6a9f1254d6748bfa643db47001504750f732fc99e0fc21ed2a627e4a5f498b9a96febd4c1892abc9fe725e8b93b7ccdc6ab838ab48a1d8530faea14010b2bf082a01203dc2b78feaffd21915ccd575b97fc3b1dc618911138983a5ffbf24b7eb50d7fc5421f9c6d87ca3676e79f5eed4583c1edec0d55c1743726e098dfb698e8d8ec8e11f57056d5eb54b5454187d78a6439de7e954e2f09ab3733fe53c2860d792eedbed74cfd6ffc13c86c3b5a62be8f54c79d2200ba1e4bb216914c8d34d6fd2e4aa0beac223dc21ff34ec0d7fd5f55fae740c5d30209093d485eb5ac0c7790e0b871f48f0d5e3c7467e222adb00d4ab0c1dc0f2f56e44877370cca27d83030d832cfa8f50556d31c94b1a2906113ef01bc3f02b2d6d9744fa1af4628b0f318a8e494157129e8dd662d1f59d1a080cc2a9858dc0d87071060f075041a4e1fed793eebca3c85066e6f0f961d3b04e7b36a821c451a9fe99cd65cb45b99bb9bbf7277026cec260914fa7454e17096268458add3a62eb1c6022efa6c97f1a4abbe2e3d1890d3b280a92e923fc426e892c4d672beb0cab33368e31a280e26471ebee8b4a32b67e187d1ba8da21859c08ca1ae25ea98f046babcfaffbb86edd944d167e19b717925993e30648c68cbfe87b88fffde2939ec30241f85215eb0bc3cd7c527b3e0489674d9979b058e3c8825caeb39243a0d612ef831252b4c7d0599b9be56e58043ed630577cf0e42befe344810ce72b40e19e443bfce615687e20e9fae779f8a0c69b1491f820115a25472d7cb5d398f7b81b0c0c2ce77013222b87c9fafa05671b5bb0568950b23d9c6ffcd9cb86da18282f855cab89a1c3d704f5a24fd1581469a7068102b16fa7fd3b6ec404aff021f748abb55bfade354f9408e9c3472758e59000bcdcb191a921f872e9b60af1ec7b21d94e35a636e0c537b41d4d2a677694e2de5848efce9f4add69113f4db5707c0ffeb145f9024cba3348727cf763c8ac99e4060cb79f6aeefb197bca82e6fae8e2a831518f218904fbae92fd8b38c605b034e27315ce9ba1fa41bc20b4883097ef13357c736459d5a3569101731087b9c60f94566c7ca86dffb2922a6539b12816b41ef43f9b183e60cf8a6c7ecd6b44bb6dd733c1bd370ba47bcb18e1fd24238e1a050a32aafb20806eec860b594250bf4a50108f71fe99e7a42acd798c4d95f50c64dc6bd63042e27c26eae594b68effb4c6067ddeb810f05df31ac599558d758d855ebb9b57623d031cfa8dee9c092d2851f6ae2024e9d8e3a820b9ff3c3af8d204c0534b10353db9b20411ca4b961f4cbcd15a6cb9149abc41072a4dbc67c6b3a97d775250b31d6cb6c6608d082bc6fa4b97fc4b927ec418dcb754ae4af883b3f50dcfb282c53cb0f2ebc3dd0a203b8954ba28b07d3c61d52e150900ac741d89fb85a76b33dccee8022f4d886e91c9c92e1ee69481eb7cada7847ffcf1f6afc4b37a2ba62175d58a9ffb8939292c7e6b74f307f9db6fc5468fc023588790b29daebe78a9aea56cbc7602db343aa6e8f361ce220a283cb45cce9d717eb70d00583638b594158d240e898ba7abd4ba39992574ec219bdbff0aaa1e4f35a242faf99c1450f309011b95956808a75e7f92b48af8714933cab7147df4a3e4b78e2c15ff14302005a74f1200638ec7980b0e614d64c3d83d770e60eac24f0cd461397ab61e966d277d0a2c0dda06babda13a214bfaa92e4d53fc2e2ea5cdce395af7624692bd272e6a590f139d9ea25a0b50d6efeb138668bcfe363dbb90071c46493550efb4de781b844dfa695b650797799bc41beaee46dff1793edb58881acf5072ece46f92d9cfde87062fe30a5d020f0f3ccd2e9e5911e52abbdd1a29e8709c8f0cdf108dea402368340b1b69952316c6ca6f16f850efd4ac4989ab234c9ff81ff7c40d905572a432ee82c93bc03e299c602701d6c481f135df358fae136af288edbe28d621dc188953fd925e8cee54181c3a34926c1d897eea92e3b18c01f7e5f9daae983a051ad863b8e409a929e123f27a0e1ab5b8f0594da74242882bccc3083fca8732dc0fb54c879aa5f0632bf92466d101535ef3c27f8d471fe18c2fff3debd03d8a5fb49bce5026e3fd9cd3e226148abb089f84185d594d6d547b6de2dee3360592f184c67ededa91d2f0ce2dac9093daf9f01510e65b547f8dc495dc6c20017ed1661388604aefe010e82c79c82319bed6abf51a4492b35844b0f613497454822f70633550b8b07707fc6f7493c389eb8c673f490d7502c0f849338e5ccd73df9b1600a16f94992642a87f1236bf41010b11d1f300d6a2528ffa0112cc1a2c69db7bbf8b30861623b9367d018bca7ba528f445e7bbf006966b1536221a0c4d49e6635e8f0db3c9783a60ee2a241f3c786125030cc1120401815f132caf64ffdd8fe72f35b79320d30457cea9fc5da4da3101496d928ec83e4f88d80e92c98117db61a4faf3d41f9a0032b53b000a6ea567ed44d79ee451283a7bb6a9eae0429073c538f7579b254b7b8e69f87b332552aa8da4782e0dba022525e1bf0e7e83c548a6353ebb739710788971c4860cbb74f22f04469933773c17d97c133493b28c941cf514cdfaa9c21d15b05b688d143fc98475d72cb5af743bd464b3a8209f87b07280c688027f7cee4f226ff3207752d3c6cd28433097c045eb07e9c40eb68c7ae6adfbab4831c8d83be249509162268c93b9823d3df3302bf7f512ad6b9a3853a4fda487b790e4467067f6ee4c4a41c61cc6ce25071db05a13b1836fdd09bf1727bf1f26de46e964fe61af5978c60bb332f7c6e5e8d3b77bc7c5543a225799a9aad18b1fea199602ae534617fa8ec1f4ea4c47243dc7aaef5c22e8057db43bd9bea98d6bd8373f60da7d653d4068e288f299ef922c9b4f2416e4571c74ed629a384f0282790a90000278c7b797a8408e56569b1d6a38d6d3a61deec635469d46170175cfb53dcfa60423017ced2b7588c66f56cdf1bcaf1132bef7da2bc797b7d5fb91ae5e2ec9038d56d15e9b39ad8cd5d1b70fceaffc62b0abd1f8c3ada10874d08bd1cc453fd74f4074bd05a6b1580873ce8bb248a9786bea0f9c052ff8bf6d0fcd11152edcf6f45b2ab172cb721f5c53a1427376e2db9ced02eb6c4a419621f45fab52a0b1caa02fe5ffe83cf24cf4eb2c7fc1e523430fbdf5dbc37afaf7e3b64ffd185935023880a7d1e2361345b94eeead96ee33bf35581a4171727e6842ac1c2d1e7eafed7653a3342576a11b38438de5ab406a2908c5c35a9544d49913612a37e0cf0ef87766045670d32d6a8296c6f8c2bccc5eb11c11630cffe3f20da041ddd0cffe6b14c1b56692d224bd3113c104e50f121d572b549786ca5faf12870f654b7dfab1be910c03e2f01c397a00fc968dd34c48e800526d336bcf9e6fff77ddc629460b5c23b8a528feb758b16d4a14466ef6aeef3c4a9e2cb654c2b35706bfdf0d1cb33242c5b8728ac728056a117512d5f42bd76bc84249906e65ecf33d614bc93a392579f2dc6ebbba94f4dd3f0183830301ac941f24c2df6038f88cd1a5b95e68f670277839b82fe4de1428d515bc7707388e15cbd698efb9bd975f25385f3b96970d0946396f085ab98fdb072083992146bc2e8b9f4a6a88aec944a52bb034d9426fc171086677cf2c31d5f8ca3fa9b28a838147895b439f74248d8e984c8314303e5b74425a7716d6c3a1f0e8587f83293a33079db05bbe7738154bb1258aa333649fb19a4d7663c14805ace33be8aa8f2e7c76cbd03fbbf34c6ddc7a083cdac0f77ddbb631fb42f32adc7e20056c1f198ac30b235cc82de51ea1ca2a448acc515d71510d8f5bcb167987503ec6f3e56478764feb22b889b28a9683a40b60fcc483220088317f4a29aeabc9fa6833d85403e167aad89a44af5f5d7ad78044b630a1af3b13f8ef5648f4bd5d968beca47c68709c7c1d79b90c60b9100a80031b57a39c81cfe9555de8760c1d28a7f6772c9b9775ff3ccf757b957c7e24f9801e3b3c72514830cc891955e3a4af59a846459ab966aded6103832a827f881e8ef4e928dec1f444ceade11b45307a9ec6e05cc8586d6786bee37b346813fbbebafe86cedf32a98c773698a6d1293baf1f68b0f1ef6e185b774c6c541387846ce4d97641fd79f67207fbb969ae842d99b9f7968aac8b2fb82b1b6835ad6d0409d7408fcda51536b39f703217437e9f4b3f950219e22a111c1cfd52f76afa0bef0ccb0f8c3dcd0d6a855b1f8d17e921da7991b95fb7fb9e4767a211b7c7d609695c039115b71f8d67bbddfede0ab9f71e88f56ca572daf8e8e95aa7fe8dbe40eb60534441fd4ee6c81c0ab4ecda5e2d6b441f832f62d7551a43b01704b45ac8881bd674f700575458210796db37acbcb6ca75599f7ab97bb57783ea29055da39d848e50af121e7a28da07b4cb1bc72def86dc7c1b3e6d55526b151021d83e7e0dcbc65a75889af13f6e35f19a725ccd68a9e019eece233f5de2ad109ef87f31a968f01d0497ec122ddea86dd553259c7d4c7833c7a8f01f9b87a8871551dc668244fce6926129cfb5b1eee9b40d7b9fd2e342a916a98f45f78f9ac0b030f176e7e21695c1c23bc4c6f6f054406a12a1cc49fb57226800a677374a1143e5ce1e1722de35a16b484d4e17d6ff9fff6a91f0f2f869e32c054e7822aa5c7d39f4ae2304a554908d8637de86261f4e5abc43cbbb5be201c3597cbe2223d11a5d5fd435a78c9a677cb64de55fa3c3ce86fc27ede38d35603d0154dd0306b20844ba099d3f38bf20e6a99cabbba5177fbab78234597b9c3a1751df8b2698a499009106fb2a3ca9a2a37b010cf94e617b9b23d3428baa77e3eb08ef556c063aac2bb9fd8c21f178028731f0e2ff70617b4f607b1800d0d7ec815c07e7bb3751d729398491c3c96f89d3ddfec0faa359df9d1894357e649ecd04d3227a587d6b0c65003cb1f687e22543a74b75acd73a8e080eeb7552d6dab5fecfc412e7be7b5b1fbe0c60e462ea34b2fe657bf13132dd2d1ee624e468c68c0f90d2f727bc0ad95317f80fdcb336756787491f3ce2b38933db92d3e4da413f675e867e276e642245fbb63770d3b188d6ca93a26912ae5640f6525f193969a569df3045909b08f7ac2a23fd279bfd9c3a6aae7a5b0994d1ba4eb55789074a52d38248aa1c7292e910cc107d08861feeb438a059f0e853bca1abceedca665dd598dcca5638e0d1df5cfa16f76aab66f5dc805344346554aa6228057f551549e9f23229a04d02744e3d07cc551abf9bd838238461b4de9df12c01e3ecc1837c74eba23f502ae22dd831621d818e2ee8d6cd575b1865a8b1fc7acd3b5aeb15a71e8c448370c0cf40d5b3a5ddbb3097b9a24b9bff11580a2f4992fcedddcb5a0f6f2ae2ac012fd203f2fb144cf33223a2455356143a570ab5b1e0f7cf0f262342cb7342ba7f1d2c9ae1adcd0077ba61f4dac2a74a181e5ea17bf02d8fc398ee591fd88ce0c09d2c3891a5671ec3019f2eba74209ca5d64ccbe82444c9edc9bdb6d414d1980663bae8be159471c532f6de743525b7257a8002191c67a6944074df8dbb99530a4f4769501c88a97e4e0348214341873b36e562e64d04780e52a8725a3ce9ac8a3e3b9e322bbbfa0c5c0040b0e27e8c4cd005ef7f7b4fb0483c4b8c641371917235d498d928687032a3f51a6295a02c4fd68e1004758195416232698102a255e68e93a2830994fb4109c8669feace8abd8fb526e9f7bae5a797a81b72a5274956a82f926796b047329c615ba5790d25d513bf1d8c80aec6eda5f89eee65bcac3dada1817fc5e9199c65e91b89ec4087d9fe5b372e0262c4dd2748c2aa05fb1b8004c8aabdd0dc603f8619d60bb49b93ae4b6cf54c590a0fef865fbb73b5acbdd95f1fc4d694515f94a592dc1d1639844ef7094c8b228a532a571e2ab7b5bb4d413fc3ac1ac10488a3abd3dc0f8aff4c6fbae5e59cd380f099e8d810b3bbc0ccfde527995f4e3a96e47fe2150b482c51c4d6e1f42fbb8d2c706374bab067c7b7196c3aef7d96f53df9d5073ace0de9291b60086e7a2c25c69a6c63c90e432762935326fd10c4bb2118ad367b09074522dfd0ce47ca2027a27061c1b542e879b6436200bdd33b49e8575ceb5a082db2ff678c66518cdfab9c2143b35c79daf84ada1b8f364721eda356136bcb8fc549de26011219c438f4685f8cffd5c5352aa770cb14f5c5d5ed1726fb5bab55fd2da98db815bfdaa5c5a74cdac2e6ccdd5ee7913099354055238a36823eb4451d0dc1a5595042ee599416cacbe6ffd7e14b201544238d5cb71265dfae003d8d89c76f06b501ad36694a4db911a2d59e066c7bec81c384bd7aa2640f603efa72d5552470ce67b00fd8656c1d2e1b6450dad3c7fca85f5cbda1e3fd8d94e5b88f3743198cea2842106336b354297714e34fb6b6c2402e14d9d3eb81544adaf3b63b85a7d7290cd854f730723ce925b9e63a01832e1daf18c69a7dafc2515c440fd6354930cdc969c20aa34e06a32f9b481fe9fd801a1c218f4aa4612ac99e50b5730de9108e82e2ee6cec46537dfb6e67a91bd15ab263b2be8d87a24aac1e8618114550af92e3aa5b3ced8c880f8fd5a32e4e90f2a215790534b22a2ec572da7abb33ccc74d39bcf03bf1b517c3bea81ce01c2da236f1cca011afcc233222606d37edf03479655b847cdeed10d85de746461d9af011bc8160854af1a88bb61bc9bf16b336df7cbdd5c7bde5aa02aa3192d2ab98d6514ca41fd33f64ffccd660c6269b72a8895ff022b6e7f26264df019c3570909c7aed8d7a5814fb0175be59f7a311114abbc10054feb3aea06aee0bd13f926082e5c5b0f41fe404935d199f2644dc2e117e9b1d56556b509c9f66ebcbae6b36855f25039124f0b3325888b2c266660f0849cf47a3a388d91b677af93d28da509276c14953f66b472451cb6f1fc16201be497a0bd28b38d76e0ff878c79cd6b03795fd62b5fd85cd51dc595cb74985236186fa21745aa36aeccddde482f1842c79f33a4fe2709baa91fe0d0d0321bef20ad8874ab6564f52b95f062ada5eddcbd4fce364204bc01e995edd0e231d567c0119ffe1d5b7ef7c3f6071d7b36785e997b5dc0ea63e52797de7d8aad173adfa266f675fbfe0231975f515141c56827dc5efa3df7f335cb20cb8dbe814efdbce62e003d0c1997be343c0d8370f2d8d20069d254787c1c500f784a16d00a4299b1a9a322934c6502ba1dd887aa17ea0163a48396821eb263317d496ffe7ad9c762ede2b3b9d5f2a67907666be55b98451e8e9fbd35a3616ef2da10aee60b9efa95b0681e2cccb5376ded86a16b834bf514089fc9e59d96ded929191077c68f85511dc730a433eb6e24c62e794aee2b86569a92441d247888878880ab654d875ee7d72d250c54063354458effbeab833cf98fbcbe674cfef41f9dab581777c3d9e161a2d0222746704f89178703788f48ae5db44c5a6b766cf286a3f9815692de9fddf7fd1a298d2b71aaa8f64639315a861f32fba0512acb963611fb8923e3e03413450d12ae689b3095149f50bd5b104fc802ffeb6095db39c6424a29dcf5c4d1185c48dabc1d0133a052fd771d951f26a4629c0f0a0547f096b1ce7b906918423e3f9cddc0f7020ea9c68632b8cff30909ce99a7ac761d717f3cccc78b60b665d791d9096e0c47f2505053ea88f40d8a13363ccdcad8411369f9db4cb9f926206d0dfa82b951f83e70d426a34cc21d0cc764dc24d26286594f3233fc099276beaa3d3929388cd8982d4c47c0aa4d51030b897ec3c83fefe8cc46578fe17f7d3a7614ab6a9b3c20608ea08aa14c0ef771cadb808607ad26793e8174d25feb47ef8351c97548ec9a1cdaed8a4157eb55fa7714825ee9bc8a7b438b1b14106cd519c1575abf6c69971d34212ef08db14436071d494faa9f4ed8060effc879a1c95033049b77969760b7cd56c2b852a59631791b0989baf008903bea94b82a2b731b35a98626cf23e08702492bbe55357e9a935c8f23916cf14f4dae0d14c0330302f912f69b012f58a29a1a675ea59032120db19fb0888a51938ce55feb234753c34a4c9897a14dcf104727e8cd40f982ccae22e7dddcc0e0f64e4e09e0897d657d9ec72274767292b3391c93f36f6d5aede1109f6359cc8e19bd7d2383febf02a65cd9beef3162d4ec727c7f86074834bffcae8db18d3e90cf978f1ca5d4900fff54fd2ae6553d2873263b82b6dd427c84cb5776a1cb54417007b164da2a8ddbd7769adb3e3c1ad9879060f8028f8406498ed762d22ca69dd4bd55c78adc100874d72fc0c63c77645e7115966d6b9a7022c264d73e16af79b2fcf349b33808b87f666fd06c01b5f51ef4ab7bf06d189435c510f470c81e733d601ba79352b5c8b7096283b017580625203cdf28252c14373d5a704d768c0b19bc529c5cccc37766bd4078ea4ace3f094cd94d1b4a209141c75b9c220a2cbb061c0713e6e614476ffe7fb6752df409ac910fa87522796b5861c46b0bc7588f3106db7dd1f7975b7960dc3c82ea110af4cb6bdffefb84bccf51a60ab51fa639f6d360bc9bb3002eb248dad898d683a1b8a920dfe7a505401dd1a47c2f9422f9fe64fe365b909095ee78e4d135b002b886659c03426635f0b31f180a1f674b749456769e8fda1425058af4f225720d14706d01d13937827644ad34fab789c890d5a7a94b01e6c118c08a555c45eb6e13c3d85f363757876cb515e703102a378861166b3e2aa73879410be88fb6c896bfa93fdc5780cb8335026c877964e314ae75323417bf01f0db5570843bd87dd77fec7673fd1d0d950727d6a279cd5916ee2dc2d4d5181e49fa251c0a90aaa4fe99dbdffcf68609b56972cc6783e9c0af4412454ebefabcf83421cb53db584f595f69901a8c3caf846eb485c5eff1ce8128ba35d24075622c5671976498611443d80a1801193f2989d6369b8d6b6ea120fe39c27f069d2a29379e678a0944838e5ce70c3f51a18284ef713f15c9578bdb1cfcdf5a8bf9a5d58cc7d4b4d4008eaabc09d8e7adf92d889d183e2ef1e85d4fcf98715e1b2a944413b8bf2c9b6b776a8da613fb7535b4e0bf49549e9218c50c7de8d16e25f370bb4369289bdefb67828adb1960009946b8e037daab24b2c948a42b4813e2b31bcddd2d484afb4c8dc8ebcaee7d85aa6a310bd01d194c5c68be95e205bb6e64bfdb1e4dd3c1077c0aeec3eb0733ef5f35a7caf3b5b0cf6c23bc48e2f13ba619a8ab71c161b6db7f73f18aab7fed86e6c9898b683dd4881201e03ebe443ae98f57fe14d4928e5cd5b642c9c04d7d405b42689b573528b20bae208da73da37c94c3d2bb74c43a2a810e15a40c21631455a2857b8850c80a35df2f02cb795402266c843ded69cd40a6e64f88a6b296706526d808e09d3a491e2397365d26827c3904efe62a4cbe0546143e0a9bac0ecacf36ad32b9a445bdd9abc9b2e880e1609e7735efea873ca2de10356e38e904af500e8499d49772da4054e37d5bc4dc2e2b0ff73b8d7bf35dcbe0e25a7bed71f0017f2c871e61cadc44dc64c26d6c2dfb4065f058680c3f7dc3b9013fc62371310fe25ccb9bdd82f2f6e15fb3f57746dae6e99d5f37b733e0a021c2b66b08af360a443c2169d36e123019dcefad961ab55a660cf49c75fcac656bce12d39dcaae037f1125de326da59db6bfde283b0f20d41037195a967a0862c266fa3adc58e4ebad3a570d9b609baafbf4f7591df06b1e3ca3e0f498fac5d5c334c15d9391c9422941fd89defdd31f9f742b5220e2dda2a380f1884c48cf66141486851e0d876bbb3304b5cb6e936fe47023527563198c45ae13ec6436ae1b7210db1dda9b520507ecbd5aad9f5c1f48199e20377752a511846fa75e5223fca9287533709ee005a5c9a9f6dcad6a4c3287889b415bb89b5fdfb5b76d70bb0263b9ade72e14e60a389edb55e5c7c5a4664a09df654584bd5ffc0cde77dff42db54cf25ec1ca2b0a03a7bc207c8227ea474cfd78d02b70d34f8faf5aa14ee43396fb5c562702fccd725560a8c8fc52671b585c28969847a74b29dbe744412261aad608ee519392d9006348e7111e9b660249e782cf9948a866230176fff7c4bcda4f513aee36fb31b1d1fc0fe20ccc969c51803f025ffd7505cabcbbc2717cee750e0498903b9f054b1f1d26323d8068283940e37379cf3b255091d7da4c0f0e0edb4a36be27f3afa63d391718b75f264a298b1091a1fdb07b8c144b6d6f8bf274dc3f4bb227af4424be0e29343b1ddf54e7df0a92131d488a0d68dbe78a7792cf3c9dac86d5f027a603ca33631dbf1dcbb565e2b75247c5d19d60f177e315d218493e6f6208ae819caff7ff2241125634a5edcccd7b01a60ac478acc2874832be043e090f12496b2f45f3b9d66f71f9ab60b1e5a359fcb12be70e3a1369464c7709e96db8a1dc003a93b301137c78d12b529b07e570307eda4bec8b64eccc076210a1e02f1ea968992139af7cc3824abb094c00190ee1fdd355fc816204501ae09c9754171148b2d01cb6acf196aa93ec38648db851b17a8281990ef812232733bb688071349bd05d57e6856c2d1c20608ed7c6c7ce9b45f3d84b74a644663ce986ea34fcfc928e8dcabf69d2bb5a6219325dd6390e91b992dec643983c2864c873f6784208460161c60859f67f5e65cfa733a573b58833998821d9cd949d7116cfc0ccd917a7260c21e5f6c059e84be467081c120d6bf59085d76c5fc686ea379e2959d949f22a20e81ba471804d3646801ccade43f13e08448519eb67f0473378eb863345b8da00964c2c6e7b4479b087415038afac7f2b63c56ddfcfedcf8db14f4a04b235a37ce8fedc359d690183b516ce6a280abb17ace6ff172b990cfd1b5a15b2297140c7863251bf8925ac66082e11fe3fabb6e5a75674e07ab27ca45ee8acf67814bb45b208d4983901c309b9c3c857c0305b1ac324aad1e963bd864e9d46cc85b0eaac781ae6960d6bcd2fe42f811770c195eccd070df12ea869161ee0ffb3d66a504545c36c9e2b790f69daa519b75a1aa6dd6b7c7426b0d24f21095186eb17d3fdfbd6abcd3cc751afd65dfe88d8fe2ed8a16d6d75eb18ecde698c9698d5d1a6e170f07d83df43cc78d2afb5d48e00d146215dcbc26ada11507240a78b27dca7ad2d3656ecfe4d4d555ef774f5901931b41cefb566190174d0faf655c7d6d9ad74e92c9b11392f1d26ed22f334d59e1ff9b50f888b7468beb6fdf4791d836e31e538ced5171c22ab6e7644aa8e6566bab741b675bdc722afde8db6f1bd1f95fbf51cb2c6242335b7a4899b830b3616c56131f49b5059b8d72ce1a202c17237432d9ad42ab75a88a094a66872db1722654b2eb3ef6abc95bd7fdbfe6e13600cc8cd5a2a525fa713fdee5208a4bfb6ac1019d2d8740aebefb6880870cbdcd35345a383a452872e07b0f2f492838dd7439fd6c7da2a1fa9664383dc4a0dc1375aac81a93d743e296e0bb1283680196ff6341b2dbea48fcff52a91bdff01bb23b490baf87cfb76845403810727ddc7a46d1cb324932bbe6b8667546f66b319adb9b21551040bea56449329ae34472d1f6d6fb6ee8faf4e281fcc9b0135c02494f49ab0b4b41456bfcf7a6643fb213d4ec499ed6d26bdb5883905f70815e0bb94a69e39966482878ab831740d883b222085307a9900ea31b5c288ea5c09da96dd6450a23bef12cb0d4e4751100ddbaae54f50ff88e3d03c10dde5b1696b35b7b9750889de7634f5b994c2a11ccdb4dd4e4575ca40cc61d4a74a0842851fb8ecc8756f1d9984268c175d6f07d572412efd0e5295a030131b66c8722c5d7573458ce8348a3ec4b7dc373b33e555fd95985cc8d723970b73fc7c824e10f7fcd8ccd53b04e0903cf17073216fe730f7551ddbbcf26f2f88c55cc415eafa0ecaaa3c0819d425008eaf1db1f19f2e3daafc0d19b726fdf5a8f2c2e9653e2d698d51495545c38ba48e836005399e649b0df60ab1cac65e60e39f32aa73905d95cf84f2ca61a2704c1769d077301a2177b9cc290d992ec7778b1b607129696e4327fdb8bb5043e89177a7b5b11d077dfa3f08c46e133a90346be1b5e8a006e9137053cdae2407ea108f843daad67bea25b678ba2a2ce90c5e5feb965487f89ead544f2254be37da6ca18c12af250fec46bce24c5b0e4baad6d5723aebd2e5a2d8e7d4f178e84ed29a28263821268b002e7053fcf6b08ceb52a8b9cbd5c36072935ccbc6266a5fae8db8d6e105869368e00bca2c3fd3b66ebc5f1e6e11129a8dcc98135cbf7843e7b488a327fb998f0a6e0685328146427d547d2543c04997aa5b6b925767adeeb046ccf42a348360cf01ec9a7f0235a4a0d2f15ffc36ae6dd3fb537242144085ad4f9f7a1baa5cfa1e06d5bfc9f6ae0bb677b8940a5381854988db962e1201091c6195c3f82598bb592eab1166879ba0f72c9f1c53b92a23d282a041099259c7046e08cbba7710175b2460dcfc7bff51459ec81ea90bb92d9aca0416a48b5d4f36c144264dbf3db675bb9a85a56f8dba1fa29cdbb7bc224643de930d91fbce4d00706d382fc145ea3b27e26c098a63b345cbdd44c2b82825bac0850dc5a6161a0e5c85bce429275581be255beff6e2ff82352d48de8fb24c0c26dc523e1e8ba6aa1dc69f55ae1e243f10006e7bf66f7b61a38ba8f941f112cdeab73be4e813d603a425850735afe362f0843fc0ffc9840ff6466e71e5bf7b9b17296bd326e8b94af61173f74ec7cce92333ff46f67067386c601971d84ec3784ca0c5db75c14fd5113d66a44e2bba260bfe97519d056e1212a10fc44da294aa21b47f38ccc741254148181b4a863f880e5a22c0936425513e428adcbc9026d52b5507acb4ec59a365bd8dd035c856589178052b54b26c6b25baeb773118d8d07601cf7f887ee0df813de07fc12878fc3467962cfb01a335da547db08e18152df3f461606c199904290d12fe8afe4651f49ae5ba4f130f749e59cecfe34a18eec3dbaa1c6a939bf86ac7f9786649895e17d0b1f01b3669a32ba95988818dfc4991680f6f6c8190b3384d96021de300d9a8f4bf7e1ae39185d686d03376dce716a172c8fcba90d7f4d4d6322ca2b00f474ec35b95e0e84cff1363b83642a8bf2d60fd73bb3d7bb93f3da81c6b5c79ea3507ab9c11d6752822c86854d022bbf09664b97b44d7e6adacf27cb34762ed87e67406473331ef17a29f8481e2ccd53ab4103efbecc49ca6e0c16d2e64b46fe6cd274e932b9bc9f036a4ebbdf415e38cfe3f1ce250cff450805901922c587fa7048ec10138475f4624e21b19c84cd299e2f6413003dce0994b46165153ceddff7532a8b94755ecd513b465017be139710839f175c5833209baec4f2e80bc1c0b2f27c2c647012b3d851f5a275e85f62da7ddb0ccc16225b6425547d4ed1e200c4759f0fd146c993ee23ef20a69297f797bc1fca133cee14d5616a9f3b3c4ae6c408730d681454f40613b9ca341fc24ec41b82e0fb006c079bb9cac47e0ba101b75f820a906eef6650094ce20cb12238c39c6a74cfbbab07a1a70da3f721da5d0bf4a69c4bb549cdde767ba1886af91906391e603535a775410229dc74f35d3916e00a8f99a07a7b7e350f4dcc7e952de3a9e6f1a155f82ca017db003423a20095b25d83359934cfa0db82e4d80e553ec261fe5a1624f5a90c5d59a7eabe626bb1f82fe38d853844b44f6bf8ceedd9ecbcebe14ef368e72e897391868f48be10d1df29e894ce972a991f274721e4b47d64d14aee4e815fe12c5f4691d4a0b2efefc462e26e1128674b370b6db295248cd48c77bb7c41294d3d3405512e8c8453f3f8054bb4d981c01592e4d693d46acaa9e987639a4a2e3068c3c45e3cc126a1eb6c18270f0ab23cd4e0cc9bcb8344fae8ef593404d831dcd885114e69c7fbd1ed34dd7e57a8be807264f4fb308787351fb8ec88dee776c07d1419e7275ef1017dafa1136a569686a92ac04854f6d0633519e9e2ab3c903a2451c603dae4316c354fb4b465b92b3c70363ab0949c9f05adb88d19e91133ac3798f815ca8d268d8947227e913eaeaa438d718fcae40e195e2dd5f92caba5c7d4c5e2c489c50d3b7dde574d9b340e251dc93d5732edfa5b42efe89d9d8f87b9af3bc37277c065615ccacbbefaba3df6899402a1adc2769d802af35ac56fe600b9af9ab4ab7ce8dd15703596a05e2f51496d7735f461d32d976d6f5de2d203a5da11c4122b03e00f272579294a66760fac9469542c9acfe62c9e7c6272e5525bcf2ce897d3c05a012c7d2ba848cb5e8ddf37bc30dead3b10703b7bcd5365f86febcb80bbc1be35f2485a40ed9793ff84cdbbe2c763ed2d6e9895947ebcf00666b9e7e5d6d9a0fc62049bef4004a41e29a51495449df24a35eefa2840a4b904b6a16bf614a778cbeb4f50a3e324cdf4ff214a44a9f84ecead34c51881a5901a36f5912a19eff75305b958d2f1975b085f4da7dc8637d6109e95d85a7574b1ece68ef34abc4f510ae1c95a85986ed385ddd73572692d532a15f1bfad352c77111f6874ec2b8100d5e1392adb48e7c6df6a308a90b9fab9c346feae875ebb5373a1f1d2f2bf2131bf12dccb55255dec837b9d405108bc2eb0e226304e4d2d9c7f5f11aa8b5f1a8174202ffa40b960a0bc012ed1915f20f3eb3709c6b5ed3256a6d5d06b98fe6c7888a06a3931878ff712322a45726ba96fbf5808df32256cbb55f453b87e790832f599b456c2b7562d50578085881e6be99d4aa200a52436d49a02f7dd76f26c01ccc36da718137925ea6c041bdd49901e3bee547ee25eec98fc9f9b3929f413ed867ae46047758421b6c9945768e9b3dc426dfe59a880ac1b4716a0dd229162128298a1ba1db3b1f7dfd301edec82892998bd2d4018cbbeb4591a056fd1590747571bffdeba260aecd39ddef3fdd421e71c4b00ef3c9f457ad043686a57a731681dfae9e5931eeebe66ffa6900a109b30c9af4eaaa7fef2066b07d22451744f7d5403339a18e3133c30bab21ec6800f7a06b775254b1db6f939f0db5b600c7728934d04793a122813361ef9fb77f23c3622f3112f41baf6fd4751a1dd78d0a9d7f3c15163611eb966c42878fd6164f88457658f238b0cafd07c02986d9c26e7c28b6af9e18fc9223e09f54cf4d68745d1bd71ae0639fbf43b1718b5457f58fa53c0ba3ad6ea2e9a73616cbaa8854f000aff335276a9dd599091c57c3f67a5c77a28dd0825b3784da9aaf513b5a89f526156be6232ef51d6d12cc75edb1576d0acd217bd6de84d2d7abc9922cc94929bbec85e19aa25bd93d74eda6fad262be7c9a99140dfb4314baaa2b7ba9580126b0e592e0dc79d4a3a2ddcde9fc3e06bfaf5cc29da01cbd766cad150ec2e232cc7302df47da54bf1ea54757a96eecf0e4aa6ee8db9e1407a385e980962d83f0737a36b2c861b04fb3381ce85627599639e4ba9286a33684756f27568bb43d5e2ee000ea93ea4cdc9117c14d424aa7c3b1c6a1a9712bf921cef4d3f8020af6d8304d2047a33e4da80d0053e64b5832b777fcb94390d05cf09d6acab7a053859e524aa20fe3f0eeccae553c7d95a3e7e5d960f160c41912973ce6f1ac7d01a115b6e8b501456339030f82aeddc9876ee5b534c8754250b9416f4d60294bbdbb590e614ea39b4080b2df18a71251d8cac03b5587bc8cd8088e096e1eb4d8319bab3cd32a93dd6e031a12b4c7364bb893366c85d0a32ae428c46092deb65da324a18d3f0ad3501dbf917007f56f80634ca732cf306ee60fd228c8c5ccdbe8c1cbb83b683f107d9e798c82259ba6726f33ff73075ea376fcca567c269262a7dfcf07e1863cc116fb5d213e49bdaa10bf3414ad64ee656e9cb2d66f4059fc6e6ab22b34800d9fb587839fbd000d91297da14bc49d2b19fa2edacc434471ebcf66022eb0a566ada296691a5716d3b838e4d7c96e5fafc5020becd10a16861386eb141e91f4887bcc3e8dccbe51100d90837b780ee01064089eaa1f62dc412069871c00b474df6d6ede2b5df32e9594729816295c8086caddff7e56016c42a38c1964d6b1b53be5be426e989ffa10223e71db4fbbc8cd3af553071716817fe7d3a4e108db8359ff076d8b2cfd3d0590186be4acb6e66467121bb6262c4cfa6654a27d8e45716db1121b07ffc9d02acb6987d9dbf57afd97c1dcbfab2e884aa7417ac3d1e83297b81c7d53a937249df2b5ac6ca7fa015b0eedeccca64696806fca8d54f45fa7747462fc87db9983594621aefcc50b4e46f26acdc0f005677f09797fcb6bbe81d7ff313b4c9533b48c51d739670481366bcd15af9d8f51b862e0ad47b0f6a7607ed102165a49763183cfcfb2b0e04d9cda4a26c3b0e2829ff8da13fc92ec307cc2a0ce0aa7d3681ddd840847b7eec4b028b9c1af947809045c65a7fffc4d1e1f2cc68d80a9400c46236924e3f8ad9f7a09205c170c5efe954fdb9ed932a38c7bb90ff62435f0541f638a72b4d2bb94b5c24306a21824deb02134de7b5669aaebb66eeec0b29d6d7f3b0939c950a4774ab598cfbd4c55a2b6f64bcd7831250a007940574f747541393414bb37bc6fe76b92c737c288ca9a0409a50eaed704e2ee572b61695f902d1c6524a4c1a73e5d4a62f2879b9546052f57d90df3c78f0d989cdffa976559bc69d934423e1eebb970aa1a49c176ec9600ffea8f56df20246478e1c81ed7dd3683fc7b81209f7543f24022eb31fa03d9c38811f392bff56c0158852f5372245390cdb88e7d4a17f967d896a1baa1ebb5173711c9ca249741e3993c128e357fb648e38b43aab8bcf2fa403efd3661b6a5c2addddcaf743c9d08a990b2737e7d973d776f57f51b86baaf068b370d2ca9a8b2c3e73aa4c128420b84fbce6cb008e56814d830f313e9963b56548ca7acacec7431908d83328097272d2b26a0121b6d7597083a7f6462837756997bb7e70402ee9158167019cbd1aeba1273b5dcacff774a0498b980413cafdd6d96d29f42d659eb28a0d1c5899e1f968e106ffd72855688a121c005c6f8d405e520acf6fa75e4e8454792a635879bd33f57f148e0a2fe42900ab1b0c3f669534e2ab164c988c8d3f945799c3caa95eaea1b818c5378300d170a9cb62a9bb2bc843623c7986a338b192579e9456ff363340f3ca9c85471fa711a69b1211d7033e9d6b0e833a7c325528494d7e350e99ef947a6ebceb79debea5f37b720e0e94dbd60b5b735bc79d6ca94f7018cb920853fce2afb783ade58ce2efd2aab8121642df04b5eb59f55c165efe7878326cf4fb019c91c4fd0899e8df083b45be40d3cbce290c720ca326c86f19dc4ec671045187e33de2d830930ac9c2c6d64755696fe8059a661881cc8f7ecf1a8adabea42c7950257150d2f554803fc9cea3aa6a42fdcb868c64949f16ae50afaaca30273fc7ba01b2360174f947ea64bf7bcd06debfce836e00ed3a6425add8c8252976939bfe139a6353dda62d97aea8dc2a27c9fcce00114765afc30b27eac5f8eb3fa4e7e6f256d3c88cea94f07d3318a8fff3163c9a7fbb3253c0dd80bc83ac8822130c6636042252b91c826c47513239ea423c69fcbce90e07be8236eaccd899bd6ea7fa60e8602ca5d5e27f2fd4ec8f73c842cb7a65709f1176acb097a06a1fc27acda861bc51572d949c1255cf3b92c1ffcb2a17941ef905353f0dddcdad6e1c1f7c50b057baa3a580079b20d0f7cfb41d176cbbc182b4fdeea39c5ce492ea91911bf63b0426bc139ce52de7b441d5364f562fa9a50c837a80a1026812065cd76150c92b3b277303d85d750ed3d8b7a73642832520a6a0627d86d90e354f789ee93ad71e1136eec03199debbe8b21904c5f17846f573ce8e8d5f0d51dec6e441aed6a7ce02b4c84ef69bc6586f00b0f30cbb805253491fe69583aa95f3dbc6adbb293d84fdcc38274d7b3c3a86e88ed72059d83d0924322668f991bab3596412d1bfea8c53145e849e2a9bd5a8036dfc3fc776335cdaae144bd146f4f18dadf428324e869d200c746a8e6a7808f79b963e1a2c092a44efe879bd6fb5ad8b95abd026c2c17ff750cd12bad415077b1fbed3a84ca8b62f53cf17805374c3dca852a70d09f0ce59e51387acf77fd7115f37cc45f6fd5e8d5c5389981c6886f5efe6252257b0ba5e2a14a5650aa8c380250e21161b7ae4a4dccd6e74c440ed0ece25e5b7a3e0286e2be3a856b3f9ec914ddefa797253da6972f48e8cc2f5133509542cf4ec47f386cef09d71ee8dbf68a6f3c6296d4a69142e3dc47711b777d790e606d0fa42a651d6e0dcf25334fef228ec3c4fbd5a79e3889b7fc37882743e5d72b995042ff4939942493176f2abbb7987b0b76dfc6795c3c1f92fccf6b2cbbcaa2b1fb923611c0c03393937ea2c776f5ce83a4470a3cc5362475a2cd7b93f19b8190dbd1a21ac5a18519dd305f8220dd9b937569d9df782bf139ea5783bde01e77d54793cf24741fce2add9cfad7e4e554bd0a5ecffb2bc99c0feb741f6ea0eb3e4710604caf1a7db6dedc9d9f2ccd6dc1362fde18d7e786672a91b36abae76f1e09265f6e8d4c386241ec9a293525e497c4d95b56f41d8f2ba3574673c593bf1c8f8b679917686dded9bdf58ebe4745b7e46cece44bb12e02ac3e61ce30402ae4d5ba33ee7fecd60953d6a989a9005a6899bb90a264ef3bcd69dec98ac3e6a764431fdcb70816887964a2a5876454006a588edb81ad229b00e154fa3514dfb9528b1d666fe5c11c8c3e3ee3c1131cb4c5fcef60b0391d14fb0f5438935c1d13a0256dc9fdbbee4ae2cfb1c50a6a73e645a39f60bc5a7e3938d33c2b8909535578ae5d7bf6ac421b9d86e19649bb627fa18d673c02e55c138cf0dfc5cafd97e390d22b409476cbcbba1f7f99db7352b1d0082f112ca316d5d0243b337086287a6f5776ba1d9c23186b5c232ede556b82424175c2c9dee570ff51ea12c47745d329a74fd6b7774f03024ca535dd1aac7bf12f1439c66f1105aa3c10b4304fbd23a4bab3415a051c010206a1be206c2055bdf0a9af9bc704c4cdc7c8c5dc24ca750968541b97dce2ce48ec77a8b6e07c095176a5fd96598eac8c52eff1caaa3f58f46b051430fef8a25e6a2114a7633b85c55709c1a1fdc5cc1b9ceb9b0adb8dfc9a73cd366f3caef4103c0122702515b153f3c9f512af0cc069640ad73f51bce9d64d2693f3f253ea8a7bf5fb0e7374be40f5ce85f1a15f655b39dc6dfd19c45cf0cb81ab4967c25deed6bb888ad608c1ab119759fdc0811a38c45a7e21eb5e150568062b81aaa43142ed43751eba9071834a8039fd36cb868292df489f4385c60272e462b2071739d7f7611b88390dd7db1db4c612c65b158efcab9b16b97a7ae5ee570d9dcac9f4f0f1edd17370c4eac8b77990e8075c3570a2fa7f15adbe5530c084a104e9a0f379f800ec3f1e710bf085323ed102af1271eeb71db655408bc14e3d5832f409ead154c08319c33a1df1ada3d0b14173dc9e19b987083c79d86cdb3ea4640e11fa9ac830abc1c9ee28e284683110564b315eee253c6bf2650d5fa759fb280eae413dcbb3b82567584aa25c9f81df9b9a52c71afe0b23327e4341c5546b165a272f632e69c0ea2cb2b9401b00511e95a66d17d4ee7823acedb215cf953599091c172d5838899ead63d2a213a923a4c6ba0d8c3ff3adf59ebe423d7393bfe7746e8688be92fd56eb49f42895264eb96df0bbb4e125d934bc5331bcf213981f34444d40e6487c4c42f722a22902bcd0bfcf6fa14623faf63dead1a4bded6411713157bf6dda2d958962a94ae63acef2a755578c9fe88df97282cbd63928cc5b27beba8a3d2059cbfe0bd70d19825042b07009f1556182c9b9be26ee66b8ddcc316a05f2b4075d437c96ce260155075d7cbc05ba33286a952851fa3fae5062da559230ea595ce38a95748de232b2f7d11af71b5913bdfc53327b66c8ecf1001c9dc1e48d6aa657b9b0cbb35f8079eef4162b82d79765a3319b1c1021db537eaaecbd406168e4df780293102f79256067360539e5f89fe95213f26339530cf8e75803caeac47bdbce63f92c13cb13371c496d7df20ad3a42a63ff5329a71ce6f78354f4c7f1e55a2f4095059cb1539bf19fa60418f9540486d99a3df55b2425688f5d6a0ce7e6c94ccc0c519193c5eb6e2560a4e206ae5347138f049bd7c6deb34afecbab3b0cd2a922f962abaec8918833761cff7d8538002c4924fd343dee94e95c5d9f6db773905c92f4ed7181c7f8d7ba674271dd7b4a333224a429b80909b21f8541bfc6626630adcb147488d49ba47f627ebae1f5e7e8a9d048463e8b6edbe62a85abc4becf8dc48a85c86ab9f3ac32e5c2bc65c6054ad2ca9870345503538647e5262760989cb06797c6bb19e784746d047a969ce8b0b71053b9f6fa3c937458dcfcc6f13f8976a1d5bb6acaf15a1a79ba67a60152944cf3fd14789570606de439c9496db2591eb9aa9e31da8c465ca5ba30cb6519370700fff10b0c9bc798888294302fea14c501ce67f84638a705be0a1ba298c1c7edb1bcbfb0ff6d74ad8f9e86e02032b84397e2c4f0bc73e5fa25370210da9a508d919be3998e54aeba11b2e4a4683af60dd74f3bf219a81b3d750d0a0d17c48718f57b5f87ef6ffd54c04a9d9b9835c67f8eea6877ad283ce83e93e12ca92aab22524b625843c743cda53f2034b609260cb60f7506dc6e319a76219c8aea3636243f401cd2506293010e2b0c0cd8736d0f4ffbf18cdffe5f4b978e8e73a095a96629e8f3906f33e714e67e7fba6f8083e242d191f9381a552c1797032ccde115c3951c6836585a94af46e5546a5578d3ecb33980874c8eb8efb3830c74dfe3e5cd24735d7a19c888a4d37d27300e751cd165c08eafc693b1f3aa6174c499d9ebf6d2130ed06858f8de36459db9799c066f82a920ab42601ad95aa710e9f19aeb139e778e6fe39ac2c253ce4f1f0ed720f612aeddc1292d02a1e4a3799c19a94415c2f853b78e411a4fe61607662af89596c9cf4204315a1aca014398d0bf8c3692e08cf864e0fffd07457fc03f1b10e0a2bf8e8f55d2e998148351ffbbac8a0f0f29965866a893c51e1208c5e21008cadbf68ec53fd9ec181855bc930b56f5dd16a3a5a2a28d926b6b1613edbdce7e9f538981acfa5a2123bc4c5ee2e1dc6d555abfcf60861b22e75ba808d32c74fed5f22bd2b82b0598bc5ab4c298a9bc71968194e59ffdbaf2ca98c025aea3d548faff6965973dff973527010f6ae2f4862f5ce60baa93570541db6a68909211ef5353a61867d9d8b7ec87abb29eb158e7ecb0c00221181825efda5c13e41e260ea36a06baaeee151f32690967cc9956f915c51604a869264cef8c880e0ba5ffb408bc185bfe208ba8234f1cee071942cf83f20046592e0cb6f1b4e9a2a0675d8b62af92ae4ced391e216d78e25db7c448d00199998f4b60ceba15cb23328fb4cfc223cef22bd0797fac80b916426ae8026c675cd8639d8fbc9eba41c1d8a6e45dce404ab06502bb96a96e81feeb8a0966b8cc45b0f3a9e1fc794f2e3e16f5afe4c779c3f0bc80e4db8f7c077dd764f9d4a0bafc377d7bc41f85d73e0f834f8826ddbc64b6aabdb521baf54c0d600cfe61b41e9b2697bb3ce8741e7bb40c2d15d2ad9975a4fe46e4aa134890882859789cadda58dc15e0c828e74e70bb9ceb3c6d1f0b2ee13d21d60b4bc07c41566cf04234a7dd116cb2c5df88d4888adf7ede5e34880c6ff2ad1197295fb7ca9f8696e2920e6b8abb9ebe7bc202c9f2293cb78aa8b3c54340f0c36b31aa0d47699a6659d30b8e41b075674d926135e14c47844c6c225130275028c6dbcaa0053ebfecff12f87f8976e5c36a5c51ea40ec33df5621334fb084875bbe29d169a36cf2461f0b1593a48a38c88797fda97f2fd68c207a59e06c48fca2da0c0f7a0a52bd8209073761faa46de2e9ccaf71fe9ec86cc10ead0b5da16955d6e95d944a88d860d818b8221f055ffc5d2a5d79c44a10cc8d77a723ae4adee6f4cc925b185ac69a1831dadc88c9bbd5c44b8af6678870ea2a4d17623d5c8210c2ccfc432e148540e02f72795801387579271e4ee92e39a883158b0339adf9dc5c29129225f62a78601db5d0a346301913758397f1702eee9d4296f520b5e6a0102e01655f9d876f21fa5f81d1978eecbb061cb82c812062ce32ae4edca26257f4b45cd2c3cda5dcf30be1589ec6d24e0fc8fb646ca9ba0a58b5b72bbed0850e7f94ca093dc6298e6116980aa7e4f813e42fa672a6e6ba4b34cbb6afb2ceed308df0912d6ef0f3ca7b87f02a06e6526ab567b03a9d8747f09c9c3baaf913e36578d0dc5c98bd5152844139d3f307063683eda45c9c65e53f7554b3b75cf01a27ef36701f66f4768406ac36e95db706132813208c0d074d7f3e99b0a5a959f69e5b9c67b1149d7baf0ad6399163db6c69fc2c20ad8df0ae8653927e9883b413855b3b6941774af88f81023d0945c86e1ffc9ecb652b4f4eded01027230551bc351b4b9605c444c15f87b8d464cc9ee34c53dfa4ae34a01bfd7fe533b3b1bae390e9c44f65fc1dd0d900527a7b474e4963d46e7e1068fb0a797a1bbfcf03c12aeb73b797e34bab6df09f9552cb8791950aa18eafcacb7eb1ca7b780de93476fa0a224892b4c8736423e7995cbacda7eae248cd951e8e28a47a9f5a1bb4a8e6ed3a294beed935c93b6a4ce892db45216cb685d107abb13eea163a219901bff070b76ef0d41b96b5298992016394157a9c33289c8ad17724f2047fd39b93e1ef0fd80e8a08e2ed5165bfc39309ff207663793783ce6c104f258d018e67b94264ed15bdf0ba8a1b8eccfd168c4a8856933886e425580705a143cdb7cc8b11039ca1afbddd00eb4902dcd88051188982c3caec7a6f90301d3d3fd91c1a4463fed15fce5d5ecb77706c000973087c04498c911847ebe1c4239102069f46dc8f78adcd61bdb8b142e8bda6ee768b6c31925a36047158aebacb9b0e1dc70510203654a54088cfca60efe59997216dd645a57a450d18730874628631eeb7459dfe588c815a46776746158d93c4163b9a9635fd632991bc8a9baf7db7879016c9618675ea2758dc0dc723ea39142a589c2b2494c63a46ba3badbb1b352badaf7b420bdbfc42e2edb39d2011f91fe13576371ca8048b2736de8022a13ec72b2427559b59053b03a3e58e5d2b6be826bd6b4202f32f3e0646d182173f29691692fa48f7b036bf967a7ec936e2fc9ede8f61edd309f2a24e5d7dbfc5b35e1e9e6a7dfcc7497dc3800b2e570100c2086e3738731715a6daa41cb227d0e4aad3c890e6e013af9d5a44eea52f8d5f5999626652318758adbd31803d4be07114b0b73657f1dfa95992f4bff72495c50ffaea9b57fc07f98a1bbd799897da74e1fc56ada01970a320beefe8227bb80136ba8a8533d10a611920e0d5cb21dcc5c2e34c871e96801de378e3e02567ea5eb6c4194895ebafc3953ef9ba4ac04c1675b2794619ba3e0db8407f096ae915c0562e8185106b016a42bdd508f96d8c8886cd03b61754dd4fa2d8dc4e958794f72c47e40caf76f8940ad73bc370f5e05be16f6639845586df9b2e16e07c8843d1b890914f34da1c4aea5f3dc31ac36296a069869d214d8ec5ae5ca2f12356063bd0e382b76cc5251659537199acdd6aa96e4e6fbfd879526f8eb49b658242f8b1503d08db8ed5cb11e0eb6d2a2a7a04ec22099768abe5421b5cc7b8f643a640763e06dd79a285e85203510077fcab6700f7a3933d1e1b5649cdba84e8f3bda912e1672aa046b7cf3ad9ffb645cbff6e414184bf8e27d66be5dee2f1a0527d7768303520270de64f5dce02877ae592c9abb478c2c74218137d69e11cc0ffbd0f34832c87b37e0b034dc01d2d5e9703c7196e0e93941cc828fb57c2b6878791a9ac019e5a3fc97dc7ce25567ea73f6bc93babca55e3f2420ef4c752bbdc2371f18a955d05478b3e07f477f9d5dd2c2af1c16e5904e5b3de34edb434ddfd42e5bb322d9a5926297a93492dd8882904b55dae0c59d7c0c9bc63b441d11d8260cbb546eef5caf5a30c4b0fd07bdb615e23c252de53265ee7985b5ee2e0931a8c70cc23a279d265eebecfb75399fac9069d6086ce8c6a948606ec44ce34ac482d66bfad9c5e4c31cc68bc420f534c18369e8f4852b945f7534fc097eecf9ea6f036632c53e89614447c3221ae4cc78639a180f3fcbbae66fbd68968f4802b74fce0e1dbbbea7767cdfe3644acfbc8f377c777f98a3754f174f5d379284ff8027633f201bc8e1b1fe20d1f7e075de7b992cc04c455a0f0285a028b356d712839a6dcdda8eb2939f6b3a278b40281b663652c71c24c7f38e700e87b8d37a202243b017927877d10500dec99630d20f5b693b62305ac035caefbdefda1aae1059e4d362cfd15a5ccc842f1184495a9023fb77d069b82159455e749e5c09c728898c4979bdc308c20b4a4597675fb1f4b0069b974d3ec1be8208091bee0041529a9c4cd875a8d39ca6b527fcec9603777cc074dc8f41ed7b764cc1b2361068dd580e20f31f70f0e6ebbe9eddb3c26674ecc7ea15ab5102b3f46af4364324de5502f60f1b40025a3cb4227f586d7a47fefd46781af513e541f404d4e749ccc595fd3fc0c9c4b41a8ba5d129886f9b670240d2d1113bde2b507d1f01167eaea5900fda478be6bd16514eb9464a46edf9ada8ff0d786c494fb8c60d71044a10ee3908504f803247e349423c822dcd42087f0ab5f5869c3c7e9f3cb2a765d81528ddde916478ad98b945bf439e1edb10174c0fcce495038b1a4f810e3fd1bef01d9446b5ab1b351094290a550b017c32675aafc23d5b374da625ff1adc7c076b1332e66f73f4866a3a9f8b4dcbe80af3b74849b00111e78ebdd1bd098fec41d6023d184e85f3b1b09ec63603d049770d49cc57654b8ad13db3801b9b92e84a758dd9c80ab9a8a3414bbb17321a5b45d0a2c65cac51f5df73a75d2d74bd7afb446f25b70da9ea0c99100c24390401353fd12b216b2da2723ccd51bab10615fc497e0017537f6bc7a900fbbf80a7265f0662a01818bbb248e667a6dfa8fb29e77eae809822577ad8657c60f47c6f282fadc7b2c0b25f874e061a37e0354fa63dfc80b7ddcd92987e88bba1982a6ae553e1d97d92213959dd471e881e264fd257821b2a36776e5dba0280216d705d4ab2b8170d2b2ef399244d10e70f2fd23399fb906686abe534ad294ab32f6e2ec167a6e4baac3f41c8d1f536789a5dc8be39564495cd5f02c991d41d6e8f7b4ccc080199ea2ab8ade6248b7f37618d9f7108f9161917762b24a2502a88527bd61cc2f7b3020d78992f2a3693358a93f1f425b8e9c24ba268d6dff85da939143618a96da61d9edd1408209a437dc02adf696d4b817cff8e8614e83921736dbdfe2494125ae6fb35fd533b4dcce25c4e13ed647f3df0992449acdbefe37abca5ed7e365ce1c804f9aac1a78a92d2d99c361a29d7af3198546128b686fddc572a726ccadcdff6b4a80dbf0ae090b7971452aab2213ef852604d68b6c9f0f3319dc28d422033bade893e532349eac50568b01fd80ea538f8ad2d801856342b0eff75498eba6d3d606367d73d54f579a23e2b73b39d536323af7a0d45f2518e2f951690931854e1108b540fe8c2c73dc7a78aadf2e25e20fae580100042999fbe5caa3cd4e0dd26566fae91a661f25d845e6c8a765dda26dfd5352831e2de5c5d7babd151e0eb3161aa8a357867d176fbb7c6c19d01f0a11567337e05deeea7cf8048d047c567a4f8399430ad167d2639073d7650be6c173ca037b658ccac9112c2a86eb3e3b6708ef97f7cfe68311c1db65a49318d9b2128b2675d550f7b3a2f2c6a4a75cb2aa49c35d3001ba740de10d0586e9d35893f23f07561f8bbc91ba5b7109cdbdf277790e095c2f26a43b685551e0f1da0d0891ebf00c39a0fda7a925aaff1b8849f20a41651e03f0cf69f53a875f6006e34ff113f2ba1e8ec0ef6c949023c991f2b046f810a436dcafe1743703fe3969bdff6ed0f02bff4ceb324985163eb679ff26a66a6dd792bdb7a458256464d874837c3e9468f89f2b450c6cc35e943c9f6408184616b63e8b279c4aee7fa416111aecdf7f9eea1ea05690c2ed3c3b01ea69b3a2475bb1382ed95db8e2a2e8a5d1e59ff084336089896e3410b3b64179f57ef8e0d6004bc2588c88ab5d50be9b26ad059fa91d84a0c06ed6d689e157b00b9e169b6be5e2b2f48950158ba4b1bb0dc8558b805d5394b7483241e1b721c49987454264e556073d9d5dac70c75d6c9302d87dac16825a3636c2f3883e5bc2eea3fb0bbbe3a8703a5a491e3a4b5f732675ef566c40eafdb60eb97c247de6bebee61eb5a29e88686306693e268ec5ad0d4fa4d7838a2ffb5fff908ccc1f6a3dfa5fb28aeb0862f0618f1144c5b1ed98f91232a279e1633f40a3618bd7bab1ffc070dafe466ded0ea27ef51c75a7dc3f782e9e6b51025c36881f22664a3d6ef5e51e1d4fd30023f0d49fbf9c491a3ea5465b1115ee83494b037cde84c2ce8d5ab6a10549a959bb48c0071666760f78a7b844375d0c9ea81475d4a5649c22fc802d66b44a2a488583961ef55a709d8bc2b03ebaff5962d4715618f35cb3f0cccb56e5674588cb7d7056a47e9f105aae4bef003ccca4b766f89e89acb46771fdc8abe350dc3029269f4950dc069c855e97b7b94bf15a80f73229036d08f9a22745228a67e453771878190c20070a14f21200382f7dffe0ea1cdf55620540f3680743d39bf74b9dcb0a563fb24ed68d03e3772fe9e5da6ea4ac305767b07e1104cee943610bfcb0c399fac47c849bf7836bd3d0811844326009af4f7c0b37ea7579660f6347d513747d10f2976dd28e9252e48912a61eb39c746b86fc62240dcb030bfe6554d90e3e24cd3ff1fb466052e942db0a95d301f7d3d0a78071fd748356824cff9217937aec78567ea1640c4d99a5c8f9991d372b195252d2919d29fa37d6806cd73691657c08cfa443a0bce0651ea5b953e685e471b6079ef9ab362c084647be6de99bf9dcaa6edefe253afd8fc915ed02c42b5fcbb8086f7ed9595f9480ab600e90c3b19c621fe5112ce3ecdc20a2ac29d3a8a47414be33961ecd578234e0f13c017c53840852b4bdc1a5d78e7cc0444635c2d72ea73f9640fd52fcb5b53fbf08324094369e3a6bbd2316159622617f7de23ed312b7658543c8110f64ce37f274e80cab11781f195bce1104f6e73c6e8fa658bf31b008b16d72144bbdafe6359b5672af7e3878d5fc4bbfd8cb6104592b9085a01f3c55b08d48f13d152fcf2131e0e0f4cc8448a3e848880b62ec84e53dd01aac4e1ac29379dbb0b851fcdaf771e657003775ef3c82bf83d65c581903831115c31b0271b90e199f6bd8133d64c9a26f3008c29d82e7f93f517f96cbb71a9b554bec6a5fe40c35b7b6bf7d6a81da5ff18070585647664177eb0bc3dd0902373c41d327f297684feaccabd28446822466849f54f7831283dc3a05bcc29141e88458455274262869f38d59783435c11a3f2dc806f0ac51a7215d174227b078739b63cd2cadc14eb57441302912c0d40cb08a1bca04c6d2204ca356dd527008c9778d7646308d1c2cea40322f17abadc75ceab04794e9acfcda9b73867ed6f7b192274cc23c4dd042605d33ca1365d52210aa04fd5daa123e32e5103ad55fff23fdab88d0499d2fbe836597446f48337d17400522cf1dfe654e3daf40d31f22c0ce5087e513e3f4cce3dc19d33e97c3db0bf6d575b88e968d05db0913ff4229fa66c65dabc4828cc8a934073cc96204e97dbb8aa15c95fcd8938ebe0fdab79af54c03f0d73e73faf66556b7dc63ac7ffbfec32dc970a08d78aaf4e03fce199329a4310952c4f13e35d792a7ae4f6539044b1462d443bc4972c9b60d0c9e26b86c376d8bd763c3eb973a85416e3483703af8a71ebdf4625dca8393746687a52cffa18adf454fd3d300f9592c5ea27f7dbb6f640e60f35e4ea944ae66a16efcd8ee6497b444228b8f1373f7afa913f2f7248e119217038906f434d29b8ad6a73dd5ba1e85c8a732b5c9feb1f83d79b2e3fee20002f3f7092732910c374870af5486cca2e8d1d9b5db7df0f5a0d26bfdb5de847d561b175ed76c3cbffb0dfbf668e648d26cf13a00a20a6d7c2601a8c298ab3c1f43d4b4e700f26bff2842a279ca65bf906d34c80599d62a8df2b31db7b89af75cb169a91a73811cf2a8abf896f0042b940c6f3054fc13e4e34f9df8a1b63c74ab512bbf5695a8492a66e2a82adaa4079b74d34adc0c1afebaa8eeb26dd52384db68adf36901263b78e931383e74d459ab019f9b9e5523f7907b7cf49548e94535c153d5031cb0fbeb8e0a4311d75eed6175e6387981f2cc4af4a81ce16214f36e70374ae3a942aa878b77e35f848a7e59bb908ae4286f5fc7d317e350984df6f5ee03e33a2e00d00596c6449c759212afda463db2248cb2f3a51d37534119c84350c534eb13df7dc58f12aec47c031e685b01c1acad9b2273a2866c117d9796f66b3b5189048283cf33a2c60a4504b9d4fe8fc06e4f66624abc7cfbc7e3ec648d316ec7ca329bbeb09e2b05724ce8d2f0a7b9e4b0836d5b299e3cff1b2924c242dd81bdb75664975513355d26d84c6a0352af44692834e9a0a011aef5b5586f4784462cdcac05e76fa385a32d9960f89e2588da4aa21d362cf68e1326be55f2ef2cada1b6e8976b72256b17f76851ebed19c99153f6dcbb9692605b197053a87bcf13db509bd1e9ffbbc86bae8b47c598ba1b911a3ca4e5a8babc3f5db043991ca4cd0ee47f0ddb8709d740afca452ce24214307ad3e9d0d554102f20c19f3ea72bafd5cfa6ec21457533316f7b61d3f955f52ba52f573d0f41941daa05aa0d7b6cdfd38e81ae4b5460622324ceec3143019c3cecd1683269e4367f6c352b1a7d92e9a57132d82df72ab69f924f1698b37db353eb0ed2047d57abeba1204e0dd10e13530bb47e8aff9a36d25aea4563ebb64f698f37cbf8542cf040ed8698dfc807013d716210b8aac38d8b6d796618e98704fdc180d3f7c38ea9e35ea4a591b42f3e6cfb7e274ad4d68561ada0d2430acbc7054ae08ffa3eefc9318767f23e7b561a334a95b185494612ef79d12a5ac95dc7f837bcc84598b93d32e214b491ae1eca5dece1f87931bc0ae1937d4e2b13f41af49b5649af8e6281a053a0bfa646c9061f60127477e6891476cf324fa31e0c5eb74b90d102efacb13d61831af1269b55398bfe0b8dbc45c99ee49de294d13126774493b08957c1606ba4659b2fb90e0876fad18298ebcb819b5451343430cb11b8bca5bed97787ec76621dd424f8569592fedf48a893ce5917511b6d608578dbdfa0740659cc0876dc2ccf8349270f05d45264324aa9572ef82cf07adc255d36c289c093056b20a7060efbcd301432b7b52cc7314b38dca5221cf8629a05800ee4956b843cb903ca4116908ffb393986919ed9583e58d627f9076372f361a70c6a0eb87242f6fcd87044807480f5519236a5f83b7bbf3c677625050589f6f599680e731c9181bb8837b6738912d2789aa760cb008677a190fb5183bc9d7218cc4162c18887e6d111730771504995398fe40bcdd25beb23123b212120cc2c4aa2839ba514d8827bb08eeb7b4f95b804fccd9993376f7a31b5f06a632c0af9c3d2c34f2ad34197688835ad168aa1e043b549ef1ed51042c009ee7c741237c587bfc9ce2b7e2c7f5a46cdc49af70efded073038fdc87d484cbc39faae80aaae0224d8cad874678b9ee45a1f9ec4bcda8f01f119f9e9ed81eadb57402d256f0e8a76937aff7898e3b1ebfcb869e22a83435d9193c0b1b4e668705ff69ff0ff87fc637cb7f09a55aa5d71b40406d040900ba1d8696deda8b468c5cc72829ff67d12557143cf273272929a7a8f550db1217eb30a5585401b60fde59ccc4a81204959c331d64774db2598e50c7868dddaabe15f8d09c0fe6cab782c382d8b56eef8b6fc1a5cc5c6de975384d09c552a504ef86bac9de510b8d2bc1baf5e0bf76017f12dd8d10ace848bcdadec255b5752d6476910e64eca16f52c211134837519d5a6ce52f5a18c02cf602f35c8f08846d55cc139aaf1b225b47acc1b932b20bab63a420fdae006c38f340420dd47092d1ddc902f17aeb0d1845852f465be159973e94ef9e1472bba5d8b1ed4bbcf2c0c1b5ea57e14fc802d1c5513d6a61636fb8db7ef8818f151262c98dcf7ac38eb00f60681711d1156580a0ac2f8d22e57ffe0662bf2036a01584a998db0a90ffc39ed57ccd9d4a054a8e83f19a1503844a4eb9623bee66d953bfe4e157fc2600b4315835dc4594ea6b25b2996ccd2c25a56c10db12a9b96ca1b350ad3cc0fbc24b7acadd9ebf97eae5279a1a797df40f81f34d37254f0f4b4d04c383af47d5ea40bb4a8f825103a9d17801f18a88b815bad5b39ed28b9551960d565b8e73cddd2322e0fbba6278377ffd790903e595566a714b6bbf4a54361e0915a3cfa833efff8995c5367014dc2b58150aed1feb64f30b1a223de180014ecb9fadd5a64dccc80fa2b8281a9f94364b5228b584bfdff8000cb2bb81093fde1bb70656b4751ce0fe8c1a4111d82ae29887ccfd9cabf3f79a54f5d84730aae1603821f7dee8b9e8d00fe64c65875fe3ab7d7b8ae964de54b140fa3c89e84b0487e0a75323c0c5c6eb97f8a13c007a9e84be7e3e61633eb2d21d41ff6b4d883b89e021637b03a498f04982333e477f952d087e2261a6349939960a69cb93df7e941273aca208833c0e49e18e54d66426b0a3246fe9feab153858cc1c83bbbb42785dcab23666c0be25f985f794c0a524531ece1d83992ebe0c99d43b3c8c763be6a49aa7edcbda3ad10784f0c29c7e87fd864bb50b9a2feb40e00e44c81d0242c1b3be6bee5b289a5e09a7957876ae13a48cbc29131402998032c529f928cdb97aeaa0aba8621ca14a4023063e15a4f33098905d39964fde5f530605ba178891b21f41a8073a90ed1a1ef56099e00249417636361db470fddfd95d5d4df7efa689dad83328b1442b113047669648cc6d61c2487138812b1ffce23a326c9557f29892926604eca41f3c17c1215954f4883e98ddfff5137b1a1be7912654c88db57d2a7de2ecd8b40017006f24acb1a41ff39b7448232a5d90074fdf5747f3fbefebbca60254625752c204662844357c1de66e2fd91e9ab9fb65457390a06db23fb8ec180edb7682742a84db5066a4873d52c97d20903209a392ed67167bfbc1ec9e17cc4384dc70ac50f15a24de0bb3b801ac77f53b00492688732fb76e7f31a80d6bddff13ed76a1e7d6cb818121286fb1cfcbda54ae104ddcc6cc7d81f347bd58cf4b4fe03922795164dea030df06fb33bd210b0315b352e1b295f443e514b5214cf25dfb334e63454a2fcb8aa8f733bb2b690e9b1c54b81a4bda0c0bb2f502de8f365832bf5bfad0791586369d189b3d59f4e42f80f35cbc3aecdf7486f810eec50c550d4c4e846cd40f55573ec1e5f4c6bdb115ff76772114f89984d11b5d0e579d58eda820ed9b763c259da15db175b69463f0d398274cc84203dda505d75647c95fca1d02d9dd0fcc798911873ffd18424533d96d327c4392d39e439b547e320c34c279770a9de95581ba0d019ae679579a772f71856bde5fa1b7b044f135f3aeec60a6e9b1062905f69ee22d349794a5dde4202ddf25ab6227cf5a59717860f7ac8a8e7fd1c8b5d45ddbb1bfd5757c5d4e23333ecdf9be48fae501692a870cce835b5b71f28a95c27ee92414d1ea46074f2211eaeea6201dc8e4775bfcc51c2f93d92a47fe81161982df389f2533e572ed417664600a60fe118b7ad2ec56a01ce4bd2ba9ed9cd82e61eccf6f9111fc196556d19117060077278ff59f7276336e951f56269a5c1fb4f4ef35c830bd4c3bb9a61d012c4d452815a776c7313a47cfb40c1aa4f906f239442539fe1602309df9425b7b8d67fba6b66fa0f8b937f5452f13abc1db0a6d219699eacda5cc444b8bca62f30f9eacd74740b526f9f4e2d6ea5e555b75e2e4a38d75e1ac0e78eb8e89cdd4eaafc0d294d31eeba1f76054227a44c9a62bd70703c6477d669b25e1fea2e0a7f5f9640c78a8f93134877d2da96894657256e6b12854e36c493d368cff62ea104adb406763c6563c146132524e0fea69b954473013ddfd4adae11850669d7d44ea0a7f26d3fc6727f69dce8648991a532aa16f703c22fd684550d056090764cc7b538459781c02f6c9d5361f8f142d4307a758b8519526e997a31fe3ae628c20d6b25f9ec111de204e62c1831d6d0289e878ca9c55f275da44849fb3ac158c64565de8a13338585426af2b944aff98997943383ffdb310089a4964d76858b52a8b76428095caf011eb08b52e04a7b3a1471fdd9660bd81985824fe0f64ede4de9407e501f36d389832ed4f343361f9ddc4af02a7102eca81afd12f10690aab4430f4b34e5a6d2dbe230e71dbd5abd307e7fefa4414ac91a814b57b40cee3f614a17f0768405052406a6043a1fc6fcbd3b021fb144f25c0f19693f8e23dfb6785c986b84b0f2debf702d73e870eed9e722dc0398e9ea5c5b49255fbd2f1dd02085bacc217d2247eecc95cd7338a4d23c6dec6760275287d20fe9529575a8ef44b3c0d3b0ae181644906a6fc3990a16ad01bc7c04504e071c135ab5b6dd7cb18eb2868be6f1f3ccc77d383e2cc73a033a59377266d92304fa7742c0be35512c3e3242806500bfa54f352a9c4321bdcec80ce39c4adb83a882faf3e8d4f5d7346d907d0f5092e20944f9e9cf85f1953a1aadbe9afa4fca7979bd0d2a28aab7703a498afce3563a9f46d5f1ad739b71d1f2f9856cedf7a8c569c9e99283ed627336156b266c5c3dcdfafa214485d38c1e75b6f792a6437c0d4f1d7ecc3456666bd796d503420a33a32923ed556415c5445268af257b9cb60606972bee3c61e64a5eef9cbd08d275300a141b80ecc7b6c933291827a6ff84a600629310c40094031203ce52e1ce364a0f88b5ee21f9228ffd8d00e437db2d3b599d260dc453e52c2d7630730a629a730ffdf69fc537c9965395aede7bcb2362e01f4c1e48ecf444e9b4ef9849b0a48ed554f438d9714db2967905d53cdf9501d7cd37aa858bd2beb6fa5616dc838b5988c8c3cd62a53c825f3ea020ed8eb9f3b8fb76943d4c3cb8fbc5cb4dff88cb044d19d6e0d94c8b4b5605245d39edba0ac3e24955369efa6597aed0860f42dd6aad41d96c0a83c2186fcc9d5f0ac79e24b97c8c91a1cd5a8f7a7a9373a6713d874cce84fdfc28cecd31676d0fe11eb4ab40f0a5de72684bcc066ebd59547926ef16e828c11bead4b7b1a61fb2ae65188e93040f4d1e4e0e1f4b36ec98648b8b693a7228cc5a580fcddeede7aa9a8864757032847c3641bd8f4a0ec02b427c2e5dff6d14fd99f5a66b2588131004788fd0e75258076c8beaa1cf9dbcca7ad8d369ced01752efc2b751b5a2f55907520b72979741dd17acc77c12368bd4daf08fe7085062264d0ad1d31fac2f8ffbbac0231cbbe8abad12c0f45c1da941ae34fd6ac0d96fcbe43a1b34dcd5c02ba9a8267af79ca6ccb52ba849a5d75dd1f73bcd4fcc49946d9192bb27b009826cb4855b2d186ecd5f68744b5ee646d8208332d3670fba7ff44e49a48a86ac77f1b4c446fd1b97e7a20e2705b5a8ae3a00d0cfa1ac234927fe2b1ccbd9737e1949ee136c838b76edae1eeb0214254e338460258559f939830af39364f69c4aec343220bbb5d5fda1f450c29dd71282c582667ac3b84f2f137c8232b0cc787bc0492517d018ff0f90b611d01bac623f801787bb5539e3d65fce988f0c47787fc101e12b9a61a3d7fba1c18ccbba9293ed83d3cb15bb7f4da880ecbd43e5f1c73eb15fe2a7c478da8a43ae3c55215e9528185089b38379a7698736fedf9a2c31f06a695ee18913d98ec975390258d70d3465132e28d9f615f824ab084ad15f245155a9c67feaa00a33533d508a031374ffab1cc2c4cd983acf642109e70e60bfb9deda11bb7a6388f31e4293602c27d8527b346efb58c6dcaec81034673848534ae2d994805740bb8c6fedc108b4aa84dfc675e86b6dc647d87f2212890baab93ef772761c07a2a647597ee8248188bf41b8116ced622fa66c3c1ee77c97225e350cd5deb9859a00a65e408be398ceb7a223eea41074c79fa7c349694f4fc89106009abb570cf9bc7993f4409d75c05878b82d5547ce041ffee7a0bcf0fe5e07ca76163ca97760a82620ef05de9e24655c0c5df6b593c13946243a82153c244af7c8aec026d963a2a8a872d9521886842b19dab3d7aea7f7bda7d4734c8dc176be89593802218692ecc2de17a735925b370af8d222e36300972d2a9d0c41bfaeccc946caebe47389eef37c33910355833505b1b66dea66d11c256f0f90c266a31fed19a83354c347854dac002c4a78cd30718b457f197fb13ce6fc269998115a3be929969cde598a0ddcdf5602a06ffbfa9d2aecf058f7f78a17f96ddd7111bf91962319976e1f055a4efc6b6c3010a3a7b1377ca57cac2ff07b9dcd118ef896e1812a50c4a4ca7ea24797825b7b62d5bf68bdf50e6e611ff621b7d7649c84bb6048273f05febd1b8c0298970f3ee02120add0b83bbac34ecaa84c985423ef5d7f6b14a81bc0dc12ad1a8717c68a49cdeae9056ae8b248eab0361a99205156120fff7109c98721148be2cf9d6521a1bc8ed71dfce71bf96ed941e03ce6ad4d951e8f44ee2ba0fc32f0538bd7f4c83bee2f2f87d41daead1e9fda43159242e2815248d7cf9191a33f292819976953cabd108295b9a51994a1640453d594c1efc5396e7139d886f96a9aa661b72569ba600774a3399fdafc9b0be353e152a4a1c1fd8386c23eb711e861ad1d69a94ab6f015b57509001b5fb64ff1184ffee7959ebc2442fc16a2b85c796f2397223a10da60d58cdaee2e7e174fa893ec7bc9eb80eb7a63e5f845148a095ff9789fd7498bea42acacfca38346e3ff79e2e19e98a32a374d7491dbaeb1052256bf7e07b9e59a0681b11a428c3a29b731957618b8958f12af058504fa367b726e480f5e4bc2f576db162ad66dd7934a8f19a872d51508fcd736e297bf4b947dfa3a4345cbd02f6fc529b6ef87a5ee58d09d60b4fbf4618b07b8f28146a5a91ce96eca31d5fc27b6bc022f13437b6d6f75219af140d7949eac1b355460605f39b5b084911a9dfdbd4d9a509b192819ac677882e54bdead70622b75a224442487a1334ec254361f23b0b9168c790f4688f835fde655184e11388044f347df0e3aa7ec72041f089be8ad403eda1c86af42b4f176de4d476639d4ba888c3786586996e6eb87903bd099b029432eaf369cdcaa4ac662d59260be18d750ea4ec4b188442849e05f624b10c6e4a55bcd36f902bc21950765f930e3eb3b4eef3cd82bc52de597c1f738a097bd0c200337a305c3e139ad58fbfbf4714d9df31834d7e0e6faaef6995acf75d1319846192892d96c9135c6680dbb4a7ac398493a109dd74a52775e1cc871d169d6848bda5681e92f50d5d71d24249dc425bb53ffc86456816c3e357ce05a8c71225d222aa085a2af9e02c358d725d4b40440b590fb91ad8cff7860b0447e12dbac78b2d53c9b621ec3e84a6724376e42b2cb0ea92dd8267ac4904b1c016e176d8c370ddb8d8156bac61592ad071c2cce40aca9581fce2111738246e9c3351cce16079a990605b3f5750ef52e24700da5f614c75ec53d8bba570073b47bd51ef86ddd35511f29b794b60ce049649e86a79a61f1a9e1a6f23e6161be60e0d2eb4c40aae93e822a9047103218195ea95983ff4a8490260dee6d54a12feb11b9ceece5caec949af19f2506ae65eb35226a3e6ec85d1dfb074771d25af38de13a2b252ac706fb05a708684833715d38aa330d291ceaf027a1a29b3cafed75fb0e117cfbfd8dbde012785344c0db91d2c7fbd1403dd9a1fcd1ad33d2c4473363a652de317909a53608583f9a5555d85ab09e6f05cbe1006bab0998f9066a7063a5c5e8caf3bb06e2d6509638fde2ab77a35869883963ca03c6f5bbcffe61157541a31f42b0ccba977fbb6afe0a18c49c3a537a9f16b807d8dac70ae74e2e1e483eb0873d233a2312f5be0a8d112a3e4af0d018ca27d8e14873abdfa05e7b37547e6bd6ef6603bc19a653ea963784c2e52a1e720f2a13d73a9ed3c754cd433bda918880a7254b113f8b75c748e691e9de24ca41d5cffcccd719e6a8be6bb8eeb39d739ecb8d5f5ccfb04b6463ece71db29cc7673444d4b1ed9bc158b87f28855ba133ce021f3ea4d2d34c264562dd5515e1951cad9d9d0de22a0918144adcf53a8a8c449ba5e220debbc6b9d5bef3af3965cf0ea0dfd438502eeedced749d5ff52668d9fa956561ccfc3a847d7318d1c665f201f8af26bd65e2ab399b70472e735eec4198a32cccb12cf1e52cc6f3b97d15fc514933044deaee39a241046afc99217f6540e60b477474e3d299db2a9e0a369aa03d3fe572edad26a0406691e9215a99faaaee37da3e0f4593a1484f44321a92e1e0ffa3b4cefaf14cccfb07345840884b87d2d6162a07b69ea3f7313d13f781726fc5e81fb6d1a77e141b47a174c91f74b0f75b5579d4943ff792faf4da1da6f7604208369f1d99b09dee185e8236cbcf60d5859db06d0e00687a941ce04a1ceda4e22a667d695c5ebc75fb23fe038e5c73e47b9e6fef9740bf7b5a4b98068a6498b965fbf8ed1d4be7e8eb2216f33a1f1aef43796e88e569e249c1504b08475331d4f2156640244e0c4ce4fe996f01485a5983c34eee60232fd8d347a0c27c7dd68c83080ed2af9be0d5b4e503131f3d1fbd57f128d81e05f86c1cabb662b6048b1543f07337226371879943b3ef5743879bf08d89e3bc0133a6ddb2f8dbe04a70f7c743b626a435293f42ceafc8455687c25645de558e3b7be4218adb34b1ffd05c024550b0d1051384409601b31f22c296a3c332f9b39562a589d2f92ab35da37c8d9a89bf511b4b6b5796611a594967c716372031cbe90d681692bb5676cff6c41cf5a545744e6a6a55cd1204cf25b359ef1199ca411bcc72c60595fadd6fc4c55d135e4552f1b65725ba8514aa9f1fec143c4f7d91c33962b7b851766f8109bd3f9b0a8431e10b7e7ee9584a37fe263ecf928e548cc45744742a0826be731b3e4a658ee74d9168d7ea6e74f794ac545d55ef7b23b6a1c81d64c8f32950acde6bc597edae6e01d70f86ba5662f2281cafed34fc0f840444417b6ab82f96563b9b9684a63c832c21b41d7b7e568933fea747bdd3ab9d7e9981070a002dfdb43fad63b5c0083a2583f166b575e0ea5386ff7bc5feb91be044b667c0b58b42546b641162c6a73d825faef7c9a5288aa7ec75135797de8bf6d0ac10a30f96ecbd7b8589c61be3a98258e16bd1d0ae8e7b880cb70d8345cef1edc36b19301405f1b3c72c9d3deb7c291ad0fcd15600f26d71612fd55501f02d8a2a0ed5e8efc8002f23155fc8203dd6c70e33983a2191ac9b23cea58c4dd7a0ba37876685e9e12019dd6148077d81298e04ae0bb65493f4b209bd6797603b3ea5f87423a07b0262c2fac2b211e45d0fe477185b6e29146df06fde6129f9a7ae291653902cd5d1d26dc859aae76046bd18cec1b8c0e617c2fd1e18a0b0a5096ceaae85da045b9832a7b66e4379735b2247a630b8d7c0e64c32bfe0fcdc4043b0f57e34d20a0a2c1ac87bb1aa1e45bd38b3205b9bf15766c8a223a3e4c41f579f398b0be3a03407c5dd5e3ebd373732e5837d2a4464b010da4a906be148ca45f3110a05d9a96abe1f82ed4d393bbdefe5e2e9d67f12e1e97e323e93c4be6e9db12751127aaa1f65b0dc714825468b5829f1a56ad801e5b5e3ade3d58946b13c876538f9e0991ba40fae2f98194f33e7dcf16bbdac1c5ca9a1b0f08490f9111b254ff6308769814e331e4bf5748cac13d551193654998ffd00d26948f09ecb072373825fabb1f8d49ea2e2c0ea6fddfcfb22be6148efec29b9cb8e099ea98de74558489a05c1c47e6f45e5c35e9d54da74980e058d4b9e98103870b77626d7dc841aa49786c8517f8d04646ed1635ea57a217df0629c12ec04d81ee5df8dc230a53289581fe7af1d0d2ebe39ca9bd98e3c677f6aa7e060181a4caddb1541f8e71cd1a6801288bfa3cb99ce7ff15228a674f6454868255d9c9bb2a275d1bade5535adc0ea3b570a1652040b15fa601ae1aadad4aa97382e1181a006b9bad3e6a88a35abcc11e224fd6666e7f3d2e24c21d52379317cfa6d239781ca24f3c27acf8a27e30b6abbd48b4f58069c46fad9b1f24929d18735dc5ba371c0b0fd7b91564f8efe3c9af506b8c5956716466e66cb0a1cae5e749ea6b55ca208314ded52c5c12a1bb90f216e01d742116bb8b92234dbeaf18d0e1d4e2424e952091599695a619c13a1b95bb056291e8d20a07cd206767bf7a69a99bec3261e5baf840b729f8ba51dc33e0a5c17644e0adf2f0e1307fb6aa8fb6ce35f044aebd36938637d8b165fb6479d3c21413527b27708d2a0965f2e4840da7169ee5c3a9e2e129715e7b4542fb24138a38b35c6bbe88e901fdbd624658d22d02167e16a169fda3f09166ecba07faabf862392bb17c17ee6b64f96d3024685e21a2116a04dfe7f76a0672fc76eca39c129bfb7cfa4769cea68b9a6803af98ec8ba2638709e7186bdaef65cd00b730e5594a7327ba4c03775ce4cea0f6e8618de60f832e51ddba22e7fee8a47c5057af3347db2a1dab9d3901e94d385bed98754d4eeae0c0dc30ed8cd9f96727d9f8beb1f1a5b0e5cc2d749149dd7fa8c3c70cb10935961a680c3840d0a2fc6d30e4345f76765ea1b1f8a0bc970199f4c75b1054e21c05749eae29eca70fa410ea47b9fcfe0c606046e1827904cfd95e62612cc461308ab5cd43ea76ebee050435f04cb4a38b1657911e351718ee440a235322c4e7dd1ce6ba5a3b245a80c3f4ce037d33c36d38c04b58694f9d787472cb4f81f9fb96309e6b9aefbdefa78fe0848c77504d2342a6f0400055018e2481f0f92bb7c9c36454b59336696e0d15d59aaac3f8a4775c3d9dacbbbc0361eeca413f5761b0980218d5f95469d49350d87708a516003cb4b23ad18670ff0825b2a81d56429e1c2b4b35261e8ec5a874983bdc414d36f0a7590791bae7ba28146fd91366cebc9a8dd9f94932132b0a0fdf44a2600a01badc5592555bf5071e70fb9ea825d20bb4336bf788793da59367e2e8bc9be57b93bd9115c99d69aae5e6dea649b55e00f18e15afeebcb1f6bcc4e483e92f68c788c058934653947a35a4435c5e606be2dbed65478e988e82301951aecb9079195f44212686ab2d7da4c03fcea0d5d00c1568f205a265d997692f3b2cb646356ce8b9b960a198288b7b4bdd6b9057122c518bb69414235fad179d3a688fffdd993423229f8d3512e5c77c622ea70002ffe95f41b9e29def02798a75a411893aa492d080157c6fe2800cc5110298c8df0a5ceeaceeb0208f394b96ed0a1e38f72ad06460c0516d8e05f470e1d7a241e9e7240d13f849f7fbd11d0e747ee3b3bdbeca0b7fad5822926f09f8c16fbc7ea5eed17d5d459faf3a5ee4a7d891ddc89940d4a43a24fdd5f84f62ec38abbc59c86aed656322df900981fbde81d9efe4c5191b78fe7867be65d977c8eafe35c3bd7d6e8b2d1458de635093e96a4605f0ae619303b1552bdbd81f53235e72abdc8fd4acb044ce235579df352fe731bd82d5b8687f973bb04c2d1f9b93231921009544b99e0841216f6f895cfb3c6fe98a9284ae4bbef15176960f76efbf75ad5a643f87765edcd1f132395b2fd40541c27953530bdb7453492e8c05f3afeefe120cd155f25362427c9e697fe83f5ee14ad9405705da78af7fe25a8829a3a0bbddf0438a599e9f3acab1d6a24fd6e1d33df794934ab48fcf2218a45ac97d2a9368a7d0d40ddc3cf0f88a7d99e1db8fd4e775fe1110f1137bb774f83605090581b126bb1982c903534d398251ec042caa526aa95d5575e54f7c353b0f0a6510a7f310d925b40c332daafe0ae5e05f558bc4aa0e2649570c82115c94b64a26d449dedbee51e84ec50aeeedf67b5974ccfe59e1b29e5808a8fd58105e7ef2fed55a0cb274b02d125fdbe09f0e55100bbfe2140a981d5613588b51fdce05cd4566970120b81c1b78a34c772b59646bc59db91e9719395fa4459c8e41e08683e46abeb71ff203a8080010a2ef329f10c85d9b42594c341a9dd12f581aa27ae6e28dc21d62f57b2871d48a76361da213a86749fbedbc0000290a22f49efddf8e7f592ad606957be2050cbb3ecf763d03a2c91b0baf23e09ba157323c9ffa048fd1470240fb1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>长毛象运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Notes</tag>
      
      <tag>fediverse</tag>
      
      <tag>长毛象运维</tag>
      
      <tag>Mastodon</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【华硕路由器】签到狗自定义脚本签到</title>
    <link href="/2022/05/08/asus_AutoCheckin-by-CheckinDog/"/>
    <url>/2022/05/08/asus_AutoCheckin-by-CheckinDog/</url>
    
    <content type="html"><![CDATA[<p>签到狗自定义脚本签到手把手教学使用。</p><span id="more"></span><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul><li>拥有刷过梅林固件&#x2F;官改固件的华硕路由器</li><li>路由器有USB口</li><li>有多余的U盘</li><li>一台能够连接到路由器网络的电脑&#x2F;手机</li></ul><h2 id="软件中心安装插件"><a href="#软件中心安装插件" class="headerlink" title="软件中心安装插件"></a>软件中心安装插件</h2><p>使用设备连接到路由器，登录路由器后台，默认域名：<code>http://router.asus.com</code>，也可以用默认IP：<code>192.168.50.1</code></p><p>点开软件中心或者koolshare center，下载下列三个插件：</p><ol><li>签到狗3.0</li><li>Entware</li><li>虚拟内存</li></ol><h2 id="创建虚拟内存"><a href="#创建虚拟内存" class="headerlink" title="创建虚拟内存"></a>创建虚拟内存</h2><p>将U盘插入路由器，在网络地图中查看U盘状态，如果是未挂载，请参照另一篇文章<a href="https://pawswrite.xyz/2022/05/08/%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E5%99%A8%E6%8C%82%E8%BD%BDU%E7%9B%98/">《【华硕路由器】插入U盘显示未挂载的解决方法》</a>。</p><p>如果是挂载状态，打开刚刚安装的虚拟内存插件，选择磁盘，选择虚拟内存大小（建议1G），点击创建虚拟内存。如果遇到读取写入速度太低的情况，请参考<a href="https://pawswrite.xyz/2022/05/11/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E8%AF%BB%E5%8F%96%E5%86%99%E5%85%A5%E9%80%9F%E5%BA%A6%E4%B8%8D%E7%AC%A6%E5%90%88%E8%A6%81%E6%B1%82%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/">《【华硕路由器】虚拟内存读取写入速度不符合要求的解决办法》</a>。</p><p>当日志显示<code>创建完毕并成功挂载！</code>，也就是成功创建虚拟内存后，进行下一步。</p><h2 id="安装Entware环境"><a href="#安装Entware环境" class="headerlink" title="安装Entware环境"></a>安装Entware环境</h2><p>打开Entware，点击<code>安装</code>，等待安装完成。</p><p>（Entware也就是给你安装了opkg包管理器）</p><h2 id="安装脚本运行环境"><a href="#安装脚本运行环境" class="headerlink" title="安装脚本运行环境"></a>安装脚本运行环境</h2><p>脚本运行环境共有4项。</p><ul><li>nodejs</li><li>npm</li><li>axios</li><li>git</li></ul><p>其中，如果不需要clone仓库到本地进行签到的话，应该是不需要git的。</p><h3 id="安装nodejs-npm"><a href="#安装nodejs-npm" class="headerlink" title="安装nodejs npm"></a>安装nodejs npm</h3><p>有两种安装方法，这里推荐使用软件中心或者koolshare center，直接安装Node.js插件。</p><ol><li><p>方法一：【推荐】<br>插件显示下列内容即可：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">【<span class="hljs-number">2022</span>年<span class="hljs-number">05</span>月<span class="hljs-number">03</span>日 <span class="hljs-number">00</span>:<span class="hljs-number">18</span>:<span class="hljs-number">50</span>】: 检测到Node.js环境组件：<span class="hljs-keyword">node</span> <span class="hljs-title">node-npm</span>已经正常安装！<br>【<span class="hljs-number">2022</span>年<span class="hljs-number">05</span>月<span class="hljs-number">03</span>日 <span class="hljs-number">00</span>:<span class="hljs-number">18</span>:<span class="hljs-number">50</span>】: <span class="hljs-keyword">node</span><span class="hljs-title">版本号：v14</span>.<span class="hljs-number">18.1</span><br>【<span class="hljs-number">2022</span>年<span class="hljs-number">05</span>月<span class="hljs-number">03</span>日 <span class="hljs-number">00</span>:<span class="hljs-number">18</span>:<span class="hljs-number">52</span>】: npm版本号：<span class="hljs-number">6.14</span>.<span class="hljs-number">15</span><br></code></pre></td></tr></table></figure></li><li><p>方法二：opkg 安装 nodejs npm<br> ssh进入路由器后台：</p><ol><li>安装 nodejs 、 npm<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">opkg install node<br>opkg install node-npm<br></code></pre></td></tr></table></figure></li><li>执行命令<code>node -v</code>，查看 nodejs 版本号。成功即可</li></ol></li></ol><h3 id="安装axios和git"><a href="#安装axios和git" class="headerlink" title="安装axios和git"></a>安装axios和git</h3><p>axios是一个网络请求库，作用于node.js 和浏览器中。可以使用npm方便地安装。而git则使用opkg来进行安装。</p><p>使用ssh连接路由器，执行下列命令（记得加上参数-g来全局安装）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g axios<br>opkg install git<br></code></pre></td></tr></table></figure><h2 id="签到狗页面配置"><a href="#签到狗页面配置" class="headerlink" title="签到狗页面配置"></a>签到狗页面配置</h2><p>打开签到狗，打开<code>开关</code>，点击<code>提交</code>。点击<code>签到狗3.0控制台</code>。点击<code>自定义脚本</code>，点击<code>检测环境</code>，确认输出类似下列的版本信息：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">正在检测是否安装 nodejs v14.<span class="hljs-number">18.1</span><br><br>正在检测是否安装 npm <span class="hljs-number">6.14</span>.<span class="hljs-number">15</span><br><br>正在检测是否安装 axios <span class="hljs-regexp">/tmp/m</span>nt<span class="hljs-regexp">/sda1/</span>entware/lib<br>`-- axios@<span class="hljs-number">0.27</span>.<span class="hljs-number">2</span> <br><br>正在检测是否安装 git git version <span class="hljs-number">2.33</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>然后上传签到文件即可，这里给出一些签到脚本文件的例子：<br>GLaDOS签到脚本：<a href="https://github.com/tech-fever/GLaDOS_Checkin">https://github.com/tech-fever/GLaDOS_Checkin</a></p><h2 id="Q-amp-A："><a href="#Q-amp-A：" class="headerlink" title="Q&amp;A："></a>Q&amp;A：</h2><ol><li>为什么需要 U盘？</li></ol><div class="note info"><p>答：Merlin固件 存储很小 一般为 64-512MB，而 nodejs的npm库 通常需要数 G 存储</p></div><ol start="2"><li>为什么要 npm 全局安装包？</li></ol><div class="note info"><p>答: merlin固件 路由的存储都很小。比如要使用 U盘 来安装插件。 nodejs的依赖包会比较大。</p></div><ol start="3"><li>安装了 nodejs 后为什么需要使用 npm 安装包？</li></ol><div class="note info"><p>答：  大部分 nodejs 项目都需要依赖 npm包。比如 请求库的 axios request 等等，每个项目都应该执行 node XXX项目.js 来确认需要安装的依赖</p></div>]]></content>
    
    
    <categories>
      
      <category>华硕路由器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>华硕路由器</tag>
      
      <tag>自动签到</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【华硕路由器】插入U盘显示未挂载的解决方法</title>
    <link href="/2022/05/08/%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E5%99%A8%E6%8C%82%E8%BD%BDU%E7%9B%98/"/>
    <url>/2022/05/08/%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E5%99%A8%E6%8C%82%E8%BD%BDU%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<p>华硕路由器插入USB后在<code>网络地图部分</code>显示未挂载，在<code>无线网络-专业设置</code>中可开启<code>蓝牙共存</code>依然无法解决。无奈只能手动挂载。</p><span id="more"></span><blockquote><p>笔者使用的是ax56u满血版。<br>参考文章：<a href="https://www.iteait.com/archives/243">https://www.iteait.com/archives/243</a></p></blockquote><p>华硕路由器插入USB后在<code>网络地图部分</code>显示未挂载，在<code>无线网络-专业设置</code>中可开启<code>蓝牙共存</code>依然无法解决。无奈只能手动挂载。</p><p>在虚拟内存插件中看到的：</p><table><thead><tr><th>端口</th><th>名称</th><th>大小</th><th>已用</th><th>权限</th><th>格式</th><th>挂载点</th><th>路径</th></tr></thead><tbody><tr><td>1</td><td>Kingston DataTraveler 3.0</td><td>30.72 GB</td><td>0.00 GB (0.00 %)</td><td>unmounted</td><td>unknown</td><td>sda1</td><td>&#x2F;tmp&#x2F;mnt&#x2F;sda1</td></tr></tbody></table><ol><li><p>使用ssh工具登陆路由器。局域网内一般路由器地址为192.168.50.1，用户名和密码为设定的路由器管理账号名和密码。</p></li><li><p>输入<code>fdisk -l</code> 查看U盘的信息，比如我的U盘，就显示为 &#x2F;dev&#x2F;sda1</p></li><li><p>把U盘格式化成ext2格式（数据会被全部抹除），使用mkfs.ext2命令。<code>mkfs.ext2 /dev/sda1</code>。等了大约一会，就显示格式化完成。</p></li><li><p>在&#x2F;mnt那边创建一个U盘的目录，比如USB。<code>mkdir /mnt/usb</code></p></li><li><p>使用mount命令进行挂载。<code>mount -t ext2 /dev/sda1 /mnt/usb</code></p></li><li><p>挂载成功。在路由器的web管理界面就能看到U盘成功挂载了。</p></li><li><p>取消挂载可以用：<code>umount -v /mnt/usb</code></p></li></ol><p>在虚拟内存插件中:</p><table><thead><tr><th>端口</th><th>名称</th><th>大小</th><th>已用</th><th>权限</th><th>格式</th><th>挂载点</th><th>路径</th></tr></thead><tbody><tr><td>1</td><td>Kingston DataTraveler 3.0</td><td>30.72 GB</td><td>0.04 GB (0.13 %)</td><td>rw</td><td>ext2</td><td>sda1</td><td>&#x2F;tmp&#x2F;mnt&#x2F;usb</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>华硕路由器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>华硕路由器</tag>
      
      <tag>梅林固件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Steam++ a useful tool for Steam</title>
    <link href="/2021/07/02/Steam-a-useful-tool-for-Steam/"/>
    <url>/2021/07/02/Steam-a-useful-tool-for-Steam/</url>
    
    <content type="html"><![CDATA[<p><a href="https://steampp.net/">Steam++</a>是b站“软妹币玩家”开发的开源项目。支持Windows 、macOS 、iOS 和 Android 平台。可以加速访问Steam社区，多账号一键切换，还有内置插件，比如可以用来显示某款游戏历史价格等。对于挂刀挂卡的玩家，这个软件也相当好用。</p><span id="more"></span><p>我个人在Windows端用了有一段时间了所以才拿出来推荐，但说实话这个软件本地运行偶尔出点bug，时不时会崩溃一下，不响应。虽然一般来说重启软件就好了。</p><blockquote><p>官方网站：<a href="https://steampp.net/">https://steampp.net/</a><br>GitHub项目地址：<a href="https://github.com/SteamTools-Team/SteamTools">https://github.com/SteamTools-Team/SteamTools</a></p></blockquote><p><img src="/2021/07/02/Steam-a-useful-tool-for-Steam/1.JPG"></p><h1 id="加速访问"><a href="#加速访问" class="headerlink" title="加速访问"></a>加速访问</h1><p>(这个功能我个人没有验证过到底好不好用，如果有朋友用了可以反馈一下，谢谢)<br>该功能能够使 Steam 社区、 Github 、谷歌验证码等国内难以访问的网页正常访问。功能类似 steamcommunit302 ，使用 Titanium-Web-Proxy 开源项目进行本地反代。顺便支持了Pixiv、Discord、Twitch等网站。<br><img src="/2021/07/02/Steam-a-useful-tool-for-Steam/speed.png" alt="加速"></p><h1 id="【推荐】内置插件"><a href="#【推荐】内置插件" class="headerlink" title="【推荐】内置插件"></a>【推荐】内置插件</h1><p>该功能我觉得是这个软件最好用的地方！内置了大量的游戏相关油猴脚本： Steam 显示史低价格、一键出售 Steam 库存物品、跨区汇率换算、批量激活 CdKey 。脚本可以直接植入 Steam 客户端，体验比原先的脚本更为优秀。用户也可以制作自己的脚本导入软件进行使用。<br><img src="/2021/07/02/Steam-a-useful-tool-for-Steam/js.png" alt="脚本"><br>这里给大家看一个效果，历史价格脚本会在steam内直接显示，不用再<a href="https://www.xiaoheihe.cn/home">小黑盒</a>或者<a href="https://steamdb.info/">steamdb</a>查。<br><img src="/2021/07/02/Steam-a-useful-tool-for-Steam/2.jpg"><br>插件的玩法很多，我用的少。大家可以自己研究。</p><h1 id="库存管理"><a href="#库存管理" class="headerlink" title="库存管理"></a>库存管理</h1><p>该功能能够让您直接管理到 Steam 游戏库存，不仅能够下载老版本的 Steam 游戏，也能够对 Steam 游戏成就进行直接管理，支持解锁成就以及反解锁成就。<br>但是一键解锁成就有风险喔（请勿对带有vac保护的游戏进行一键解锁）。能查看所有游戏隐藏成就的成就信息。<br><img src="/2021/07/02/Steam-a-useful-tool-for-Steam/kc.png" alt="库存"></p><h1 id="令牌管理"><a href="#令牌管理" class="headerlink" title="令牌管理"></a>令牌管理</h1><p>（其实我没用过）该功能能够让您的手机令牌统一保存在电脑中，并且支持云备份，支持的令牌有 Steam 令牌、暴雪令牌、 Uplay 令牌、 Epic 令牌、 R 星令牌等常规 6 位、 8 位令牌。</p><h1 id="【推荐】账号切换"><a href="#【推荐】账号切换" class="headerlink" title="【推荐】账号切换"></a>【推荐】账号切换</h1><p>快速切换当前设备已记住登陆的 Steam 账号。本cyber阿根廷俄罗斯土耳其中国大陆人狂喜。<br>安装steam++以后，在steam上登录过，steam++就会记住账号名密码。之后可以一键切换。软件用的本体steam目录的数据，本地操作、无服务器、没盗号的问题。<br><img src="/2021/07/02/Steam-a-useful-tool-for-Steam/lp.png"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>科学上网</tag>
      
      <tag>游戏</tag>
      
      <tag>Steam</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【教程】科学上网：分流简介</title>
    <link href="/2021/07/01/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%EF%BC%9A%E5%88%86%E6%B5%81%E7%AE%80%E4%BB%8B/"/>
    <url>/2021/07/01/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%EF%BC%9A%E5%88%86%E6%B5%81%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<p>本篇简单介绍什么是分流。</p><span id="more"></span><p>首先走代理就是挂梯子。<br>一般我们有2种连接方式，一种是Global，全局都走代理，一种是rules，也叫分流规则，一种是direct，就是全部直连，最后是Script，脚本，这个比较复杂先不讨论。</p><h1 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h1><p>clash里面叫Global，在shadowrocket里是proxy，quantumult里叫All proxy（就是全部走代理）。<br>其实这个就是不分流的意思，不管我上国内网站还是国外网站，一律走代理，也就是用梯子。<br>当然这样会导致，上国内的一些本来很快的网站，反而使用梯子之后，导致你的流量到国外转了一圈回来，加上国内运营商针对国外服务器的连接都没有优化甚至是负优化，反而变慢。</p><h1 id="分流"><a href="#分流" class="headerlink" title="分流"></a>分流</h1><p>在Clash里叫Rules，或者代理规则，在shadowrocket里是Config。<br>分流就是设定某些网站走某个代理节点，某些网站走另一个代理节点，某些网站直连，某些网站不连接。<br>比如说最常用的分流规则是：国外的网站通过梯子，国内的网站比如QQ等，直接连接，检测到某些广告页面，比如说一些app的弹出广告开屏广告，就直接Reject。<br>我们也可以设定，上Netflix的时候使用美国的代理节点A，上steam的时候使用阿根廷的代理节点B<br>分流的意义，初期是为了解决国内 &#x2F; 国外使用同一网络模式访问缓慢的问题，** 如挂全局访问国内视频网站，会导致本来正常打开很快的网站反而变慢**，视频网站以为你在国外，然后不给你看视频。后来，由于不同的客户端提供了多种多样的分流方法，网上也出现了很多人基于相应制作的规则集。现如今很多人所说的分流已经不仅仅是国内直连，国外代理了某种意义上，折腾分流俨然成了技术活和一部分人的技术象征，他们乐此不疲。</p>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>科学上网</tag>
      
      <tag>机场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通信与技术</title>
    <link href="/2021/07/01/Tutorial-Magic-Tools/"/>
    <url>/2021/07/01/Tutorial-Magic-Tools/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="f9d751af82308f7828d39439bca716e6f2c7913a54257c2b99618a09c866e96a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>Notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS笔记：一些主机提供商</title>
    <link href="/2021/06/30/VPS%E7%AC%94%E8%AE%B0%EF%BC%9A%E4%B8%80%E4%BA%9B%E4%B8%BB%E6%9C%BA%E6%8F%90%E4%BE%9B%E5%95%86/"/>
    <url>/2021/06/30/VPS%E7%AC%94%E8%AE%B0%EF%BC%9A%E4%B8%80%E4%BA%9B%E4%B8%BB%E6%9C%BA%E6%8F%90%E4%BE%9B%E5%95%86/</url>
    
    <content type="html"><![CDATA[<p>这是个笔记。主要记录VPS主机商家相关</p><span id="more"></span><h1 id="便宜级别"><a href="#便宜级别" class="headerlink" title="便宜级别"></a>便宜级别</h1><h2 id="dedipath"><a href="#dedipath" class="headerlink" title="dedipath"></a><a href="https://dedipath.com/">dedipath</a></h2><p>dedipath机房都在美国。hostloc论坛看到的优惠，6美元一年。dedi的ovz是kvm基础上再使用openvz虚拟的，所以不能dd系统。而且bbr加速也很麻烦。</p><blockquote><p>bbr加速可以参考:<a href="https://www.xlovett.com/412.html">https://www.xlovett.com/412.html</a><br>6刀一年的VPS，ipv4和ipv6，但是都<strong>不能解锁Netflix</strong>，平时延迟大概300ms，带宽120Mbps，高峰时期带宽14Mbps。大约。</p></blockquote><h3 id="信息记录"><a href="#信息记录" class="headerlink" title="信息记录"></a>信息记录</h3><blockquote><p>Tuesday, June 29th, 2021<br>First Payment Amount<br>$6.00 USD<br>Recurring Amount<br>$12.00 USD<br>Billing Cycle<br>Annually<br>Next Due Date<br>Wednesday, June 29th, 2022</p></blockquote><h3 id="线路"><a href="#线路" class="headerlink" title="线路"></a>线路</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">目标:北京电信[219.141.136.10]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:北京联通[202.106.196.115]</span>  <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:北京移动[211.136.28.231]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:上海电信[202.96.199.132]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:上海联通[211.95.72.1]</span>      <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:上海移动[211.136.112.50]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:广州电信[61.144.56.100]</span>    <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:广州联通[211.95.193.97]</span>    <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:广州移动[120.196.122.69]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br></code></pre></td></tr></table></figure><h3 id="脚本测试结果"><a href="#脚本测试结果" class="headerlink" title="脚本测试结果"></a>脚本测试结果</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">Superbench.sh</span> <span class="hljs-string">--</span> <span class="hljs-string">https://www.oldking.net/350.html</span><br> <span class="hljs-attr">Mode  : Standard    Version :</span> <span class="hljs-number">1.1</span><span class="hljs-number">.7</span><br> <span class="hljs-attr">Usage :</span> <span class="hljs-string">wget</span> <span class="hljs-string">-qO-</span> <span class="hljs-string">sb.oldking.net</span> <span class="hljs-string">|</span> <span class="hljs-string">bash</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">CPU Model            :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2660</span> <span class="hljs-number">0</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">20GHz</span><br> <span class="hljs-attr">CPU Cores            :</span> <span class="hljs-number">1</span> <span class="hljs-string">Cores</span> <span class="hljs-number">2699.914 </span><span class="hljs-string">MHz</span> <span class="hljs-string">x86_64</span><br> <span class="hljs-attr">CPU Cache            :</span> <span class="hljs-number">20480</span> <span class="hljs-string">KB</span> <br> <span class="hljs-attr">OS                   :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">10</span> <span class="hljs-string">(64</span> <span class="hljs-string">Bit)</span> <span class="hljs-string">OpenVZ</span><br> <span class="hljs-attr">Kernel               :</span> <span class="hljs-number">4.19</span><span class="hljs-number">.0</span><br> <span class="hljs-attr">Total Space          :</span> <span class="hljs-number">1.5</span> <span class="hljs-string">GB</span> <span class="hljs-string">/</span> <span class="hljs-number">9.8</span> <span class="hljs-string">GB</span> <br> <span class="hljs-attr">Total RAM            :</span> <span class="hljs-number">69</span> <span class="hljs-string">MB</span> <span class="hljs-string">/</span> <span class="hljs-number">512</span> <span class="hljs-string">MB</span> <span class="hljs-string">(273</span> <span class="hljs-string">MB</span> <span class="hljs-string">Buff)</span><br> <span class="hljs-attr">Total SWAP           :</span> <span class="hljs-number">0</span> <span class="hljs-string">MB</span> <span class="hljs-string">/</span> <span class="hljs-number">0</span> <span class="hljs-string">MB</span><br> <span class="hljs-attr">Uptime               :</span> <span class="hljs-number">0</span> <span class="hljs-string">days</span> <span class="hljs-number">0</span> <span class="hljs-string">hour</span> <span class="hljs-number">7</span> <span class="hljs-string">min</span><br> <span class="hljs-attr">Load Average         :</span> <span class="hljs-number">0.28</span><span class="hljs-string">,</span> <span class="hljs-number">0.16</span><span class="hljs-string">,</span> <span class="hljs-number">0.08</span><br> <span class="hljs-attr">TCP CC               :</span> <br> <span class="hljs-string">ASN</span> <span class="hljs-string">&amp;</span> <span class="hljs-attr">ISP            :</span> <span class="hljs-string">AS35913,</span> <span class="hljs-string">DediPath</span><br> <span class="hljs-attr">Organization         :</span> <span class="hljs-string">Dedipath</span><br> <span class="hljs-attr">Location             :</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">United</span> <span class="hljs-string">States</span> <span class="hljs-string">/</span> <span class="hljs-string">US</span><br> <span class="hljs-attr">Region               :</span> <span class="hljs-string">California</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">135</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">175</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">136</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-attr">Average I/O Speed    :</span> <span class="hljs-number">148.7</span> <span class="hljs-string">MB/s</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">Node</span> <span class="hljs-string">Name</span>        <span class="hljs-string">Upload</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">Download</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">Latency</span>     <br> <span class="hljs-string">Speedtest.net</span>    <span class="hljs-number">534.12</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">892.77</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-string">(*)61.08</span> <span class="hljs-string">ms</span> <br> <span class="hljs-string">Fast.com</span>         <span class="hljs-number">0.00</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">130.2</span> <span class="hljs-string">Mbit/s</span>        <span class="hljs-bullet">-</span>           <br> <span class="hljs-string">Nanjing</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CT</span>  <span class="hljs-number">553.92</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">433.83</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">153.04</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Hefei</span> <span class="hljs-string">5G</span>     <span class="hljs-string">CT</span>  <span class="hljs-number">539.53</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">503.64</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">161.60</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Guangzhou</span> <span class="hljs-string">5G</span> <span class="hljs-string">CT</span>  <span class="hljs-number">6.07</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">290.55</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">164.50</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">TianJin</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CU</span>  <span class="hljs-number">436.51</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">452.64</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">198.70</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Shanghai</span> <span class="hljs-string">5G</span>  <span class="hljs-string">CU</span>  <span class="hljs-number">598.78</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">609.56</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">176.54</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Tianjin</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CM</span>  <span class="hljs-number">429.95</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">793.57</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">199.44</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Nanjing</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CM</span>  <span class="hljs-number">599.43</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">140.46</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">204.27</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Hefei</span> <span class="hljs-string">5G</span>     <span class="hljs-string">CM</span>  <span class="hljs-number">410.27</span> <span class="hljs-string">Mbit/s</span>     <span class="hljs-number">836.49</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">208.16</span> <span class="hljs-string">ms</span>   <br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">Finished in  :</span> <span class="hljs-number">5</span> <span class="hljs-string">min</span> <span class="hljs-number">43</span> <span class="hljs-string">sec</span><br> <span class="hljs-attr">Timestamp    :</span> <span class="hljs-number">2021-06-30 02:50:17 </span><span class="hljs-string">GMT+8</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">Share result:</span><br> <span class="hljs-string">·</span> <span class="hljs-string">https://www.speedtest.net/result/c/972e3ab7-984b-476c-bf19-4053d93d7418</span><br> <span class="hljs-string">·</span> <span class="hljs-string">https://paste.ubuntu.com/p/BzqXdZ6RDM/</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br></code></pre></td></tr></table></figure><p>2022.5.12测试（居然把硬盘读写速度降低了，无语）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">00</span><span class="hljs-string">:38:36</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">194</span> <span class="hljs-string">days,</span> <span class="hljs-number">6</span> <span class="hljs-string">hours,</span> <span class="hljs-number">41</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2660</span> <span class="hljs-number">0</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">20GHz</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-number">2699.914 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">512.0</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">0.0</span> <span class="hljs-string">KiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">9.7</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">CentOS</span> <span class="hljs-string">Linux</span> <span class="hljs-number">8</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">4.18</span><span class="hljs-number">.0</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">3.34</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(835)</span> <span class="hljs-string">|</span> <span class="hljs-number">6.77</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(105)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">3.36</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(841)</span> <span class="hljs-string">|</span> <span class="hljs-number">7.13</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(111)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">6.70</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(1.6k)</span> <span class="hljs-string">|</span> <span class="hljs-number">13.90</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(216)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">3.23</span> <span class="hljs-string">MB/s</span>        <span class="hljs-string">(6)</span> <span class="hljs-string">|</span> <span class="hljs-number">14.61</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(14)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">3.55</span> <span class="hljs-string">MB/s</span>        <span class="hljs-string">(6)</span> <span class="hljs-string">|</span> <span class="hljs-number">16.39</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(16)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">6.79</span> <span class="hljs-string">MB/s</span>       <span class="hljs-string">(12)</span> <span class="hljs-string">|</span> <span class="hljs-number">31.00</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(30)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">475</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">15.0</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">588</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">37.1</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">545</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">406</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">594</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">82.2</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">609</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">68.0</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">628</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">576</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv6):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">561</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">90.5</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-number">62.9</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">524</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">435</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">583</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">136</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">630</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">553</span> <span class="hljs-string">Mbits/sec</span><br><br></code></pre></td></tr></table></figure><h3 id="解锁情况"><a href="#解锁情况" class="headerlink" title="解锁情况"></a>解锁情况</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <span class="hljs-string">**</span> <span class="hljs-string">测试时间:</span> <span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">01</span><span class="hljs-string">:12:51</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv4解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">DediPath</span> <span class="hljs-string">(..*.*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">US</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">San</span> <span class="hljs-string">Francisco,</span> <span class="hljs-string">CA</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">-&gt;/dev/fd/63:</span> <span class="hljs-attr">line 1909: nslookup:</span> <span class="hljs-string">command</span> <span class="hljs-string">not</span> <span class="hljs-string">found</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Failed</span> <span class="hljs-string">(CDN</span> <span class="hljs-string">IP</span> <span class="hljs-string">Not</span> <span class="hljs-string">Found)</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">USD</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">===========[</span> <span class="hljs-string">North</span> <span class="hljs-string">America</span> <span class="hljs-string">]===========</span><br> <span class="hljs-attr">FOX:</span>                                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Hulu:</span>                                  <span class="hljs-string">Failed</span><br> <span class="hljs-string">ESPN+:[Sponsored</span> <span class="hljs-string">by</span> <span class="hljs-string">Jam]</span>               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Epix:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Starz:</span>                                 <span class="hljs-literal">No</span><br> <span class="hljs-attr">HBO Now:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">HBO Max:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">BritBox:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">NBA TV:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Fubo TV:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Sling TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Pluto TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Acorn TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">SHOWTIME:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-string">AT&amp;T</span> <span class="hljs-attr">NOW:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">encoreTVB:</span>                             <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">CineMax Go:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Funimation:</span>                            <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">Discovery+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">Paramount+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Peacock TV:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">---CA---</span><br> <span class="hljs-attr">CBC Gem:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Crave:</span>                                 <span class="hljs-literal">No</span><br><span class="hljs-string">=======================================</span><br><br><br> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv6解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">DediPath</span> <span class="hljs-string">(:::*:*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-string">Unsupported</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">Failed</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-string">Failed</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Failed</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">===========[</span> <span class="hljs-string">North</span> <span class="hljs-string">America</span> <span class="hljs-string">]===========</span><br> <span class="hljs-attr">FOX:</span>                                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Hulu:</span>                                  <span class="hljs-string">Failed</span><br> <span class="hljs-string">ESPN+:[Sponsored</span> <span class="hljs-string">by</span> <span class="hljs-string">Jam]</span>               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Epix:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Starz:</span>                                 <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">HBO Now:</span>                               <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br><br> <span class="hljs-attr">HBO Max:</span>                               <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">BritBox:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">NBA TV:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Fubo TV:</span>                               <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">Sling TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Pluto TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Acorn TV:</span>                              <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">SHOWTIME:</span>                              <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">encoreTVB:</span>                             <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span>             <span class="hljs-string">-&gt;</span><br> <span class="hljs-attr">CineMax Go:</span>                            <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">Funimation:</span>                            <span class="hljs-string">IPv6</span> <span class="hljs-string">Not</span> <span class="hljs-string">Support</span><br> <span class="hljs-string">Discovery+:</span>                            <span class="hljs-string">IPv6</span> <span class="hljs-string">Not</span> <span class="hljs-string">Support</span><br> <span class="hljs-string">Paramount+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Peacock TV:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">---CA---</span><br> <span class="hljs-attr">CBC Gem:</span>                               <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br> <span class="hljs-attr">Crave:</span>                                 <span class="hljs-string">Failed</span> <span class="hljs-string">(Network</span> <span class="hljs-string">Connection)</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">本次测试已结束，感谢使用此脚本</span><br><br></code></pre></td></tr></table></figure><h2 id="ruvds"><a href="#ruvds" class="headerlink" title="ruvds"></a>ruvds</h2><p>俄罗斯机房，还有荷兰，英国，德国的机子。最便宜的624卢布一年。也就是下面这个。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">Superbench.sh</span> <span class="hljs-string">--</span> <span class="hljs-string">https://www.oldking.net/350.html</span><br> <span class="hljs-attr">Mode  : Standard    Version :</span> <span class="hljs-number">1.1</span><span class="hljs-number">.7</span><br> <span class="hljs-attr">Usage :</span> <span class="hljs-string">wget</span> <span class="hljs-string">-qO-</span> <span class="hljs-string">sb.oldking.net</span> <span class="hljs-string">|</span> <span class="hljs-string">bash</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">CPU Model            :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2658</span> <span class="hljs-string">v4</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">30GHz</span><br> <span class="hljs-attr">CPU Cores            :</span> <span class="hljs-number">1</span> <span class="hljs-string">Cores</span> <span class="hljs-number">2294.674 </span><span class="hljs-string">MHz</span> <span class="hljs-string">x86_64</span><br> <span class="hljs-attr">CPU Cache            :</span> <span class="hljs-number">35840</span> <span class="hljs-string">KB</span> <br> <span class="hljs-attr">OS                   :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">9</span> <span class="hljs-string">(64</span> <span class="hljs-string">Bit)</span> <span class="hljs-string">Hyper-V</span><br> <span class="hljs-attr">Kernel               :</span> <span class="hljs-number">4.11</span><span class="hljs-number">.8</span><span class="hljs-number">-041108</span><span class="hljs-string">-generic</span><br> <span class="hljs-attr">Total Space          :</span> <span class="hljs-number">1.8</span> <span class="hljs-string">GB</span> <span class="hljs-string">/</span> <span class="hljs-number">9.3</span> <span class="hljs-string">GB</span> <br> <span class="hljs-attr">Total RAM            :</span> <span class="hljs-number">172</span> <span class="hljs-string">MB</span> <span class="hljs-string">/</span> <span class="hljs-number">476</span> <span class="hljs-string">MB</span> <span class="hljs-string">(294</span> <span class="hljs-string">MB</span> <span class="hljs-string">Buff)</span><br> <span class="hljs-attr">Total SWAP           :</span> <span class="hljs-number">1</span> <span class="hljs-string">MB</span> <span class="hljs-string">/</span> <span class="hljs-number">509</span> <span class="hljs-string">MB</span><br> <span class="hljs-attr">Uptime               :</span> <span class="hljs-number">3</span> <span class="hljs-string">days</span> <span class="hljs-number">3</span> <span class="hljs-string">hour</span> <span class="hljs-number">42</span> <span class="hljs-string">min</span><br> <span class="hljs-attr">Load Average         :</span> <span class="hljs-number">0.36</span><span class="hljs-string">,</span> <span class="hljs-number">0.11</span><span class="hljs-string">,</span> <span class="hljs-number">0.03</span><br> <span class="hljs-attr">TCP CC               :</span> <span class="hljs-string">bbr</span><br> <span class="hljs-string">ASN</span> <span class="hljs-string">&amp;</span> <span class="hljs-attr">ISP            :</span> <span class="hljs-string">AS48347,</span> <span class="hljs-string">JSC</span> <span class="hljs-string">Mediasoft</span> <span class="hljs-string">ekspert</span><br> <span class="hljs-attr">Organization         :</span> <span class="hljs-string">MT</span> <span class="hljs-string">FINANCE</span> <span class="hljs-string">LLC</span><br> <span class="hljs-attr">Location             :</span> <span class="hljs-string">Moscow,</span> <span class="hljs-string">Russia</span> <span class="hljs-string">/</span> <span class="hljs-string">RU</span><br> <span class="hljs-attr">Region               :</span> <span class="hljs-string">Moscow</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">120</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">153</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-string">I/O</span> <span class="hljs-string">Speed(</span> <span class="hljs-number">1.</span><span class="hljs-string">0GB</span> <span class="hljs-string">)</span>   <span class="hljs-string">:</span> <span class="hljs-number">168</span> <span class="hljs-string">MB/s</span><br> <span class="hljs-attr">Average I/O Speed    :</span> <span class="hljs-number">147.0</span> <span class="hljs-string">MB/s</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-string">Node</span> <span class="hljs-string">Name</span>        <span class="hljs-string">Upload</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">Download</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">Latency</span>     <br> <span class="hljs-string">Speedtest.net</span>    <span class="hljs-number">95.53</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">333.25</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">3.36</span> <span class="hljs-string">ms</span>     <br> <span class="hljs-string">Fast.com</span>         <span class="hljs-number">0.00</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">111.2</span> <span class="hljs-string">Mbit/s</span>        <span class="hljs-bullet">-</span>           <br> <span class="hljs-string">Nanjing</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CT</span>  <span class="hljs-number">92.45</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">225.07</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">239.95</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Hefei</span> <span class="hljs-string">5G</span>     <span class="hljs-string">CT</span>  <span class="hljs-number">93.67</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">213.42</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">248.65</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">TianJin</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CU</span>  <span class="hljs-number">87.28</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">239.79</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">240.29</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Shanghai</span> <span class="hljs-string">5G</span>  <span class="hljs-string">CU</span>  <span class="hljs-number">95.61</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">359.95</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">140.77</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Tianjin</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CM</span>  <span class="hljs-number">93.75</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">310.42</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">242.08</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Nanjing</span> <span class="hljs-string">5G</span>   <span class="hljs-string">CM</span>  <span class="hljs-number">91.57</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">5.66</span> <span class="hljs-string">Mbit/s</span>         <span class="hljs-number">248.95</span> <span class="hljs-string">ms</span>   <br> <span class="hljs-string">Hefei</span> <span class="hljs-string">5G</span>     <span class="hljs-string">CM</span>  <span class="hljs-number">88.72</span> <span class="hljs-string">Mbit/s</span>      <span class="hljs-number">376.69</span> <span class="hljs-string">Mbit/s</span>       <span class="hljs-number">316.22</span> <span class="hljs-string">ms</span>   <br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">Finished in  :</span> <span class="hljs-number">4</span> <span class="hljs-string">min</span> <span class="hljs-number">53</span> <span class="hljs-string">sec</span><br> <span class="hljs-attr">Timestamp    :</span> <span class="hljs-number">2021-07-01 18:28:00 </span><span class="hljs-string">GMT+8</span><br> <span class="hljs-attr">Results      :</span> <span class="hljs-string">./superbench.log</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br> <span class="hljs-attr">Share result:</span><br> <span class="hljs-string">·</span> <span class="hljs-string">https://www.speedtest.net/result/c/cf22ece8-3cfa-4751-bee1-ef83790f6870</span><br> <span class="hljs-string">·</span> <span class="hljs-string">https://paste.ubuntu.com/p/gsdgQHYXM4/</span><br><span class="hljs-string">----------------------------------------------------------------------</span><br></code></pre></td></tr></table></figure><h1 id="中等"><a href="#中等" class="headerlink" title="中等"></a>中等</h1><h2 id="HostHatch"><a href="#HostHatch" class="headerlink" title="HostHatch"></a>HostHatch</h2><p>对移动线路很友好，其他都不行。下面这台机子20刀一年。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">1</span> <span class="hljs-string">CPU</span> <span class="hljs-string">core</span> <span class="hljs-string">(12.5%</span> <span class="hljs-string">dedicated,</span> <span class="hljs-string">burstable</span> <span class="hljs-string">up</span> <span class="hljs-string">to</span> <span class="hljs-number">100</span><span class="hljs-string">%)</span><br><span class="hljs-string">1GB</span> <span class="hljs-string">RAM</span><br><span class="hljs-number">10</span> <span class="hljs-string">GB</span> <span class="hljs-string">RAIND-10</span> <span class="hljs-string">NVME</span><br><span class="hljs-number">500</span> <span class="hljs-string">GB</span> <span class="hljs-string">bandwidth</span><br></code></pre></td></tr></table></figure><h3 id="线路-1"><a href="#线路-1" class="headerlink" title="线路"></a>线路</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">目标:北京电信[219.141.136.10]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:北京联通[202.106.196.115]</span>  <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:北京移动[211.136.28.231]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:上海电信[202.96.199.132]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:上海联通[211.95.72.1]</span>      <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:上海移动[211.136.112.50]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:广州电信[61.144.56.100]</span>    <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:广州联通[211.95.193.97]</span>    <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:广州移动[120.196.122.69]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br></code></pre></td></tr></table></figure><h3 id="脚本跑分"><a href="#脚本跑分" class="headerlink" title="脚本跑分"></a>脚本跑分</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Wed</span> <span class="hljs-number">11</span> <span class="hljs-string">May</span> <span class="hljs-number">2022 12:40:08 </span><span class="hljs-string">PM</span> <span class="hljs-string">EDT</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">4</span> <span class="hljs-string">days,</span> <span class="hljs-number">8</span> <span class="hljs-string">hours,</span> <span class="hljs-number">44</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2690</span> <span class="hljs-string">v2</span> <span class="hljs-string">@</span> <span class="hljs-number">3.</span><span class="hljs-string">00GHz</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-number">2999.998 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">987.2</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">975.0</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">8.8</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">10</span> <span class="hljs-string">(buster)</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">4.19</span><span class="hljs-number">.0</span><span class="hljs-number">-20</span><span class="hljs-string">-amd64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">103.37</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(25.8k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.16</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(18.2k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">103.64</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(25.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.17</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(18.3k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">207.01</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(51.7k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.34</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(36.6k)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">2.02</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(3.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.73</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.6k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">2.13</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(4.1k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.92</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.8k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">4.16</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(8.1k)</span> <span class="hljs-string">|</span> <span class="hljs-number">5.66</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(5.5k)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">181</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">283</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">194</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">455</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-number">407</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">353</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">385</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">271</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">245</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">275</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">490</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">481</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">502</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14845638</span><br><br></code></pre></td></tr></table></figure><h3 id="解锁情况-1"><a href="#解锁情况-1" class="headerlink" title="解锁情况"></a>解锁情况</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv4解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">HostHatch</span> <span class="hljs-string">(*.*.*.*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">HK)</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">HK)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">No</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">HK</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">HK)</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Hong</span> <span class="hljs-string">Kong</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Hong</span> <span class="hljs-string">Kong</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">HKD</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">=============[</span> <span class="hljs-string">Hong</span> <span class="hljs-string">Kong</span> <span class="hljs-string">]=============</span><br> <span class="hljs-attr">Now E:</span>                                 <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Viu.TV:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">MyTVSuper:</span>                             <span class="hljs-literal">No</span><br> <span class="hljs-attr">HBO GO Asia:</span>                           <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">HK)</span><br> <span class="hljs-attr">BiliBili Hongkong/Macau/Taiwan:</span>        <span class="hljs-literal">Yes</span><br><span class="hljs-string">=======================================</span><br><br></code></pre></td></tr></table></figure><h2 id="RackNerd"><a href="#RackNerd" class="headerlink" title="RackNerd"></a>RackNerd</h2><p>国人商家。下面这台机子10.69 USD一年，配置<code>768MB RAM - LA-DC02</code> 。支持ipv6，什么都不解锁。线路很差，三网延迟都高于500ms。性价比高。随时可能跑路。</p><h3 id="线路-2"><a href="#线路-2" class="headerlink" title="线路"></a>线路</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">目标:北京电信[219.141.136.10]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:北京联通[202.106.196.115]</span>  <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:北京移动[211.136.28.231]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:上海电信[202.96.199.132]</span>   <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:上海联通[211.95.72.1]</span>      <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:上海移动[211.136.112.50]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br><span class="hljs-string">目标:广州电信[61.144.56.100]</span>    <span class="hljs-string">回程线路:中国电信163(AS4134)</span><br><span class="hljs-string">目标:广州联通[211.95.193.97]</span>    <span class="hljs-string">回程线路:中国联通169(AS4837)</span><br><span class="hljs-string">目标:广州移动[120.196.122.69]</span>   <span class="hljs-string">回程线路:中国移动CMI(AS9808)</span><br></code></pre></td></tr></table></figure><h3 id="脚本跑分-1"><a href="#脚本跑分-1" class="headerlink" title="脚本跑分"></a>脚本跑分</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Wed</span> <span class="hljs-number">11</span> <span class="hljs-string">May</span> <span class="hljs-number">2022 12:45:43 </span><span class="hljs-string">PM</span> <span class="hljs-string">EDT</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">43</span> <span class="hljs-string">days,</span> <span class="hljs-number">8</span> <span class="hljs-string">hours,</span> <span class="hljs-number">21</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">CPU</span> <span class="hljs-string">E5-2690</span> <span class="hljs-number">0</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">90GHz</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-number">2899.996 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">734.8</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">765.0</span> <span class="hljs-string">MiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">14.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">10</span> <span class="hljs-string">(buster)</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">4.19</span><span class="hljs-number">.0</span><span class="hljs-number">-20</span><span class="hljs-string">-amd64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">54.31</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(13.5k)</span> <span class="hljs-string">|</span> <span class="hljs-number">649.58</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(10.1k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">54.43</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(13.6k)</span> <span class="hljs-string">|</span> <span class="hljs-number">652.99</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(10.2k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">108.75</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(27.1k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.30</span> <span class="hljs-string">GB/s</span>    <span class="hljs-string">(20.3k)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">1.23</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.4k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.20</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(1.1k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">1.30</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.5k)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.28</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(1.2k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">2.54</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(4.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.49</span> <span class="hljs-string">GB/s</span>     <span class="hljs-string">(2.4k)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">617</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">83.9</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">665</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">40.2</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">616</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">471</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">770</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">101</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">790</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">101</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">825</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">602</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">380</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">367</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14845716</span><br><br></code></pre></td></tr></table></figure><h3 id="解锁情况-2"><a href="#解锁情况-2" class="headerlink" title="解锁情况"></a>解锁情况</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv4解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">Multacom</span> <span class="hljs-string">Corporation</span> <span class="hljs-string">(..*.*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-string">Originals</span> <span class="hljs-string">Only</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">US</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">USD</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">===========[</span> <span class="hljs-string">North</span> <span class="hljs-string">America</span> <span class="hljs-string">]===========</span><br> <span class="hljs-attr">FOX:</span>                                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Hulu:</span>                                  <span class="hljs-string">Failed</span><br> <span class="hljs-string">ESPN+:[Sponsored</span> <span class="hljs-string">by</span> <span class="hljs-string">Jam]</span>               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Epix:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Starz:</span>                                 <span class="hljs-literal">No</span><br> <span class="hljs-attr">HBO Now:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">HBO Max:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">BritBox:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">NBA TV:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Fubo TV:</span>                               <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Sling TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Pluto TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Acorn TV:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">SHOWTIME:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-string">AT&amp;T</span> <span class="hljs-attr">NOW:</span>                              <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">encoreTVB:</span>                             <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">CineMax Go:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Funimation:</span>                            <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">US)</span><br> <span class="hljs-string">Discovery+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">Paramount+:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Peacock TV:</span>                            <span class="hljs-literal">Yes</span><br> <span class="hljs-string">---CA---</span><br> <span class="hljs-attr">CBC Gem:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Crave:</span>                                 <span class="hljs-literal">No</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">当前主机不支持IPv6,跳过...</span><br><br></code></pre></td></tr></table></figure><h1 id="大厂机子"><a href="#大厂机子" class="headerlink" title="大厂机子"></a>大厂机子</h1><h2 id="甲骨文"><a href="#甲骨文" class="headerlink" title="甲骨文"></a>甲骨文</h2><p>免费账号，可以开amd也可以开arm。arm实例配置最高可达4核24GB。单核跑分约800。良心得很。缺点是不能重装系统。硬盘读写速度太低。</p><h3 id="脚本跑分-2"><a href="#脚本跑分-2" class="headerlink" title="脚本跑分"></a>脚本跑分</h3><h3 id="arm跑分结果"><a href="#arm跑分结果" class="headerlink" title="arm跑分结果"></a>arm跑分结果</h3><p>3核19GB，75GB 硬盘。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">00</span><span class="hljs-string">:38:49</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-string">ARM</span> <span class="hljs-string">compatibility</span> <span class="hljs-string">is</span> <span class="hljs-string">considered</span> <span class="hljs-string">*experimental*</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">7</span> <span class="hljs-string">days,</span> <span class="hljs-number">23</span> <span class="hljs-string">hours,</span> <span class="hljs-number">31</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Neoverse-N1</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">3</span> <span class="hljs-string">@</span> <span class="hljs-string">???</span> <span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">17.7</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">8.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">75.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Oracle</span> <span class="hljs-string">Linux</span> <span class="hljs-string">Server</span> <span class="hljs-number">8.5</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">5.4</span><span class="hljs-number">.17</span><span class="hljs-number">-2136.306</span><span class="hljs-number">.1</span><span class="hljs-number">.3</span><span class="hljs-string">.el8uek.aarch64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">11.79</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(2.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">23.63</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(369)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">11.79</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(2.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">24.33</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(380)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">23.59</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(5.8k)</span> <span class="hljs-string">|</span> <span class="hljs-number">47.97</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(749)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">21.69</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(42)</span> <span class="hljs-string">|</span> <span class="hljs-number">21.38</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(20)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">23.55</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(45)</span> <span class="hljs-string">|</span> <span class="hljs-number">23.86</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(23)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">45.24</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(87)</span> <span class="hljs-string">|</span> <span class="hljs-number">45.25</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(43)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">713</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">465</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">2.27</span> <span class="hljs-string">Gbits/sec</span>  <span class="hljs-string">|</span> <span class="hljs-number">524</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">663</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">711</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">908</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">480</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">2.49</span> <span class="hljs-string">Gbits/sec</span>  <span class="hljs-string">|</span> <span class="hljs-number">768</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">1.33</span> <span class="hljs-string">Gbits/sec</span>  <span class="hljs-string">|</span> <span class="hljs-number">659</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">875</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">2276</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14845601</span><br></code></pre></td></tr></table></figure><p>1核5GB，47 GB硬盘。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">00</span><span class="hljs-string">:38:53</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-string">ARM</span> <span class="hljs-string">compatibility</span> <span class="hljs-string">is</span> <span class="hljs-string">considered</span> <span class="hljs-string">*experimental*</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">3</span> <span class="hljs-string">days,</span> <span class="hljs-number">19</span> <span class="hljs-string">hours,</span> <span class="hljs-number">30</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">Neoverse-N1</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-string">???</span> <span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">4.6</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">4.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">46.5</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Oracle</span> <span class="hljs-string">Linux</span> <span class="hljs-string">Server</span> <span class="hljs-number">8.5</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">5.4</span><span class="hljs-number">.17</span><span class="hljs-number">-2136.306</span><span class="hljs-number">.1</span><span class="hljs-number">.3</span><span class="hljs-string">.el8uek.aarch64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">6.27</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(1.5k)</span> <span class="hljs-string">|</span> <span class="hljs-number">27.23</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(425)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">6.27</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(1.5k)</span> <span class="hljs-string">|</span> <span class="hljs-number">28.03</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(438)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">12.54</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(3.1k)</span> <span class="hljs-string">|</span> <span class="hljs-number">55.26</span> <span class="hljs-string">MB/s</span>     <span class="hljs-string">(863)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">24.17</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(47)</span> <span class="hljs-string">|</span> <span class="hljs-number">23.84</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(23)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">26.24</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(51)</span> <span class="hljs-string">|</span> <span class="hljs-number">26.60</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(25)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">50.42</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(98)</span> <span class="hljs-string">|</span> <span class="hljs-number">50.45</span> <span class="hljs-string">MB/s</span>      <span class="hljs-string">(48)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-number">571</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">467</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-number">360</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">592</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">556</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">662</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">803</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">529</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">863</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">713</span> <span class="hljs-string">Mbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">915</span> <span class="hljs-string">Mbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">678</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span> <span class="hljs-number">807</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span> <span class="hljs-number">824</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14845611</span><br></code></pre></td></tr></table></figure><h3 id="amd-跑分结果"><a href="#amd-跑分结果" class="headerlink" title="amd 跑分结果"></a>amd 跑分结果</h3><h3 id="解锁情况-3"><a href="#解锁情况-3" class="headerlink" title="解锁情况"></a>解锁情况</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs yaml"> <span class="hljs-string">**</span> <span class="hljs-string">测试时间:</span> <span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">01</span><span class="hljs-string">:15:08</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br> <span class="hljs-string">**</span> <span class="hljs-string">正在测试IPv4解锁情况</span><br><span class="hljs-string">--------------------------------</span><br> <span class="hljs-string">**</span> <span class="hljs-string">您的网络为:</span> <span class="hljs-string">Oracle</span> <span class="hljs-string">Cloud</span> <span class="hljs-string">(*.*.*.*)</span><br><br><br><span class="hljs-string">============[</span> <span class="hljs-string">Multination</span> <span class="hljs-string">]============</span><br> <span class="hljs-attr">Dazn:</span>                                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">HotStar:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-string">Disney+:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">SE)</span><br> <span class="hljs-attr">Netflix:</span>                               <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">JP)</span><br> <span class="hljs-attr">YouTube Premium:</span>                       <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">JP)</span><br> <span class="hljs-attr">Amazon Prime Video:</span>                    <span class="hljs-literal">Yes</span> <span class="hljs-string">(Region:</span> <span class="hljs-string">JP)</span><br> <span class="hljs-string">TVBAnywhere+:</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">iQyi Oversea Region:</span>                   <span class="hljs-string">JP</span><br> <span class="hljs-attr">Viu.com:</span>                               <span class="hljs-literal">No</span><br> <span class="hljs-attr">YouTube CDN:</span>                           <span class="hljs-string">Tokyo</span><br> <span class="hljs-attr">Netflix Preferred CDN:</span>                 <span class="hljs-string">Tokyo</span><br> <span class="hljs-attr">Spotify Registration:</span>                  <span class="hljs-literal">No</span><br> <span class="hljs-attr">Steam Currency:</span>                        <span class="hljs-string">JPY</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">===============[</span> <span class="hljs-string">Japan</span> <span class="hljs-string">]===============</span><br> <span class="hljs-attr">DMM:</span>                                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Abema.TV:</span>                              <span class="hljs-literal">No</span><br> <span class="hljs-attr">Niconico:</span>                              <span class="hljs-literal">No</span><br> <span class="hljs-attr">Telasa:</span>                                <span class="hljs-literal">No</span><br> <span class="hljs-attr">Paravi:</span>                                <span class="hljs-literal">No</span><br> <span class="hljs-attr">U-NEXT:</span>                                <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Hulu Japan:</span>                            <span class="hljs-literal">No</span><br> <span class="hljs-attr">TVer:</span>                                  <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">WOWOW:</span>                                 <span class="hljs-literal">No</span><br> <span class="hljs-string">FOD(Fuji</span> <span class="hljs-string">TV):</span>                          <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Radiko:</span>                                <span class="hljs-literal">Yes</span> <span class="hljs-string">(City:</span> <span class="hljs-string">TOKYO)</span><br> <span class="hljs-string">Karaoke@DAM:</span>                           <span class="hljs-literal">Yes</span><br> <span class="hljs-string">---Game---</span><br> <span class="hljs-attr">Kancolle Japan:</span>                        <span class="hljs-literal">No</span><br> <span class="hljs-attr">Pretty Derby Japan:</span>                    <span class="hljs-literal">No</span><br> <span class="hljs-attr">Konosuba Fantastic Days:</span>               <span class="hljs-literal">No</span><br> <span class="hljs-attr">Princess Connect Re:Dive Japan:</span>        <span class="hljs-literal">No</span><br> <span class="hljs-attr">World Flipper Japan:</span>                   <span class="hljs-literal">Yes</span><br> <span class="hljs-attr">Project Sekai: Colorful Stage:</span>         <span class="hljs-literal">Yes</span><br><span class="hljs-string">=======================================</span><br><span class="hljs-string">当前主机不支持IPv6,跳过...</span><br><br></code></pre></td></tr></table></figure><h2 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h2><p>良心云不必多说</p><h3 id="脚本跑分-3"><a href="#脚本跑分-3" class="headerlink" title="脚本跑分"></a>脚本跑分</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><span class="hljs-comment">#              Yet-Another-Bench-Script              #</span><br><span class="hljs-comment">#                     v2022-05-06                    #</span><br><span class="hljs-comment"># https://github.com/masonr/yet-another-bench-script #</span><br><span class="hljs-comment"># ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #</span><br><br><span class="hljs-string">Thu</span> <span class="hljs-string">May</span> <span class="hljs-number">12</span> <span class="hljs-number">01</span><span class="hljs-string">:11:47</span> <span class="hljs-string">CST</span> <span class="hljs-number">2022</span><br><br><span class="hljs-attr">Basic System Information:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-attr">Uptime     :</span> <span class="hljs-number">300</span> <span class="hljs-string">days,</span> <span class="hljs-number">2</span> <span class="hljs-string">hours,</span> <span class="hljs-number">19</span> <span class="hljs-string">minutes</span><br><span class="hljs-attr">Processor  :</span> <span class="hljs-string">AMD</span> <span class="hljs-string">EPYC</span> <span class="hljs-string">7K62</span> <span class="hljs-number">48</span><span class="hljs-string">-Core</span> <span class="hljs-string">Processor</span><br><span class="hljs-attr">CPU cores  :</span> <span class="hljs-number">1</span> <span class="hljs-string">@</span> <span class="hljs-number">2595.124 </span><span class="hljs-string">MHz</span><br><span class="hljs-attr">AES-NI     :</span> <span class="hljs-string">✔</span> <span class="hljs-string">Enabled</span><br><span class="hljs-attr">VM-x/AMD-V :</span> <span class="hljs-string">❌</span> <span class="hljs-string">Disabled</span><br><span class="hljs-attr">RAM        :</span> <span class="hljs-number">1.9</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Swap       :</span> <span class="hljs-number">2.0</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Disk       :</span> <span class="hljs-number">56.8</span> <span class="hljs-string">GiB</span><br><span class="hljs-attr">Distro     :</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-number">9</span> <span class="hljs-string">(stretch)</span><br><span class="hljs-attr">Kernel     :</span> <span class="hljs-number">4.9</span><span class="hljs-number">.0</span><span class="hljs-number">-13</span><span class="hljs-string">-amd64</span><br><br><span class="hljs-string">fio</span> <span class="hljs-string">Disk</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(Mixed</span> <span class="hljs-string">R/W</span> <span class="hljs-number">50</span><span class="hljs-string">/50):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">4k</span>            <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">64k</span>           <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">71.95</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(17.9k)</span> <span class="hljs-string">|</span> <span class="hljs-number">285.15</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(4.4k)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">72.14</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(18.0k)</span> <span class="hljs-string">|</span> <span class="hljs-number">286.66</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(4.4k)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">144.09</span> <span class="hljs-string">MB/s</span>  <span class="hljs-string">(36.0k)</span> <span class="hljs-string">|</span> <span class="hljs-number">571.81</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(8.9k)</span><br>           <span class="hljs-string">|</span>                      <span class="hljs-string">|</span><br><span class="hljs-string">Block</span> <span class="hljs-string">Size</span> <span class="hljs-string">|</span> <span class="hljs-string">512k</span>          <span class="hljs-string">(IOPS)</span> <span class="hljs-string">|</span> <span class="hljs-string">1m</span>            <span class="hljs-string">(IOPS)</span><br>  <span class="hljs-string">------</span>   <span class="hljs-string">|</span> <span class="hljs-string">---</span>            <span class="hljs-string">----</span>  <span class="hljs-string">|</span> <span class="hljs-string">----</span>           <span class="hljs-string">----</span><br><span class="hljs-string">Read</span>       <span class="hljs-string">|</span> <span class="hljs-number">260.63</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(509)</span> <span class="hljs-string">|</span> <span class="hljs-number">257.59</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(251)</span><br><span class="hljs-string">Write</span>      <span class="hljs-string">|</span> <span class="hljs-number">274.48</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(536)</span> <span class="hljs-string">|</span> <span class="hljs-number">274.74</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(268)</span><br><span class="hljs-string">Total</span>      <span class="hljs-string">|</span> <span class="hljs-number">535.12</span> <span class="hljs-string">MB/s</span>   <span class="hljs-string">(1.0k)</span> <span class="hljs-string">|</span> <span class="hljs-number">532.33</span> <span class="hljs-string">MB/s</span>    <span class="hljs-string">(519)</span><br><br><span class="hljs-string">iperf3</span> <span class="hljs-string">Network</span> <span class="hljs-string">Speed</span> <span class="hljs-string">Tests</span> <span class="hljs-string">(IPv4):</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Provider</span>        <span class="hljs-string">|</span> <span class="hljs-string">Location</span> <span class="hljs-string">(Link)</span>           <span class="hljs-string">|</span> <span class="hljs-string">Send</span> <span class="hljs-string">Speed</span>      <span class="hljs-string">|</span> <span class="hljs-string">Recv</span> <span class="hljs-string">Speed</span><br>                <span class="hljs-string">|</span>                           <span class="hljs-string">|</span>                 <span class="hljs-string">|</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">London,</span> <span class="hljs-string">UK</span> <span class="hljs-string">(10G)</span>          <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-number">459</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Online.net</span>      <span class="hljs-string">|</span> <span class="hljs-string">Paris,</span> <span class="hljs-string">FR</span> <span class="hljs-string">(10G)</span>           <span class="hljs-string">|</span> <span class="hljs-string">busy</span>            <span class="hljs-string">|</span> <span class="hljs-number">791</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Hybula</span>          <span class="hljs-string">|</span> <span class="hljs-string">The</span> <span class="hljs-string">Netherlands</span> <span class="hljs-string">(40G)</span>     <span class="hljs-string">|</span> <span class="hljs-number">732</span> <span class="hljs-string">Kbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">839</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">NYC,</span> <span class="hljs-string">NY,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span>         <span class="hljs-string">|</span> <span class="hljs-number">721</span> <span class="hljs-string">Kbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">662</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Velocity</span> <span class="hljs-string">Online</span> <span class="hljs-string">|</span> <span class="hljs-string">Tallahassee,</span> <span class="hljs-string">FL,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">629</span> <span class="hljs-string">Kbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">825</span> <span class="hljs-string">Kbits/sec</span><br><span class="hljs-string">Clouvider</span>       <span class="hljs-string">|</span> <span class="hljs-string">Los</span> <span class="hljs-string">Angeles,</span> <span class="hljs-string">CA,</span> <span class="hljs-string">US</span> <span class="hljs-string">(10G)</span> <span class="hljs-string">|</span> <span class="hljs-number">902</span> <span class="hljs-string">Kbits/sec</span>   <span class="hljs-string">|</span> <span class="hljs-number">1.38</span> <span class="hljs-string">Mbits/sec</span><br><br><span class="hljs-attr">Geekbench 5 Benchmark Test:</span><br><span class="hljs-string">---------------------------------</span><br><span class="hljs-string">Test</span>            <span class="hljs-string">|</span> <span class="hljs-string">Value</span><br>                <span class="hljs-string">|</span><br><span class="hljs-string">Single</span> <span class="hljs-string">Core</span>     <span class="hljs-string">|</span><br><span class="hljs-string">Multi</span> <span class="hljs-string">Core</span>      <span class="hljs-string">|</span><br><span class="hljs-string">Full</span> <span class="hljs-string">Test</span>       <span class="hljs-string">|</span> <span class="hljs-string">https://browser.geekbench.com/v5/cpu/14846851</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>VPS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：一键脚本检测VPS是否支持ipv4\ipv6解锁流媒体</title>
    <link href="/2021/06/30/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E6%A3%80%E6%B5%8BVPS%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81ipv4-ipv6%E8%A7%A3%E9%94%81%E6%B5%81%E5%AA%92%E4%BD%93/"/>
    <url>/2021/06/30/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E6%A3%80%E6%B5%8BVPS%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81ipv4-ipv6%E8%A7%A3%E9%94%81%E6%B5%81%E5%AA%92%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<p>流媒体NetFlix解锁检测脚本，使用Go语言编写。在VPS网络正常的情况下，哪怕是双栈网络也可在几秒内快速完成IPv4&#x2F;IPv6的NF解锁情况判断。</p><span id="more"></span><h1 id="NETFLIX-VERIFY"><a href="#NETFLIX-VERIFY" class="headerlink" title="NETFLIX-VERIFY"></a>NETFLIX-VERIFY</h1><blockquote><p>项目地址：<a href="https://github.com/sjlleo/netflix-verify">https://github.com/sjlleo/netflix-verify</a></p></blockquote><h2 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h2><ul><li><input checked disabled type="checkbox"> 解锁情况判断</li><li><input checked disabled type="checkbox"> 地域信息显示</li><li><input checked disabled type="checkbox"> 双栈网络测试</li><li><input disabled type="checkbox"> 半解锁检测（待实现）<br>首先使用<code>arch</code>检测CPU类型<h2 id="相关名词解释"><a href="#相关名词解释" class="headerlink" title="相关名词解释"></a>相关名词解释</h2></li></ul><ol><li><p><strong>不提供服务</strong> - 所在的地区NF没开通，连自制剧也看不了</p></li><li><p><strong>宽松版权</strong> - 有些NF拍摄的影片不是特别注重版权，所以限制放的很开</p></li><li><p><strong>解锁自制剧</strong> - 代表可以看由NF自己拍摄的影片</p></li><li><p><strong>解锁非自制剧</strong> - 代表可以看NF买下的第三方版权影片</p></li><li><p><strong>地域解锁</strong> - NF在不同的地区可以看的片源都是不同的，有些影片只能在特定区观看<br>一般来说，需要能看非自制剧才算真正意义上的NF解锁</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2></li><li><p>部署 <code>golang</code> 环境，执行 <code>go run nf.go</code> 运行本小应用</p></li><li><p>懒人一键运行包（使用编译好的二进制文件执行本小程序）</p><ul><li>Github主站下载链接（适用于IPv4网络的机器）:</li></ul></li></ol><p>我这里是<strong>X86_64</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.6/nf_2.6_linux_amd64 &amp;&amp; <span class="hljs-built_in">chmod</span> +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><p>记录下结果，难过的说</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">** NetFlix 解锁检测小工具 v2.6 By @sjlleo **<br>模式：简洁信息模式<br>[IPv4测试]<br>您的出口IP不能解锁Netflix，仅支持自制剧的观看<br><br>[IPv6测试]<br>您的出口IP不能解锁Netflix，仅支持自制剧的观看<br></code></pre></td></tr></table></figure><ul><li>CDN下载链接（通用选项，既适用于有IPv4网络的机器也适用于仅有IPv6网络的机器）:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O nf https://cdn.jsdelivr.net/gh/sjlleo/netflix-verify/CDNRelease/nf_2.60_linux_amd64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure><ul><li><strong>ARM64</strong>：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/2.6/nf_2.6_linux_arm64 &amp;&amp; chmod +x nf &amp;&amp; clear &amp;&amp; ./nf<br></code></pre></td></tr></table></figure></li></ul><h2 id="效果演示图"><a href="#效果演示图" class="headerlink" title="效果演示图"></a>效果演示图</h2><h3 id="简约模式"><a href="#简约模式" class="headerlink" title="简约模式"></a>简约模式</h3><img width="430" alt="Lite Method" src="https://user-images.githubusercontent.com/13616352/110296950-e479c000-802d-11eb-9837-e23392860b07.png"><h2 id="其他实用脚本链接"><a href="#其他实用脚本链接" class="headerlink" title="其他实用脚本链接"></a>其他实用脚本链接</h2><p>DisneyPlus 解锁检测： <a href="https://github.com/sjlleo/VerifyDisneyPlus">https://github.com/sjlleo/VerifyDisneyPlus</a></p><p>Youtube 缓存节点、地域信息检测：<a href="https://github.com/sjlleo/TubeCheck">https://github.com/sjlleo/TubeCheck</a></p><p>Cloudflare Warp 一键脚本（<a href="https://github.com/YG-tsj">@YG-tsj</a>）：<a href="https://github.com/YG-tsj/Oracle-warp">https://github.com/YG-tsj/Oracle-warp</a></p><ul><li><strong>特色：非常全面的功能，用户全程无需值守的自动化安装脚本，更是高级玩家的最爱</strong></li></ul><p>Cloudflare Warp 一键脚本（<a href="https://github.com/missuo">@missuo</a>）：<a href="https://github.com/missuo/CloudflareWarp">https://github.com/missuo/CloudflareWarp</a></p><ul><li><strong>特色：简洁轻量，更为适合那些不想折腾的轻度用户使用</strong></li></ul><h1 id="RegionRestrictionCheck"><a href="#RegionRestrictionCheck" class="headerlink" title="RegionRestrictionCheck"></a>RegionRestrictionCheck</h1><blockquote><p>项目地址：<a href="https://github.com/lmc999/RegionRestrictionCheck">https://github.com/lmc999/RegionRestrictionCheck</a></p></blockquote><h2 id="检测各类流媒体是否被解锁"><a href="#检测各类流媒体是否被解锁" class="headerlink" title="检测各类流媒体是否被解锁"></a>检测各类流媒体是否被解锁</h2><ul><li>Netflix</li><li>HBO</li><li>Channel 4</li><li>Peakcock</li><li>Amazon Prime Video区域</li><li>Disneyplus</li><li>Fox</li><li>MyTVSuper</li><li>Hulu</li><li>赛马娘 舰娘</li><li>TikTok区域</li><li>爱奇艺国际版区域<br>等等</li></ul><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>使用脚本前请确认curl已安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh)<br></code></pre></td></tr></table></figure><h5 id="只检测IPv4结果："><a href="#只检测IPv4结果：" class="headerlink" title="只检测IPv4结果："></a>只检测IPv4结果：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh) 4<br></code></pre></td></tr></table></figure><h5 id="只检测IPv6结果："><a href="#只检测IPv6结果：" class="headerlink" title="只检测IPv6结果："></a>只检测IPv6结果：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -L -s https://raw.githubusercontent.com/lmc999/RegionRestrictionCheck/main/check.sh) 6<br></code></pre></td></tr></table></figure><p><strong>或者直接运行以下Docker命令</strong> (兼容ARM架构)</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs docker">docker <span class="hljs-keyword">run</span><span class="language-bash"> --<span class="hljs-built_in">rm</span> -ti --net=host lmc999/regioncheck &amp;&amp; docker rmi lmc999/regioncheck</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：性能测试</title>
    <link href="/2021/06/28/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <url>/2021/06/28/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>VPS一键测试脚本 &#x2F; 自带结果导出</p><span id="more"></span><p>我就随便试了下SuperBench脚本<br>特点：第一个测速节点使用Speedtest.net，Fast.com，再是联通移动电信。对系统的测试也更加全面，包括拥堵阻塞、运营商等。三次I&#x2F;O分别使用大中小文件，再取平均值。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash<br><span class="hljs-comment">#或者</span><br>curl -Lso- -no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash<br></code></pre></td></tr></table></figure><p>记录一下腾讯云轻量应用服务器的结果：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs AppleScript"> ========================================================= <br> \                 Superbench.sh  Script                 / <br> \       Basic <span class="hljs-built_in">system info</span>, I/O test <span class="hljs-keyword">and</span> speedtest       / <br> \                   v1<span class="hljs-number">.1</span><span class="hljs-number">.7</span> (<span class="hljs-number">7</span> Apr <span class="hljs-number">2020</span>)                 / <br> \                   Created <span class="hljs-keyword">by</span> Oldking                  / <br> ========================================================= <br><br> Intro: https://www.oldking.net/<span class="hljs-number">350.</span>html<br> Copyright (C) <span class="hljs-number">2020</span> Oldking oooldking@gmail.com<br><br> Installing Speedtest-cli ...<br> Installing tools.py ...<br> Installing Fast.com-cli ...<br><span class="hljs-comment">----------------------------------------------------------------------</span><br> Superbench.sh <span class="hljs-comment">-- https://www.oldking.net/350.html</span><br> Mode  : Standard    Version : <span class="hljs-number">1.1</span><span class="hljs-number">.7</span><br> Usage : wget -qO- sb.oldking.net | bash<br><span class="hljs-comment">----------------------------------------------------------------------</span><br> CPU Model            : AMD EPYC <span class="hljs-number">7</span>K62 <span class="hljs-number">48</span>-Core Processor<br> CPU Cores            : <span class="hljs-number">1</span> Cores <span class="hljs-number">2595.124</span> MHz x86_64<br> CPU Cache            : <span class="hljs-number">512</span> KB <br> OS                   : Debian GNU/Linux <span class="hljs-number">9</span> (<span class="hljs-number">64</span> Bit) KVM<br> Kernel               : <span class="hljs-number">4.11</span><span class="hljs-number">.8</span><span class="hljs-number">-041108</span>-generic<br> Total Space          : <span class="hljs-number">1.9</span> GB / <span class="hljs-number">57.0</span> GB <br> Total RAM            : <span class="hljs-number">150</span> MB / <span class="hljs-number">1997</span> MB (<span class="hljs-number">1378</span> MB Buff)<br> Total SWAP           : <span class="hljs-number">0</span> MB / <span class="hljs-number">2044</span> MB<br> Uptime               : <span class="hljs-number">6</span> days <span class="hljs-number">7</span> hour <span class="hljs-number">34</span> min<br> Load Average         : <span class="hljs-number">0.00</span>, <span class="hljs-number">0.00</span>, <span class="hljs-number">0.00</span><br> TCP CC               : bbr<br> ASN &amp; ISP            : AS45090, Shenzhen Tencent Computer Systems Company Limited<br> Organization         : Tencent cloud computing (Beijing) Co., Ltd.<br> Location             : Shenzhen, China / CN<br> Region               : Guangdong<br><span class="hljs-comment">----------------------------------------------------------------------</span><br> I/O Speed( <span class="hljs-number">1.0</span>GB )   : <span class="hljs-number">156</span> MB/s<br> I/O Speed( <span class="hljs-number">1.0</span>GB )   : <span class="hljs-number">140</span> MB/s<br> I/O Speed( <span class="hljs-number">1.0</span>GB )   : <span class="hljs-number">139</span> MB/s<br> Average I/O Speed    : <span class="hljs-number">145.0</span> MB/s<br><span class="hljs-comment">----------------------------------------------------------------------</span><br> Node Name        Upload Speed      Download Speed      Latency     <br> Speedtest.net    <span class="hljs-number">5.38</span> Mbit/s       <span class="hljs-number">104.54</span> Mbit/s       <span class="hljs-number">50.37</span> ms    <br> Fast.com         <span class="hljs-number">0.00</span> Mbit/s       <span class="hljs-number">0</span> Mbit/s            -           <br> Hefei <span class="hljs-number">5</span>G     CT  <span class="hljs-number">5.19</span> Mbit/s       <span class="hljs-number">123.19</span> Mbit/s       <span class="hljs-number">24.66</span> ms    <br> Guangzhou <span class="hljs-number">5</span>G CT  <span class="hljs-number">5.02</span> Mbit/s       <span class="hljs-number">96.80</span> Mbit/s        <span class="hljs-number">35.63</span> ms    <br> Shanghai <span class="hljs-number">5</span>G  CU  <span class="hljs-number">5.24</span> Mbit/s       <span class="hljs-number">102.22</span> Mbit/s       <span class="hljs-number">29.68</span> ms    <br> Tianjin <span class="hljs-number">5</span>G   CM  <span class="hljs-number">5.27</span> Mbit/s       <span class="hljs-number">111.59</span> Mbit/s       <span class="hljs-number">41.47</span> ms    <br> Hefei <span class="hljs-number">5</span>G     CM  <span class="hljs-number">5.34</span> Mbit/s       <span class="hljs-number">95.15</span> Mbit/s        <span class="hljs-number">23.22</span> ms    <br><span class="hljs-comment">----------------------------------------------------------------------</span><br> Finished <span class="hljs-keyword">in</span>  : <span class="hljs-number">4</span> min <span class="hljs-number">29</span> sec<br> Timestamp    : <span class="hljs-number">2021</span><span class="hljs-number">-06</span><span class="hljs-number">-28</span> <span class="hljs-number">03</span>:<span class="hljs-number">00</span>:<span class="hljs-number">38</span> GMT+<span class="hljs-number">8</span><br> Results      : ./superbench.<span class="hljs-built_in">log</span><br><span class="hljs-comment">----------------------------------------------------------------------</span><br> Share <span class="hljs-literal">result</span>:<br> · https://www.speedtest.net/<span class="hljs-literal">result</span>/c/<span class="hljs-number">53</span>d38b89<span class="hljs-number">-03</span>cc<span class="hljs-number">-45</span>aa<span class="hljs-number">-9</span>a62-fd6f16d38fe7<br> · https://paste.ubuntu.com/p/StVm2G4fQR/<br><span class="hljs-comment">----------------------------------------------------------------------</span><br><br></code></pre></td></tr></table></figure><blockquote><p>参考链接：<br>SuperBench.sh <a href="https://www.oldking.net/350.html">https://www.oldking.net/350.html</a><br><a href="https://www.huaweicloud.com/articles/8c4213ad9af771ddc6b7a385a4dc4dd6.html">https://www.huaweicloud.com/articles/8c4213ad9af771ddc6b7a385a4dc4dd6.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【教程】Steam控制台使用教学：在G胖眼里，你到底在哪个地区？</title>
    <link href="/2021/06/27/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91Steam%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%A6%EF%BC%9A%E5%9C%A8G%E8%83%96%E7%9C%BC%E9%87%8C%EF%BC%8C%E4%BD%A0%E5%88%B0%E5%BA%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E5%9C%B0%E5%8C%BA%EF%BC%9F/"/>
    <url>/2021/06/27/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91Steam%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%A6%EF%BC%9A%E5%9C%A8G%E8%83%96%E7%9C%BC%E9%87%8C%EF%BC%8C%E4%BD%A0%E5%88%B0%E5%BA%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E5%9C%B0%E5%8C%BA%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>最近很多uu的阿根廷号被遣返到国内。用电脑可以查看自己的当前ip的地区，也就是IPCountry这个就是G胖眼里你在哪个地区。大家平时可能没有注意过，但其实非常重要。</p><span id="more"></span><p>比如说这一次批量遣返阿根廷人，应该也是根据你的IPCountry来决定你会被遣返到哪里。</p><p>再比如说你领取礼物，就算挂了梯子，也可能会出现在当前地区不可用。新号第一次领取礼品卡，就会转换成IPCountry对应的地区货币，而不是你新号的地区。</p><p>锁区的游戏，能不能玩儿，也是看你的IPCountry是在哪里，跟游戏是不是符合。</p><p>这个IPCountry不是挂一次两次梯子就可以改变的，具体我也不是很清楚。大概可能要清除其他设备的令牌认证，清除登陆cookies，你要挂梯子多登陆注销登陆几次，并且保证网页端+客户端全都是在这个梯子下登陆。如果只挂一次，G胖不认的。比较麻烦。</p><h1 id="首先登陆Steam帐号"><a href="#首先登陆Steam帐号" class="headerlink" title="首先登陆Steam帐号"></a>首先登陆Steam帐号</h1><p>打开客户端登陆，这个很简单啦</p><h1 id="打开Steam控制台"><a href="#打开Steam控制台" class="headerlink" title="打开Steam控制台"></a>打开Steam控制台</h1><p>在浏览器网址部分或者cmd输入下面命令然后回车：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">steam://nav/console</span><br></code></pre></td></tr></table></figure><p>示例如下：<br><img src="/2021/06/27/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91Steam%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%A6%EF%BC%9A%E5%9C%A8G%E8%83%96%E7%9C%BC%E9%87%8C%EF%BC%8C%E4%BD%A0%E5%88%B0%E5%BA%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E5%9C%B0%E5%8C%BA%EF%BC%9F/1.jpg"></p><p>弹出窗口点击Yes<br><img src="/2021/06/27/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91Steam%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%A6%EF%BC%9A%E5%9C%A8G%E8%83%96%E7%9C%BC%E9%87%8C%EF%BC%8C%E4%BD%A0%E5%88%B0%E5%BA%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E5%9C%B0%E5%8C%BA%EF%BC%9F/2.jpg"></p><p>之后会自动跳转到Steam界面，但跟平常不同的是多一个控制台选项卡。<br><img src="/2021/06/27/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91Steam%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%A6%EF%BC%9A%E5%9C%A8G%E8%83%96%E7%9C%BC%E9%87%8C%EF%BC%8C%E4%BD%A0%E5%88%B0%E5%BA%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E5%9C%B0%E5%8C%BA%EF%BC%9F/3.jpg"></p><h1 id="查看ip地区"><a href="#查看ip地区" class="headerlink" title="查看ip地区"></a>查看ip地区</h1><p>首先在控制台输入<code>user_info</code><br>可查看IP_country，能不能领礼物就看这个了.有时候就算在国内，加速器开多了也会导致ipcountry变成其他地方。<br><img src="/2021/06/27/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91Steam%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%A6%EF%BC%9A%E5%9C%A8G%E8%83%96%E7%9C%BC%E9%87%8C%EF%BC%8C%E4%BD%A0%E5%88%B0%E5%BA%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E5%9C%B0%E5%8C%BA%EF%BC%9F/4.jpg"><br>其实还可以看很多 SteamID等一些基本信息 。这个大家自己探索。</p><h1 id="控制台其他使用方法"><a href="#控制台其他使用方法" class="headerlink" title="控制台其他使用方法"></a>控制台其他使用方法</h1><p>另一个我觉得好用的，可以查看游戏许可证的许可区域、付款来源等 ：<code>licenses_print</code>。<br>还有一些命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sh">batterypercent <span class="hljs-comment"># 查看剩余电量百分比</span><br>batterytime <span class="hljs-comment"># 查看剩余电池使用时间</span><br>ClientStatsUploadRateSeconds <span class="hljs-comment"># 客户端状态上传时间间隔</span><br>config_refresh <span class="hljs-comment"># 刷新设置</span><br>clear_console <span class="hljs-comment"># 清空控制台内容记录</span><br>cloud_sync_up <span class="hljs-comment"># 指定上传游戏的云存储数据，命令后跟游戏数字ID</span><br>cloud_sync_down <span class="hljs-comment"># 指定下载游戏的云存储数据，命令后跟游戏数字ID</span><br>license_for_app <span class="hljs-comment"># 查看指定游戏的注册信息，命令后跟游戏数字ID</span><br>licenses_print <span class="hljs-comment"># 查看登记在Steam下的游戏注册信息，包括购买时间，所属区域，授权状态等</span><br>licenses_print3 <span class="hljs-comment"># 显示内容和licenses_print类似</span><br>p2p_connecttimeout <span class="hljs-comment"># 查看P2P连接超时时间</span><br>p2p_unusedtimeout <span class="hljs-comment"># 查看P2P未使用超时时间</span><br>quit <span class="hljs-comment"># 退出Steam程序</span><br>service_repair <span class="hljs-comment"># 修复Steam客户端服务</span><br>service_test <span class="hljs-comment"># 测试Steam客户端服务</span><br>service_restart <span class="hljs-comment"># 重新启动Steam客户端服务</span><br>user_friends <span class="hljs-comment"># 查看用户好友</span><br>user_info <span class="hljs-comment"># 查看用户信息</span><br>windows_info <span class="hljs-comment"># 查看主板，BIOS等信息。</span><br></code></pre></td></tr></table></figure><h1 id="【扩展】steam启动参数"><a href="#【扩展】steam启动参数" class="headerlink" title="【扩展】steam启动参数"></a>【扩展】steam启动参数</h1><blockquote><p>此条适合喜欢折腾或有代码基础的姐妹，不熟悉的话请勿尝试</p></blockquote><p>每次要在浏览器或者cmd输入steam:&#x2F;&#x2F;nav&#x2F;console来打开控制台比较麻烦，有个办法是增加启动参数，让steam软件每次启动的时候都默认打开控制台。</p><p>在Steam快捷方式上右键，属性。然后添加-console参数。<br><img src="/2021/06/27/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91Steam%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%A6%EF%BC%9A%E5%9C%A8G%E8%83%96%E7%9C%BC%E9%87%8C%EF%BC%8C%E4%BD%A0%E5%88%B0%E5%BA%95%E5%9C%A8%E5%93%AA%E4%B8%AA%E5%9C%B0%E5%8C%BA%EF%BC%9F/5.jpg"></p><p>点击确定， 之后启动Steam就可以看到CONSOLE选项卡了。 </p><p>除了-console以外，还有别的启动参数可以使用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c">-applaunch 游戏数字ID 游戏启动参数<br>    <span class="hljs-comment">//直接通过命令行启动游戏，需要加入游戏的数字ID和对应游戏启动参数。</span><br>-cafeapplaunch<br>    <span class="hljs-comment">//以网吧模式启动游戏，强制启动前验证游戏数据。</span><br>-clearbeta<br>    <span class="hljs-comment">//如果参加了Steam的Beta活动，可以加入此参数清除。</span><br>-complete_install_via_http<br>    <span class="hljs-comment">//默认按照HTTP协议方式完成安装。</span><br>-console<br>    <span class="hljs-comment">//除错模式，在Steam中增加控制台，可以查看Steam活动信息。</span><br>    <span class="hljs-comment">//主要是Steam程序自身的活动，比如打开游戏，注册游戏等记录。</span><br>-dev或者-developer<br>    <span class="hljs-comment">//开发者模式，在Steam中增加控制台，可通过指令操作查看各种信息。</span><br>    <span class="hljs-comment">//在底部命令行输入栏可以输入任何字母得到相关字母开头的命令提示进行选择。</span><br>    <span class="hljs-comment">//按F6或者F7可以进行界面皮肤参数设置。</span><br>-forceservice<br>    <span class="hljs-comment">//强制以服务方式启动Steam，需要管理员权限。</span><br>-install 安装路径<br>    <span class="hljs-comment">//从指定安装路径安装游戏。</span><br>-language 语言<br>    <span class="hljs-comment">//指定Steam程序界面语言，例如：english。</span><br>-login 用户名 密码<br>    <span class="hljs-comment">//直接登录Steam，而不需要手动输入账号密码。</span><br>    <span class="hljs-comment">//通过此法可以创建多个账号登录的快捷方式而无需每次切换用户。</span><br>    <span class="hljs-comment">//公用电脑不要选择此种方式，会泄漏帐号密码资料。</span><br>-silent<br>    <span class="hljs-comment">//静默启动Steam程序并在系统通知区域显示图标。</span><br>    <span class="hljs-comment">//点击右下角图标后才会显示程序主界面。</span><br>    <span class="hljs-comment">//如果没有选择保存密码，那么依然会显示登录窗口。</span><br>-single_core<br>    <span class="hljs-comment">//强制Steam运行于首选CPU。</span><br>-tcp<br>    <span class="hljs-comment">//强制指定Steam程序使用TCP协议而不是默认的UDP协议。</span><br>-voice_quality 数字<br>    <span class="hljs-comment">//设置语音通话质量，范围从1至3。全部参数请参照官方文档：Command Line Options</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>Steam</tag>
      
      <tag>Steam阿根廷区</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：安装使用caddy</title>
    <link href="/2021/06/21/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8caddy/"/>
    <url>/2021/06/21/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8caddy/</url>
    
    <content type="html"><![CDATA[<p>其实这篇文章是紧接着流量监控那一篇</p><span id="more"></span><p>发现使用自动脚本部署流量监控的网页的时候，caddy总是无法启动，所以干脆自己部署网站。要注意的是网站路径是<code>/usr/local/ServerStatus/web</code><br><img src="/2021/06/21/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8caddy/status.png"></p><h3 id="安装caddy"><a href="#安装caddy" class="headerlink" title="安装caddy"></a>安装caddy</h3><blockquote><p><a href="https://caddyserver.com/docs/install">caddy官方安装教程</a><br>对于debian系统</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https<br>curl -1sLf <span class="hljs-string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#x27;</span> | sudo apt-key add -<br>curl -1sLf <span class="hljs-string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#x27;</span> | sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/caddy-stable.list<br>sudo apt update<br>sudo apt install caddy<br></code></pre></td></tr></table></figure><p>如果在root下运行，删除sudo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install -y debian-keyring debian-archive-keyring apt-transport-https<br>curl -1sLf <span class="hljs-string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#x27;</span> | apt-key add -<br>curl -1sLf <span class="hljs-string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#x27;</span> | <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/caddy-stable.list<br>apt update<br>apt install caddy<br></code></pre></td></tr></table></figure><p>使用<code>caddy version</code>来查看是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@debian:~<span class="hljs-comment"># caddy version</span><br>v2.4.3 h1:Y1FaV2N4WO3rBqxSYA8UZsZTQdN+PwcoOcAiZTM8C0I=<br></code></pre></td></tr></table></figure><h3 id="配置caddy"><a href="#配置caddy" class="headerlink" title="配置caddy"></a>配置caddy</h3><p>安装好caddy后，在路径<code>/etc/caddy</code>下会自动生成配置文件<code>Caddyfile</code>，我们可以进入该目录然后对文件进行编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/caddy<br>vim Caddyfile<br></code></pre></td></tr></table></figure><p>也可以新建文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> caddy<br><span class="hljs-built_in">cd</span> caddy<br>vim Caddyfile<br></code></pre></td></tr></table></figure><p>修改配置文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">:8888 &#123;<br><span class="hljs-comment"># Set this path to your site&#x27;s directory.</span><br>root * /usr/local/ServerStatus/web<br><br><span class="hljs-comment"># Enable the static file server.</span><br>file_server<br><br><span class="hljs-comment"># Another common task is to set up a reverse proxy:</span><br><span class="hljs-comment"># reverse_proxy localhost:8080</span><br><br><span class="hljs-comment"># Or serve a PHP site through php-fpm:</span><br><span class="hljs-comment"># php_fastcgi localhost:900</span><br>encode gzip<br>&#125;<br></code></pre></td></tr></table></figure><p>之后在Caddyfile同文件夹目录下运行<code>caddy start</code></p><p>其他命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">caddy <span class="hljs-built_in">help</span><br>caddy reload <span class="hljs-comment">#更新Caddyfile之后重新加载配置文件</span><br>caddy stop   <span class="hljs-comment">#停止运行caddy</span><br>caddy run    <span class="hljs-comment">#在前台运行caddy</span><br>caddy start  <span class="hljs-comment">#在后台运行caddy</span><br></code></pre></td></tr></table></figure><blockquote><p>官方文档：<a href="https://caddyserver.com/docs/command-line">https://caddyserver.com/docs/command-line</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：流量监控</title>
    <link href="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7/"/>
    <url>/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7/</url>
    
    <content type="html"><![CDATA[<p>由于大部分VPS服务器都会限制流量，所以流量监控就非常重要了</p><span id="more"></span><h2 id="ServerStatus网页监控流量"><a href="#ServerStatus网页监控流量" class="headerlink" title="ServerStatus网页监控流量"></a>ServerStatus网页监控流量</h2><p>ServerStatus是一款适合监控多台服务器的探针程序，自带web前端界面；本篇教程采用的是 ServerStatus 的修改美化版，基于逗比大佬的一键脚本安装，可以让我们很方便上手，对于手上有很多台VPS服务器的MJJ们来说是个不错的监控工具。</p><h4 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h4><p>脚本分服务端和客户端，即一个主要提供web前段界面的VPS服务端，其它均为客户端，通过SSH工具连接上服务器，运行下列命令下载脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate https://raw.githubusercontent.com/CokeMine/ServerStatus-Hotaru/master/status.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x status.sh<br></code></pre></td></tr></table></figure><p>下载后根据自己的实际情况分别输入下列命令进行安装服务端和客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 客户端管理菜单</span><br>bash status.sh c<br> <br><span class="hljs-comment"># 服务端管理菜单</span><br>bash status.sh s <br></code></pre></td></tr></table></figure><h4 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h4><p>所谓服务端就是用来挂载网页的服务器，运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 服务端管理菜单</span><br>bash status.sh s <br></code></pre></td></tr></table></figure><p>首先我们这里示例安装服务端，输入数字1开始安装<br>！<a href="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-8.webp"></a><br>然后输入服务端的监听端口，这个端口设置建议10000-60000之间即可，后面客户端连接需要用到，然后回车，安装过程中会提示是否配置HTTP服务，输入Y回车即可<br><img src="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-9.webp"><br>安装后进入服务端管理菜单选择7设置服务器配置，然后选择1添加节点，每次增加客户端都需要在这里添加一条节点<br><img src="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-10.webp"><br>接着输入节点的信息，也就是要监控的服务器名称等，后面客户端连接需要用到<br><img src="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-11.webp">  </p><p>如果caddy自动安装配置有问题，这里我们推荐自行配置网页。具体可参见后文<a href="https://docwho22.github.io/DocWho22/2021/06/21/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8caddy/">VPS指南：安装使用caddy</a></p><p><img src="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7/status.png"></p><h4 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h4><p>在需要监控的服务器上安装上面的脚本，然后输入命令进入客户端管理界面，选择安装，接着配置下服务端的IP&#x2F;域名以及前面设置的监听端口，节点信息等等，如下图：<br><img src="https://zhujiget.com/wp-content/uploads/2020/03/%E5%9B%BE%E7%89%87-12.webp"> </p><p>值得一提的是，该脚本已经集合了vnstat的流量统计功能，可以自动进行安装</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">对于流量计算是否使用Vnstat每月自动清零？ [y/<span class="hljs-built_in">N</span>]<br>(默认<span class="hljs-symbol">:</span> <span class="hljs-built_in">N</span>)<span class="hljs-symbol">:y</span><br></code></pre></td></tr></table></figure><p>其它说明：</p><blockquote><p>安装目录：&#x2F;usr&#x2F;local&#x2F;ServerStatus<br>网页文件：&#x2F;usr&#x2F;local&#x2F;ServerStatus&#x2F;web<br>配置文件：&#x2F;usr&#x2F;local&#x2F;ServerStatus&#x2F;server&#x2F;config.json<br>增加多个服务器节点，先在服务端添加节点，然后再到其它服务器上面部署连接客户端<br>修改网页标题或者网页顶部公告内容，打开服务端&#x2F;usr&#x2F;local&#x2F;ServerStatus&#x2F;web&#x2F;index.html文件修改即可</p></blockquote><h2 id="使用vnStat详细流量监控"><a href="#使用vnStat详细流量监控" class="headerlink" title="使用vnStat详细流量监控"></a>使用vnStat详细流量监控</h2><p>（如果已经安装了ServerStatus客户端，就不要用这个办法安装vnstat了，会导致冲突）<br>vnStat是一款非常好的Linux系统服务器下面的流量监控开源工具，可以很直观的统计监控每小时、每天、每月的流量详细使用情况；由于大部分VPS服务器都会限制流量，而服务商又没有提供一个详细的流量表，所以对于我们个人来说vnStat这款工具非常实用，这里给大家介绍下它的安装使用教程。</p><blockquote><p>vnStat项目github地址：<a href="https://github.com/vergoh/vnstat">https://github.com/vergoh/vnstat</a></p></blockquote><h4 id="首先连接上服务器后，需要进行安装vnStat，执行下列命令"><a href="#首先连接上服务器后，需要进行安装vnStat，执行下列命令" class="headerlink" title="首先连接上服务器后，需要进行安装vnStat，执行下列命令"></a>首先连接上服务器后，需要进行安装vnStat，执行下列命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##centos系统要先安装 epel 源后才能用yum安装</span><br>yum install epel-release -y &amp;&amp; yum install -y vnstat<br> <br><span class="hljs-comment">##ubuntu/debian系统直接apt-get命令安装即可</span><br>apt-get install vnstat<br></code></pre></td></tr></table></figure><h4 id="安装后我们可以使用ifconfig命令查看下网卡名称，如果系统提示无此命令，则需要安装，执行下列命令："><a href="#安装后我们可以使用ifconfig命令查看下网卡名称，如果系统提示无此命令，则需要安装，执行下列命令：" class="headerlink" title="安装后我们可以使用ifconfig命令查看下网卡名称，如果系统提示无此命令，则需要安装，执行下列命令："></a>安装后我们可以使用ifconfig命令查看下网卡名称，如果系统提示无此命令，则需要安装，执行下列命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 安装net工具箱，包含ifconfig等网络命令</span><br>yum install net-tools <span class="hljs-comment"># CentOS</span><br>apt-get install net-tools <span class="hljs-comment"># Debian or ubuntu</span><br><br><span class="hljs-comment">## 查看网卡信息</span><br>ifconfig<br></code></pre></td></tr></table></figure><h4 id="获得网卡名称后，创建监控数据库，eth0为需要监控的网卡名称"><a href="#获得网卡名称后，创建监控数据库，eth0为需要监控的网卡名称" class="headerlink" title="获得网卡名称后，创建监控数据库，eth0为需要监控的网卡名称"></a>获得网卡名称后，创建监控数据库，eth0为需要监控的网卡名称</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vnstat -u -i eth0<br></code></pre></td></tr></table></figure><h4 id="最后启动服务并且设置为开机启动"><a href="#最后启动服务并且设置为开机启动" class="headerlink" title="最后启动服务并且设置为开机启动"></a>最后启动服务并且设置为开机启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#启动服务</span><br>service vnstat start<br></code></pre></td></tr></table></figure><p>CentOS系统采用下列命令开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chkconfig vnstat on<br></code></pre></td></tr></table></figure><p>debian或ubuntu则用这个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> vnstat<br></code></pre></td></tr></table></figure><h4 id="上述操作完成后不要着急，等个十几分钟直接输入vnstat命令或下列命令查看流量统计情况"><a href="#上述操作完成后不要着急，等个十几分钟直接输入vnstat命令或下列命令查看流量统计情况" class="headerlink" title="上述操作完成后不要着急，等个十几分钟直接输入vnstat命令或下列命令查看流量统计情况"></a>上述操作完成后不要着急，等个十几分钟直接输入vnstat命令或下列命令查看流量统计情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">vnstat -l  <span class="hljs-comment"># 或者 `--live` 实时流量</span><br>vnstat -h  <span class="hljs-comment"># 显示小时流量</span><br>vnstat -d  <span class="hljs-comment"># 显示日流量信息</span><br>vnstat -w  <span class="hljs-comment"># 显示周流量信息</span><br>vnstat -m  <span class="hljs-comment"># 显示月流量信息</span><br>vnstat -t  <span class="hljs-comment"># 显示流量最高top10天</span><br>/etc/vnstat.conf <span class="hljs-comment"># 配置文件</span><br></code></pre></td></tr></table></figure><h3 id="如果出错"><a href="#如果出错" class="headerlink" title="如果出错"></a>如果出错</h3><p>但我测试发现它会一直使用默认网卡名，也就是eth0<br>所以如果发现后面用不了的话，使用vim修改<code>/etc/vnstat.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/vnstat.conf<br></code></pre></td></tr></table></figure><p>修改<code># default interface</code>下面的<code>Interface</code>后面的字符串为你自己的网卡<br>我的是ens5</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">head</span> /etc/vnstat.conf <br><span class="hljs-comment"># vnStat 1.13 config file</span><br><span class="hljs-comment">##</span><br><br><span class="hljs-comment"># default interface</span><br>Interface <span class="hljs-string">&quot;eth0&quot;</span><br><br><span class="hljs-comment"># location of the database directory</span><br>DatabaseDir <span class="hljs-string">&quot;/var/lib/vnstat&quot;</span><br><br><span class="hljs-comment"># locale (LC_ALL) (&quot;-&quot; = use system locale)</span><br></code></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://askubuntu.com/questions/1031052/error-unable-to-read-database-var-lib-vnstat-eth0-no-such-file-or-directory">https://askubuntu.com/questions/1031052/error-unable-to-read-database-var-lib-vnstat-eth0-no-such-file-or-directory</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：解锁网易云灰色歌曲之服务器端搭建</title>
    <link href="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E8%A7%A3%E9%94%81%E7%BD%91%E6%98%93%E4%BA%91%E7%81%B0%E8%89%B2%E6%AD%8C%E6%9B%B2%E4%B9%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%90%AD%E5%BB%BA/"/>
    <url>/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E8%A7%A3%E9%94%81%E7%BD%91%E6%98%93%E4%BA%91%E7%81%B0%E8%89%B2%E6%AD%8C%E6%9B%B2%E4%B9%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>UnblockNeteaseMusic是一款可以让网易云曲库里的灰色歌曲能够正常播放的神器。</p><span id="more"></span><p>项目地址：<a href="https://github.com/nondanee/UnblockNeteaseMusic">https://github.com/nondanee/UnblockNeteaseMusic</a></p><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>其中16为版本。可以替换成12 14 16.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Using Ubuntu</span><br>curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -<br>sudo apt-get install -y nodejs<br><br><span class="hljs-comment"># Using Debian, as root</span><br>curl -fsSL https://deb.nodesource.com/setup_16.x | bash -<br>apt-get install -y nodejs<br></code></pre></td></tr></table></figure><p>使用<code>node -v</code>命令查看是否安装成功。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@debian</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># node -v</span><br>v16.<span class="hljs-number">3.0</span><br></code></pre></td></tr></table></figure><h2 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h2><p>使用 Git 克隆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/nondanee/UnblockNeteaseMusic.git <span class="hljs-comment">#克隆项目仓库</span><br><span class="hljs-built_in">cd</span> UnblockNeteaseMusic <span class="hljs-comment">#进入项目根目录</span><br></code></pre></td></tr></table></figure><p>没有安装git的，使用下面命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># CentoS</span><br>yum install git<br><br><span class="hljs-comment"># debian or ubuntu</span><br>apt-get install git<br></code></pre></td></tr></table></figure><h2 id="【可选】使用node启动"><a href="#【可选】使用node启动" class="headerlink" title="【可选】使用node启动"></a>【可选】使用node启动</h2><p>使用nodejs就可以启动项目，nodejs但退出窗口就会停止。</p><h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><p>直接启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> UnblockNeteaseMusic <span class="hljs-comment">#进入项目根目录</span><br>node app.js<br></code></pre></td></tr></table></figure><p>我使用的启动命令如下，其中-e是iOS端网易云升级后听灰色歌曲所必须的,且必须要https而不是http</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -s -e https://music.163.com<br></code></pre></td></tr></table></figure><h3 id="【可选】其他配置"><a href="#【可选】其他配置" class="headerlink" title="【可选】其他配置"></a>【可选】其他配置</h3><h4 id="开启严格模式"><a href="#开启严格模式" class="headerlink" title="开启严格模式"></a>开启严格模式</h4><blockquote><p>仅接受网易云音乐的流量，不接受其他的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -s<br></code></pre></td></tr></table></figure><h4 id="设置搜索的音源-有序"><a href="#设置搜索的音源-有序" class="headerlink" title="设置搜索的音源 (有序)"></a>设置搜索的音源 (有序)</h4><blockquote><p>默认为 qq kuwo migu，排在越前优先级越高，启用越多网络开销越大</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -o joox qq<br></code></pre></td></tr></table></figure><h4 id="使用自定义端口"><a href="#使用自定义端口" class="headerlink" title="使用自定义端口"></a>使用自定义端口</h4><p>默认为8080</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -p 5000<br></code></pre></td></tr></table></figure><h4 id="我也不太懂的一些"><a href="#我也不太懂的一些" class="headerlink" title="我也不太懂的一些"></a>我也不太懂的一些</h4><p>使用 jixun 的反代服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -f 79.137.38.20<br></code></pre></td></tr></table></figure><p>使用上游 http &#x2F; https 代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app.js -u http://127.0.0.1:1080<br></code></pre></td></tr></table></figure><h2 id="【推荐】使用pm2启动项目"><a href="#【推荐】使用pm2启动项目" class="headerlink" title="【推荐】使用pm2启动项目"></a>【推荐】使用pm2启动项目</h2><p>用nodejs不能一直在后台运行，关闭窗口就会中断进程。所以我喜欢用pm2来挂着运行。也可以使用supervisor和docker，但我尝试了，这样部署以后都不能在iOS端运行，暂时不明白为什么。</p><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题.由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入 “npm -v” 来测试是否成功安装。命令如下，出现版本提示表示安装成功.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 全局安装pm2</span><br>npm install -g pm2<br><span class="hljs-comment"># 启动项目</span><br>pm2 start node -- app.js -e https://music.163.com -s<br><span class="hljs-comment"># 保存当前列表</span><br>pm2 save<br><span class="hljs-comment"># 开机启动</span><br>pm2 startup<br></code></pre></td></tr></table></figure><p>之后的一些命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm2 list                <span class="hljs-comment"># 列出当前应用</span><br>pm2 stop app.js         <span class="hljs-comment"># 停止 可以先通过pm2 list获取应用的名字（--name指定的）或者进程id</span><br>pm2 stop all            <span class="hljs-comment"># 停止所有</span><br>pm2 restart app.js      <span class="hljs-comment"># 重启</span><br>pm2 restart all         <span class="hljs-comment"># 重启所有</span><br>pm2 delete  app.js      <span class="hljs-comment"># 关闭</span><br></code></pre></td></tr></table></figure><h2 id="【另一方法】使用docker启动项目"><a href="#【另一方法】使用docker启动项目" class="headerlink" title="【另一方法】使用docker启动项目"></a>【另一方法】使用docker启动项目</h2><p>尝试了此方法，但无法在iOS使用，不明白为什么<br>直接使用此命令，省掉了git那一步下载：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">docker run -d -p <span class="hljs-number">8080</span>:<span class="hljs-number">8080</span> nondanee/unblockneteasemusic -s -e https://music<span class="hljs-number">.163</span>.com<br></code></pre></td></tr></table></figure><p>之后使用<code>docker ps</code>查看进程，使用<code>docker kill 进程数</code>来杀死进程。<br>没有安装docker的，用下面命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 官方脚本</span><br>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun<br><br><span class="hljs-comment"># 也可以使用国内 daocloud 一键安装命令：</span><br>curl -sSL https://get.daocloud.io/docker | sh<br></code></pre></td></tr></table></figure><p>测试 Docker 是否安装成功，输入以下指令，打印出以下信息则安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run hello-world<br></code></pre></td></tr></table></figure><p>打印信息：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Unable <span class="hljs-built_in">to</span> find image <span class="hljs-string">&#x27;hello-world:latest&#x27;</span> locally<br>latest: Pulling <span class="hljs-built_in">from</span> library/hello-world<br><span class="hljs-number">1</span>b930d010525: Pull complete                                                                                                                                  Digest: sha256:c3b4ada4687bbaa170745b3e4dd8ac3f194ca95b2d0518b417fb47e5879d9b5f<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hello-world:latest<br><br><br>Hello <span class="hljs-built_in">from</span> Docker!<br>This message shows that your installation appears <span class="hljs-built_in">to</span> be working correctly.<br><br><br>To generate this message, Docker took <span class="hljs-keyword">the</span> following steps:<br> <span class="hljs-number">1.</span> The Docker client contacted <span class="hljs-keyword">the</span> Docker daemon.<br> <span class="hljs-number">2.</span> The Docker daemon pulled <span class="hljs-keyword">the</span> <span class="hljs-string">&quot;hello-world&quot;</span> image <span class="hljs-built_in">from</span> <span class="hljs-keyword">the</span> Docker Hub.<br>    (amd64)<br> <span class="hljs-number">3.</span> The Docker daemon created <span class="hljs-keyword">a</span> <span class="hljs-built_in">new</span> container <span class="hljs-built_in">from</span> that image which runs <span class="hljs-keyword">the</span><br>    executable that produces <span class="hljs-keyword">the</span> output you are currently reading.<br> <span class="hljs-number">4.</span> The Docker daemon streamed that output <span class="hljs-built_in">to</span> <span class="hljs-keyword">the</span> Docker client, which sent <span class="hljs-keyword">it</span><br>    <span class="hljs-built_in">to</span> your terminal.<br><br><br>To <span class="hljs-keyword">try</span> something more ambitious, you can run <span class="hljs-keyword">an</span> Ubuntu container <span class="hljs-keyword">with</span>:<br> $ docker run -<span class="hljs-keyword">it</span> ubuntu bash<br><br><br>Share images, automate workflows, <span class="hljs-keyword">and</span> more <span class="hljs-keyword">with</span> <span class="hljs-keyword">a</span> free Docker ID:<br> <span class="hljs-keyword">https</span>://hub.docker.com/<br><br><br>For more examples <span class="hljs-keyword">and</span> ideas, visit:<br> <span class="hljs-keyword">https</span>://docs.docker.com/<span class="hljs-built_in">get</span>-started/<br></code></pre></td></tr></table></figure><h2 id="iOS端配置"><a href="#iOS端配置" class="headerlink" title="iOS端配置"></a>iOS端配置</h2><p>QuantumultX配置，本地节点[server_local]下面加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Javascript"># ip和端口改成你自己的，格式<span class="hljs-attr">ip</span>:port<br>http=你的<span class="hljs-attr">ip</span>:你的端口, fast-open=<span class="hljs-literal">false</span>, udp-relay=<span class="hljs-literal">false</span>, tag=解锁网易云音乐<br></code></pre></td></tr></table></figure><blockquote><p>其他客户端写法可参考：<a href="https://merlinblog.xyz/wiki/neteasemusic.html">https://merlinblog.xyz/wiki/neteasemusic.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>解锁网易云音乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：国内VPS修改hosts解决github被DNS污染问题</title>
    <link href="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E5%9B%BD%E5%86%85VPS%E4%BF%AE%E6%94%B9hosts%E8%A7%A3%E5%86%B3github%E8%A2%ABDNS%E6%B1%A1%E6%9F%93%E9%97%AE%E9%A2%98/"/>
    <url>/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9A%E5%9B%BD%E5%86%85VPS%E4%BF%AE%E6%94%B9hosts%E8%A7%A3%E5%86%B3github%E8%A2%ABDNS%E6%B1%A1%E6%9F%93%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>国内服务器连github常常缓慢，甚至连不上。这个问题可以通过修改hosts来解决</p><span id="more"></span><p>安装vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># debian或者ubuntu</span><br>apt-get install vim<br><br><span class="hljs-comment"># CentOS</span><br>yum install vim<br></code></pre></td></tr></table></figure><p>修改hosts文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/hosts<br></code></pre></td></tr></table></figure><p>按i切换到输入模式，在文件末尾加入三条记录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#github</span><br>140.82.112.3 github.com<br>185.199.110.153 assets-cdn.github.com<br>151.101.1.194 github.global.ssl.fastly.net<br></code></pre></td></tr></table></figure><p>ip地址可以根据你自己VPS响应速度来定。<br>在 <a href="http://ping.chinaz.com/github.com">http://ping.chinaz.com/github.com</a> ，查找以下域名的ip，挑选响应时间短的ip地址。</p><p>github.com</p><p>assets-cdn.github.com</p><p>github.global.ssl.fastly.net </p><p>raw.githubusercontent.com(这个域名我测试了下，腾讯云华为云都没有被DNS污染，很正常，选用)</p><p>备用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">13.250.177.223 github.com<br>185.199.109.133 raw.githubusercontent.com<br>185.199.110.133 raw.githubusercontent.com<br>185.199.111.133 raw.githubusercontent.com<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：bbr加速</title>
    <link href="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9Abbr%E5%8A%A0%E9%80%9F/"/>
    <url>/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9Abbr%E5%8A%A0%E9%80%9F/</url>
    
    <content type="html"><![CDATA[<p>Google 开源了其 TCP BBR 拥塞控制算法，并提交到了 Linux 内核，从 4.9 开始，Linux 内核已经用上了该算法。部署最新版内核，开启TCP BBR 加速的 VPS，网速可以提升几个数量级。OpenVZ虚拟化的话，就不能弄bbr了。</p><span id="more"></span><p>VPS加速是每一个玩VPS服务器的朋友都要涉及的话题，毕竟速度快是每个人都喜欢的一个现象，常用的加速策略包括Google BBR TCP加速，以及在其基础上发展而来的BBR魔改版、暴力BBR、BBRplus，以及锐速加速等。本文就给大家分享一个VPS加速脚本，可以一键安装并开启这些加速策略。</p><h1 id="简单版VPS加速脚本下载与使用"><a href="#简单版VPS加速脚本下载与使用" class="headerlink" title="简单版VPS加速脚本下载与使用"></a>简单版VPS加速脚本下载与使用</h1><p>连上VPS云服务器后直接复制下面的命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N --no-check-certificate <span class="hljs-string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span><br><span class="hljs-built_in">chmod</span> +x tcp.sh<br>./tcp.sh<br></code></pre></td></tr></table></figure><p>这是脚本的面板，最下面一行是VPS当前的加速内核和加速策略，所以如果我们需要开启某种加速，需要先安装对应的内核，再开启对应的管理，最后看看加速是否开启成功。这类以BBR加速为例，先输入1安装BBR&#x2F;BBR魔改版内核，之后再次使用脚本输入4即可开启BBR加速：<br><img src="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9Abbr%E5%8A%A0%E9%80%9F/bbr.jpg"><br>如果会出现这个界面，选择yes，应该是卸载内核的时候出现了问题，要重新运行脚本<br><img src="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9Abbr%E5%8A%A0%E9%80%9F/bbr1.png"><br>最后需要重启才能开启加速。一般两分钟就好了<br><img src="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9Abbr%E5%8A%A0%E9%80%9F/bbr2.png"></p><p>重新连接服务器，验证是否成功安装最新内核并开启 BBR 加速，执行命令<code>uname -r</code>，内核版本显示为最新版就表示 BBR 内核安装完成了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@debian:~<span class="hljs-comment"># uname -r</span><br>4.11.8-041108-generic<br></code></pre></td></tr></table></figure><p>可以运行<code>./tcp.sh</code>来看是否安装启动成功<br><img src="/2021/06/17/VPS%E6%8C%87%E5%8D%97%EF%BC%9Abbr%E5%8A%A0%E9%80%9F/bbr3.png"></p><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsmod | grep bbr<br></code></pre></td></tr></table></figure><p>如果有返回就是成功了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@debian:~# lsmod | grep bbr<br>tcp_bbr                20480  86<br></code></pre></td></tr></table></figure><h1 id="全面版VPS加速脚本下载与使用"><a href="#全面版VPS加速脚本下载与使用" class="headerlink" title="全面版VPS加速脚本下载与使用"></a>全面版VPS加速脚本下载与使用</h1><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget uone.one/tcpx.sh &amp;&amp; bash tcpx.sh<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VPS指南：dd系统</title>
    <link href="/2021/06/16/VPS%E6%8C%87%E5%8D%97%EF%BC%9Add%E7%B3%BB%E7%BB%9F/"/>
    <url>/2021/06/16/VPS%E6%8C%87%E5%8D%97%EF%BC%9Add%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p>使用服务器前常常需要安装纯净系统。尤其是国内腾讯云、阿里云等。但注意一下OpenVZ是没法dd的，会出现grub not found</p><span id="more"></span><h1 id="ruvds亲测可用"><a href="#ruvds亲测可用" class="headerlink" title="ruvds亲测可用"></a>ruvds亲测可用</h1><p>ruvds不能直接傻瓜式使用萌咖大佬的脚本<br><img src="https://i.niupic.com/images/2019/10/10/_196.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install net-tools  <br>（安装网络工具包）<br><br>ifconfig -a<br>(查看本机公网IP地址)<br><br>route -n<br>(查看网关地址)<br></code></pre></td></tr></table></figure><p>4:用萌新的DD包和脚本，举例的是Debian9:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(wget --no-check-certificate -qO- <span class="hljs-string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span>) -d 9 -v 64 -a --ip-addr 194.87.xxx.xxx(改成ifconfig获取到的) --ip-gate 194.87.xxx.xxx(改成route获取到的) --ip-mask 255.255.xxx.xxx(改成你获取到的)<br></code></pre></td></tr></table></figure><p>5:等20分钟左右，root用户登入，密码<code>MoeClub.org</code>，搞定</p><h1 id="推荐-腾讯云亲测可用"><a href="#推荐-腾讯云亲测可用" class="headerlink" title="[推荐]腾讯云亲测可用"></a>[推荐]腾讯云亲测可用</h1><p>运行下面的脚本，需要记住密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 国内服务器可以用这个</span><br>bash &lt;(wget --no-check-certificate -qO- https://cdn.jsdelivr.net/gh/hiCasper/Shell@master/AutoReinstall.sh)<br><br><span class="hljs-comment"># 国外服务器github较快，可用这个</span><br>wget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh<br></code></pre></td></tr></table></figure><blockquote><p>参考链接：<a href="https://github.com/hiCasper/Shell/issues">https://github.com/hiCasper/Shell/issues</a></p></blockquote><h1 id="萌咖大佬的一键DD脚本"><a href="#萌咖大佬的一键DD脚本" class="headerlink" title="萌咖大佬的一键DD脚本"></a>萌咖大佬的一键DD脚本</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h2><p>全自动安装默认root密码:<code>MoeClub.org</code>,安装完成后请立即更改密码.</p><p>能够全自动重装Debian&#x2F;Ubuntu&#x2F;CentOS等系统.</p><p>同时提供dd安装镜像功能,例如: 全自动无救援dd安装windows系统</p><p>全自动安装CentOS时默认提供VNC功能,可使用VNC Viewer查看进度,</p><p>VNC端口为<code> 1</code> 或者<code> 5901</code> ,可自行尝试连接.(成功后VNC功能会消失.)</p><p>目前CentOS系统只支持任意版本重装为 CentOS 6.x 及以下版本.</p><p>特别注意:OpenVZ构架不适用.</p><h2 id="傻瓜式一键脚本"><a href="#傻瓜式一键脚本" class="headerlink" title="傻瓜式一键脚本"></a>傻瓜式一键脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##镜像文件在OneDrive</span><br>wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/dd/master/dd-od.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x dd-od.sh &amp;&amp; ./dd-od.sh<br><br><span class="hljs-comment">##镜像文件在GoogleDrive</span><br>wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/dd/master/dd-gd.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x dd-gd.sh &amp;&amp; ./dd-gd.sh<br><br></code></pre></td></tr></table></figure><h2 id="关于debian8源报错"><a href="#关于debian8源报错" class="headerlink" title="关于debian8源报错"></a>关于debian8源报错</h2><p>在脚本中可以添加 –mirror 参数切换源。<br>目前可用的源:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">--mirror <span class="hljs-string">&#x27;http://cpgs.fdcservers.net/debian/&#x27;</span><br>--mirror <span class="hljs-string">&#x27;http://proyectos.uls.edu.sv/debian/&#x27;</span><br>--mirror <span class="hljs-string">&#x27;http://debian.cabletel.com.mk/debian/&#x27;</span><br>--mirror <span class="hljs-string">&#x27;http://komo.padinet.com/debian/&#x27;</span><br>--mirror <span class="hljs-string">&#x27;http://www.debian.uz/debian/&#x27;</span><br></code></pre></td></tr></table></figure><p>安装debian8 示例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash InstallNET.sh -d 8 -v 64 -a --mirror <span class="hljs-string">&#x27;http://komo.padinet.com/debian/&#x27;</span><br></code></pre></td></tr></table></figure><p>安装dd镜像 示例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash InstallNET.sh -<span class="hljs-built_in">dd</span> <span class="hljs-string">&quot;[URL]&quot;</span> --mirror <span class="hljs-string">&#x27;http://komo.padinet.com/debian/&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="确保安装了所需软件"><a href="#确保安装了所需软件" class="headerlink" title="确保安装了所需软件:"></a>确保安装了所需软件:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Debian/Ubuntu:</span><br>apt-get install -y xz-utils openssl gawk file<br> <br><span class="hljs-comment">#RedHat/CentOS:</span><br>yum install -y xz openssl gawk file<br></code></pre></td></tr></table></figure><h2 id="如果出现了错误-请运行"><a href="#如果出现了错误-请运行" class="headerlink" title="如果出现了错误,请运行:"></a>如果出现了错误,请运行:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Debian/Ubuntu:</span><br>apt-get update<br> <br><span class="hljs-comment">#RedHat/CentOS:</span><br>yum update<br></code></pre></td></tr></table></figure><h2 id="快速使用示例"><a href="#快速使用示例" class="headerlink" title="快速使用示例:"></a>快速使用示例:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(wget --no-check-certificate -qO- <span class="hljs-string">&#x27;https://raw.githubusercontent.com/veip007/dd/master/InstallNET.sh&#x27;</span>) -d 8 -v 64 -a<br></code></pre></td></tr></table></figure><h2 id="下载及说明"><a href="#下载及说明" class="headerlink" title="下载及说明:"></a>下载及说明:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate -qO InstallNET.sh <span class="hljs-string">&#x27;https://raw.githubusercontent.com/veip007/dd/master/InstallNET.sh&#x27;</span> &amp;&amp; <span class="hljs-built_in">chmod</span> +x InstallNET.sh<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">Usage:<br>        bash InstallNET.sh      -d/--debian [dist-name]<br>                                -u/--ubuntu [dist-name]<br>                                -c/--centos [dist-version]<br>                                -v/--ver [32/i386|64/amd64]<br>                                --ip-addr/--ip-gate/--ip-mask<br>                                -apt/-yum/--mirror<br>                                -<span class="hljs-built_in">dd</span>/--image<br>                                -a/-m<br> <br><span class="hljs-comment"># dist-name: 发行版本代号</span><br><span class="hljs-comment"># dist-version: 发行版本号</span><br><span class="hljs-comment"># -apt/-yum/--mirror : 使用定义镜像</span><br><span class="hljs-comment"># -a/-m : 询问是否能进入VNC自行操作. -a 为不提示(一般用于全自动安装), -m 为提示.</span><br></code></pre></td></tr></table></figure><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例:"></a>使用示例:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用默认镜像全自动安装</span><br>bash InstallNET.sh -d 8 -v 64 -a<br>bash InstallNET.sh -d 9 -v 64 -a<br>bash InstallNET.sh -d 10 -v 64 -a<br>分别表示自动安装Debian 8x64  9x64 10x64<br> <br><span class="hljs-comment">#使用自定义镜像全自动安装</span><br>bash InstallNET.sh -c 6.9 -v 64 -a --mirror <span class="hljs-string">&#x27;http://mirror.centos.org/centos&#x27;</span><br> <br> <br><span class="hljs-comment"># 以下示例中,将X.X.X.X替换为自己的网络参数.</span><br><span class="hljs-comment"># --ip-addr :IP Address/IP地址</span><br><span class="hljs-comment"># --ip-gate :Gateway   /网关</span><br><span class="hljs-comment"># --ip-mask :Netmask   /子网掩码</span><br> <br><span class="hljs-comment">#使用自定义镜像自定义网络参数全自动安装</span><br><span class="hljs-comment">#bash InstallNET.sh -u 16.04 -v 64 -a --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x --mirror &#x27;http://archive.ubuntu.com/ubuntu&#x27;</span><br> <br><span class="hljs-comment">#使用自定义网络参数全自动dd方式安装</span><br><span class="hljs-comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &#x27;https://moeclub.org/get-win7embx86-auto&#x27;</span><br> <br><span class="hljs-comment">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像(调用文件ID的方式)</span><br><span class="hljs-comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &#x27;https://moeclub.org/get-gdlink&#x27;))&quot;</span><br> <br><span class="hljs-comment">#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像</span><br><span class="hljs-comment">#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;https://drive.google.com/open?id=1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &#x27;https://moeclub.org/get-gdlink&#x27;))&quot;</span><br></code></pre></td></tr></table></figure><h2 id="一些可用镜像地址"><a href="#一些可用镜像地址" class="headerlink" title="一些可用镜像地址:"></a>一些可用镜像地址:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 推荐使用带有 /GoogleDrive/&lt;File_ID&gt; 链接, 速度更快.</span><br><span class="hljs-comment"># 当然也可以使用自己GoogleDrive中储存的镜像,使用方式:</span><br>  https://image.moeclub.org/GoogleDrive/&lt;File_ID&gt;<br> <br><span class="hljs-comment"># win7emb_x86.tar.gz:</span><br>  https://image.moeclub.org/GoogleDrive/1srhylymTjYS-Ky8uLw4R6LCWfAo1F3s7 <br>  https://image.moeclub.org/win7emb_x86.tar.gz<br> <br><span class="hljs-comment"># win8.1emb_x64.tar.gz:</span><br>  https://image.moeclub.org/GoogleDrive/1cqVl2wSGx92UTdhOxU9pW3wJgmvZMT_J<br>  https://image.moeclub.org/win8.1emb_x64.tar.gz<br></code></pre></td></tr></table></figure><h2 id="一些提示"><a href="#一些提示" class="headerlink" title="一些提示:"></a>一些提示:</h2><p>特别注意:</p><p>萌咖提供的dd安装镜像</p><p>远程登陆账号为: <code>Administrator</code></p><p>远程登陆密码为: <code>Vicer</code></p><p>仅修改了主机名,可放心使用.(建议自己制作.)</p><p>在dd安装系统镜像时:</p><p>在你的机器上全新安装,如果你有VNC,可以看到全部过程.</p><p>在dd安装镜像的过程中,不会走进度条(进度条一直显示为0%).完成后将会自动重启.</p><p>分区界面标题一般显示为: “Starting up the partitioner“</p><p>使用谷歌网盘中储存的镜像: [无限制大小] 获取谷歌网盘文件临时直接下载链接</p><p>在全自动安装CentOS时:</p><p>如果看到 “Starting graphical installation” 或者类似表达,则表示正在安装.</p><p>正常情况下只需要耐心等待安装完成即可.</p><p>如果需要查看进度,使用VNC Viewer(或者其他VNC连接工具)</p><p>连接提示中的IP地址:端口进行连接.(端口一般为<code>1</code>或者<code>5901</code>)</p><h3 id="GD直连获取方法"><a href="#GD直连获取方法" class="headerlink" title="GD直连获取方法"></a>GD直连获取方法</h3><p>1.下载脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/DDWIN/master/gdlink.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x gdlink.sh &amp;&amp; ./gdlink.sh<br></code></pre></td></tr></table></figure><p>2.使用方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#Work with share link/使用分享链接方式</span><br>gdlink <span class="hljs-string">&#x27;https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ&#x27;</span><br><br><span class="hljs-comment">#Work with file id/使用文件ID方式</span><br>gdlink <span class="hljs-string">&#x27;0B8SvBXZ3I5QMcUduTMJEanRkMzQ&#x27;</span><br> <br><span class="hljs-comment">#download with share link/使用分享链接方式直接使用wget下载链接</span><br><span class="hljs-comment">##可将其中./download改成自己需要的文件名或文件绝对路径</span><br>gdlink <span class="hljs-string">&#x27;https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ&#x27;</span> |xargs -n1 wget -c -O ./download<br></code></pre></td></tr></table></figure><blockquote><p>转载于萌咖<a href="https://moeclub.org/2018/04/03/603/">https://moeclub.org/2018/04/03/603/</a></p></blockquote><h1 id="其他脚本："><a href="#其他脚本：" class="headerlink" title="其他脚本："></a>其他脚本：</h1><h2 id="源自于千影大佬的一键DD脚本"><a href="#源自于千影大佬的一键DD脚本" class="headerlink" title="源自于千影大佬的一键DD脚本"></a>源自于千影大佬的一键DD脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N --no-check-certificate <span class="hljs-string">&quot;https://raw.githubusercontent.com/chiakge/installNET/master/Install.sh&quot;</span> &amp;&amp; <span class="hljs-built_in">chmod</span> +x Install.sh &amp;&amp; ./Install.sh<br></code></pre></td></tr></table></figure><h2 id="cxthhhhh-魔改版-网络一键重装系统"><a href="#cxthhhhh-魔改版-网络一键重装系统" class="headerlink" title="cxthhhhh [魔改版]网络一键重装系统"></a>cxthhhhh [魔改版]网络一键重装系统</h2><p>注意：当前已安装任意由GRUB or GRUB2引导Linux系统(RedHat&#x2F;CentOS&#x2F;Debian&#x2F;Ubuntu&#x2F;Etc.) ，系统默认密码为：cxthhhhh.com<br>1、Linux安装重装系统的前提组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## RedHat/CentOS输入下方命令: </span><br>yum install -y xz openssl gawk file<br> <br><span class="hljs-comment">## Debian/Ubuntu输入下方命令: </span><br>apt-get install -y xz-utils openssl gawk file <br></code></pre></td></tr></table></figure><p>2、下载重装系统脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate https://shell.p1e.cn/reinstall/Network-Reinstall-System-Modify.sh &amp;&amp; <span class="hljs-built_in">chmod</span> a+x Network-Reinstall-System-Modify.sh<br></code></pre></td></tr></table></figure><p>3、安装Linux系统（任选其一）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 一键网络重装纯净CentOS 7（推荐）</span><br>bash Network-Reinstall-System-Modify.sh -CentOS_7<br> <br><span class="hljs-comment">## 一键网络重装纯净CentOS 6</span><br>bash Network-Reinstall-System-Modify.sh -CentOS_6<br> <br><span class="hljs-comment">## 一键网络重装纯净Debian 9（推荐）</span><br>bash Network-Reinstall-System-Modify.sh -Debian_9<br> <br><span class="hljs-comment">## 一键网络重装纯净Debian 8</span><br>bash Network-Reinstall-System-Modify.sh -Debian_8<br> <br><span class="hljs-comment">## 一键网络重装纯净Debian 7</span><br>bash Network-Reinstall-System-Modify.sh -Debian_7<br> <br><span class="hljs-comment">## 一键网络重装纯净Ubuntu 18.04（推荐）</span><br>bash Network-Reinstall-System-Modify.sh -Ubuntu_18.04<br> <br><span class="hljs-comment">## 一键网络重装纯净Ubuntu 16.04</span><br>bash Network-Reinstall-System-Modify.sh -Ubuntu_16.04<br> <br><span class="hljs-comment">## 一键网络重装纯净Ubuntu 14.04 </span><br>bash Network-Reinstall-System-Modify.sh -Ubuntu_14.04<br></code></pre></td></tr></table></figure><p>4、安装Windows系统（任选其一）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##注意：下方镜像为未授权Windows系统镜像，需购买授权或进入系统后破解</span><br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2019（推荐）</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2019<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2016</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2016<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2012 R2</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2012R2<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2008 R2</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2008R2<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows 7</span><br>bash Network-Reinstall-System-Modify.sh -Windows_7_Vienna<br> <br><span class="hljs-comment">## 一键网络重装纯净Windows Server 2003</span><br>bash Network-Reinstall-System-Modify.sh -Windows_Server_2003<br></code></pre></td></tr></table></figure><p>5、自定义安装系统镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash Network-Reinstall-System-Modify.sh -DD <span class="hljs-string">&quot;你的系统镜像地址&quot;</span> <br></code></pre></td></tr></table></figure><h2 id="全自动DD脚本"><a href="#全自动DD脚本" class="headerlink" title="全自动DD脚本"></a>全自动DD脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate -qO AutoDD.sh <span class="hljs-string">&#x27;http://git.io/autodd.sh&#x27;</span> &amp;&amp; bash AutoDD.sh<br></code></pre></td></tr></table></figure><blockquote><p>来源：<a href="https://zhujiget.com/3358.html">https://zhujiget.com/3358.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
      <tag>Linux</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Steam阿根廷区低价好游戏不完全清单</title>
    <link href="/2021/05/10/Good-Games-List-with-Low-Price-in-Argentina-Steam/"/>
    <url>/2021/05/10/Good-Games-List-with-Low-Price-in-Argentina-Steam/</url>
    
    <content type="html"><![CDATA[<p>Steam阿根廷是著名低价区，此文介绍了部分低价好游戏。但部分游戏价格随着时间变化会有所改变。请注意甄别。</p><span id="more"></span><blockquote><p>此文为我朋友<a href="https://www.douban.com/people/156478188/">mini montage</a>（男）撰写。特此感谢~</p></blockquote><h2 id="2021年5月10日"><a href="#2021年5月10日" class="headerlink" title="2021年5月10日"></a>2021年5月10日</h2><p>生化危机8:村庄 171 （小黑盒和steamdb关于这个游戏本体阿根廷价格都有错误，实际上是ARS2499） 新出的知名恐怖游戏，没玩过。</p><p>双人成行 172 非常优秀的双人解谜动作游戏，比国区便宜十几块，操作难度低游戏性强。强烈推荐！！非常适合情侣\闺密。</p><p>迷走深空：碎舰师 48.1 废弃太空舱切割回收，画质非常好，不同舰船设计也不错，你需要把船体切割分类，又要小心造成大事故</p><p>生化奇兵合集 6.8  合集包含了1、2、3代的所有版本（1、2代还有重置版），叙事游戏的代表作，氛围略恐怖，1和2代重置版画质也不算好，虽说是叙事游戏，但射击玩法和魔法的融合玩法也还算有新意</p><p>carrion（红怪） 12  扮演一直逃出人类掌控的怪物，杀死遇到的人类，红怪后期整个造型真心cut</p><p>Getting over it with Bennett Foddy  3.6  和班尼特福迪一起攻克难关是前些年大火的独立游戏，极高的难度和蹩脚的操作让它成为节目效果极佳的游戏，你要是有一个好朋友，一定要拉她&#x2F;他来玩玩（笑）</p><p>挺进地牢 6.1 俯视角像素风肉鸽射击游戏，多角色，更多奇葩武器，更多弹幕，我是谁我在哪我怎么死了！？</p><p>漫漫长夜 7.5 画风偏卡通，但游戏环境却极其残酷的生存游戏，在极寒的加拿大与寒冷、饥饿和凶残的动物作斗争</p><h2 id="2021年4月19日"><a href="#2021年4月19日" class="headerlink" title="2021年4月19日"></a>2021年4月19日</h2><p>Sally face 2.8（2D恐怖游戏佳作）</p><p>王国：新大陆 2.5（像素风横版建造）</p><p>绣湖（eusty lake）、方块（cube）两个系列的每一款价格基本在1.8-5块之间，画风精致，叙事巧妙的解谜游戏，很有大卫林奇的风格</p><p>死神来了 2.6 （扮演死神收割凡人的生命，像素风）</p><p>洛克人11 21.2（横版闯关，经典）</p><p>孢子 15.8（从细胞进化成创世之神，孢子在游戏史上太独特了，没法归类，每个进化阶段都会有独特的玩法，例如小鱼吃大鱼、射击、rts等，大杂烩）</p><p>Spiritfarer 23.2（画风精致的横版建造游戏，剧情优秀，音乐治愈，有点肝，其实ns平台反而比这个价格更便宜）</p><p>英灵神殿 15.8 （从零开始的建造采集打怪，喜欢我的世界的话，那这款游戏说不定也会很喜欢，不过这游戏BOSS更为致命，画质不够看，内容足够丰富）</p><p>废品机械师 15.8（极度自由的建造游戏，可以通过各种部件和逻辑实现奇思妙想的车体或者飞行物，很有趣）</p><p>消逝的光芒 33（二代明后年才出，这一代也算是相当不错的，僵尸感染下的跑酷射击游戏，晕3D的话，先看看流程吧）</p><p>呼吸边缘 19.7（开头极其荒诞搞笑的太空生存游戏，不恐怖，剧情挺搞的）</p><p>war of rights  23.2（这游戏也算是与现在快节奏的射击游戏反其道而行之了，南北战争背景下的战术游戏，老旧火枪、排列对射，没有英雄主义，只能看有没有一个好指挥）</p><p>无名大鹅 15.8（恶人模拟器，笑死，扮演可爱的大鹅把坏事做尽吧，这游戏画风玩法都很上头）</p><p>kenshi 23.2（极度自由的末世生存游戏，背景独特，画风粗糙，你扮演的人物一开始在末日背景下是很脆弱的，但也不要担心，因为游戏本身的高自由度，可以让你的玩法极度多样，甚至于当囚犯都能练出一个盗圣来）</p><p>坎巴拉太空计划豪华版 58.8 （二代明年才有，这依然是最好的太空探索游戏，自己制作火箭探索太空，规划轨道，着陆、插旗、返回，还是比较硬核的，但有自动发射MOD，还算比较好上手）</p><p>逆转裁判123合集 42.5（非常不错的侦探加律师视觉小说类游戏，一代玩过，非常过瘾）</p><p>face rig 12.6（面部追踪软件，有多个自带形象可以使用）</p><p>firewatch  15.8（优秀的走路模拟器，其实是一款优秀的第一人称剧情游戏了，扮演看火员，用对讲机展开一段治愈的故事）</p><p>Teardown 15.8（看上去很像我的世界的像素风游戏，却可以支持光追和有着极其强大的物理破坏系统，物理系统强大到真的可以玩一年，主要玩法也是围绕这个物理系统的大盗模拟器）</p><h2 id="2021年4月17日"><a href="#2021年4月17日" class="headerlink" title="2021年4月17日"></a>2021年4月17日</h2><p>生化危机7  12.1</p><p>生化危机2重制版  23</p><p>生化危机3重制版 57.9（这个价格直接不考虑，流程太短）</p><p>鬼泣五  28.9</p><p>勿忘我 4.6（剧情虎头蛇尾，赛博朋克设定很棒）</p><p>龙之信条 6.95（打击感好，开放世界空旷，优缺点都明显的ARPG）</p><p>森林 6.3（合作生存或者是单人生存，有点小恐怖）</p><p>泰坦陨落2 24.5 （剧情强，设计棒，神作）</p><p>生化危机村庄和生化危机7合集包 245.9</p><p>往日不再 245.9</p><p>raft（木筏求生）15.8 （多人合作好玩，单人可能稍显无趣）</p><p>泰拉瑞亚 9.1</p><p>among us  4.77（太空狼人杀）</p><p>历历在目 9.1（一款非常新颖的独立游戏，需要用到摄像头，手机摄像头好像也可以，一定要试试）</p><p>极乐迪斯科 30.9 （这个价格买爆）</p><p>factorio（异星工厂）23.1（幸福工厂、戴森球计划的同类游戏，一玩几百小时的建造游戏）</p><p>大神hd 17.1（神作）</p><p>无间冥寺 56.2（哈迪斯同类型刷刷刷，质量很不错）</p><p>神界原罪2 34.4（这个也算神作）</p><p>环世界 27.4（模拟经营建造，相当好玩，这个价格也是可以买爆的）</p><p>辐射：新维加斯 22（神作，多线选择剧情多样，但画质太老，先观望）</p><p>空洞骑士 12.6（买爆！然后吃灰）</p><p>女神异闻录4g 73 （羊羊推荐过，日式rpg）</p><p>节奏医生 31 （致敬节奏天国的音游，这个音游不是考验反应力而是真正的乐理，所以好玩又有趣）</p><p>星际拓荒 19.6（神作，有深刻恐惧症的话还是算了，有些场景真心有点窒息感，比如进入黑洞）</p><p>尼尔机械纪元 45.6（神作，剧情强，音乐强，战斗手感也强）</p><p>赛博朋克酒保行动 8.4 （神作，主要就是调酒看剧情，赛博朋克背景下的人生百态）</p><p>幸福工厂 56.2（又是模拟建造自动化游戏，杀时间利器，画质好，有各种交通工具可以坐着玩）</p><p>红弦俱乐部 4.1</p><p>暴雨 28（底特律变人工作室的早起作品，剧情强，有点恐怖，依然是交互式电影游戏，画质比较老）</p><p>townscaper 4.98 （即时城镇建造，画风棒，玩法休闲，建造小城镇）</p><p>人类 168.6（世嘉发行的策略游戏，对标文明6，目前预购，质量还不错，可以去看一下B站试玩，有中华文明）</p><p>漫长等待 10（游戏会给你一个真实400的天时间，剧情不错，前期玩，中期等，四百天后等待剧情解开）</p><p>雨中冒险2 31.6（上头的3D射击肉鸽游戏，打击感棒）</p><p>幽灵行者 10.5（这游戏晕3D的话还是算了）</p><p>帝国时代123决定版合集包 47.2（今年已经确定2和3代决定版有新更新，有情怀可以入）</p><p>恐惧之间 7.3（最近大火的狼人杀游戏）</p><p>小骨：英雄 15.8（优秀的肉鸽游戏）</p><p>枪火重生 20.3（优秀的射击肉鸽游戏）</p><p>群星 7.7（p社游戏要买dlc才算完整，dlc这游戏我不太了解，只能推荐本体价格了，不过本体就已经够好玩的了）</p><p>真人快打11  25.2（血腥暴力格斗，画质好）</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>Steam</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【教程】0成本自行注册阿/俄/土等低价区steam帐号</title>
    <link href="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/"/>
    <url>/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/</url>
    
    <content type="html"><![CDATA[<hr><p>首先讲一个低成本方法：去闲鱼搜索关键字“steam 代注册”，可以找人帮忙注册，<strong>自定义账户名密码</strong>，大概两块钱。但请记得一定要用你的邮箱作为<strong>创建的初始邮箱</strong>喔。</p><hr><span id="more"></span><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>讲一个自行注册安全快捷，且0成本的方法，自己注册。<br>简单来说就是，<a href="https://store.steampowered.com/join/">注册</a>的时候先输入邮箱，翻墙（此时不需要翻到低价区）来通过谷歌人机验证。然后收验证邮件，之后打开VPN翻墙到低价区（比如阿根廷），来进行注册。学会了以后大家都能去闲鱼赚钱代注册啦。</p><!-- more --><p>保姆级详细版：</p><ul><li>翻墙到低价区</li><li><ul><li>使用谷歌浏览器插件翻墙（免费）</li></ul></li><li><ul><li>使用机场翻墙（付费）</li></ul></li><li>注册Steam帐号</li><li>使用帐号</li><li>✨Magic✨</li></ul><h2 id="2-翻墙到低价区"><a href="#2-翻墙到低价区" class="headerlink" title="2. 翻墙到低价区"></a>2. 翻墙到低价区</h2><h3 id="2-1-使用谷歌浏览器Hide-My-Ip-VPN插件翻墙（免费）"><a href="#2-1-使用谷歌浏览器Hide-My-Ip-VPN插件翻墙（免费）" class="headerlink" title="2.1 使用谷歌浏览器Hide My Ip VPN插件翻墙（免费）"></a>2.1 使用谷歌浏览器Hide My Ip VPN插件翻墙（免费）</h3><p>首先说明此插件<strong>只能在电脑端使用</strong>。移动端例如手机平板的谷歌浏览器Chrome无法使用插件功能</p><p>首先安装<a href="https://www.google.cn/intl/zh-CN/chrome/">谷歌浏览器Chrome</a>，进入<a href="https://www.google.cn/intl/zh-CN/chrome/">官网</a>后按照提示下载安装。接下来就是安装[Hide My IP VPN]插件</p><blockquote><p>Chrome 是一个免费的跨平台浏览器，由 Google 开发，Chrome对于前端开发来说（尤其是调试代码）非常方便，并且有丰富的插件市场，包括很多前端框架的调试插件。</p></blockquote><h5 id="a-（有梯子）插件在线安装方法"><a href="#a-（有梯子）插件在线安装方法" class="headerlink" title="a. （有梯子）插件在线安装方法"></a>a. （有梯子）插件在线安装方法</h5><p>已经有梯子的可以直接通过Chrome的应用商店下载安装。<br>👉<a href="https://chrome.google.com/webstore/detail/hide-my-ip-vpn/keodbianoliadkoelloecbhllnpiocoi?utm_source=chrome-ntp-icon">Hide My IP VPN插件</a>（需要梯子）<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/image1.PNG" alt="this is an image"><br>点击【添加至Chrome】即可<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/image2.PNG" alt="this is an image"><br>点击【新增扩充功能】即可</p><h5 id="b-（无梯子）插件离线安装方法"><a href="#b-（无梯子）插件离线安装方法" class="headerlink" title="b. （无梯子）插件离线安装方法"></a>b. （无梯子）插件离线安装方法</h5><p>由于某些原因，Chrome应用商店是无法在大陆直接访问的，但我们可以通过一些其他网站下载好插件安装包，再离线安装。</p><!-- [>_<]: --><p><a href="https://www.crx4chrome.com/">Crx4Chrome</a>，该网站相当于一个Chrome扩展资料库，里面收集了几乎全部Chrome扩展，并且做了分类和介绍，还有历史版可供下载。</p><p>我做了本地下载链接，由于crx文件会被某些杀毒软件直接删除，所以我还提供了zip文件的下载：</p><p>👉 <a href="11.4.0_0.zip"> 点击下载zip文件 </a></p><p>👉 <a href="11.4.0_0.crx"> 点击下载crx文件 </a></p><p>下载好 CRX 文件，将后缀名 .crx 修改为 .zip（如果下载的是zip文件那直接解压即可），然后解压到一个文件夹中。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/image1.jpg" alt="this is an image"><br>进入 Chrome 扩展程序管理页面（选项 - 更多工具 - 扩展程序）。打开 “开发者模式” -&gt; 加载已解压的扩展程序 -&gt; 选择刚才解压的文件夹，完成。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/image2.gif" alt="this is a gif"></p><blockquote><p>参考：<a href="https://zhuanlan.zhihu.com/p/80305764">国内离线安装 Chrome 扩展程序的方法总结-知乎</a></p></blockquote><h3 id="2-2-Hide-My-Ip-VPN-插件的使用"><a href="#2-2-Hide-My-Ip-VPN-插件的使用" class="headerlink" title="2.2 Hide My Ip VPN 插件的使用"></a>2.2 Hide My Ip VPN 插件的使用</h3><p>安装好后浏览器右上角会出现该插件图标，也就是那个黄色的盾牌状图标。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/image3.PNG" alt="this is an image3"><br>点开以后如图，点击注册，随便输入一个<strong>假邮箱地址</strong>即可注册使用3天。（它不会发验证邮件）<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/image4.PNG" alt="this is an image4"><br>使用的时候搜索自己需要的国家英文名，之后点击红框处开关，打开VPN，即可。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/image5.PNG" alt="this is an image5"><br>此插件有俄罗斯、土耳其、阿根廷节点，还有一些小众节点。对于我们注册steam来说完全够用了。</p><h3 id="2-3-使用机场翻墙（付费）"><a href="#2-3-使用机场翻墙（付费）" class="headerlink" title="2.3 使用机场翻墙（付费）"></a>2.3 使用机场翻墙（付费）</h3><p>(2021年06月19日更新：我跟组内几个姐妹想自己租个阿根廷服务器搭建梯子来使用，有意者私信我，谢谢。)<br>免费的插件固然好，但速度不快而且只能在浏览器使用，而且开启后，会发现比较难过人机验证。当然，仅仅为了注册是绝对够用的。<br>对于愿意花点小钱，并且愿意<strong>折腾和研究</strong>的朋友，我推荐使用<strong>机场</strong>，全平台可用，搭配软路由使用有奇效。但是使用起来需要学习一些知识，需要做功课。<br>(2021年06月19日更新：由于7.1敏感日期，最近开始反向墙，该机场节点纷纷失效，虽然技术人员一直在抢修。为了安全，敏感时期请勿翻墙。)<br>🧱我找的steam注册用的一个机场是<a href="https://maoxiong.pages.dev/">猫熊https://maoxiong.pages.dev</a>,8块钱一个月有阿根廷、巴西、土耳其、菲律宾、沙特、波兰、印尼节点，可以当加速器用（但是加速效果肯定没网易uu那种好），平时当梯子也很好用。<br>但是这里不建议大家包年购买喔，因为机场缺乏监管，小机场可能随时跑路，大机场又有被抓风险。<br>下图是机场节点示意，一般机场节点都七八十甚至上百，但是机场节点质量也很重要，节点质量很重要的参数是延迟和带宽，延迟低的节点可以打游戏加速用，带宽大的速度快，可以看4k视频，另外能不能解锁流媒体比如Netflix也是一个参考点。可以搜索<a href="https://duyaoss.com/">毒药测评</a>，看看有没有你需要的机场。</p><p><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/airport.PNG" alt="this is an image"></p><blockquote><p>机场实质上是指S节点提供商。每个节点就是一台服务器VPS，使用VPN&#x2F;SS&#x2F;SSR&#x2F;V2ray&#x2F;Trojan（后面兴起的新型协议或改良协议）等一切技术手段搭建科学上网服务。“机场”，其实是一种形象化的说法，因为最开始使用的ss客户端图标是飞机（小火箭），所以流行起了这个说法，，不过这个较为原始的软件已经很少用了。现在较为流行的，是Clash&#x2F;Quantumultx&#x2F;Surge之类的软件，非常个性化。<br>大家把机场想象成可以让网络世界的我们到达别的国家的工具，每个节点就是飞机，打开阿根廷节点可以坐飞机去阿根廷成为网络阿根廷人。我觉得从这个角度理解“机场”这个称呼就特别有意思。</p></blockquote><blockquote><p>参考：<a href="https://limbopro.xyz/archives/7696.html#%E6%9C%BA%E5%9C%BA%E6%98%AF%E4%BB%80%E4%B9%88">机场是什么</a></p></blockquote><h2 id="3-注册steam低价区帐号"><a href="#3-注册steam低价区帐号" class="headerlink" title="3. 注册steam低价区帐号"></a>3. 注册steam低价区帐号</h2><p>这个跟普通注册流程差不多一样的，但是<strong>开梯子的时机</strong>很重要！<br>首先是要过人机验证这一关。<strong>此时不需要对应低价区节点</strong>，决定你帐号最终地区的步骤是验证邮件以后。<br>下图这个界面可以不开阿区（或你需要的低价区）梯子，只要能过人机验证就行，不管你ip在哪，亲测没有影响。有时候开梯子反而过不了人机验证。另外提醒一下不建议大家用别的steam帐号已经绑定过的邮箱注册，因为存在非常小的邮箱连坐概率。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/steam1.PNG" alt="this is an image"><br>如果你是使用<strong>免费插件</strong>的话，如果没过的话会出现红框提醒。所以请<strong>多尝试几个不同的节点</strong>，一般过不了大概率是节点的原因，Hide My IP VPN插件被非常多人使用，所以阿根廷节点是完全过不了人机验证的。当某个ip请求太多次人机验证，就会出现问题。我上次尝试了不同节点大概三次，最终成功了。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/steam2.PNG" alt="this is an image"><br>如果自己在海外\有梯子\使用机场翻墙，过人机验证都是比较简单的，毕竟使用的人不多。</p><p>点击继续以后就会收到电子邮件，直接点击【验证我的电子邮件地址】就好。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/steam4.jpg" alt="this is an image"></p><p>(如果你的邮箱绑定过其他steam帐号，他会询问你是恢复原有帐号还是创建新帐号，这里当然是创建新帐号)</p><p>之后输入账户名密码，这里注意名称不能重复，不分大小写，密码不能太简单。<br>在这个界面，这一步<strong>必须打开阿根廷节点</strong>或者其他低价区的节点。这个时候你使用插件还是别的梯子节点，都无所谓，只要它是阿根廷（或其他你想要的低价区）ip就好了。在<strong>点击【完成】按钮的那一瞬间</strong>，你的ip在哪里，最后帐号就会在哪个区域。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/steam3.PNG" alt="this is an image"></p><p>当然有时候梯子打开了也不一定稳定翻墙，比如Hide My IP VPN一般是比较稳定的，但有时候clash for windows就不太稳定。<br>所以我的习惯是在点击【完成】按钮的前一秒钟，去<a href="https://whatismyipaddress.com/">where is my ip</a>网站检查下ip是不是在阿根廷，以防万一。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/IP.PNG" alt="this is an image"></p><p>注册完以后查看自己商店页面的货币单位是不是ARS：<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/ARS.jpg" alt="this is an image"><br>进入账户明细查看商店地区：<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/wallet.PNG" alt="this is an image"></p><h2 id="4-使用帐号"><a href="#4-使用帐号" class="headerlink" title="4. 使用帐号"></a>4. 使用帐号</h2><hr><p>（2021年06月29日更新）阿根廷锁了其他货币充值码，也就是说只能买比索卡进行充值，这也导致比索卡价格水涨船高，淘宝更是少之又少。Steam遣返了众多fake阿根廷帐号，大多数是转区阿根廷的，少数是在阿根廷注册的，目前我也不清楚具体机制，是否被遣送有点看人品。大家且用且珍惜。</p><hr><p>详细教程请看此：<br><a href="https://www.douban.com/group/topic/224767707/">【教程】蒸汽平台来了，如何安全降落—阿区注册教程</a></p><p><strong>定区方法：</strong>新号可以去淘宝购买等额为5美元的钱包充值码进行充值并且<strong>消费</strong>，之后steam等级将从0变成1。（2021-06-25更新）最近新政策，之前淘宝充值码可以用别的货币的充值卡然后转成等额比索，但现在锁了，只能比索充比索。目测以后定区会越来越麻烦。<br><strong>定区以后最安全推荐的方法：</strong>用大号加小号好友，满3天后可以赠送礼品卡。这个方法没有中间商（除了G胖）赚差价。方便无风险。</p><p>一般店家标DLC 5 就是5美元的意思，但是淘宝价格一般比较贵。你需要消费5美元，之后到达等级1就可以解锁主动加好友跟加入组功能，记得去加Her Ninth Art小组喔。跟自己国区大号加好友，三天后可以用大号给小号充值。不再需要上淘宝买充值卡。<br><img src="/2021/05/10/Tutorial-0-Cost-Registration-of-Steam-in-Low-Price-Areas/key.jpg" alt="this is an image"><br>另外你也可以去<a href="https://www.steampy.com/">steampy</a>购买<strong>新西兰充值卡</strong>，面值是NZ50和NZ100，NZ50大概等于ARS$ 3.400,00左右，steampy折扣大概为88折。<br>但只有新西兰卡是全区可用，可以直接充值到阿根廷等低价区的。其他的充值卡，比如法郎、美元，都需要先转区再用，这也是G胖出的充值卡锁区政策。如果你去淘宝买，可能会帮你转区充值，再转回来，转区会有<strong>红信风险</strong>。<br>另外余额充值也是有风险的，一定要保证来源可信。</p><table><thead><tr><th>其他教程</th><th>内容</th></tr></thead><tbody><tr><td>豆瓣</td><td><a href="https://www.douban.com/group/topic/224767707/">【教程】蒸汽平台来了，如何安全降落—阿区注册教程</a></td></tr><tr><td>豆瓣</td><td><a href="https://www.douban.com/group/topic/224838817/">【安利】推荐一个了解steam资讯的利器—steamdb.info</a></td></tr><tr><td>知乎</td><td><a href="https://zhuanlan.zhihu.com/p/354419249">Steam低价区游戏购买攻略（阿根廷、俄罗斯）</a></td></tr><tr><td>知乎</td><td><a href="https://zhuanlan.zhihu.com/p/80305764">国内离线安装 Chrome 扩展程序的方法总结</a></td></tr><tr><td>个人博客</td><td><a href="https://limbopro.xyz/archives/7696.html#%E6%9C%BA%E5%9C%BA%E6%98%AF%E4%BB%80%E4%B9%88">机场是什么</a></td></tr><tr><td>个人网站</td><td><a href="https://duyaoss.com/">毒药测评</a></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>Steam</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/07/02/hello-world/"/>
    <url>/2020/07/02/hello-world/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="32a8f81f523e3ac19abb4c12e7bd02955cf380b9e2741ac1f854d88ca1d35ca0">6d05a0a7f8f5f26ac1a0f788610c8c39797597b66666d8165558c2e4d28df8f35b6ee4d9b33a3b1bb930ca2e048b3b2ff41fcd512bc7ea602236f4990c916bac634100bbda66fa6512a5679e233693405f07278aa63e621a27211fd2e7da191eee1a6edb7985643159fb074c1e3c54e02dce6b9030ec7da65ec74adac82e62cc14eab893b4277f1a7c0a4784e7125805c175eac16b788fd97265f3c993a67131b698159e4255593467a85a6ec9edc63c59c9d7ea25f82e00790607b6aae4b40748cac49af7ad38805fe52377addf0430a0a02e57d93ce556778ec5d39c933d9419dd9f428a5f32941342a1bc52f1d0469bc87b9091da55fbf29a8d1a18efbc771c52d54d0748741caa96c582b9be4dce19d69bed2daaef8a6b84a8757dc3d5751a27df6321c732f0ed86386348d27baf8d58ee555b9416894b59cc375b1b3d2fce80d9d8df2efa1c9792db1bff2df7837269548c87f7f6546f5f38eb17738202431d3bef1c88bb7a00c73a7ef75476d17fa5fc8232dc81b0fbe5155ceddbb16d623357abd9141c038ada6ec647bc31c0cb65ea80b010c853e6dc3d9ec2fb4e460b9bf8cc8a248aae9568e352d1a27e040b183bfaf89c4d5298f517bb4a5e942056224428ce99786fbce9bf5bb05bc381f2f4ee005c38c09bc035fede3faa0fbc93725c96f25801ed1df75ee4ec25895df7b051b0c5a92aa47713d284689448087c6e3a0ed35edc40234c5ec790934003d264cc869a45adf8a7bd867a4307b1a766dbb2d083636b1aad4e9cf252f6ecc36c38a8788a6fe340bb87a6734b7512972de52d4a5628e525008e4ecc77f234d80e4b2838ad3508b41f50fff2492b1f4948a79d16d8161676ddcf4e809dc80263bae6ce25931b5a5e2d8f27b20ed16b522356acc187138a87ff7f0cdf6be5daf5849ee69cb133ec6229ddec5afcbd23ac27ff692cadc6448fb52e953832dc22cbe80e27ccc87bb8a2086bfa5777dab7ec0d28183416df618845bd5c2378b6ba70af4c911152f998ead52f608629aa321050efeb10aa48973421e8b0e8f6d6bf1eef0e22467f529ab8b5493573deef71cd30b3dd73bb4a6832d7b5a57f84a4147f635af0edf31e6f3666304a93ee25ddcefb626c6da96a986bc784fba253fcc6094e7e5da45fd50df28cfc7aeb8196fc45f046c3c7fcb41b09fa70c898b7ed184bb524f6cd1f4baf2d32d3e5634c99a1256daccf7a057fec1d9e32c7d7b86b727fc0a79a0b11de434cf16bd94bc9ef2d2ec30924a3fe2cf50d9dba827e6b949de584e0541b6dd2054256582c9a397b480758a546391c8752ed09b4909f9307b502982826e9b6ff6232c3d4d74f1914e052632e220967c5291a698548eb67b77ff98e72ff8beb72c0e8ed90bab1004b2cc280c22e586a24869c8f54c47987b479afad94d1ab3b01065932c0940e10dd5bf756619dc87e791ce6bc8b050f0b629e6589bf94c027d19243f272d63170c9f5cf963d551c020007adb94b676685245b28177efb3b9a6459f746a29fbb87bf1aac8f316807a5028664112af978ef6d74736c135f1f73ecde326c651085ca32541fd64349d1dc0af1ccdf4a6f420cb39f25c4eb1f4d30ccb9f72a410d7900a645e8c8a35c21bc6bc4685a7ed443a81b25b6f0b18c811a3a7e6b680a98d890109b0320b22b89537e978ec8ecacfe235e52114bde997d809ded628c53bf0f644d1f3296ea9154fad52ad90930ce57ed73a20dda6484d3d56dacd716b36b307bd365a08bdf639c0b04d84c61f4172eb2b05e6a451e643d09df55005fc0a2777731146b0ab8781a2e7cafe660e11e44ca6abf41395f04cf8bfeaea88cb90ba40cfefddeb1c30eb5cc943d39255209f89f7850b0bb9c79fb3584064fa2b9a4a3b95870374724833019e5511127f7a8c03471fdf3f7335f0739d77aafe84c5e6483d2c10fbf818c6de0e42d2d315b523af54e5830993518d681a4255c8bafa82374f1464856ba4f55bab373e01aacd36d89104450ecdd22890e04db63ca8b070dc8d3d2354f9048241ce5f7ac405772cead94bc1ddde883418fe53d1a54f13593f9cf1868e87172ed51fd3e048a5eeabfc6715917298ddefece7a56c92882f63ec2f2b348f4eb52eed6c85b8984bf692ae7e4521853e8f4f73608ea9f987b781c2c76d8137b50d2035cea9a444fed0c0a758ff0c51875ccf0dff5cb48415ed900e648a7d72645a131dea67de2cfe69b3d2b21d9f140820a68563430f31d9169b9e0181e77db9a119cb2da890c57089fdb5435aff5bac668ffe92b6e62ad98bb4ec37eca19bf3e5c8812dd57ba9ca5051ef6e8310678767ed620a2d427839a011ee327a288d4d6847aafde0c81402ccf3e614a9bc6fcaf46556a53cfeaa48f8297b1ae3276e5cd4fb532647bcf3ea2596591bc30efefbe8bfe5d43bd3245cf4860f49fa8297031f0525f1ec7eaa95af039d11312f4dbf03a1589992034708ab47035ee36b74636b478e6e21ebd84e126392367cba732c7fbd04f4df2461354af500190826d20cff8a2c86d4807f458fe47a30d7d8d7426f957bd68698025aff1ea5f0d413debed95110bc0e1fc33935b24fc30e1261ed1798add52051e1ef75d8a2027e461575d378af760a1ad77f7bd8d7ec604aec14911c155c7397839c0ee7a19c47f7856636cc3437120d604b4ffc6cdfafd33dfef39abc18c5a82c92fb1f2a99817afd525b0bb8ba34857b297f132f252080affef324841983c46a9010195a3c5d39eba7265bd5d6f5ed4ed99e9afe876c6a1130e1846ee0eef2332aa44bd3c1ff6fa14a9e1fff86c9dd3a30452c7ca6cf76c789049c6b34b6eda717a216a13adfe28f1a66d32c81da6ea5ea488ab6e0d30185d89ba7f2758f1e248e9a462a297d2432477c1644d27a446f71bceec5f7d7d6ed1ad43112a26828e3810a2b207918f8fc468657d7a3ecc23098861bd7db62c49fcf686a94a9de1094c8522e75927c98a412a2d9700c71680ba2e503556335fde471615fdffd7c2e8b29a6a918ae1c61db5b1a5802aa556e3cd08fd4be4e523e7bb4c4ac18798c9dcb589521a0790abcdf58715474c4a0f89f43a24210c878970924ddbc2334397e31907ab063560ac845adf01ad383e39d4a83d6e53123867a889b2d7fb8c2b7a7b58125764ebc01cf5a3db490e7ddb9bc9f652af1dd94fdeb1761d5b7b93b8c1f612a54ad79483f708</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Notes</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
